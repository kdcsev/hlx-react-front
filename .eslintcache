[{"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\index.js":"1","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\reportWebVitals.js":"2","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\App.js":"3","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\redux\\store.js":"4","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\utils\\dropConsole.js":"5","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\navigation\\RouterConfig.js":"6","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\navigation\\Auth\\ProvideAuth.js":"7","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\redux\\reducers\\index.js":"8","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\navigation\\Auth\\PrivateRoute.js":"9","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\navigation\\Auth\\useProvideAuth.js":"10","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\navigation\\NotFound.js":"11","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\navigation\\CONSTANTS.js":"12","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\redux\\actions\\appActions.js":"13","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\redux\\reducers\\feedReducer.js":"14","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\redux\\reducers\\userReducer.js":"15","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\DashboardPage\\Dashboard.js":"16","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\redux\\reducers\\appReducer.js":"17","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\AboutusPage\\AboutusPage.js":"18","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\RegisterPage\\RegisterPage.js":"19","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\LoginPage\\LoginPage.js":"20","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\ContactusPage\\ContactusPage.js":"21","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\InventoryPage\\InventoryPage.js":"22","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\ForgotPasswordPage\\ForgotPasswordPage.js":"23","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\PromotionPage\\PromotionPage.js":"24","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\FollowerPage\\FollowerPage.js":"25","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\StorePage\\StorePage.js":"26","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\ProductPage\\ProductPage.js":"27","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\InventoryCategoryPage\\InventoryCategoryPage.js":"28","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\RecipeListPage\\RecipeListPage.js":"29","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\BestDealPage\\BestDealPage.js":"30","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\layouts\\TopbarLayout\\TopbarLayout.js":"31","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\layouts\\MainLayout\\MainLayout.js":"32","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\InventoryGroup\\ByName\\InventoryGroupByName.js":"33","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\layouts\\SidebarLayout\\SidebarLayout.js":"34","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\ProfilePage\\VendorProfile\\VendorProfilePage.js":"35","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\RecipeAddPage\\RecipeAddPage.js":"36","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\ProfilePage\\UserProfile\\UserProfilePage.js":"37","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\PrivacyPage\\PrivacyPage.js":"38","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\TermsPage\\TermsPage.js":"39","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\redux\\actions\\userActions.js":"40","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\DashboardPage\\MiddleWidget\\MiddleWidget.js":"41","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\DashboardPage\\TopWidget\\TopWidget.js":"42","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\DashboardPage\\BottomWidget\\BottomWidget.js":"43","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\AboutusPage\\AboutusDescriptionWidget\\AboutusDescriptionWidget.js":"44","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\AboutusPage\\AboutusIntroImage\\AboutusIntroImage.js":"45","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\AboutusPage\\DownloadAppWidget\\DownloadAppWidget.js":"46","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\services\\userServices.js":"47","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\ProfilePage\\AvatarWidget\\AvatarWidget.js":"48","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\InventoryGroup\\ByName\\TableWidget\\TableWidget.js":"49","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\RecipeAddPage\\TableWidget\\RecipeAddTableWidget.js":"50","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\BestDealPage\\BestDealDlgWidget\\showBestDealWidget.js":"51","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\BestDealPage\\BestDealTopWidget\\BestDealTopWidget.js":"52","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\BestDealPage\\BestDealTableWidget\\BestDealTableWidget.js":"53","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\LinkRoute.js":"54","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\redux\\actions\\feedActions.js":"55","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\InventoryCategoryPage\\CategoryListTableWidget\\CategoryListTableWidget.js":"56","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\RecipeListPage\\TableWidget\\RecipeListTableWidget.js":"57","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\services\\dashboardService.js":"58","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\services\\InventoryGroupService.js":"59","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\services\\profileService.js":"60","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\services\\recipeService.js":"61","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\utils\\GlobalFunctions.js":"62","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\services\\inventoryService.js":"63","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\CommonDivWidget\\CommonDivWidget.js":"64","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\ProductPage\\ActiveProductPanel\\ActiveProductPanel.js":"65","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\CodeVerificationWidget\\CodeVerificationWidget.js":"66","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\SidebarWidget\\SidebarWidget.js":"67","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\InventoryPage\\AddInventoryDialog\\ProductImageWidget.js":"68","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\SearchWidget\\TitleSearch.js":"69","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\InventoryPage\\AddInventoryDialog\\showAddInventoryDialog.js":"70","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\IconWidget\\IconWidget.js":"71","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\ProductPage\\FavouriteProductPanel\\FavouriteProductPanel.js":"72","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\ProductPage\\MyProductPanel\\MyProductPanel.js":"73","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\StorePage\\FeaturedStoreModal\\showFeaturedStoreModal.js":"74","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\StorePage\\StoreDetailModal\\showStoreDetailModal.js":"75","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\ButtonWidgets\\ButtonWithIcon\\ButtonWithIcon.js":"76","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\ButtonWidgets\\CommonButton\\CommonButton.js":"77","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\StorePage\\StoreListTableWidget\\StoreListTableWidget.js":"78","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\services\\ajaxServices.js":"79","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\services\\CONSTANTS.js":"80","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\InventoryGroup\\ByName\\TableWidget\\DetailTable.js":"81","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\ProductPage\\ProductTypeSelector\\ProductTypeSelector.js":"82","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\ProductPage\\ProductDescriptionInput\\ProductDescriptionInput.js":"83","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\CollapsedContent\\CollapsedContent.js":"84","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\services\\bestdealService.js":"85","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\ConfirmDlgWidget\\showConfirmDlgWidget.js":"86","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\DashboardPage\\MiddleWidget\\MiddleLeftWidget.js":"87","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\services\\inventoryCategoryService.js":"88","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\DashboardPage\\TopWidget\\CategoryItemWidget\\CategoryItemWidget.js":"89","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\BestDealPage\\BestDealDlgWidget\\BestDealDlgWidget.js":"90","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\InventoryPage\\AddInventoryDialog\\AddNewCategoryDialog\\showAddNewCategoryDialog.js":"91","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\RecipeListPage\\TableWidget\\RecipeDetailTableWidget.js":"92","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\InventoryCategoryPage\\CategoryListTableWidget\\CategoryListTableColumn.js":"93","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\config\\CONSTANTS.js":"94","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\InventoryPage\\AddInventoryDialog\\AddInventoryDialog.js":"95","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\CodeVerificationWidget\\ResendCodeWidget.js":"96","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\ProductPage\\MyProductPanel\\OneProduct\\OneProduct.js":"97","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\StorePage\\StoreListTableWidget\\StoreListTableColumn.js":"98","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\StorePage\\FeaturedStoreModal\\FeaturedStoreModal.js":"99","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\StorePage\\StoreDetailModal\\StoreDetailModal.js":"100","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\ProductPage\\MyProductPanel\\AddProductDialog\\showAddProductDialog.js":"101","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\ConfirmDlgWidget\\ConfirmDlgWidget.js":"102","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\ProductPage\\FavouriteProductPanel\\ProductSearch\\ProductSearch.js":"103","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\InventoryPage\\AddInventoryDialog\\AddNewCategoryDialog\\AddNewCategoryDialog.js":"104","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\BestDealPage\\BestDealDlgWidget\\BestDealDlgLeftPanel\\BestDealDlgLeftPanel.js":"105","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\BestDealPage\\BestDealDlgWidget\\BestDealDlgRightPanel\\BestDealDlgRightPanel.js":"106","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\AuthDialogWidget\\AuthDialogWidget.js":"107","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\AuthLogoWidget\\AuthLogoWidget.js":"108","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\ButtonWidgets\\TextButton\\TextButton.js":"109","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\InventoryPage\\AddInventoryDialog\\AddInventoryDialogContent.js":"110","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\services\\productService.js":"111","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\RatingWidget\\RatingWidget.js":"112","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\InventoryPage\\AddInventoryDialog\\AddBaseUnitDialog\\showAddBaseUnitDialog.js":"113","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\services\\storeService.js":"114","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\PromotionPage\\ProductRefWidget\\ProductRefWidget.js":"115","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\PromotionPage\\PromotionDetailModal\\OnePromotionProductDetailModal\\ComboDealProduct\\ComboDealProduct.js":"116","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\PromotionPage\\PromotionDetailModal\\OnePromotionProductDetailModal\\NormalProduct\\NormalProduct.js":"117","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\PromotionPage\\PromotionDetailModal\\OnePromotionProductDetailModal\\Buy1Get1DealProduct\\Buy1Get1DealProduct.js":"118","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\InputWidgets\\InputNumber\\ProductInputNumber.js":"119","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\InventoryPage\\AddInventoryDialog\\AddBaseUnitDialog\\AddBaseUnitDialog.js":"120","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\PromotionPage\\SmallProductWidget\\SmallProductWidget.js":"121","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\ProductPage\\MyProductPanel\\AddProductDialog\\AddProductDialog.js":"122","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\StorePage\\StoreDetailModal\\StoreBillWidget\\showStoreBillWidget.js":"123","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\StorePage\\NormalInput.js":"124","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\PromotionPage\\PromotionDetailModal\\showPromotionDetailModal.js":"125","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\ForgotPasswordPage\\ChangePasswordPage.js":"126","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\LoginPage\\InputPage.js":"127","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\FollowerPage\\FollowerListWidget\\FollowerListWidget.js":"128","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\ForgotPasswordPage\\InputPage.js":"129","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\FollowerPage\\FollowerStoreWidget\\FollowerStoreWidget.js":"130","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\FollowerPage\\FollowerExcelWidget\\FollowerExcelWidget.js":"131","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\PromotionPage\\PromotionTableWidget\\PromotionTableWidget.js":"132","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\PromotionPage\\PromotionTopWidget\\PromotionTopWidget.js":"133","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\InventoryPage\\InventoryListTableWidget\\InventoryListTableWidget.js":"134","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\InventoryPage\\InventoryItemWidget\\InventoryItemWidget.js":"135","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\InputWidgets\\InputLocation\\InputLocation.js":"136","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\ProductPage\\MyProductPanel\\AddProductDialog\\AddProductDialogContent.js":"137","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\StorePage\\StoreDetailModal\\StoreBillWidget\\StoreBillWidget.js":"138","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\services\\promotionService.js":"139","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\ProductSearch\\ProductSearch.js":"140","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\LocationInputTextWidget\\LocationInputTextWidget.js":"141","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\FollowerPage\\FollowerListWidget\\FollowerListColumn.js":"142","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\PromotionPage\\PromotionDetailModal\\PromotionDetailModal.js":"143","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\PromotionPage\\PromotionTableWidget\\PromotionTableColumn.js":"144","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\FollowerPage\\FollowerInviteWidget\\FollowerInvite.js":"145","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\ProductPage\\MyProductPanel\\AddProductDialog\\ProductImageWidget.js":"146","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\ProductPage\\MyProductPanel\\AddProductDialog\\AddBaseUnitDialog\\showAddBaseUnitDialog.js":"147","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\ProductPage\\MyProductPanel\\AddProductDialog\\AddNewCategoryDialog\\showAddNewCategoryDialog.js":"148","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\ButtonWidgets\\NormalButton\\NormalButton.js":"149","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\services\\commonService.js":"150","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\services\\followerService.js":"151","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\PromotionPage\\PromotionDetailModal\\OnePromotionProductDetailModal\\showOnePromotionProductDetailModal.js":"152","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\InputWidgets\\InputEmailOrPhone\\InputEmailOrPhone.js":"153","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\InputWidgets\\InputPassword\\InputPassword.js":"154","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\PromotionPage\\PromotionDetailModal\\NormalPromotionProductList\\NormalPromotionProductList.js":"155","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\PromotionPage\\PromotionDetailModal\\PromotionDescriptionWidget\\PromotionDescriptionWidget.js":"156","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\PromotionPage\\PromotionDetailModal\\Buy1Get1ProductList\\Buy1Get1ProductList.js":"157","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\PromotionPage\\PromotionDetailModal\\ComboDealProductList\\ComboDealProductList.js":"158","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\PromotionPage\\PromotionDetailModal\\ExcelRelWidget\\ExcelRelWidget.js":"159","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\ProductPage\\MyProductPanel\\AddProductDialog\\AddBaseUnitDialog\\AddBaseUnitDialog.js":"160","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\ProductPage\\MyProductPanel\\AddProductDialog\\AddNewCategoryDialog\\AddNewCategoryDialog.js":"161","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\PromotionPage\\PromotionDetailModal\\OnePromotionProductDetailModal\\OnePromotionProductDetailModal.js":"162","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\PromotionPage\\EditableCell\\EditableCell.js":"163","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\PromotionPage\\PromotionDetailModal\\PromotionDescriptionWidget\\FollowerListWidget\\FollowerListWidget.js":"164","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\index.js":"165","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\App.js":"166","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\reportWebVitals.js":"167","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\redux\\store.js":"168","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\utils\\dropConsole.js":"169","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\navigation\\RouterConfig.js":"170","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\redux\\reducers\\index.js":"171","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\navigation\\CONSTANTS.js":"172","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\navigation\\NotFound.js":"173","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\redux\\actions\\appActions.js":"174","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\redux\\reducers\\appReducer.js":"175","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\redux\\reducers\\userReducer.js":"176","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\redux\\actions\\userActions.js":"177","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\components\\LinkRoute.js":"178","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\utils\\GlobalFunctions.js":"179","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\CONSTANTS.js":"180","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\config\\CONSTANTS.js":"181","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\ajaxServices.js":"182","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\commonService.js":"183","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\layouts\\HomeLayout\\HomeLayout.js":"184","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\layouts\\HomeLayout\\Includes\\HomeHeader.js":"185","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\layouts\\HomeLayout\\Includes\\HomeBottom.js":"186","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\layouts\\HomeLayout\\Includes\\HomeLoader.js":"187","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\layouts\\HomeLayout\\Includes\\HomeNavbar.js":"188","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Home\\HomePage\\HomePage.js":"189","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Home\\FreeBookPage\\FreeBookPage.js":"190","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\layouts\\HomeLayout\\Includes\\HomeChatBox.js":"191","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\layouts\\UserLayout\\UserLayout.js":"192","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\layouts\\UserLayout\\Includes\\UserHeader.js":"193","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\layouts\\UserLayout\\Includes\\UserSidebar.js":"194","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\layouts\\UserLayout\\Includes\\UserFooter.js":"195","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserDashboardPage\\UserDashboardPage.js":"196","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserFeedPage\\UserFeedPage.js":"197","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserSoftwarePage\\UserSoftwarePage.js":"198","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\layouts\\UserLayout\\Includes\\UserMenuItems.js":"199","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\layouts\\HomeLayout\\Includes\\HomeFooter.js":"200","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\layouts\\HomeLayout\\Includes\\HomeMenuItems.js":"201","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Home\\LoginPage\\LoginPage.js":"202","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Home\\RegisterPage\\RegisterPage.js":"203","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Home\\ForgotPasswordPage\\ForgotPasswordPage.js":"204","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\components\\TwoFactorCodeModal\\TwoFactorCodeModal.js":"205","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\loginService.js":"206","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\utils\\countryList.js":"207","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\components\\CreditCardForm\\CreditCardForm.js":"208","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Home\\RewardsPlanPage\\RewardsPlanPage.js":"209","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Home\\AboutUsPage\\AboutUsPage.js":"210","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Home\\SupportPage\\SupportPage.js":"211","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Home\\UserAgreementPage\\UserAgreementPage.js":"212","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Home\\TermsConditionsPage\\TermsConditionsPage.js":"213","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Home\\PrivacyPolicyPage\\PrivacyPolicyPage.js":"214","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Home\\RiskWarningPage\\RiskWarningPage.js":"215","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Home\\AffiliateAgreementPage\\AffiliateAgreementPage.js":"216","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Home\\IncomeDisclaimerPage\\IncomeDisclaimerPage.js":"217","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Home\\TrialPolicyPage\\TrialPolicyPage.js":"218","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Home\\CompliancePage\\CompliancePage.js":"219","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserVpsPage\\UserVpsPage.js":"220","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\components\\ConfirmModal\\ConfirmModal.js":"221","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserTeamPage\\UserTeamPage.js":"222","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserLicensePage\\UserLicensePage.js":"223","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserAcademyPage\\UserAcademyPage.js":"224","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserMarketingPage\\UserMarketingPage.js":"225","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserChartPage\\UserChartPage.js":"226","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserWalletPage\\UserWalletPage.js":"227","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserAffiliateIntroPage\\UserAffiliateIntroPage.js":"228","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserTicketPage\\UserTicketPage.js":"229","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserSupportPage\\UserSupportPage.js":"230","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserVerificationPage\\UserVerificationPage.js":"231","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserProfilePage\\UserProfilePage.js":"232","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Home\\WelcomePage\\WelcomePage.js":"233","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\components\\AuthSmsCodeModal\\AuthSmsCodeModal.js":"234","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Home\\ConfirmPasswordPage\\ConfirmPasswordPage.js":"235","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\utils\\common.js":"236","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\userDashboardService.js":"237","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\layouts\\UserLayout\\Includes\\UserLoader.js":"238","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\userCommonService.js":"239","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\userVpsService.js":"240","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\userLicenseService.js":"241","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserVpsPage\\inc\\VpsInfoModal.js":"242","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserLicensePage\\inc\\UserLicenseIntroPage.js":"243","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserLicensePage\\inc\\LicenseInfoModal.js":"244","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\userAcademyService.js":"245","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserAcademyPage\\inc\\UserBasicAcademyPage.js":"246","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserAcademyPage\\inc\\UserAdvancedAcademyPage.js":"247","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserVpsPage\\inc\\ConfirmPasswordModal.js":"248","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\userMarketingService.js":"249","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserMarketingPage\\inc\\UserActiveListPage.js":"250","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserMarketingPage\\inc\\UserRankDetailModal.js":"251","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\userWalletService.js":"252","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserWalletPage\\inc\\WithdrawalRequestModal.js":"253","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserWalletPage\\inc\\UserWithdrawalListTable.js":"254","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserWalletPage\\inc\\UserPayoutListTable.js":"255","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserWalletPage\\inc\\UserDataTable.js":"256","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserPaymentListPage\\UserPaymentListPage.js":"257","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserPaymentListPage\\inc\\UserPaymentListTable.js":"258","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\userPaymentService.js":"259","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\userProfileService.js":"260","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\userVerificationService.js":"261","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserVerificationPage\\inc\\TwoFactQRCodeModal.js":"262","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserPayLicensePage\\UserPayLicensePage.js":"263","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\userPayService.js":"264","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserPayAffiliatePage\\UserPayAffiliatePage.js":"265","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\userTeamService.js":"266","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserTeamPage\\inc\\UserTankUserListModal.js":"267","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\redux\\reducers\\socketReducer.js":"268","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\redux\\actions\\socketActions.js":"269","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\userTicketService.js":"270","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserTicketPage\\UserAddTicketPage.js":"271","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserTicketPage\\UserDetailTicketPage.js":"272","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserTicketPage\\inc\\UserTicketListTable.js":"273","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminDashboardPage\\AdminDashboardPage.js":"274","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminDashboardPage\\inc\\AdminUserListTable.js":"275","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\layouts\\AdminLayout\\AdminLayout.js":"276","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\layouts\\AdminLayout\\Includes\\AdminLoader.js":"277","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\layouts\\AdminLayout\\Includes\\AdminFooter.js":"278","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\layouts\\AdminLayout\\Includes\\AdminSidebar.js":"279","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\layouts\\AdminLayout\\Includes\\AdminHeader.js":"280","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\layouts\\AdminLayout\\Includes\\AdminMenuItems.js":"281","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminUsersPage\\AdminUsersPage.js":"282","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminUsersPage\\inc\\AdminUserListTable.js":"283","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\adminUsersService.js":"284","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\adminCommonService.js":"285","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminUsersPage\\inc\\TmpPasswordModal.js":"286","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminUsersPage\\inc\\AdminUserInfoModal.js":"287","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminLicensesPage\\AdminLicensesPage.js":"288","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminLicensesPage\\inc\\AdminLicenseListTable.js":"289","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminPaymentsPage\\AdminPaymentsPage.js":"290","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminPaymentsPage\\inc\\AdminPaymentListTable.js":"291","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminWithdrawPage\\AdminWithdrawPage.js":"292","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminWithdrawPage\\inc\\AdminWithdrawListTable.js":"293","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminTicketPage\\AdminTicketPage.js":"294","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminTicketPage\\inc\\AdminTicketListTable.js":"295","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminFeedPage\\AdminFeedPage.js":"296","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminFeedPage\\inc\\AdminFeedListTable.js":"297","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\adminPaymentsService.js":"298","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\adminWithdrawService.js":"299","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminTicketPage\\AdminDetailTicketPage.js":"300","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\adminTicketService.js":"301","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminFeedPage\\AdminDetailFeedPage.js":"302","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\adminFeedService.js":"303","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminAnnouncementPage\\AdminAnnouncementPage.js":"304","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\adminAnnouncementService.js":"305","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminProfilePage\\AdminProfilePage.js":"306","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminStatsPage\\AdminStatsPage.js":"307","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\adminStatsService.js":"308","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminTeamPage\\AdminTeamPage.js":"309","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminTeamPage\\inc\\AdminTankUserListModal.js":"310","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\adminTeamService.js":"311","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminUsersPage\\inc\\AdminUserDownloadModal.js":"312","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Home\\NotFoundPage\\NotFoundPage.js":"313","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\components\\ConfirmLogoutModal\\ConfirmLogoutModal.js":"314","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserDashboardPage\\inc\\UserReferralListPage.js":"315","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminRankPage\\AdminRankPage.js":"316","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminRankPage\\AdminRankDetailPage.js":"317","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\adminRankService.js":"318","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminRankPage\\inc\\AdminRankInfoModal.js":"319","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminRankPage\\inc\\AdminRankUserListTable.js":"320","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminCouponPage\\AdminCouponPage.js":"321","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminCouponPage\\inc\\AdminCouponListTable.js":"322","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminCouponPage\\inc\\AdminCouponInfoModal.js":"323","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\adminCouponService.js":"324"},{"size":499,"mtime":1624643262000,"results":"325","hashOfConfig":"326"},{"size":375,"mtime":1618826660000,"results":"327","hashOfConfig":"326"},{"size":1473,"mtime":1624643250000,"results":"328","hashOfConfig":"326"},{"size":927,"mtime":1621876966000,"results":"329","hashOfConfig":"326"},{"size":1169,"mtime":1618826660000,"results":"330","hashOfConfig":"326"},{"size":7342,"mtime":1627291970540,"results":"331","hashOfConfig":"326"},{"size":803,"mtime":1620420662000,"results":"332","hashOfConfig":"326"},{"size":526,"mtime":1621875504000,"results":"333","hashOfConfig":"326"},{"size":3661,"mtime":1621875028000,"results":"334","hashOfConfig":"326"},{"size":2063,"mtime":1624089436000,"results":"335","hashOfConfig":"326"},{"size":374,"mtime":1620234968000,"results":"336","hashOfConfig":"326"},{"size":4098,"mtime":1626771342000,"results":"337","hashOfConfig":"326"},{"size":516,"mtime":1621966012000,"results":"338","hashOfConfig":"326"},{"size":354,"mtime":1620318236000,"results":"339","hashOfConfig":"326"},{"size":324,"mtime":1621965194000,"results":"340","hashOfConfig":"326"},{"size":1619,"mtime":1622342216000,"results":"341","hashOfConfig":"326"},{"size":641,"mtime":1622365956000,"results":"342","hashOfConfig":"326"},{"size":4430,"mtime":1621635264000,"results":"343","hashOfConfig":"326"},{"size":592,"mtime":1621635492000,"results":"344","hashOfConfig":"326"},{"size":3924,"mtime":1623919766000,"results":"345","hashOfConfig":"326"},{"size":2766,"mtime":1621635740000,"results":"346","hashOfConfig":"326"},{"size":5385,"mtime":1625604958000,"results":"347","hashOfConfig":"326"},{"size":1831,"mtime":1620166856000,"results":"348","hashOfConfig":"326"},{"size":3702,"mtime":1623127298000,"results":"349","hashOfConfig":"326"},{"size":2248,"mtime":1623315616000,"results":"350","hashOfConfig":"326"},{"size":4546,"mtime":1623228148000,"results":"351","hashOfConfig":"326"},{"size":1198,"mtime":1623126066000,"results":"352","hashOfConfig":"326"},{"size":4672,"mtime":1624914294000,"results":"353","hashOfConfig":"326"},{"size":5055,"mtime":1626771300000,"results":"354","hashOfConfig":"326"},{"size":4329,"mtime":1623262888000,"results":"355","hashOfConfig":"326"},{"size":6774,"mtime":1624388010000,"results":"356","hashOfConfig":"326"},{"size":226,"mtime":1621971942000,"results":"357","hashOfConfig":"326"},{"size":3176,"mtime":1626198850000,"results":"358","hashOfConfig":"326"},{"size":1127,"mtime":1622015582000,"results":"359","hashOfConfig":"326"},{"size":5483,"mtime":1623379456000,"results":"360","hashOfConfig":"326"},{"size":15957,"mtime":1626854960000,"results":"361","hashOfConfig":"326"},{"size":11889,"mtime":1623379478000,"results":"362","hashOfConfig":"326"},{"size":45710,"mtime":1620255584000,"results":"363","hashOfConfig":"326"},{"size":108719,"mtime":1620253692000,"results":"364","hashOfConfig":"326"},{"size":218,"mtime":1621964442000,"results":"365","hashOfConfig":"326"},{"size":1934,"mtime":1622064698000,"results":"366","hashOfConfig":"326"},{"size":2798,"mtime":1622505572000,"results":"367","hashOfConfig":"326"},{"size":3062,"mtime":1622342228000,"results":"368","hashOfConfig":"326"},{"size":4281,"mtime":1620245048000,"results":"369","hashOfConfig":"326"},{"size":760,"mtime":1620239692000,"results":"370","hashOfConfig":"326"},{"size":1595,"mtime":1620933058000,"results":"371","hashOfConfig":"326"},{"size":5509,"mtime":1623916864000,"results":"372","hashOfConfig":"326"},{"size":1375,"mtime":1623377650000,"results":"373","hashOfConfig":"326"},{"size":4233,"mtime":1626200324000,"results":"374","hashOfConfig":"326"},{"size":6065,"mtime":1626774148000,"results":"375","hashOfConfig":"326"},{"size":183,"mtime":1623187126000,"results":"376","hashOfConfig":"326"},{"size":1738,"mtime":1623262934000,"results":"377","hashOfConfig":"326"},{"size":4838,"mtime":1623260956000,"results":"378","hashOfConfig":"326"},{"size":642,"mtime":1618959262000,"results":"379","hashOfConfig":"326"},{"size":166,"mtime":1620318234000,"results":"380","hashOfConfig":"326"},{"size":3971,"mtime":1626724318000,"results":"381","hashOfConfig":"326"},{"size":7998,"mtime":1626800520000,"results":"382","hashOfConfig":"326"},{"size":820,"mtime":1622737572000,"results":"383","hashOfConfig":"326"},{"size":376,"mtime":1626198124000,"results":"384","hashOfConfig":"326"},{"size":2586,"mtime":1623379308000,"results":"385","hashOfConfig":"326"},{"size":3625,"mtime":1626799734000,"results":"386","hashOfConfig":"326"},{"size":918,"mtime":1623299076000,"results":"387","hashOfConfig":"326"},{"size":3527,"mtime":1625687708000,"results":"388","hashOfConfig":"326"},{"size":268,"mtime":1623273124000,"results":"389","hashOfConfig":"326"},{"size":2212,"mtime":1623315226000,"results":"390","hashOfConfig":"326"},{"size":3560,"mtime":1620929262000,"results":"391","hashOfConfig":"326"},{"size":2787,"mtime":1624480158000,"results":"392","hashOfConfig":"326"},{"size":1948,"mtime":1624383380000,"results":"393","hashOfConfig":"326"},{"size":409,"mtime":1624647794000,"results":"394","hashOfConfig":"326"},{"size":190,"mtime":1624341502000,"results":"395","hashOfConfig":"326"},{"size":129,"mtime":1621888852000,"results":"396","hashOfConfig":"326"},{"size":4900,"mtime":1623315220000,"results":"397","hashOfConfig":"326"},{"size":4771,"mtime":1623315234000,"results":"398","hashOfConfig":"326"},{"size":190,"mtime":1615882848000,"results":"399","hashOfConfig":"326"},{"size":182,"mtime":1613532318000,"results":"400","hashOfConfig":"326"},{"size":308,"mtime":1620932670000,"results":"401","hashOfConfig":"326"},{"size":363,"mtime":1621998916000,"results":"402","hashOfConfig":"326"},{"size":1716,"mtime":1622252938000,"results":"403","hashOfConfig":"326"},{"size":4543,"mtime":1622336554000,"results":"404","hashOfConfig":"326"},{"size":6548,"mtime":1627120316240,"results":"405","hashOfConfig":"326"},{"size":3005,"mtime":1625681614000,"results":"406","hashOfConfig":"326"},{"size":2383,"mtime":1626773472000,"results":"407","hashOfConfig":"326"},{"size":1393,"mtime":1626366156000,"results":"408","hashOfConfig":"326"},{"size":1202,"mtime":1620932756000,"results":"409","hashOfConfig":"326"},{"size":2000,"mtime":1623296364000,"results":"410","hashOfConfig":"326"},{"size":182,"mtime":1622279814000,"results":"411","hashOfConfig":"326"},{"size":4004,"mtime":1622150624000,"results":"412","hashOfConfig":"326"},{"size":1931,"mtime":1624639200000,"results":"413","hashOfConfig":"326"},{"size":1174,"mtime":1622019074000,"results":"414","hashOfConfig":"326"},{"size":7097,"mtime":1623257498000,"results":"415","hashOfConfig":"326"},{"size":198,"mtime":1616779524000,"results":"416","hashOfConfig":"326"},{"size":2590,"mtime":1626800558000,"results":"417","hashOfConfig":"326"},{"size":836,"mtime":1624958430000,"results":"418","hashOfConfig":"326"},{"size":540,"mtime":1624386380000,"results":"419","hashOfConfig":"326"},{"size":3513,"mtime":1625606142000,"results":"420","hashOfConfig":"326"},{"size":1732,"mtime":1620066028000,"results":"421","hashOfConfig":"326"},{"size":3263,"mtime":1622696174000,"results":"422","hashOfConfig":"326"},{"size":3974,"mtime":1622341820000,"results":"423","hashOfConfig":"326"},{"size":4313,"mtime":1623177898000,"results":"424","hashOfConfig":"326"},{"size":9453,"mtime":1622281608000,"results":"425","hashOfConfig":"326"},{"size":182,"mtime":1614639160000,"results":"426","hashOfConfig":"326"},{"size":1025,"mtime":1622339126000,"results":"427","hashOfConfig":"326"},{"size":3416,"mtime":1622873636000,"results":"428","hashOfConfig":"326"},{"size":3271,"mtime":1624911036000,"results":"429","hashOfConfig":"326"},{"size":7033,"mtime":1623257042000,"results":"430","hashOfConfig":"326"},{"size":8244,"mtime":1624352306000,"results":"431","hashOfConfig":"326"},{"size":437,"mtime":1624440466000,"results":"432","hashOfConfig":"326"},{"size":473,"mtime":1624440318000,"results":"433","hashOfConfig":"326"},{"size":287,"mtime":1621632140000,"results":"434","hashOfConfig":"326"},{"size":9168,"mtime":1625607946000,"results":"435","hashOfConfig":"326"},{"size":5555,"mtime":1623127230000,"results":"436","hashOfConfig":"326"},{"size":1606,"mtime":1621994504000,"results":"437","hashOfConfig":"326"},{"size":186,"mtime":1616758850000,"results":"438","hashOfConfig":"326"},{"size":2811,"mtime":1622576510000,"results":"439","hashOfConfig":"326"},{"size":2701,"mtime":1622859700000,"results":"440","hashOfConfig":"326"},{"size":3429,"mtime":1623233418000,"results":"441","hashOfConfig":"326"},{"size":2855,"mtime":1623233400000,"results":"442","hashOfConfig":"326"},{"size":5496,"mtime":1623233406000,"results":"443","hashOfConfig":"326"},{"size":1570,"mtime":1626366176000,"results":"444","hashOfConfig":"326"},{"size":1898,"mtime":1624439682000,"results":"445","hashOfConfig":"326"},{"size":1616,"mtime":1622885192000,"results":"446","hashOfConfig":"326"},{"size":3970,"mtime":1623126934000,"results":"447","hashOfConfig":"326"},{"size":178,"mtime":1616929246000,"results":"448","hashOfConfig":"326"},{"size":1330,"mtime":1622105082000,"results":"449","hashOfConfig":"326"},{"size":198,"mtime":1613328174000,"results":"450","hashOfConfig":"326"},{"size":2469,"mtime":1620167042000,"results":"451","hashOfConfig":"326"},{"size":3794,"mtime":1624441114000,"results":"452","hashOfConfig":"326"},{"size":4233,"mtime":1623319204000,"results":"453","hashOfConfig":"326"},{"size":2861,"mtime":1624441312000,"results":"454","hashOfConfig":"326"},{"size":1192,"mtime":1623272286000,"results":"455","hashOfConfig":"326"},{"size":11586,"mtime":1623354560000,"results":"456","hashOfConfig":"326"},{"size":2313,"mtime":1622882294000,"results":"457","hashOfConfig":"326"},{"size":2477,"mtime":1623141086000,"results":"458","hashOfConfig":"326"},{"size":3562,"mtime":1625676682000,"results":"459","hashOfConfig":"326"},{"size":3172,"mtime":1625605264000,"results":"460","hashOfConfig":"326"},{"size":3381,"mtime":1622201214000,"results":"461","hashOfConfig":"326"},{"size":8511,"mtime":1623126282000,"results":"462","hashOfConfig":"326"},{"size":2631,"mtime":1622149800000,"results":"463","hashOfConfig":"326"},{"size":2119,"mtime":1623060798000,"results":"464","hashOfConfig":"326"},{"size":2371,"mtime":1625605420000,"results":"465","hashOfConfig":"326"},{"size":2467,"mtime":1622136638000,"results":"466","hashOfConfig":"326"},{"size":1471,"mtime":1623312532000,"results":"467","hashOfConfig":"326"},{"size":8980,"mtime":1623180892000,"results":"468","hashOfConfig":"326"},{"size":1883,"mtime":1622882492000,"results":"469","hashOfConfig":"326"},{"size":5589,"mtime":1623355490000,"results":"470","hashOfConfig":"326"},{"size":1938,"mtime":1622568854000,"results":"471","hashOfConfig":"326"},{"size":186,"mtime":1616758850000,"results":"472","hashOfConfig":"326"},{"size":198,"mtime":1616779524000,"results":"473","hashOfConfig":"326"},{"size":343,"mtime":1623303346000,"results":"474","hashOfConfig":"326"},{"size":3782,"mtime":1621015146000,"results":"475","hashOfConfig":"326"},{"size":2033,"mtime":1623314802000,"results":"476","hashOfConfig":"326"},{"size":238,"mtime":1622772314000,"results":"477","hashOfConfig":"326"},{"size":2372,"mtime":1624439932000,"results":"478","hashOfConfig":"326"},{"size":915,"mtime":1624441458000,"results":"479","hashOfConfig":"326"},{"size":5169,"mtime":1622950716000,"results":"480","hashOfConfig":"326"},{"size":6118,"mtime":1622953538000,"results":"481","hashOfConfig":"326"},{"size":6414,"mtime":1623159190000,"results":"482","hashOfConfig":"326"},{"size":5304,"mtime":1623158998000,"results":"483","hashOfConfig":"326"},{"size":19468,"mtime":1623323978000,"results":"484","hashOfConfig":"326"},{"size":1764,"mtime":1622685310000,"results":"485","hashOfConfig":"326"},{"size":3596,"mtime":1622686068000,"results":"486","hashOfConfig":"326"},{"size":5759,"mtime":1623233278000,"results":"487","hashOfConfig":"326"},{"size":1859,"mtime":1613420508000,"results":"488","hashOfConfig":"326"},{"size":2508,"mtime":1623294298000,"results":"489","hashOfConfig":"326"},{"size":499,"mtime":1624643262000,"results":"490","hashOfConfig":"491"},{"size":1494,"mtime":1629754069082,"results":"492","hashOfConfig":"491"},{"size":375,"mtime":1618826660000,"results":"493","hashOfConfig":"491"},{"size":927,"mtime":1630383838694,"results":"494","hashOfConfig":"491"},{"size":1169,"mtime":1618826660000,"results":"495","hashOfConfig":"491"},{"size":11182,"mtime":1635138275481,"results":"496","hashOfConfig":"491"},{"size":530,"mtime":1630383820864,"results":"497","hashOfConfig":"491"},{"size":3757,"mtime":1635137587008,"results":"498","hashOfConfig":"491"},{"size":300,"mtime":1627461845362,"results":"499","hashOfConfig":"491"},{"size":711,"mtime":1627643795698,"results":"500","hashOfConfig":"491"},{"size":980,"mtime":1627666325367,"results":"501","hashOfConfig":"491"},{"size":324,"mtime":1621965194000,"results":"502","hashOfConfig":"491"},{"size":218,"mtime":1621964442000,"results":"503","hashOfConfig":"491"},{"size":642,"mtime":1618959262000,"results":"504","hashOfConfig":"491"},{"size":7318,"mtime":1634740063693,"results":"505","hashOfConfig":"491"},{"size":7493,"mtime":1635137305925,"results":"506","hashOfConfig":"491"},{"size":1684,"mtime":1635651383602,"results":"507","hashOfConfig":"491"},{"size":6271,"mtime":1630526741184,"results":"508","hashOfConfig":"491"},{"size":3782,"mtime":1621015146000,"results":"509","hashOfConfig":"510"},{"size":1231,"mtime":1632474402961,"results":"511","hashOfConfig":"491"},{"size":156,"mtime":1627470944970,"results":"512","hashOfConfig":"491"},{"size":519,"mtime":1627988155140,"results":"513","hashOfConfig":"491"},{"size":630,"mtime":1627554846837,"results":"514","hashOfConfig":"491"},{"size":2321,"mtime":1633368080970,"results":"515","hashOfConfig":"491"},{"size":26870,"mtime":1632824044226,"results":"516","hashOfConfig":"491"},{"size":3179,"mtime":1632711215468,"results":"517","hashOfConfig":"491"},{"size":12085,"mtime":1633367772984,"results":"518","hashOfConfig":"491"},{"size":5282,"mtime":1632547417148,"results":"519","hashOfConfig":"491"},{"size":7792,"mtime":1632391674071,"results":"520","hashOfConfig":"491"},{"size":4345,"mtime":1632391749492,"results":"521","hashOfConfig":"491"},{"size":1310,"mtime":1628020396451,"results":"522","hashOfConfig":"491"},{"size":23011,"mtime":1632841593468,"results":"523","hashOfConfig":"491"},{"size":4713,"mtime":1633453357202,"results":"524","hashOfConfig":"491"},{"size":8949,"mtime":1630228477886,"results":"525","hashOfConfig":"491"},{"size":2726,"mtime":1634624128546,"results":"526","hashOfConfig":"491"},{"size":5143,"mtime":1632948667464,"results":"527","hashOfConfig":"491"},{"size":876,"mtime":1627668782355,"results":"528","hashOfConfig":"491"},{"size":11506,"mtime":1632398095922,"results":"529","hashOfConfig":"491"},{"size":48630,"mtime":1635366908239,"results":"530","hashOfConfig":"491"},{"size":8625,"mtime":1633930075313,"results":"531","hashOfConfig":"491"},{"size":4077,"mtime":1632416968106,"results":"532","hashOfConfig":"491"},{"size":7280,"mtime":1635135972195,"results":"533","hashOfConfig":"491"},{"size":21022,"mtime":1627902152746,"results":"534","hashOfConfig":"491"},{"size":7163,"mtime":1630101923330,"results":"535","hashOfConfig":"491"},{"size":10213,"mtime":1627984579264,"results":"536","hashOfConfig":"491"},{"size":4327,"mtime":1632948941364,"results":"537","hashOfConfig":"491"},{"size":2360,"mtime":1627990989785,"results":"538","hashOfConfig":"491"},{"size":21333,"mtime":1627982606041,"results":"539","hashOfConfig":"491"},{"size":69406,"mtime":1627982893374,"results":"540","hashOfConfig":"491"},{"size":75227,"mtime":1632398718824,"results":"541","hashOfConfig":"491"},{"size":3344,"mtime":1627983435437,"results":"542","hashOfConfig":"491"},{"size":16258,"mtime":1627984064640,"results":"543","hashOfConfig":"491"},{"size":3582,"mtime":1627984239521,"results":"544","hashOfConfig":"491"},{"size":1748,"mtime":1632392055121,"results":"545","hashOfConfig":"491"},{"size":2167,"mtime":1627984769241,"results":"546","hashOfConfig":"491"},{"size":9401,"mtime":1634624916486,"results":"547","hashOfConfig":"491"},{"size":2129,"mtime":1632390528503,"results":"548","hashOfConfig":"491"},{"size":16340,"mtime":1634624821449,"results":"549","hashOfConfig":"491"},{"size":7864,"mtime":1630473552748,"results":"550","hashOfConfig":"491"},{"size":4466,"mtime":1633470805133,"results":"551","hashOfConfig":"491"},{"size":10454,"mtime":1632876488103,"results":"552","hashOfConfig":"491"},{"size":3330,"mtime":1630228625543,"results":"553","hashOfConfig":"491"},{"size":5580,"mtime":1630091338197,"results":"554","hashOfConfig":"491"},{"size":5161,"mtime":1630228795310,"results":"555","hashOfConfig":"491"},{"size":2883,"mtime":1630477619181,"results":"556","hashOfConfig":"491"},{"size":18988,"mtime":1630228790912,"results":"557","hashOfConfig":"491"},{"size":11866,"mtime":1632818911036,"results":"558","hashOfConfig":"491"},{"size":18379,"mtime":1634546592670,"results":"559","hashOfConfig":"491"},{"size":3188,"mtime":1632334405061,"results":"560","hashOfConfig":"491"},{"size":3570,"mtime":1629793520785,"results":"561","hashOfConfig":"491"},{"size":2769,"mtime":1629206192361,"results":"562","hashOfConfig":"491"},{"size":0,"mtime":1629221710253,"results":"563","hashOfConfig":"491"},{"size":380,"mtime":1629753002138,"results":"564","hashOfConfig":"491"},{"size":630,"mtime":1629723640722,"results":"565","hashOfConfig":"491"},{"size":1238,"mtime":1630228193232,"results":"566","hashOfConfig":"491"},{"size":989,"mtime":1629884378153,"results":"567","hashOfConfig":"491"},{"size":1106,"mtime":1629907589180,"results":"568","hashOfConfig":"491"},{"size":2128,"mtime":1629882554190,"results":"569","hashOfConfig":"491"},{"size":4999,"mtime":1630214822437,"results":"570","hashOfConfig":"491"},{"size":3626,"mtime":1629907837044,"results":"571","hashOfConfig":"491"},{"size":866,"mtime":1629913069717,"results":"572","hashOfConfig":"491"},{"size":6515,"mtime":1632417549381,"results":"573","hashOfConfig":"491"},{"size":1042,"mtime":1629918707820,"results":"574","hashOfConfig":"491"},{"size":3623,"mtime":1629802989909,"results":"575","hashOfConfig":"491"},{"size":860,"mtime":1630014070192,"results":"576","hashOfConfig":"491"},{"size":15208,"mtime":1632853330939,"results":"577","hashOfConfig":"491"},{"size":11938,"mtime":1632822620843,"results":"578","hashOfConfig":"491"},{"size":2094,"mtime":1630090715795,"results":"579","hashOfConfig":"491"},{"size":6880,"mtime":1632397429583,"results":"580","hashOfConfig":"491"},{"size":5653,"mtime":1630095724476,"results":"581","hashOfConfig":"491"},{"size":4658,"mtime":1630108327985,"results":"582","hashOfConfig":"491"},{"size":10832,"mtime":1630095688846,"results":"583","hashOfConfig":"491"},{"size":2640,"mtime":1630094099858,"results":"584","hashOfConfig":"491"},{"size":5729,"mtime":1634746843148,"results":"585","hashOfConfig":"491"},{"size":1004,"mtime":1630093346108,"results":"586","hashOfConfig":"491"},{"size":3552,"mtime":1634546872236,"results":"587","hashOfConfig":"491"},{"size":2760,"mtime":1632414902372,"results":"588","hashOfConfig":"491"},{"size":6162,"mtime":1630212015322,"results":"589","hashOfConfig":"491"},{"size":8114,"mtime":1633459080124,"results":"590","hashOfConfig":"491"},{"size":2269,"mtime":1630226803124,"results":"591","hashOfConfig":"491"},{"size":7584,"mtime":1633459103887,"results":"592","hashOfConfig":"491"},{"size":1991,"mtime":1633931537409,"results":"593","hashOfConfig":"491"},{"size":5103,"mtime":1631058981996,"results":"594","hashOfConfig":"491"},{"size":363,"mtime":1630401772195,"results":"595","hashOfConfig":"491"},{"size":161,"mtime":1630384539217,"results":"596","hashOfConfig":"491"},{"size":3170,"mtime":1630521400564,"results":"597","hashOfConfig":"491"},{"size":8754,"mtime":1630530642805,"results":"598","hashOfConfig":"491"},{"size":18292,"mtime":1632215471986,"results":"599","hashOfConfig":"491"},{"size":5808,"mtime":1630486451576,"results":"600","hashOfConfig":"491"},{"size":2233,"mtime":1631061702624,"results":"601","hashOfConfig":"491"},{"size":4649,"mtime":1630645883080,"results":"602","hashOfConfig":"491"},{"size":4359,"mtime":1632391408587,"results":"603","hashOfConfig":"491"},{"size":632,"mtime":1630646360951,"results":"604","hashOfConfig":"491"},{"size":1312,"mtime":1630646334158,"results":"605","hashOfConfig":"491"},{"size":2499,"mtime":1632391392583,"results":"606","hashOfConfig":"491"},{"size":7991,"mtime":1632390369074,"results":"607","hashOfConfig":"491"},{"size":2038,"mtime":1635138630252,"results":"608","hashOfConfig":"491"},{"size":2709,"mtime":1630812978737,"results":"609","hashOfConfig":"491"},{"size":17595,"mtime":1632837875482,"results":"610","hashOfConfig":"491"},{"size":2564,"mtime":1634547445609,"results":"611","hashOfConfig":"491"},{"size":1168,"mtime":1631054178792,"results":"612","hashOfConfig":"491"},{"size":4308,"mtime":1630814294522,"results":"613","hashOfConfig":"491"},{"size":7829,"mtime":1634547575607,"results":"614","hashOfConfig":"491"},{"size":2693,"mtime":1630826745259,"results":"615","hashOfConfig":"491"},{"size":6608,"mtime":1630834747063,"results":"616","hashOfConfig":"491"},{"size":2692,"mtime":1630828242847,"results":"617","hashOfConfig":"491"},{"size":9586,"mtime":1634624261695,"results":"618","hashOfConfig":"491"},{"size":2701,"mtime":1630830136419,"results":"619","hashOfConfig":"491"},{"size":13149,"mtime":1630835569123,"results":"620","hashOfConfig":"491"},{"size":2679,"mtime":1632215595818,"results":"621","hashOfConfig":"491"},{"size":13090,"mtime":1630899836003,"results":"622","hashOfConfig":"491"},{"size":3060,"mtime":1631035953630,"results":"623","hashOfConfig":"491"},{"size":9263,"mtime":1631046136380,"results":"624","hashOfConfig":"491"},{"size":826,"mtime":1630829103934,"results":"625","hashOfConfig":"491"},{"size":1038,"mtime":1630834248580,"results":"626","hashOfConfig":"491"},{"size":20017,"mtime":1632215589568,"results":"627","hashOfConfig":"491"},{"size":1468,"mtime":1631303377654,"results":"628","hashOfConfig":"491"},{"size":9156,"mtime":1631047330818,"results":"629","hashOfConfig":"491"},{"size":1911,"mtime":1631045796699,"results":"630","hashOfConfig":"491"},{"size":9991,"mtime":1632128665259,"results":"631","hashOfConfig":"491"},{"size":1147,"mtime":1631051787443,"results":"632","hashOfConfig":"491"},{"size":8670,"mtime":1631054524170,"results":"633","hashOfConfig":"491"},{"size":7950,"mtime":1634530192516,"results":"634","hashOfConfig":"491"},{"size":862,"mtime":1631055625313,"results":"635","hashOfConfig":"491"},{"size":13707,"mtime":1633932572423,"results":"636","hashOfConfig":"491"},{"size":5105,"mtime":1631057476337,"results":"637","hashOfConfig":"491"},{"size":1065,"mtime":1633931558866,"results":"638","hashOfConfig":"491"},{"size":4386,"mtime":1631687190867,"results":"639","hashOfConfig":"491"},{"size":806,"mtime":1632143424607,"results":"640","hashOfConfig":"491"},{"size":2196,"mtime":1632390651130,"results":"641","hashOfConfig":"491"},{"size":14709,"mtime":1632842800871,"results":"642","hashOfConfig":"491"},{"size":5118,"mtime":1633875210635,"results":"643","hashOfConfig":"491"},{"size":7646,"mtime":1633584927108,"results":"644","hashOfConfig":"491"},{"size":887,"mtime":1633585659548,"results":"645","hashOfConfig":"491"},{"size":2113,"mtime":1633595396758,"results":"646","hashOfConfig":"491"},{"size":3420,"mtime":1633915376478,"results":"647","hashOfConfig":"491"},{"size":2773,"mtime":1635139491594,"results":"648","hashOfConfig":"491"},{"size":10375,"mtime":1635266690622,"results":"649","hashOfConfig":"491"},{"size":5157,"mtime":1635269559511,"results":"650","hashOfConfig":"491"},{"size":1708,"mtime":1635267891230,"results":"651","hashOfConfig":"491"},{"filePath":"652","messages":"653","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"f60m3d",{"filePath":"654","messages":"655","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"656","messages":"657","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"658","messages":"659","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"660","messages":"661","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"662","messages":"663","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"664","messages":"665","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"666","messages":"667","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"668","messages":"669","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"670"},{"filePath":"671","messages":"672","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"673"},{"filePath":"674","messages":"675","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"676","messages":"677","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"678"},{"filePath":"679","messages":"680","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"681","messages":"682","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"683","messages":"684","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"685","messages":"686","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"687"},{"filePath":"688","messages":"689","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"690","messages":"691","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"692"},{"filePath":"693","messages":"694","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"695"},{"filePath":"696","messages":"697","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"698"},{"filePath":"699","messages":"700","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"701"},{"filePath":"702","messages":"703","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"704"},{"filePath":"705","messages":"706","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"707","messages":"708","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"709","messages":"710","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"711","messages":"712","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"713","messages":"714","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"715","messages":"716","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"717"},{"filePath":"718","messages":"719","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"720"},{"filePath":"721","messages":"722","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"723"},{"filePath":"724","messages":"725","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"726"},{"filePath":"727","messages":"728","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"729","messages":"730","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"731","messages":"732","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"733","messages":"734","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"735"},{"filePath":"736","messages":"737","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"738"},{"filePath":"739","messages":"740","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"741"},{"filePath":"742","messages":"743","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"744","messages":"745","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"746","messages":"747","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"748","messages":"749","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"750"},{"filePath":"751","messages":"752","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"753","messages":"754","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"755","messages":"756","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"757","messages":"758","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"759"},{"filePath":"760","messages":"761","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"762"},{"filePath":"763","messages":"764","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"765","messages":"766","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"767"},{"filePath":"768","messages":"769","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"770"},{"filePath":"771","messages":"772","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"773"},{"filePath":"774","messages":"775","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"776","messages":"777","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"778"},{"filePath":"779","messages":"780","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":1,"source":"781"},{"filePath":"782","messages":"783","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"784","messages":"785","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"786","messages":"787","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"788"},{"filePath":"789","messages":"790","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"791"},{"filePath":"792","messages":"793","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"794","messages":"795","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"796"},{"filePath":"797","messages":"798","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"799"},{"filePath":"800","messages":"801","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"802"},{"filePath":"803","messages":"804","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"805"},{"filePath":"806","messages":"807","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"808"},{"filePath":"809","messages":"810","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"811","messages":"812","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"813"},{"filePath":"814","messages":"815","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"816","messages":"817","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"818"},{"filePath":"819","messages":"820","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"821"},{"filePath":"822","messages":"823","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"824","messages":"825","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"826","messages":"827","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"828"},{"filePath":"829","messages":"830","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"831"},{"filePath":"832","messages":"833","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"834"},{"filePath":"835","messages":"836","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"837","messages":"838","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"839","messages":"840","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"841","messages":"842","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"843","messages":"844","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"845"},{"filePath":"846","messages":"847","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"848","messages":"849","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"850"},{"filePath":"851","messages":"852","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"853"},{"filePath":"854","messages":"855","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"856"},{"filePath":"857","messages":"858","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"859"},{"filePath":"860","messages":"861","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"862"},{"filePath":"863","messages":"864","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"865","messages":"866","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"867","messages":"868","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"869"},{"filePath":"870","messages":"871","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"872","messages":"873","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"874","messages":"875","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"876"},{"filePath":"877","messages":"878","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"879","messages":"880","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"881"},{"filePath":"882","messages":"883","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"884"},{"filePath":"885","messages":"886","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"887","messages":"888","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"889"},{"filePath":"890","messages":"891","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"892"},{"filePath":"893","messages":"894","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"895"},{"filePath":"896","messages":"897","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"898"},{"filePath":"899","messages":"900","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"901"},{"filePath":"902","messages":"903","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"904"},{"filePath":"905","messages":"906","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"907","messages":"908","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"909"},{"filePath":"910","messages":"911","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"912"},{"filePath":"913","messages":"914","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"915"},{"filePath":"916","messages":"917","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"918"},{"filePath":"919","messages":"920","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"921"},{"filePath":"922","messages":"923","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"924","messages":"925","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"926"},{"filePath":"927","messages":"928","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"929","messages":"930","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"931"},{"filePath":"932","messages":"933","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"934","messages":"935","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"936","messages":"937","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"938","messages":"939","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"940","messages":"941","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"942"},{"filePath":"943","messages":"944","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"945"},{"filePath":"946","messages":"947","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"948"},{"filePath":"949","messages":"950","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"951"},{"filePath":"952","messages":"953","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"954"},{"filePath":"955","messages":"956","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"957"},{"filePath":"958","messages":"959","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"960"},{"filePath":"961","messages":"962","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"963"},{"filePath":"964","messages":"965","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"966","messages":"967","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"968"},{"filePath":"969","messages":"970","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"971","messages":"972","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"973","messages":"974","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"975"},{"filePath":"976","messages":"977","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"978"},{"filePath":"979","messages":"980","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"981","messages":"982","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"983"},{"filePath":"984","messages":"985","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"986"},{"filePath":"987","messages":"988","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"989","messages":"990","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"991","messages":"992","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"993"},{"filePath":"994","messages":"995","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"996"},{"filePath":"997","messages":"998","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"999"},{"filePath":"1000","messages":"1001","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1002"},{"filePath":"1003","messages":"1004","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1005"},{"filePath":"1006","messages":"1007","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1008","messages":"1009","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1010"},{"filePath":"1011","messages":"1012","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1013","messages":"1014","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1015"},{"filePath":"1016","messages":"1017","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1018"},{"filePath":"1019","messages":"1020","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1021"},{"filePath":"1022","messages":"1023","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1024"},{"filePath":"1025","messages":"1026","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1027"},{"filePath":"1028","messages":"1029","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1030","messages":"1031","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1032","messages":"1033","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1034","messages":"1035","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1036","messages":"1037","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1038"},{"filePath":"1039","messages":"1040","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1041","messages":"1042","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1043"},{"filePath":"1044","messages":"1045","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1046"},{"filePath":"1047","messages":"1048","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1049"},{"filePath":"1050","messages":"1051","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1052"},{"filePath":"1053","messages":"1054","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1055"},{"filePath":"1056","messages":"1057","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1058"},{"filePath":"1059","messages":"1060","errorCount":0,"warningCount":46,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1061"},{"filePath":"1062","messages":"1063","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1064"},{"filePath":"1065","messages":"1066","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1067"},{"filePath":"1068","messages":"1069","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1070"},{"filePath":"1071","messages":"1072","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1073","messages":"1074","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1075"},{"filePath":"1076","messages":"1077","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1078"},"gzd2l9",{"filePath":"1079","messages":"1080","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1078"},{"filePath":"1081","messages":"1082","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1078"},{"filePath":"1083","messages":"1084","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1078"},{"filePath":"1085","messages":"1086","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1078"},{"filePath":"1087","messages":"1088","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1089","usedDeprecatedRules":"1078"},{"filePath":"1090","messages":"1091","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1078"},{"filePath":"1092","messages":"1093","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1078"},{"filePath":"1094","messages":"1095","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1078"},{"filePath":"1096","messages":"1097","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1078"},{"filePath":"1098","messages":"1099","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1078"},{"filePath":"1100","messages":"1101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1078"},{"filePath":"1102","messages":"1103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1078"},{"filePath":"1104","messages":"1105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1078"},{"filePath":"1106","messages":"1107","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1108","usedDeprecatedRules":"1078"},{"filePath":"1109","messages":"1110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1078"},{"filePath":"1111","messages":"1112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1113","messages":"1114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1078"},{"filePath":"1115","messages":"1116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1117"},"1n8v8k4",{"filePath":"1118","messages":"1119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1120","usedDeprecatedRules":"1078"},{"filePath":"1121","messages":"1122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1078"},{"filePath":"1123","messages":"1124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1078"},{"filePath":"1125","messages":"1126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1078"},{"filePath":"1127","messages":"1128","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1129","usedDeprecatedRules":"1078"},{"filePath":"1130","messages":"1131","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1132","usedDeprecatedRules":"1078"},{"filePath":"1133","messages":"1134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1078"},{"filePath":"1135","messages":"1136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1137","usedDeprecatedRules":"1078"},{"filePath":"1138","messages":"1139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1140","usedDeprecatedRules":"1078"},{"filePath":"1141","messages":"1142","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1143","usedDeprecatedRules":"1078"},{"filePath":"1144","messages":"1145","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1146","usedDeprecatedRules":"1078"},{"filePath":"1147","messages":"1148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1078"},{"filePath":"1149","messages":"1150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1151","usedDeprecatedRules":"1078"},{"filePath":"1152","messages":"1153","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1154","usedDeprecatedRules":"1078"},{"filePath":"1155","messages":"1156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1157","usedDeprecatedRules":"1078"},{"filePath":"1158","messages":"1159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1160","usedDeprecatedRules":"1078"},{"filePath":"1161","messages":"1162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1078"},{"filePath":"1163","messages":"1164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1078"},{"filePath":"1165","messages":"1166","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1167","usedDeprecatedRules":"1078"},{"filePath":"1168","messages":"1169","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1170"},{"filePath":"1171","messages":"1172","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1173","usedDeprecatedRules":"1078"},{"filePath":"1174","messages":"1175","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1176","usedDeprecatedRules":"1078"},{"filePath":"1177","messages":"1178","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1179","usedDeprecatedRules":"1078"},{"filePath":"1180","messages":"1181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1078"},{"filePath":"1182","messages":"1183","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1184","usedDeprecatedRules":"1078"},{"filePath":"1185","messages":"1186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1078"},{"filePath":"1187","messages":"1188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1078"},{"filePath":"1189","messages":"1190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1078"},{"filePath":"1191","messages":"1192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1078"},{"filePath":"1193","messages":"1194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1195","usedDeprecatedRules":"1078"},{"filePath":"1196","messages":"1197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1198","usedDeprecatedRules":"1078"},{"filePath":"1199","messages":"1200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1078"},{"filePath":"1201","messages":"1202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1078"},{"filePath":"1203","messages":"1204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1078"},{"filePath":"1205","messages":"1206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1078"},{"filePath":"1207","messages":"1208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1078"},{"filePath":"1209","messages":"1210","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1211","usedDeprecatedRules":"1078"},{"filePath":"1212","messages":"1213","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1214","usedDeprecatedRules":"1078"},{"filePath":"1215","messages":"1216","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1217","usedDeprecatedRules":"1078"},{"filePath":"1218","messages":"1219","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1220","usedDeprecatedRules":"1078"},{"filePath":"1221","messages":"1222","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1223","usedDeprecatedRules":"1078"},{"filePath":"1224","messages":"1225","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1226","usedDeprecatedRules":"1078"},{"filePath":"1227","messages":"1228","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1229","usedDeprecatedRules":"1078"},{"filePath":"1230","messages":"1231","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1232","usedDeprecatedRules":"1078"},{"filePath":"1233","messages":"1234","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1235","usedDeprecatedRules":"1078"},{"filePath":"1236","messages":"1237","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1238","usedDeprecatedRules":"1078"},{"filePath":"1239","messages":"1240","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1241","usedDeprecatedRules":"1078"},{"filePath":"1242","messages":"1243","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1244","usedDeprecatedRules":"1078"},{"filePath":"1245","messages":"1246","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1247","usedDeprecatedRules":"1078"},{"filePath":"1248","messages":"1249","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1250","usedDeprecatedRules":"1078"},{"filePath":"1251","messages":"1252","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1253","usedDeprecatedRules":"1078"},{"filePath":"1254","messages":"1255","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1256","usedDeprecatedRules":"1078"},{"filePath":"1257","messages":"1258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1259","messages":"1260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1078"},{"filePath":"1261","messages":"1262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1078"},{"filePath":"1263","messages":"1264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1078"},{"filePath":"1265","messages":"1266","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1267","usedDeprecatedRules":"1078"},{"filePath":"1268","messages":"1269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1270","usedDeprecatedRules":"1078"},{"filePath":"1271","messages":"1272","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1273","usedDeprecatedRules":"1078"},{"filePath":"1274","messages":"1275","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1276","usedDeprecatedRules":"1078"},{"filePath":"1277","messages":"1278","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1279","usedDeprecatedRules":"1078"},{"filePath":"1280","messages":"1281","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1282","usedDeprecatedRules":"1078"},{"filePath":"1283","messages":"1284","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1285","usedDeprecatedRules":"1078"},{"filePath":"1286","messages":"1287","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1288","usedDeprecatedRules":"1078"},{"filePath":"1289","messages":"1290","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1291","usedDeprecatedRules":"1078"},{"filePath":"1292","messages":"1293","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1294","usedDeprecatedRules":"1078"},{"filePath":"1295","messages":"1296","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1297","usedDeprecatedRules":"1078"},{"filePath":"1298","messages":"1299","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1300","usedDeprecatedRules":"1078"},{"filePath":"1301","messages":"1302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1303","usedDeprecatedRules":"1078"},{"filePath":"1304","messages":"1305","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1306","usedDeprecatedRules":"1078"},{"filePath":"1307","messages":"1308","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1309","usedDeprecatedRules":"1078"},{"filePath":"1310","messages":"1311","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1312","usedDeprecatedRules":"1078"},{"filePath":"1313","messages":"1314","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1315","usedDeprecatedRules":"1078"},{"filePath":"1316","messages":"1317","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1318","usedDeprecatedRules":"1078"},{"filePath":"1319","messages":"1320","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1321","usedDeprecatedRules":"1078"},{"filePath":"1322","messages":"1323","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1324","usedDeprecatedRules":"1078"},{"filePath":"1325","messages":"1326","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1327","usedDeprecatedRules":"1078"},{"filePath":"1328","messages":"1329","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1330","usedDeprecatedRules":"1078"},{"filePath":"1331","messages":"1332","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1333","usedDeprecatedRules":"1078"},{"filePath":"1334","messages":"1335","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1336","usedDeprecatedRules":"1078"},{"filePath":"1337","messages":"1338","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1339","usedDeprecatedRules":"1078"},{"filePath":"1340","messages":"1341","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1342","usedDeprecatedRules":"1078"},{"filePath":"1343","messages":"1344","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1345","usedDeprecatedRules":"1078"},{"filePath":"1346","messages":"1347","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1348","usedDeprecatedRules":"1078"},{"filePath":"1349","messages":"1350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1078"},{"filePath":"1351","messages":"1352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1078"},{"filePath":"1353","messages":"1354","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1355","usedDeprecatedRules":"1078"},{"filePath":"1356","messages":"1357","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1358","usedDeprecatedRules":"1078"},{"filePath":"1359","messages":"1360","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1361","usedDeprecatedRules":"1078"},{"filePath":"1362","messages":"1363","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1364","usedDeprecatedRules":"1078"},{"filePath":"1365","messages":"1366","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1367","usedDeprecatedRules":"1078"},{"filePath":"1368","messages":"1369","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1370","usedDeprecatedRules":"1078"},{"filePath":"1371","messages":"1372","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1373","usedDeprecatedRules":"1078"},{"filePath":"1374","messages":"1375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1078"},{"filePath":"1376","messages":"1377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1078"},{"filePath":"1378","messages":"1379","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1380","usedDeprecatedRules":"1078"},{"filePath":"1381","messages":"1382","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1383","usedDeprecatedRules":"1078"},{"filePath":"1384","messages":"1385","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1386","usedDeprecatedRules":"1078"},{"filePath":"1387","messages":"1388","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1389","usedDeprecatedRules":"1078"},{"filePath":"1390","messages":"1391","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1392","usedDeprecatedRules":"1078"},{"filePath":"1393","messages":"1394","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1395","usedDeprecatedRules":"1078"},{"filePath":"1396","messages":"1397","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1398","usedDeprecatedRules":"1078"},{"filePath":"1399","messages":"1400","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1401","usedDeprecatedRules":"1078"},{"filePath":"1402","messages":"1403","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1404","usedDeprecatedRules":"1078"},{"filePath":"1405","messages":"1406","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1407","usedDeprecatedRules":"1078"},{"filePath":"1408","messages":"1409","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1410","usedDeprecatedRules":"1078"},{"filePath":"1411","messages":"1412","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1413","usedDeprecatedRules":"1078"},{"filePath":"1414","messages":"1415","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1416","usedDeprecatedRules":"1078"},{"filePath":"1417","messages":"1418","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1419","usedDeprecatedRules":"1078"},{"filePath":"1420","messages":"1421","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1422","usedDeprecatedRules":"1078"},{"filePath":"1423","messages":"1424","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1425","usedDeprecatedRules":"1078"},{"filePath":"1426","messages":"1427","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1428","usedDeprecatedRules":"1078"},{"filePath":"1429","messages":"1430","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1431","usedDeprecatedRules":"1078"},{"filePath":"1432","messages":"1433","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1434","usedDeprecatedRules":"1078"},{"filePath":"1435","messages":"1436","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1437","usedDeprecatedRules":"1078"},{"filePath":"1438","messages":"1439","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1440","usedDeprecatedRules":"1078"},{"filePath":"1441","messages":"1442","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1443","usedDeprecatedRules":"1078"},{"filePath":"1444","messages":"1445","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1446","usedDeprecatedRules":"1078"},{"filePath":"1447","messages":"1448","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1449","usedDeprecatedRules":"1078"},{"filePath":"1450","messages":"1451","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1452","usedDeprecatedRules":"1078"},{"filePath":"1453","messages":"1454","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1455","usedDeprecatedRules":"1078"},{"filePath":"1456","messages":"1457","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1458","usedDeprecatedRules":"1078"},{"filePath":"1459","messages":"1460","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1461","usedDeprecatedRules":"1078"},{"filePath":"1462","messages":"1463","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1464","usedDeprecatedRules":"1078"},{"filePath":"1465","messages":"1466","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1467","usedDeprecatedRules":"1078"},{"filePath":"1468","messages":"1469","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1470","usedDeprecatedRules":"1078"},{"filePath":"1471","messages":"1472","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1473","usedDeprecatedRules":"1078"},{"filePath":"1474","messages":"1475","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1476","usedDeprecatedRules":"1078"},{"filePath":"1477","messages":"1478","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1479","usedDeprecatedRules":"1078"},{"filePath":"1480","messages":"1481","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1482","usedDeprecatedRules":"1078"},{"filePath":"1483","messages":"1484","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1485","usedDeprecatedRules":"1078"},{"filePath":"1486","messages":"1487","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1488","usedDeprecatedRules":"1078"},{"filePath":"1489","messages":"1490","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1491","usedDeprecatedRules":"1078"},{"filePath":"1492","messages":"1493","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1494","usedDeprecatedRules":"1078"},{"filePath":"1495","messages":"1496","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1497","usedDeprecatedRules":"1078"},{"filePath":"1498","messages":"1499","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1500","usedDeprecatedRules":"1078"},{"filePath":"1501","messages":"1502","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1503","usedDeprecatedRules":"1078"},{"filePath":"1504","messages":"1505","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1506","usedDeprecatedRules":"1078"},{"filePath":"1507","messages":"1508","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1509"},{"filePath":"1510","messages":"1511","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1512","usedDeprecatedRules":"1078"},{"filePath":"1513","messages":"1514","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1515"},"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\index.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\reportWebVitals.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\App.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\redux\\store.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\utils\\dropConsole.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\navigation\\RouterConfig.js",["1516","1517","1518","1519","1520"],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\navigation\\Auth\\ProvideAuth.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\redux\\reducers\\index.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\navigation\\Auth\\PrivateRoute.js",["1521","1522","1523","1524"],"// A wrapper for <Route> that redirects to the login\r\n\r\nimport { ROUTE_LOGIN, ROUTE_REGISTER } from \"navigation/CONSTANTS\";\r\nimport React, { createContext, useContext, useState } from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { useAuth } from \"./ProvideAuth\";\r\n\r\n// screen if you're not yet authenticated.\r\nfunction PrivateRoute({ children, ...rest }) {\r\n  let auth = useAuth();\r\n  // console.log(\"AAAAAAAAAAAA\", auth.userData.token);\r\n  // console.log(\"children\", children);\r\n  // console.log(\"rest\", rest);\r\n\r\n  if (auth.userData.token !== undefined && auth.userData.token !== \"\") {\r\n    return <Route {...rest} />;\r\n  } else {\r\n    return (\r\n      <Redirect\r\n      to={{\r\n          pathname: ROUTE_LOGIN,\r\n          state: { from: rest.location },\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  // return (\r\n  //   <Route\r\n  //     {...rest}\r\n  //     render={({ location }) =>\r\n  //       auth.userData.token !== undefined && auth.userData.token !== \"\" ? (\r\n  //         rest.component\r\n  //       ) : (\r\n  //         <Redirect\r\n  //           to={{\r\n  //             pathname: ROUTE_LOGIN,\r\n  //             state: { from: location },\r\n  //           }}\r\n  //         />\r\n  //       )\r\n  //     }\r\n  //   />\r\n  // );\r\n}\r\nexport default PrivateRoute;\r\n\r\n/**\r\n * Below code can be organized in separate files as desired.\r\n * I am keeping everything related to the authentication and PrivateRoute in this one file.\r\n */\r\n/*\r\nconst authContext = createContext();\r\nexport function ProvideAuth({ children }) {\r\n  const auth = useProvideAuth();\r\n  return (\r\n    <authContext.Provider value={auth}>\r\n      {children}\r\n    </authContext.Provider>\r\n  );\r\n}\r\n\r\n// Most important hook to be used throughout\r\nexport function useAuth() {\r\n  return useContext(authContext);\r\n}\r\n*/\r\n\r\n/*\r\nfunction useProvideAuth() {\r\n  const [user, setUser] = useState(null);\r\n\r\n  // signin method: It can either return a promise or execute a callback function.\r\n  // You can prefer to keep this in userServices.js\r\n  const signin = () => {\r\n    console.log(\"SS:: PrivateRoute > useProviderAuth > signin() called...\");\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        // do db call or API endpoint axios call here and return the promise.\r\n        let apiResponse = {\r\n          \"id\": \"30\",\r\n          \"firstName\": \"Joel\",\r\n          \"lastName\": \"Joseph\",\r\n          \"gender\": \"Male\",\r\n          \"age\": 33,\r\n          \"isActiveEmployee\": true,\r\n          \"location\": \"London\"\r\n        };\r\n        setUser(apiResponse);\r\n        setTimeout(()=>resolve(apiResponse), 3000);\r\n        // resolve(apiResponse);\r\n      } catch (error) {\r\n        console.error(\"signin error!==\", error);\r\n        reject(\"signin error!\");\r\n      }\r\n    });\r\n  };\r\n  const signout = () => {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        // do API endpoint axios call here and return the promise.\r\n        setUser(null);\r\n        resolve(true);\r\n      } catch (error) {\r\n        console.error(\"signout error!==\", error);\r\n        reject(\"signout error!\");\r\n      }\r\n    });\r\n  };\r\n\r\n  // Firebase auth example code (ref: https://usehooks.com/useAuth/)\r\n  // const signin = (email, password) => {\r\n  //   return firebase\r\n  //     .auth()\r\n  //     .signInWithEmailAndPassword(email, password)\r\n  //     .then(response => {\r\n  //       setUser(response.user);\r\n  //       return response.user;\r\n  //     });\r\n  // };\r\n  // const signout = () => {\r\n  //   return firebase\r\n  //     .auth()\r\n  //     .signOut()\r\n  //     .then(() => {\r\n  //       setUser(false);\r\n  //     });\r\n  // };\r\n  \r\n  return {\r\n    user,\r\n    signin,\r\n    signout\r\n  };\r\n}\r\n*/\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\navigation\\Auth\\useProvideAuth.js",["1525","1526","1527"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport { apiActivateUser, apiLogin, apiRegister } from \"services/userServices\";\r\n\r\nexport function useProvideAuth() {\r\n  const userData = useSelector((x) => x.userDataStore);\r\n  const dispatch = useDispatch();\r\n  // signin method: It can either return a promise or execute a callback function.\r\n  // You can prefer to keep this in userServices.js\r\n  const signin = (userDetail) => {\r\n    return new Promise((resolve, reject) => {\r\n      apiLogin(userDetail)\r\n        .then((res) => {\r\n          // console.log(\"singin\", res);\r\n          resolve(res);\r\n        })\r\n        .catch((err) => {\r\n          reject(err);\r\n        });\r\n    });\r\n  };\r\n  const signup = (userDetail) => {\r\n    // console.log(userDetail);\r\n    return new Promise((resolve, reject) => {\r\n      apiRegister(userDetail)\r\n        .then((res) => {\r\n          // console.log(\"singup\", res);\r\n          resolve(res);\r\n        })\r\n        .catch((err) => {\r\n          reject(err);\r\n        });\r\n    });\r\n  };\r\n  const activate = (id, activationCode) => {\r\n    // console.log('id', id)\r\n    // console.log('activationCode', activationCode)\r\n    return new Promise((resolve, reject) => {\r\n      apiActivateUser(id, activationCode)\r\n        .then((res) => {\r\n          // console.log(\"singin\", res);\r\n          resolve(res);\r\n        })\r\n        .catch((err) => {\r\n          reject(err);\r\n        });\r\n    });\r\n  };\r\n  const signout = () => {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        // do API endpoint axios call here and return the promise.\r\n        // setUser(null);\r\n        dispatch(updateUser({ token: undefined }));\r\n        resolve(true);\r\n      } catch (error) {\r\n        console.error(\"signout error!==\", error);\r\n        reject(\"signout error!\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return {\r\n    userData,\r\n    signin,\r\n    signup,\r\n    signout,\r\n    activate,\r\n  };\r\n}\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\navigation\\NotFound.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\navigation\\CONSTANTS.js",["1528","1529","1530","1531","1532"],"import Icon, { SettingOutlined, ShoppingCartOutlined, UserOutlined, EnvironmentOutlined } from '@ant-design/icons';\r\nimport { ReactComponent as dashboardIcon } from '../assets/icons/ic_dashboard.svg';\r\nimport { ReactComponent as storeIcon } from '../assets/icons/ic_store.svg';\r\nimport { ReactComponent as analyticsIcon } from '../assets/icons/ic_analytics.svg';\r\nimport { ReactComponent as promotionIcon } from '../assets/icons/ic_promotion.svg';\r\nimport { ReactComponent as bestdealIcon } from '../assets/icons/ic_bestdeal.svg';\r\nimport { ReactComponent as productIcon } from '../assets/icons/ic_product.svg';\r\nimport { ReactComponent as postIcon } from '../assets/icons/ic_post.svg';\r\nimport { ReactComponent as followerIcon } from '../assets/icons/ic_follower.svg';\r\nimport { ReactComponent as subscriptionIcon } from '../assets/icons/ic_subscription.svg';\r\n\r\nexport const ROOT = \"/\";\r\nexport const ROUTE_DASHBOARD = \"/dashboard\";\r\nexport const ROUTE_INVENTORY = \"/inventory\";\r\nexport const ROUTE_INVENTORY_CATEGORY = \"/inventory/category\";\r\nexport const ROUTE_INVENTORY_NAME = \"/inventory/name\";\r\nexport const ROUTE_INVENTORY_LOCATION = \"/inventory/location\";\r\nexport const ROUTE_INVENTORY_FILED = \"/inventory/filed\";\r\n\r\nexport const ROUTE_RECIPE_ADD = \"/recipe/add\";\r\nexport const ROUTE_RECIPE_LIST = \"/recipe/list\";\r\nexport const ROUTE_RECIPE_EDIT = \"/recipe/edit\";\r\n\r\n\r\nexport const ROUTE_STORE = \"/store\";\r\nexport const ROUTE_ANALYTICS = \"/analytics\";\r\nexport const ROUTE_PROMOTION = \"/promotion\";\r\nexport const ROUTE_BESTDEAL = \"/bestdeal\";\r\nexport const ROUTE_PRODUCT = \"/product\";\r\nexport const ROUTE_POST = \"/post\";\r\nexport const ROUTE_FOLLOWER = \"/follower\";\r\nexport const ROUTE_SUBSCRIPTION = \"/subscription\";\r\nexport const ROUTE_USER_PROFILE = \"/user-profile\";\r\nexport const ROUTE_VENDOR_PROFILE = \"/vendor-profile\";\r\n\r\nexport const PAGE1 = \"/page1\";\r\nexport const AUTH_PAGE1 = \"/authorized1\";\r\n\r\nexport const ROUTE_HOME = \"/home\";\r\nexport const ROUTE_CATEGORIES = \"/categories\";\r\nexport const ROUTE_SHOPPING_LIST = \"/shopping-list\";\r\nexport const ROUTE_PROFILE = \"/profile\";\r\n\r\nexport const ROUTE_STORE_REVIEW = \"/store-review\";\r\n\r\nexport const ROUTE_ABOUT_US = \"/about-us\";\r\nexport const ROUTE_CONTACT_US = \"/contact-us\";\r\nexport const ROUTE_LOGIN = \"/login\";\r\nexport const ROUTE_REGISTER = \"/register\";\r\nexport const ROUTE_BECOME_VENDOR = \"/register-vendor\";\r\nexport const ROUTE_PRIVACY_POLICY = \"/privacy-policy\";\r\nexport const ROUTE_TERMS_OF_SERVICE = \"/terms-of-service\";\r\nexport const ROUTE_FORGOT_PASSWORD = \"/forgot-password\";\r\n\r\n\r\nexport const MENU_ITEMS = [\r\n    { route: ROUTE_DASHBOARD, icon: <Icon component={dashboardIcon} className=\"menu-item-icon\" />, title: \"Overview\", type:\"sidebar\" },\r\n    { route: ROUTE_INVENTORY, icon: <Icon component={storeIcon} className=\"menu-item-icon\" />, title: \"Total Inventory\", type:\"sidebar\"},\r\n    { route: ROUTE_INVENTORY_NAME, icon: <Icon component={analyticsIcon} className=\"menu-item-icon\" />, title: \"Single Inventory\", type:\"sidebar\", \r\n        // submenu:[\r\n        //     { route: ROUTE_INVENTORY_NAME, icon: <Icon component={postIcon} className=\"menu-item-icon\" />, title: \"By Name\", type:\"sidebar\"},        \r\n        //     { route: ROUTE_INVENTORY_CATEGORY, icon: <Icon component={productIcon} className=\"menu-item-icon\" />, title: \"By Category\", type:\"sidebar\"},\r\n        //     { route: ROUTE_INVENTORY_LOCATION, icon: <Icon component={promotionIcon} className=\"menu-item-icon\" />, title: \"By Location\", type:\"sidebar\"},        \r\n        // ]\r\n    },\r\n    { route: ROUTE_RECIPE_ADD, icon: <Icon component={postIcon} className=\"menu-item-icon\" />, title: \"Create Recipe\", type:\"sidebar\"},\r\n    { route: ROUTE_RECIPE_LIST, icon: <Icon component={promotionIcon} className=\"menu-item-icon\" />, title: \"Recipe List\", type:\"sidebar\"},\r\n    { route: ROUTE_HOME, icon: SettingOutlined, title: \"Setting\", type:\"option\" },\r\n    { route: ROUTE_USER_PROFILE, icon: UserOutlined, title: \"User Profile\", type:\"option\" },\r\n    { route: ROUTE_VENDOR_PROFILE, icon: ShoppingCartOutlined, title: \"Vendor Profile\", type:\"option\" },\r\n]\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\redux\\actions\\appActions.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\redux\\reducers\\feedReducer.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\redux\\reducers\\userReducer.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\DashboardPage\\Dashboard.js",["1533","1534","1535"],"import React from 'react';\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { message } from \"antd\";\r\nimport { apiGetDashboardDetail } from 'services/dashboardService';\r\nimport TopWidget from './TopWidget/TopWidget';\r\nimport MiddleWidget from './MiddleWidget/MiddleWidget';\r\nimport BottomWidget from './BottomWidget/BottomWidget';\r\n\r\nconst Dashboard = (props) => {\r\n    const dispatch = useDispatch();\r\n    const userDataStore = useSelector(x => x.userDataStore);\r\n    const [isBusy, setIsBusy] = useState(false);\r\n    const [dashboardDetail, setDashboardDetail] = useState();\r\n    \r\n    \r\n    useEffect(() => {\r\n        if (userDataStore.token === undefined || userDataStore.token === \"\") {\r\n            return;\r\n        }\r\n        getData();\r\n    }, []);\r\n\r\n    const getData = () => {\r\n        setIsBusy(true);\r\n        apiGetDashboardDetail()\r\n            .then((data) => {\r\n                setIsBusy(false);\r\n                setDashboardDetail(data);\r\n                \r\n            })\r\n            .catch((err) => {\r\n                setIsBusy(false);\r\n                message.error(\"Server failed.\");\r\n            });\r\n    };\r\n    \r\n    return (\r\n        <div>\r\n            <TopWidget dashboardDetail={dashboardDetail} \r\n                onClick={(v)=>{\r\n                    console.log(v)\r\n                }} />\r\n            <MiddleWidget dashboardDetail={dashboardDetail} />\r\n            <BottomWidget dashboardDetail={dashboardDetail} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\redux\\reducers\\appReducer.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\AboutusPage\\AboutusPage.js",["1536","1537","1538"],"// @flow strict\r\n\r\nimport { ROUTE_REGISTER } from \"navigation/CONSTANTS\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport AboutusDescriptionWidget from \"./AboutusDescriptionWidget/AboutusDescriptionWidget\";\r\nimport AboutusIntroImage from \"./AboutusIntroImage/AboutusIntroImage\";\r\nimport \"./AboutusPage.css\";\r\nimport ReactPlayer from \"react-player\";\r\nimport DownloadAppWidget from \"./DownloadAppWidget/DownloadAppWidget\";\r\n\r\nfunction AboutusPage(props) {\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"about-us-page\">\r\n      <div>\r\n        <AboutusIntroImage />\r\n      </div>\r\n      <div>\r\n        <AboutusDescriptionWidget\r\n          isLeft={true}\r\n          media={<img src=\"/assets/images/about-us/personalized-ads.jpg\" />}\r\n          title={\r\n            \"Personalized ads help you find promotions and promotional activities\"\r\n          }\r\n          \r\n          description={\r\n            \"Find your favorite stores, brands and activities on offer through our personalized ads - never miss out on an offer again.\"\r\n          }\r\n          button_description={\"Create an account\"}\r\n          button_click={() => {\r\n            history.push(ROUTE_REGISTER);\r\n          }}\r\n        />\r\n      </div>\r\n      <div>\r\n        <AboutusDescriptionWidget\r\n          isLeft={false}\r\n          media={<img src=\"/assets/images/about-us/work-with-vendor.jpg\" />}\r\n          title={\"We work with vendors around the country to help you save\"}\r\n          description={\r\n            \"We work closely with vendors around the country to bring you the latest and hottest promotional deals that are closest to you.\"\r\n          }\r\n          button_description={\"Create an account\"}\r\n          button_click={() => {\r\n            history.push(ROUTE_REGISTER);\r\n          }}\r\n        />\r\n      </div>\r\n      <div>\r\n        <AboutusDescriptionWidget\r\n          isLeft={true}\r\n          media={<img src=\"/assets/images/about-us/favorite-store.jpg\" />}\r\n          title={\"Follow your favorite stores and brands today\"}\r\n          description={\r\n            \"Receive notifications and get invited to private promotions from stores that you follow.\"\r\n          }\r\n          title2={\"Products that you like\"}\r\n          description2={\r\n            \"We will let you know when your liked products go on promotion again.\"\r\n          }\r\n          button_description={\"Create an account\"}\r\n          button_click={() => {\r\n            history.push(ROUTE_REGISTER);\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"about-us-page-video-title\">\r\n        Get started in 3 simple steps to save more\r\n      </div>\r\n      <div>\r\n        <AboutusDescriptionWidget\r\n          isLeft={false}\r\n          media={\r\n            <ReactPlayer url=\"https://www.youtube.com/watch?v=ysz5S6PUM-U\" />\r\n          }\r\n          title={\"Create a free account\"}\r\n          description={\r\n            \"It is easy to get started with SeeMeSave, create a free account with your email or phone number now.\"\r\n          }\r\n          button_description={\"Create an account\"}\r\n          button_click={() => {\r\n            history.push(ROUTE_REGISTER);\r\n          }}\r\n        />\r\n      </div>\r\n      <div>\r\n        <AboutusDescriptionWidget\r\n          isLeft={true}\r\n          media={\r\n            <ReactPlayer url=\"https://www.youtube.com/watch?v=ysz5S6PUM-U\" />\r\n          }\r\n          title={\"Search for promo deals\"}\r\n          description={\r\n            \"Search for stores, products and brands from the search bar, or navigate the map to find stores offering promotions around you.\"\r\n          }\r\n          button_description={\"Create an account\"}\r\n          button_click={() => {\r\n            history.push(ROUTE_REGISTER);\r\n          }}\r\n        />\r\n      </div>\r\n      <div>\r\n        <AboutusDescriptionWidget\r\n          isLeft={false}\r\n          media={\r\n            <ReactPlayer\r\n              style={{ width: \"100%\" }}\r\n              url=\"https://www.youtube.com/watch?v=ysz5S6PUM-U\"\r\n            />\r\n          }\r\n          title={\"Our promotion page and shopping list\"}\r\n          description={\"Add products on promotion to your shopping list.\"}\r\n          button_description={\"Create an account\"}\r\n          button_click={() => {\r\n            history.push(ROUTE_REGISTER);\r\n          }}\r\n        />\r\n      </div>\r\n      <div>\r\n        <DownloadAppWidget />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AboutusPage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\RegisterPage\\RegisterPage.js",["1539","1540","1541","1542"],"// @flow strict\r\n\r\nimport { useAuth } from \"navigation/Auth/ProvideAuth\";\r\nimport React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\n\r\n\r\nfunction RegisterPage(props) {\r\n  const location = useLocation();\r\n  const auth = useAuth();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(updateUser({ token: undefined }));\r\n  }, []);\r\n\r\n  return <div>REGISTER PAGE</div>;\r\n}\r\n\r\nexport default RegisterPage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\LoginPage\\LoginPage.js",["1543","1544","1545","1546"],"// @flow strict\r\n\r\nimport { message } from \"antd\";\r\nimport CodeVerificationWidget from \"components/CodeVerificationWidget/CodeVerificationWidget\";\r\nimport LocationInputTextWidget from \"components/LocationInputTextWidget/LocationInputTextWidget\";\r\n\r\nimport { REGISTER_WITH } from \"config/CONSTANTS\";\r\nimport { useAuth } from \"navigation/Auth/ProvideAuth\";\r\nimport {\r\n  ROUTE_BECOME_VENDOR,\r\n  ROUTE_DASHBOARD,\r\n  ROUTE_REGISTER,\r\n} from \"navigation/CONSTANTS\";\r\nimport React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation, withRouter } from \"react-router\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport InputPage from \"./InputPage\";\r\n\r\nconst LOGIN_PAGES = {\r\n  InputPage: \"InputPage\",\r\n  ActivationCodePage: \"ActivationCodePage\",\r\n  InputLocationPage: \"InputLocationPage\",\r\n};\r\nconst pageList = [\r\n  LOGIN_PAGES.InputPage,\r\n  LOGIN_PAGES.ActivationCodePage,\r\n  LOGIN_PAGES.InputLocationPage,\r\n];\r\nfunction LoginPage(props) {\r\n  const appDataStore = useSelector(x => x.appDataStore);\r\n  const location = useLocation();\r\n  const auth = useAuth();\r\n  const dispatch = useDispatch();\r\n\r\n  const [currentPage, setCurrentpage] = useState(0);\r\n  const [userDetail, setUserDetail] = useState({\r\n    register_with: REGISTER_WITH.email,\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(updateUser({ token: undefined }));\r\n  }, []);\r\n\r\n  const onClickLogin = () => {\r\n\r\n    auth\r\n      .signin(userDetail)\r\n      .then((res) => {\r\n        const { token } = res;\r\n        onSuccessLogin(res);\r\n    \r\n      })\r\n      .catch((err) => {\r\n        message.error(err);\r\n      });\r\n  };\r\n  const onClickRegister = () => {\r\n    props.history.push(ROUTE_REGISTER);\r\n  };\r\n\r\n  const onClickRegisterVendor = () => {\r\n    props.history.push(ROUTE_BECOME_VENDOR);\r\n  };\r\n  const goBackPage = () => {\r\n    setCurrentpage(currentPage - 1);\r\n  };\r\n  const goNextPage = () => {\r\n    setCurrentpage(currentPage + 1);\r\n  };\r\n  const onSuccessLogin = (info) => {\r\n    if (info.user === undefined || info.token === undefined) {\r\n      return;\r\n    }\r\n    dispatch(updateUser(info));\r\n\r\n    // if (\r\n    //   info.user.latitude === null ||\r\n    //   info.user.latitude === undefined ||\r\n    //   parseFloat(info.user.latitude) == 0\r\n    // ) {\r\n    //   setUserDetail(info);\r\n    //   setTimeout(() => {\r\n    //     setCurrentpage(2);\r\n    //   }, 100);\r\n    // } else {\r\n\r\n    const { from } = location.state || { from: { pathname: appDataStore.currentRoute === undefined ? ROUTE_DASHBOARD : appDataStore.currentRoute } };\r\n    // const { from } = location.state || { from: { pathname: ROUTE_DASHBOARD } };\r\n    // console.log(\"from\", from);\r\n    setTimeout(() => {\r\n      props.history.replace(from.pathname == \"/login\"?{pathname:ROUTE_DASHBOARD}:from);\r\n    }, 500);\r\n    // }\r\n  };\r\n  return (\r\n    <div style={{ color: 'var(--blackColor)' }}>\r\n      <div\r\n        style={{\r\n          display:\r\n            pageList[currentPage] === LOGIN_PAGES.InputPage ? \"block\" : \"none\",\r\n        }}\r\n      >\r\n        <InputPage\r\n          onClickLogin={onClickLogin}\r\n          onClickRegister={onClickRegister}\r\n          onClickRegisterVendor={onClickRegisterVendor}\r\n          userDetail={userDetail}\r\n          setUserDetail={setUserDetail}\r\n        />\r\n      </div>\r\n      <div>\r\n        {pageList[currentPage] === LOGIN_PAGES.ActivationCodePage && (\r\n          <CodeVerificationWidget\r\n            goBackPage={goBackPage}\r\n            user_id={userDetail.id}\r\n            onSuccessLogin={onSuccessLogin}\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        {pageList[currentPage] === LOGIN_PAGES.InputLocationPage && (\r\n          <LocationInputTextWidget\r\n            onSuccessLogin={onSuccessLogin}\r\n            userDetail={userDetail}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\ContactusPage\\ContactusPage.js",["1547","1548"],"// @flow strict\r\n\r\nimport React from \"react\";\r\nimport { Divider, Input } from \"antd\";\r\nimport \"./ContactusPage.css\";\r\nimport { MailFilled, MailOutlined } from \"@ant-design/icons\";\r\n\r\nconst { TextArea } = Input;\r\nfunction ContactusPage(props) {\r\n  return (\r\n    <div style={{ textAlign: \"center\", width: \"100%\" }}>\r\n      <div className=\"contact-us-page\">\r\n        <div className=\"contact-us-page-title\">Send a message</div>\r\n        <div>\r\n          <Input\r\n            placeholder=\"Full name\"\r\n            className=\"contactus-input contactus-page-fullname\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Input\r\n            placeholder=\"Email address or phone number\"\r\n            className=\"contactus-input contactus-page-email\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Input\r\n            placeholder=\"Subject\"\r\n            className=\"contactus-input contactus-page-subject\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextArea\r\n            placeholder=\"Message\"\r\n            className=\"contactus-input contactus-page-message\"\r\n            rows={7}\r\n          />\r\n        </div>\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <div className=\"contact-us-button custom-button\" onClick={() => {}}>\r\n            Send message\r\n          </div>\r\n        </div>\r\n\r\n        <div className={\"get-in-touch-container\"}>\r\n          <div className={\"get-in-touch-title\"}>Get in touch</div>\r\n          <div className={\"get-in-touch-description\"}>\r\n            We would like to hear from you\r\n          </div>\r\n          <Divider />\r\n          <div className={\"get-in-touch-sub-title\"}>Contact information</div>\r\n          <a\r\n            className={\"get-in-touch-description custom-button\"}\r\n            href={`mailto://info@seemesave.com}`}\r\n          >\r\n            <i className=\"fas fa-envelope contactus-icon\" />\r\n            Email: info@seemesave.com\r\n          </a>\r\n          <Divider />\r\n          <div className={\"get-in-touch-sub-title\"}>Business Hours</div>\r\n          <div className={\"get-in-touch-description\"}>\r\n            <i className=\"far fa-clock contactus-icon\" />\r\n            Monday - Friday - 8am to 5pm (GMT +2)\r\n          </div>\r\n          <div className={\"get-in-touch-description\"}>\r\n            <i\r\n              className=\"far fa-clock contactus-icon\"\r\n              style={{ color: \"var(--blackColor)\" }}\r\n            />\r\n            Saturday - Closed\r\n          </div>\r\n          <div className={\"get-in-touch-description\"}>\r\n            <i\r\n              className=\"far fa-clock contactus-icon\"\r\n              style={{ color: \"var(--blackColor)\" }}\r\n            />\r\n            Sunday - Closed\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContactusPage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\InventoryPage\\InventoryPage.js",["1549","1550","1551"],"import React, { useState, useEffect } from 'react'\r\nimport CommonDivWidget from 'components/CommonDivWidget/CommonDivWidget'\r\nimport \"./InventoryPage.css\"\r\nimport CommonButton from 'components/ButtonWidgets/CommonButton/CommonButton'\r\nimport ProductSearch from 'components/ProductSearch/ProductSearch'\r\nimport { apiGetInventoryList, apiCreateInventory, apiUpdateInventory , apiDeleteInventory} from \"services/inventoryService\"\r\nimport { message, Row, Col, Spin, Switch  } from 'antd'\r\nimport InventoryItemWidget from './InventoryItemWidget/InventoryItemWidget'\r\nimport { showAddInventoryDialog } from './AddInventoryDialog/showAddInventoryDialog'\r\nimport InventoryListTableWidget from './InventoryListTableWidget/InventoryListTableWidget'\r\n\r\nfunction InventoryPage() {\r\n\r\n    const [inventoryList, setInventoryList] = useState([])\r\n    const [isBusy, setIsBusy] = useState(false);\r\n    const [viewMode, setViewMode] = useState(true);\r\n\r\n    useEffect(() => {\r\n        apiGetInventoryList()\r\n            .then((data)=>{\r\n                setInventoryList(data)\r\n            })\r\n            .catch((err)=>{\r\n                message.error(\"Server failed. apiGetInventoryList \" + err)\r\n            })\r\n\r\n    }, [])\r\n\r\n    const onClickDelete = (pInfo) => {\r\n        setIsBusy(true);\r\n        apiDeleteInventory(pInfo.id)\r\n            .then((data) => {\r\n                setIsBusy(false);\r\n                setInventoryList(data);\r\n            })\r\n            .catch((err) => {\r\n                setIsBusy(false);\r\n                message.error(\"Server error. \" + err);\r\n            });\r\n      }\r\n    const onClickEdit = async(pInfo) => {\r\n      \r\n        let info = pInfo\r\n        var res = await showAddInventoryDialog({\r\n          title: \"Edit Inventory\",\r\n          inventoryInfo: info,\r\n        });\r\n        if (res === null) return;\r\n  \r\n        setIsBusy(true);\r\n          apiUpdateInventory(res)\r\n            .then((data) => {\r\n              setIsBusy(false);\r\n              if (data === null) {\r\n                message.error(\"There's something wrong while updating a inventory\");\r\n              }\r\n              let updateData = [...inventoryList];\r\n              var storeIndex = updateData.findIndex(x => x.id == data[0].id);\r\n              updateData.splice(storeIndex, 1, data[0]);\r\n              setInventoryList(updateData)\r\n\r\n            })\r\n          .catch((err) => {\r\n              setIsBusy(false);\r\n              message.error(\"Server failed. updateNewInventory \" + err);\r\n          });\r\n    }\r\n    const  addNewInventory = async() => {\r\n        var res = await showAddInventoryDialog({\r\n            title: \"Create New Inventory\"\r\n          });\r\n          if (res === null) return;\r\n          setIsBusy(true);\r\n          apiCreateInventory(res)\r\n            .then((data) => {\r\n              setIsBusy(false);\r\n              if (data === null) {\r\n                message.error(\"There's something wrong while creating a inventory\");\r\n              }\r\n              let updateData = [...inventoryList];\r\n              updateData = [...data, ...updateData];\r\n              setInventoryList(updateData)\r\n\r\n            })\r\n          .catch((err) => {\r\n              setIsBusy(false);\r\n              message.error(\"Server failed. addNewInventory\" + err);\r\n          });\r\n\r\n    }\r\n\r\n    const inventoryListUI = inventoryList == undefined  || inventoryList.length == 0 ? <div>You don't have any inventory list</div>: inventoryList.map((info, index) => {\r\n          return (\r\n            <Col xs={24} sm={8} md={8} lg={8} xl={4} key={index}>\r\n              <InventoryItemWidget\r\n               inventoryInfo ={info}\r\n               onClickEdit={onClickEdit}\r\n               onClickDelete={onClickDelete}\r\n\r\n              />\r\n            </Col>\r\n          );\r\n    });\r\n    const onViewMode = (checked) => {\r\n      setViewMode(checked)\r\n    }\r\n    return (\r\n        <CommonDivWidget>            \r\n            <Spin spinning={isBusy}>\r\n            <div className=\"inventory-header\">\r\n              Inventory List\r\n                <Switch \r\n                  checkedChildren=\"Grid\" \r\n                  unCheckedChildren=\"List\" \r\n                  defaultChecked \r\n                  onChange={onViewMode}\r\n                  style = {{marginLeft : \"10px\"}}\r\n                />\r\n                <div className=\"inventory-extra\">\r\n                <CommonButton onClick={()=>{\r\n                    addNewInventory()\r\n                }}>New Inventory</CommonButton>\r\n                </div>\r\n            </div>\r\n            <div>\r\n              \r\n                <ProductSearch ownProducts={inventoryList} onSelectProduct={onClickEdit}></ProductSearch>\r\n                {\r\n                  viewMode ? \r\n                  <Row align={'middle'} gutter={16} style={{marginTop:\"10px\"}} className=\"product-page-favourite-products\">\r\n                    {inventoryListUI}\r\n                  </Row>\r\n                :\r\n                  <div className = \"table-widget\">\r\n                    <InventoryListTableWidget\r\n                      inventoryList={inventoryList} \r\n                      onUpdateAction = {onClickEdit}\r\n                      onDeleteAction = {onClickDelete}\r\n                      />\r\n                  </div>\r\n                }\r\n               \r\n                \r\n            </div>\r\n            </Spin>\r\n        </CommonDivWidget>\r\n    )\r\n}\r\n\r\nexport default InventoryPage\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\ForgotPasswordPage\\ForgotPasswordPage.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\PromotionPage\\PromotionPage.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\FollowerPage\\FollowerPage.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\StorePage\\StorePage.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\ProductPage\\ProductPage.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\InventoryCategoryPage\\InventoryCategoryPage.js",["1552","1553","1554","1555"],"import { ConsoleSqlOutlined, ToTopOutlined } from '@ant-design/icons';\r\nimport { Spin, message } from 'antd';\r\nimport CommonButton from 'components/ButtonWidgets/CommonButton/CommonButton';\r\nimport CommonDivWidget from 'components/CommonDivWidget/CommonDivWidget'\r\nimport { TitleSearch } from 'components/SearchWidget/TitleSearch';\r\nimport { showAddNewCategoryDialog } from 'pages/InventoryPage/AddInventoryDialog/AddNewCategoryDialog/showAddNewCategoryDialog';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { urlCreateInventoryCategory } from 'services/CONSTANTS';\r\nimport { apiDeleteIventoryCategory, apiGetInventoryCategory } from 'services/inventoryCategoryService';\r\nimport CategoryListTableWidget from './CategoryListTableWidget/CategoryListTableWidget';\r\nimport \"./InventoryCategoryPage.css\"\r\n\r\nfunction InventoryCategoryPage() {\r\n    const [isBusy, setIsBusy] = useState(false);\r\n    const [categoryList, setCategoryList] = useState([]);\r\n    const [searchList, setSearchList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getData();\r\n    }, []);\r\n\r\n    const getData = () => {\r\n        setIsBusy(true);\r\n        apiGetInventoryCategory()\r\n            .then((data) => {\r\n                setIsBusy(false);\r\n                setCategoryList(data);\r\n                setSearchList(data)\r\n            })\r\n            .catch((err) => {\r\n                setIsBusy(false);\r\n                message.error(\"Server failed. \" + err);\r\n            });\r\n    };\r\n\r\n    const createNewCategory = async () => {\r\n        var res = await showAddNewCategoryDialog({\r\n          title : \"New Category\",\r\n          isEdit : false,\r\n          oldList: categoryList,\r\n        });\r\n        if (res == null) return;\r\n        \r\n        var tmpData = categoryList;\r\n        let updateData = [...tmpData];\r\n    \r\n        updateData.splice(tmpData.length, 0, res['addedItem']);\r\n    \r\n        tmpData = [...updateData];\r\n        setCategoryList(tmpData);\r\n        setSearchList(tmpData)\r\n        message.success(`new Category has been created.`);\r\n      };\r\n\r\n    const onUpdateAction = async (info) => {\r\n        var res = await showAddNewCategoryDialog({\r\n            title : \"Edit Category\",\r\n            isEdit : true,\r\n            oldList: categoryList,\r\n            selInfo : info\r\n          });\r\n          if (res == null) return;\r\n          \r\n          var tmpData = categoryList;\r\n          let updateData = [...tmpData];\r\n      \r\n          var storeIndex = updateData.findIndex(x => x.id == res['addedItem'].id);\r\n          updateData.splice(storeIndex, 1, res['addedItem']);\r\n\r\n          tmpData = [...updateData];\r\n          setCategoryList(tmpData);\r\n          setSearchList(tmpData)\r\n          message.success(`Category has been updated.`);\r\n    }\r\n    const onDeleteAction = (pInfo) => {\r\n        setIsBusy(true);\r\n        apiDeleteIventoryCategory(pInfo.id)\r\n            .then((data) => {\r\n                setIsBusy(false);\r\n                setCategoryList(data);\r\n                setSearchList(data);\r\n\r\n            })\r\n            .catch((err) => {\r\n                setIsBusy(false);\r\n                message.error(\"There's something wrong while updating Category. \" + err);\r\n            });\r\n    }\r\n\r\n    const handleSearch = (searchText)  => {\r\n        const tmpList = categoryList.filter((info)=>info.name.toLowerCase().includes(searchText))\r\n        setSearchList([...tmpList])\r\n    };\r\n    const handleChange = (event)  => {\r\n        if (event.target.value === \"\") {\r\n            setSearchList(categoryList)\r\n        }\r\n        else {\r\n            handleSearch(event.target.value)\r\n        }\r\n    };\r\n      \r\n    return (\r\n        <CommonDivWidget>\r\n            <Spin spinning={isBusy}>\r\n            \r\n            <div className=\"category-header\">Category List\r\n                <div className=\"category-extra\">\r\n                <CommonButton onClick={()=>{\r\n                    createNewCategory();\r\n                }}>\r\n                    Add new Category\r\n                </CommonButton>\r\n                </div>\r\n            </div>\r\n            <div className=\"category-search\">\r\n            <TitleSearch \r\n                    onSearch={handleSearch} \r\n                    onChange={handleChange} \r\n                    onPressEnter={handleSearch} \r\n                />\r\n            </div>\r\n          \r\n            <div>\r\n                <CategoryListTableWidget \r\n                categoryList={searchList} \r\n                onUpdateAction = {onUpdateAction}\r\n                onDeleteAction = {onDeleteAction}\r\n                />\r\n            </div>\r\n            </Spin>\r\n        </CommonDivWidget>\r\n    );\r\n};\r\n\r\n\r\nexport default InventoryCategoryPage\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\RecipeListPage\\RecipeListPage.js",["1556","1557"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from \"react-redux\";\r\nimport \"./RecipeListPage.css\"\r\nimport CommonDivWidget from 'components/CommonDivWidget/CommonDivWidget'\r\nimport { message, Spin } from 'antd';\r\nimport CommonButton from 'components/ButtonWidgets/CommonButton/CommonButton';\r\nimport { TitleSearch } from 'components/SearchWidget/TitleSearch';\r\nimport { apiDeleteRecipe, apiGetRecipeList } from 'services/recipeService';\r\nimport RecipeListTableWidget from './TableWidget/RecipeListTableWidget';\r\nimport { apiGetInventoryBasicData } from 'services/inventoryService';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { ROUTE_RECIPE_ADD, ROUTE_RECIPE_EDIT } from 'navigation/CONSTANTS';\r\nimport { UpdateCurrentRoot } from 'redux/actions/appActions';\r\n\r\nfunction RecipeListPage() {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [isBusy, setIsBusy] = useState(false);\r\n    const [dataList, setDataList] = useState([]);\r\n    const [searchList, setSearchList] = useState([]);\r\n    \r\n    const [inventoryBasicData, setInventoryBasicData] = useState({});\r\n    const [ownCommonData, setOwnCommonData] = useState({});\r\n    useEffect(() => {\r\n        apiGetInventoryBasicData()\r\n            .then((data) => {\r\n                setInventoryBasicData(data);\r\n            })\r\n            .catch((err) => {\r\n                message.error(\"Sorry! \" + err);\r\n            });\r\n    }, []);\r\n    useEffect(() => {\r\n        const { categoryList } = inventoryBasicData === undefined ? { categoryList: undefined } : inventoryBasicData;\r\n        const { unitList } = inventoryBasicData === undefined ? { unitList: undefined } : inventoryBasicData;\r\n        const { locationList } = inventoryBasicData === undefined ? { locationList: undefined } : inventoryBasicData;\r\n        const { nameList } = inventoryBasicData === undefined ? { nameList: undefined } : inventoryBasicData;\r\n\r\n        if (inventoryBasicData !== undefined && inventoryBasicData.nameList !== undefined) {\r\n            setOwnCommonData({\r\n                locationList: locationList,\r\n                unitList: unitList,\r\n                categoryList: categoryList,\r\n                nameList: nameList,\r\n            });\r\n            getData();\r\n        }\r\n\r\n\r\n    }, [inventoryBasicData]);\r\n    const getData = () => {\r\n        setIsBusy(true);\r\n        apiGetRecipeList()\r\n            .then((data) => {\r\n                setIsBusy(false);\r\n               // console.log(\"ownCommonData = \", ownCommonData)\r\n                setDataList(data);\r\n                setSearchList(data)\r\n            })\r\n            .catch((err) => {\r\n                setIsBusy(false);\r\n                message.error(\"Sorry! \" + err);\r\n            });\r\n    };\r\n    const handleSearch = (searchText) => {\r\n        const tmpList = dataList.filter((info) => info.name.toLowerCase().includes(searchText))\r\n        setSearchList([...tmpList])\r\n    };\r\n    const handleChange = (event) => {\r\n        if (event.target.value === \"\") {\r\n            setSearchList(dataList)\r\n        }\r\n        else {\r\n            handleSearch(event.target.value)\r\n        }\r\n    };\r\n    const onClickDelete = (pInfo) => {\r\n        setIsBusy(true);\r\n        apiDeleteRecipe(pInfo.id)\r\n            .then((data) => {\r\n                setIsBusy(false);\r\n                let updateData = [...dataList];\r\n                var storeIndex = updateData.findIndex(x => x.id == pInfo.id);\r\n                updateData.splice(storeIndex, 1);\r\n                setDataList(updateData);\r\n                setSearchList(updateData)\r\n\r\n            })\r\n            .catch((err) => {\r\n                setIsBusy(false);\r\n                message.error(\"Error. \" + err);\r\n            });\r\n    }\r\n    const onClickEdit = (pInfo) => {\r\n        dispatch(UpdateCurrentRoot({ currentRoute: ROUTE_RECIPE_EDIT }))\r\n        history.push(ROUTE_RECIPE_EDIT + \"/\" + pInfo.id)\r\n\r\n    }\r\n    return (\r\n        <CommonDivWidget>\r\n            <Spin spinning={isBusy}>\r\n                <div className=\"recipe-list-header\">Recipe List\r\n                    <div className=\"recipe-list-extra\">\r\n                        <CommonButton onClick={() => {\r\n                        }}>\r\n                            Print Option\r\n                        </CommonButton>\r\n                    </div>\r\n                </div>\r\n                <div className=\"recipe-list-search\">\r\n                    <TitleSearch\r\n                        onSearch={handleSearch}\r\n                        onChange={handleChange}\r\n                        onPressEnter={handleSearch}\r\n                    />\r\n                </div>\r\n\r\n                <div>\r\n                    <RecipeListTableWidget\r\n                        dataList={searchList}\r\n                        ownCommonData={ownCommonData}\r\n                        onUpdateAction={onClickEdit}\r\n                        onDeleteAction={onClickDelete}\r\n                    />\r\n                </div>\r\n            </Spin>\r\n        </CommonDivWidget>\r\n    )\r\n}\r\n\r\nexport default RecipeListPage\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\BestDealPage\\BestDealPage.js",["1558","1559"],"import React, { useState, useEffect } from 'react';\r\nimport { message, Spin } from \"antd\";\r\nimport CommonDivWidget from 'components/CommonDivWidget/CommonDivWidget';\r\nimport BestDealTableWidget from './BestDealTableWidget/BestDealTableWidget';\r\nimport BestDealTopWidget from './BestDealTopWidget/BestDealTopWidget';\r\nimport { showBestDealWidget } from './BestDealDlgWidget/showBestDealWidget';\r\nimport { apiCreateBestDeal, apiDeleteBestDeal, apiGetBestDealList, apiGetOneBestDeal, apiUpdateBestDeal } from 'services/bestdealService';\r\nimport \"./BestDealPage.css\"\r\nimport { showConfirmDlgWidget } from 'components/ConfirmDlgWidget/showConfirmDlgWidget';\r\n\r\nconst BestDealPage = (props) => {\r\n    const [isBusy, setIsBusy] = useState(false);\r\n    const [bestDealList, setBestDealList] = useState([]);\r\n\r\n    const [ pagination, setPagination] = useState({current:1, pageSize: 10})\r\n\r\n    useEffect(() => {\r\n        getData(1)\r\n    }, []);\r\n\r\n    const getData=(curpage)=>{\r\n        setIsBusy(true);\r\n        let offset = (curpage-1)*10\r\n        let pageSize = pagination.pageSize\r\n        apiGetBestDealList(offset, pageSize)\r\n            .then((data) => {\r\n                setIsBusy(false);\r\n                setBestDealList(data.bestDeals);\r\n                setPagination({...pagination, current:curpage, total : data.totalCount})\r\n\r\n            })\r\n            .catch((err) => {\r\n                setIsBusy(false);\r\n                message.error(\"Server failed. \" + err);\r\n            });\r\n    }\r\n    const onPageHandler = (paginationObj) =>{\r\n        \r\n        getData(paginationObj.current)\r\n    }\r\n    const addDealDlg = async() => {\r\n        let res = await showBestDealWidget({\r\n            title: \"Best Deals Creation\",\r\n            newFlag:1\r\n        })\r\n        if(res == null) return\r\n        setIsBusy(true)\r\n          apiCreateBestDeal(res.param)\r\n            .then((data) => {\r\n                setIsBusy(false);\r\n                setBestDealList([data, ...bestDealList]);\r\n            })\r\n            .catch((err) => {\r\n                message.error(\"There's something wrong while creating BestDeal.\" + err);\r\n            });\r\n    }\r\n    const editBestDeal = (id)=>{\r\n        setIsBusy(true);\r\n        apiGetOneBestDeal(id)\r\n          .then((data) => {\r\n              setIsBusy(false);\r\n              updateBestDealDlg(data)\r\n          })\r\n          .catch((err) => {\r\n              setIsBusy(false);\r\n              message.error(\"Server error. \" + err);\r\n          });\r\n    }\r\n    const updateBestDealDlg = async(data)=>{\r\n        var res = await showBestDealWidget({\r\n            title: \"Update BestDeal\",\r\n            initData: data, \r\n            newFlag:0\r\n        });\r\n        if (res == null) return;\r\n        let param = { id: data.id, ...res.param}\r\n        setIsBusy(true)\r\n        apiUpdateBestDeal(param)\r\n            .then((data) => {\r\n                setIsBusy(false);\r\n                let tmpList = [...bestDealList];\r\n                let index = tmpList.findIndex(x => x.id === data.id);\r\n                tmpList[index] = data;\r\n                setBestDealList(tmpList);\r\n            })\r\n            .catch((err) => {\r\n                message.error(\"There's something wrong while updating promotion.\");\r\n        });\r\n    }\r\n    const deleteBestDeal = async(id)=>{\r\n        var res = await showConfirmDlgWidget({ title: \"Delete Confirmation\", content: \"Are you sure to delete this BestDeal?\" });\r\n        if (res == false) return;\r\n        setIsBusy(true);\r\n        apiDeleteBestDeal(id)\r\n          .then((data) => {\r\n              setIsBusy(false);\r\n              setBestDealList(data)\r\n          })\r\n          .catch((err) => {\r\n              message.error(\"Server error. \" + err);\r\n          });\r\n    }\r\n    return (\r\n        <CommonDivWidget>\r\n            <Spin spinning={isBusy} tip=\"\">\r\n                <div className=\"bestdeal-page\">\r\n                    <BestDealTopWidget bestDealList={bestDealList} totalCount={pagination.total} addDeal={addDealDlg}/>\r\n                    <BestDealTableWidget setIsBusy={setIsBusy} bestDealList={bestDealList} editBestDeal={editBestDeal} deleteBestDeal={deleteBestDeal} pagination={pagination} onPageHandler={onPageHandler}/>\r\n                </div>\r\n                \r\n            </Spin>\r\n        </CommonDivWidget>\r\n    );\r\n};\r\n\r\nexport default BestDealPage;","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\layouts\\TopbarLayout\\TopbarLayout.js",["1560","1561","1562","1563","1564","1565","1566","1567"],"import React ,{ useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link, useHistory, withRouter } from \"react-router-dom\";\r\nimport {\r\n  SettingOutlined, ShoppingCartOutlined, UserOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Col, Row, Badge, Dropdown, Space, Menu } from \"antd\";\r\nimport ButtonWithIcon from \"components/ButtonWidgets/ButtonWithIcon/ButtonWithIcon\";\r\nimport { IconWidget } from \"components/IconWidget/IconWidget\";\r\nimport { MENU_ITEMS } from \"navigation/CONSTANTS\";\r\nimport {\r\n  ROUTE_HOME,\r\n  ROUTE_LOGIN,\r\n  ROUTE_SHOPPING_LIST,\r\n  ROUTE_USER_PROFILE,\r\n  ROUTE_VENDOR_PROFILE,\r\n} from \"navigation/CONSTANTS\";\r\nimport { ChangeMenuCollapsed, UpdateCurrentRoot } from \"redux/actions/appActions\";\r\nimport collapseIcon from '../../assets/icons/ic_collapse.svg'\r\nimport \"./TopbarLayout.css\";\r\n\r\nfunction TopbarLayout(props) {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const userDataStore = useSelector(x => x.userDataStore);\r\n  const appDataStore = useSelector(x => x.appDataStore);\r\n  const [currentPathTitle, setCurrentPathTitle] = useState(\"Dashboard\")\r\n  useEffect(() => {\r\n    const same = MENU_ITEMS.filter(item => item.route == currentRoute);\r\n    let name = same.length === 0? \"Dashboard\" : same[0].title;\r\n    setCurrentPathTitle(name)\r\n    setTimeout(() => {\r\n      window.scrollTo(0, 0);\r\n    }, 300);\r\n  }, [history.location.pathname]);\r\n\r\n  const { collapsed, width, currentRoute } = appDataStore;\r\n  const userInfo = userDataStore.user;\r\n\r\n\r\n//   const menuItems = OPTION_ITEMS.map((info, index) => {\r\n//     return <div>\r\n//       <Link className=\"menu-widget-item\" key={info.route} to={info.route} onClick={() => { console.log(\"ss:\", info) }}>\r\n//         {info.icon} {info.title}\r\n//       </Link>\r\n//     </div>\r\n// })\r\n\r\n  const menuWidget = () => {\r\n    return (\r\n      <div className=\"menu-widget\">\r\n        <div onClick={()=>{\r\n          dispatch(UpdateCurrentRoot({ currentRoute: ROUTE_USER_PROFILE }))\r\n        }}>\r\n          <Link to={ROUTE_USER_PROFILE} className={\"menu-widget-item\"}>\r\n            <UserOutlined className={\"menu-widget-item-icon\"} /> User Profile\r\n          </Link>\r\n        </div>\r\n        <div onClick={()=>{\r\n          dispatch(UpdateCurrentRoot({ currentRoute: ROUTE_VENDOR_PROFILE }))\r\n        }}>\r\n          <Link to={ROUTE_VENDOR_PROFILE} className={\"menu-widget-item\"}>\r\n            <ShoppingCartOutlined className={\"menu-widget-item-icon\"} /> Vendor Profile\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  if (width <= 1024) {\r\n    return <div>\r\n      <div className=\"logo\">\r\n        <img\r\n          style={{ maxWidth: \"80%\", maxHeight: 200 }}\r\n          src={'/assets/images/logo.png'}\r\n          alt=\"kalaecafe\"\r\n        />\r\n        <div className=\"side-collapse\" onClick={() => { dispatch(ChangeMenuCollapsed({ collapsed: !collapsed })) }}>\r\n          <IconWidget Icon={collapseIcon} />\r\n        </div>\r\n      </div>\r\n      <Row align={\"center\"} >\r\n        <span className=\"txt-top-welcome\">Welcome Back!</span> <span className=\"txt-top-name\">{userInfo.first_name}</span>\r\n      </Row>\r\n      <Row align={\"center\"} style={{ marginTop: \"20px\" }}>\r\n        <Row className=\"top-setting-bg\" justify={'space-between'} align={'middle'}>\r\n          <Col className=\"gutter-row\">\r\n            <div><img style={{ cursor: \"pointer\" }} src=\"/assets/icons/ic_logout.svg\" alt=\"\" /><span className=\"txt-top-logout\" onClick={() => { history.push(ROUTE_LOGIN) }}>Log out</span></div>\r\n          </Col>\r\n          <Col className=\"gutter-row\">\r\n          </Col>\r\n          <Col className=\"gutter-row\">\r\n            <Space direction={\"horizontal\"} align={'center'} >\r\n              <Badge dot={true} offset={[-7, 5]}>\r\n                <ButtonWithIcon\r\n                  icon={<img src=\"/assets/icons/ic_notification.svg\" />}\r\n                  alt=\"\"\r\n                  onClick={() => {\r\n                    props.history.push(ROUTE_SHOPPING_LIST);\r\n                  }}\r\n                />\r\n              </Badge>\r\n              <Dropdown overlay={menuWidget} trigger={[\"click\"]}>\r\n                <img className=\"img-top-setting\" src=\"/assets/icons/ic_3dot.svg\" alt=\"\" />\r\n              </Dropdown>\r\n            </Space>\r\n\r\n          </Col>\r\n        </Row>\r\n      </Row>\r\n      <Row align={\"left\"}>\r\n        <span className=\"txt-top-title\">{currentPathTitle}</span>\r\n      </Row>\r\n      <div>{props.children}</div>\r\n    </div>\r\n  }\r\n  return (\r\n    <div>\r\n      <div className=\"top-navbar-layout\">\r\n        <div className=\"top-navbar-header\">\r\n          <Row align={\"middle\"} gutter={16} justify={\"space-between\"}>\r\n            <Col>\r\n              <span className=\"txt-top-title\">{currentPathTitle}</span>\r\n            </Col>\r\n            <Col style={{ textAlign: \"right\" }}>\r\n              <Row align={\"middle\"} >\r\n                <Col align={\"middle\"} >\r\n                  <span className=\"txt-top-welcome\">Welcome Back!</span> <span className=\"txt-top-name\">{userInfo.first_name}</span>\r\n                </Col>\r\n                <Col>\r\n                  <Row className=\"top-setting-bg\" justify={'space-between'} align={'middle'}>\r\n                    <Col className=\"gutter-row\">\r\n                      <div><img className=\"user-profile-image\" src={userInfo.image_url == null || userInfo.image_url == \"\" ? \"/assets/icons/ic_logout.svg\" : userInfo.image_url} alt=\"\" /><span className=\"txt-top-logout\" onClick={() => { history.push(ROUTE_LOGIN) }}>Log out</span></div>\r\n                    </Col>\r\n                    <Col className=\"gutter-row\">\r\n\r\n                    </Col>\r\n                    <Col className=\"gutter-row\">\r\n                      <Space direction={\"horizontal\"} align={'center'} >\r\n                        <Badge dot={true} offset={[-7, 5]}>\r\n                          <ButtonWithIcon\r\n                            icon={<img src=\"/assets/icons/ic_notification.svg\" />}\r\n                            alt=\"\"\r\n                            onClick={() => {\r\n                              props.history.push(ROUTE_SHOPPING_LIST);\r\n                            }}\r\n                          />\r\n                        </Badge>\r\n                        <Dropdown overlay={menuWidget} trigger={[\"click\"]}>\r\n                          <img className=\"img-top-setting\" src=\"/assets/icons/ic_3dot.svg\" alt=\"\" />\r\n                        </Dropdown>\r\n                      </Space>\r\n\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n\r\n            </Col>\r\n\r\n          </Row>\r\n        </div>\r\n      </div>\r\n      <div>{props.children}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(TopbarLayout);\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\layouts\\MainLayout\\MainLayout.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\InventoryGroup\\ByName\\InventoryGroupByName.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\layouts\\SidebarLayout\\SidebarLayout.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\ProfilePage\\VendorProfile\\VendorProfilePage.js",["1568","1569","1570"],"import React ,{ useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Row, Col, Input, message, Spin } from \"antd\";\r\nimport CommonDivWidget from \"components/CommonDivWidget/CommonDivWidget\";\r\nimport AvatarWidget from \"../AvatarWidget/AvatarWidget\";\r\nimport CommonButton from \"components/ButtonWidgets/CommonButton/CommonButton\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport { apiGetVendorInfo, apiUpdateVendor } from \"services/profileService\";\r\nimport \"./VendorProfilePage.css\"\r\n  \r\nconst VendorProfilePage = () => {\r\n    const dispatch = useDispatch();\r\n    const userDataStore = useSelector(x => x.userDataStore);\r\n    const vendorInfo = userDataStore.vendor;\r\n    const [ errorField, setErrorField ] = useState([])\r\n    const [ isBusy, setIsBusy ] = useState(false)\r\n    const [ vendorData, setVendorData] = useState(\"\");\r\n    const [ newImageUrl, setNewImageUrl ] = useState(\"\")\r\n    \r\n    useEffect(() => {\r\n        setIsBusy(true);\r\n        apiGetVendorInfo()\r\n            .then((data) => {\r\n                setIsBusy(false);\r\n                setVendorData(data)\r\n            })\r\n            .catch((err) => {\r\n                message.error(\"Server failed. \" + err);\r\n        });\r\n    }, []);\r\n    const onClickUpdate = () => {\r\n        setIsBusy(true)\r\n        apiUpdateVendor(vendorData, newImageUrl)\r\n            .then((data) => {\r\n            setIsBusy(false);\r\n            message.success(\"Vendor Info was changed successfully.\")\r\n            dispatch(updateUser({vendor:data}));\r\n        })\r\n        .catch((err) => {\r\n            message.error(\"Server failed. \" + err);\r\n        });\r\n    }\r\n    return (\r\n        <CommonDivWidget>\r\n            <Spin spinning={isBusy} tip=\"\">\r\n            <div className=\"avatar-block\" style={{marginTop:60}}>\r\n                <AvatarWidget defaultImageUrl={vendorData.logo} setNewImageUrl={setNewImageUrl}></AvatarWidget>\r\n                <div style={{marginTop:10}}>Logo</div>\r\n                <div style={{padding:20}}>\r\n                    <Row gutter={32} justify={\"center\"}>\r\n                        <Col xs={0} sm={0} md={5} lg={6} xl={6}/>\r\n                        <Col xs={24} sm={24} md={14} lg={12} xl={12}>\r\n                            <div style={{ paddingBottom: \"5px\", textAlign:\"left\" }}>Business name</div>\r\n                            <Input\r\n                            value={vendorData.name}\r\n                            className=\"custom-input\"\r\n                            onChange={(e) => {\r\n                                setVendorData({...vendorData,name: e.target.value});\r\n                            }}/>\r\n                        </Col>\r\n                        <Col xs={0} sm={0} md={5} lg={6} xl={6}/>\r\n                    </Row>\r\n                    <Row gutter={32} justify={\"center\"} style={{marginTop:20}}>\r\n                        <Col xs={0} sm={0} md={5} lg={6} xl={6}/>\r\n                        <Col xs={24} sm={24} md={14} lg={12} xl={12}>\r\n                            <div style={{ paddingBottom: \"5px\", textAlign:\"left\" }}>Business email</div>\r\n                            <Input\r\n                            type={\"email\"}\r\n                            value={vendorData.email}\r\n                            className=\"custom-input\"\r\n                            onChange={(e) => {\r\n                                setVendorData({...vendorData,email: e.target.value});\r\n                            }}/>\r\n                        </Col>\r\n                        <Col xs={0} sm={0} md={5} lg={6} xl={6}/>\r\n                    </Row>\r\n                    <Row gutter={32} justify={\"center\"} style={{marginTop:20}}>\r\n                        <Col xs={0} sm={0} md={5} lg={6} xl={6}/>\r\n                        <Col xs={24} sm={24} md={14} lg={12} xl={12}>\r\n                            <div style={{ paddingBottom: \"5px\", textAlign:\"left\" }}>Phone Number</div>\r\n                            <Input\r\n                            value={vendorData.phone}\r\n                            className=\"custom-input\"\r\n                            onChange={(e) => {\r\n                                setVendorData({...vendorData,phone: e.target.value});\r\n                            }}/>\r\n                        </Col>\r\n                        <Col xs={0} sm={0} md={5} lg={6} xl={6}/>\r\n                    </Row>\r\n                    \r\n                    <Row gutter={32} justify={\"center\"} style={{marginTop:20}}>\r\n                        <Col xs={0} sm={0} md={5} lg={6} xl={6}/>\r\n                        <Col xs={24} sm={24} md={14} lg={12} xl={12}>\r\n                            <div style={{ paddingBottom: \"5px\", textAlign:\"left\" }}>Business Website</div>\r\n                            <Input\r\n                            value={vendorData.website}\r\n                            className=\"custom-input\"\r\n                            onChange={(e) => {\r\n                                setVendorData({...vendorData,website: e.target.value});\r\n                            }}/>\r\n                        </Col>\r\n                        <Col xs={0} sm={0} md={5} lg={6} xl={6}/>\r\n                    </Row>\r\n                    <Row style={{marginTop:50, marginBottom: 50}} justify={\"center\"}>\r\n                        <CommonButton onClick={onClickUpdate}>Update</CommonButton>\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n            </Spin>\r\n        </CommonDivWidget>\r\n    );\r\n};\r\n\r\nexport default VendorProfilePage;","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\RecipeAddPage\\RecipeAddPage.js",["1571","1572","1573","1574","1575","1576","1577","1578","1579","1580","1581","1582"],"import { Button, Spin, Row, Col, Tooltip, message, Checkbox } from 'antd'\r\nimport CommonDivWidget from 'components/CommonDivWidget/CommonDivWidget'\r\nimport React, { useEffect, useState } from 'react'\r\nimport RecipeAddTableWidget from './TableWidget/RecipeAddTableWidget'\r\nimport CommonButton from 'components/ButtonWidgets/CommonButton/CommonButton'\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport \"./RecipeAddpage.css\"\r\nimport { apiGetInventoryBasicData } from 'services/inventoryService'\r\nimport ProductDescriptionInput from 'components/ProductPage/ProductDescriptionInput/ProductDescriptionInput'\r\nimport ProductTypeSelector from 'components/ProductPage/ProductTypeSelector/ProductTypeSelector'\r\nimport { isEmpty } from 'utils/GlobalFunctions'\r\nimport { apiCreateRecipe, apiGetRecipeById, apiUpdateRecipe } from 'services/recipeService'\r\nimport ProductImageWidget from 'pages/InventoryPage/AddInventoryDialog/ProductImageWidget'\r\nimport { useParams } from 'react-router-dom'\r\nfunction RecipeAddPage() {\r\n    const {id} = useParams();\r\n    const [isBusy, setIsBusy] = useState(false);\r\n    const [guideList, setGuideList] = useState([]);\r\n    const [recipeDescription, setRecipeDescription] = useState('');\r\n    const [inventoryBasicData, setInventoryBasicData] = useState({});\r\n    const [ownCommonData, setOwnCommonData] = useState({});\r\n    const [selRecipe, setSelRecipe] = useState({});\r\n    const [errorField, setErrorField] = useState([]);\r\n    const [isEdit, setIsEdit] = useState(false)\r\n    useEffect(()=>{\r\n        if(id !== undefined){\r\n            setIsEdit(true)\r\n        }\r\n    }, [id])\r\n    useEffect(() => {\r\n        apiGetInventoryBasicData()\r\n            .then((data) => {\r\n                setInventoryBasicData(data);\r\n            })\r\n            .catch((err) => {\r\n                message.error(\"Server failed. \" + err);\r\n            });\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const { categoryList } = inventoryBasicData === undefined ? { categoryList: undefined } : inventoryBasicData;\r\n        const { unitList } = inventoryBasicData === undefined ? { unitList: undefined } : inventoryBasicData;\r\n        const { locationList } = inventoryBasicData === undefined ? { locationList: undefined } : inventoryBasicData;\r\n        const { nameList } = inventoryBasicData === undefined ? { nameList: undefined } : inventoryBasicData;\r\n\r\n        if (inventoryBasicData != undefined && inventoryBasicData.nameList !== undefined) {\r\n            setOwnCommonData({\r\n                locationList: locationList,\r\n                unitList: unitList,\r\n                categoryList: categoryList,\r\n                nameList: nameList,\r\n            });\r\n\r\n            if(id !== undefined){\r\n                setIsBusy(true)\r\n                apiGetRecipeById(id)\r\n                .then((data) => {\r\n                    setIsBusy(false)\r\n                    setSelRecipe(data)\r\n                    setGuideList(data.guideList)\r\n                    setRecipeDescription(data.description)\r\n                })\r\n                .catch((err) => {\r\n                    setIsBusy(false)\r\n                    message.error(\"apiGetRecipeById. \" + err);\r\n                });\r\n            }\r\n            else {\r\n                let tmp = []\r\n                setGuideList(tmp)\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }, [inventoryBasicData]);\r\n\r\n    const validateFields = async () => {\r\n        var errorList = Array();\r\n        if (selRecipe === undefined)\r\n            errorList = isEmpty(selRecipe, \"active\", errorList);\r\n        errorList = isEmpty(selRecipe, \"sub_recipe\", errorList);\r\n        errorList = isEmpty(selRecipe, \"salable\", errorList);\r\n        errorList = isEmpty(selRecipe, \"name\", errorList);\r\n        errorList = isEmpty(selRecipe, \"author\", errorList);\r\n        errorList = isEmpty(selRecipe, \"image_name\", errorList);\r\n        errorList = isEmpty(selRecipe, \"location_id\", errorList);\r\n        errorList = isEmpty(selRecipe, \"category_id\", errorList);\r\n        setErrorField([...errorList]);\r\n        return errorList.length == 0;\r\n    };\r\n\r\n\r\n    const handleAdd = () => {\r\n        let No = 0\r\n        if (guideList.length !== 0) {\r\n            No = guideList[guideList.length - 1].key + 1\r\n        }\r\n        let tmp = {\r\n            key: No, qty: \"0\", unit_id: \"0\", pre_instruction: \" \", ingredient_id: \"0\",\r\n            post_instruction: \" \", procedure: \" \"\r\n        }\r\n        let tmpList = [...guideList]\r\n        tmpList = [...tmpList, tmp]\r\n        setGuideList(tmpList)\r\n    };\r\n\r\n    const handleSave = (record) => {\r\n        let updateData = [...guideList];\r\n        var storeIndex = updateData.findIndex(x => x.key == record.key);\r\n        updateData.splice(storeIndex, 1, record);\r\n        setGuideList(updateData)\r\n    }\r\n\r\n    const handleDelete = (record) => {\r\n        let updateData = [...guideList];\r\n        var storeIndex = updateData.findIndex(x => x.key == record.key);\r\n        updateData.splice(storeIndex, 1);\r\n        setGuideList(updateData)\r\n    }\r\n\r\n    const modules = {\r\n        toolbar: [\r\n            ['bold', 'italic', 'underline', 'strike'],        // toggled buttons\r\n            ['blockquote', 'code-block'],\r\n\r\n            [{ 'header': 1 }, { 'header': 2 }],               // custom button values\r\n            [{ 'list': 'ordered' }, { 'list': 'bullet' }],\r\n            [{ 'script': 'sub' }, { 'script': 'super' }],      // superscript/subscript\r\n            [{ 'indent': '-1' }, { 'indent': '+1' }],          // outdent/indent\r\n            [{ 'direction': 'rtl' }],                         // text direction\r\n\r\n            [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown\r\n            [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\r\n\r\n            [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme\r\n            [{ 'font': [] }],\r\n            [{ 'align': [] }],\r\n\r\n            ['clean']                                         // remove formatting button\r\n        ]\r\n    }\r\n\r\n    const options = [\r\n        { label: 'Active', value: 'active' },\r\n        { label: 'Sub Recipe', value: 'sub_recipe' },\r\n        { label: 'Salable', value: 'salable' },\r\n    ];\r\n\r\n    function onChange(checkedValues) {\r\n        selRecipe[\"active\"] = false\r\n        selRecipe[\"sub_recipe\"] = false\r\n        selRecipe[\"salable\"] = false\r\n        checkedValues.forEach(element => {\r\n            selRecipe[element] = true\r\n        });\r\n    }\r\n    \r\n    const handleCreateRecipe = async () => {\r\n\r\n\r\n        selRecipe[\"description\"] = recipeDescription\r\n        selRecipe[\"guideList\"] = guideList\r\n\r\n        if ((await validateFields()) === false) return;\r\n        setIsBusy(true);\r\n        apiCreateRecipe(selRecipe)\r\n            .then((data) => {\r\n                console.log(\" data = \", data)\r\n\r\n                setIsBusy(false);\r\n                message.success(`New Recipe has been created.`);\r\n\r\n            })\r\n            .catch((err) => {\r\n                setIsBusy(false);\r\n                message.error(\"Server failed. handleCreateRecipe \" + err);\r\n            });\r\n    }\r\n\r\n    const handleUpdateRecipe = async () => {\r\n\r\n\r\n        selRecipe[\"description\"] = recipeDescription\r\n        selRecipe[\"guideList\"] = guideList\r\n\r\n        setIsBusy(true);\r\n        apiUpdateRecipe(selRecipe)\r\n            .then((data) => {\r\n                console.log(\" data = \", data)\r\n\r\n                setIsBusy(false);\r\n                message.success(`Current Recipe has been updated.`);\r\n\r\n            })\r\n            .catch((err) => {\r\n                setIsBusy(false);\r\n                message.error(\"Server failed. handleUpdateRecipe \" + err);\r\n            });\r\n    }\r\n    \r\n    if (isEdit && selRecipe.active == undefined) return <div/>\r\n\r\n    function defaultCheckBoxValue() {\r\n        var tmp = []\r\n\r\n        if (selRecipe.active == 1) {\r\n            tmp.push('active')\r\n        }\r\n        if (selRecipe.sub_recipe == 1) {\r\n            tmp.push('sub_recipe')\r\n        }\r\n        if (selRecipe.salable == 1) {\r\n            tmp.push('salable')\r\n        }\r\n        return tmp;\r\n    }\r\n    return (\r\n        <CommonDivWidget>\r\n            <Spin spinning={isBusy}>\r\n                <div>\r\n                    <div>\r\n                        <CommonButton onClick={() => {\r\n                            isEdit? handleUpdateRecipe() : handleCreateRecipe()\r\n                        }}>\r\n                            {isEdit? \"Save Recipe\" : \"Create Recipe\"}\r\n                        </CommonButton>\r\n                    </div>\r\n\r\n                    <Row gutter={16} style={{ marginTop: 16 }}>\r\n\r\n                        <Col xs={24} sm={24} md={24} lg={24} xl={12}>\r\n                            <Row gutter={16}>\r\n                                <Col xs={24} sm={24} md={24} lg={24} xl={12}>\r\n                                    <h1 style={{ marginTop: 8 }}>Recipe logo* </h1>\r\n                                    <ProductImageWidget\r\n                                        field={\"image_name\"}\r\n                                        productInfo={selRecipe}\r\n                                        setProductInfo={setSelRecipe}\r\n                                        errorField={errorField}\r\n                                        setErrorField={setErrorField}\r\n                                    />\r\n                                    <Col flex={\"auto\"} align={\"middle\"} >\r\n                                        <Checkbox.Group options={options} \r\n                                        defaultValue={defaultCheckBoxValue} \r\n                                        onChange={onChange} />\r\n                                    </Col>\r\n                                </Col>\r\n                                <Col xs={24} sm={24} md={24} lg={24} xl={12}>\r\n                                    <div>Enter Recipe Name* </div>\r\n                                    <Row align={\"middle\"} gutter={16}>\r\n                                        <Col flex={\"auto\"} align={\"middle\"}>\r\n                                            <ProductDescriptionInput\r\n                                                placeholder=\"Name\"\r\n                                                field={\"name\"}\r\n                                                productInfo={selRecipe}\r\n                                                setProductInfo={setSelRecipe}\r\n                                                errorField={errorField}\r\n                                                setErrorField={setErrorField}\r\n                                            />\r\n                                        </Col>\r\n                                        <Col xs={24} sm={24} md={24} lg={24} xl={12}>\r\n                                            <div>Location*</div>\r\n                                            <Row align={\"middle\"} gutter={16}>\r\n                                                <Col flex={\"auto\"}>\r\n                                                    <ProductTypeSelector\r\n                                                        placeholder={\"Select Location\"}\r\n                                                        field={\"location_id\"}\r\n                                                        list={ownCommonData.locationList}\r\n                                                        displayField=\"name\"\r\n                                                        idField=\"id\"\r\n                                                        productInfo={selRecipe}\r\n                                                        setProductInfo={setSelRecipe}\r\n                                                        errorField={errorField}\r\n                                                        setErrorField={setErrorField}\r\n                                                    />\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Col>\r\n                                        <Col xs={24} sm={24} md={24} lg={24} xl={12}>\r\n                                            <div>Category*</div>\r\n                                            <Row align={\"middle\"} gutter={16}>\r\n                                                <Col flex={\"auto\"}>\r\n                                                    <ProductTypeSelector\r\n                                                        placeholder={\"Select Category\"}\r\n                                                        field={\"category_id\"}\r\n                                                        list={ownCommonData.categoryList}\r\n                                                        displayField=\"name\"\r\n                                                        idField=\"id\"\r\n                                                        productInfo={selRecipe}\r\n                                                        setProductInfo={setSelRecipe}\r\n                                                        errorField={errorField}\r\n                                                        setErrorField={setErrorField}\r\n                                                    />\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Col>\r\n                                        <Col xs={24} sm={24} md={24} lg={24} xl={24} style={{ marginTop: 10 }}>\r\n                                            <div>Author*</div>\r\n                                            <Row align={\"middle\"} gutter={16}>\r\n                                                <Col flex={\"auto\"}>\r\n                                                    <ProductDescriptionInput\r\n                                                        placeholder=\"Author\"\r\n                                                        field={\"author\"}\r\n                                                        productInfo={selRecipe}\r\n                                                        setProductInfo={setSelRecipe}\r\n                                                        errorField={errorField}\r\n                                                        setErrorField={setErrorField}\r\n                                                    />\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n\r\n                            </Row>\r\n\r\n\r\n\r\n\r\n                        </Col>\r\n\r\n                        <Col xs={24} sm={24} md={24} lg={24} xl={12} style={{ marginTop: 10 }}>\r\n                            <ReactQuill theme=\"snow\" value={recipeDescription} onChange={setRecipeDescription}\r\n                                className=\"edit-panel\"\r\n                                modules={modules}\r\n                            />\r\n                        </Col>\r\n\r\n                    </Row>\r\n                    <div>\r\n                        <CommonButton onClick={() => {\r\n                            handleAdd()\r\n                        }}>\r\n                            Add a row\r\n                        </CommonButton>\r\n                    </div>\r\n                    <Row gutter={16} style={{ marginTop: 20 }}>\r\n\r\n                        <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                            <RecipeAddTableWidget\r\n                                dataList={guideList}\r\n                                handleSave={handleSave}\r\n                                handleDelete={handleDelete}\r\n                                ownCommonData={ownCommonData}\r\n                                errorField={errorField}\r\n                                setErrorField={setErrorField}\r\n                            />\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </div>\r\n            </Spin>\r\n        </CommonDivWidget>\r\n    )\r\n}\r\n\r\nexport default RecipeAddPage\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\ProfilePage\\UserProfile\\UserProfilePage.js",["1583","1584","1585","1586","1587","1588","1589","1590","1591","1592","1593","1594","1595"],"import React ,{ useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Row, Col, Input, message, Spin } from \"antd\";\r\nimport CommonDivWidget from \"components/CommonDivWidget/CommonDivWidget\";\r\nimport AvatarWidget from \"../AvatarWidget/AvatarWidget\";\r\nimport CommonButton from \"components/ButtonWidgets/CommonButton/CommonButton\";\r\nimport PhoneInput, { parsePhoneNumber } from 'react-phone-number-input'\r\nimport { isEmpty } from \"utils/GlobalFunctions\";\r\nimport { apiUpdateProfile } from \"services/profileService\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport 'react-phone-number-input/style.css'\r\nimport \"./UserProfilePage.css\"\r\n\r\n\r\nconst UserProfilePage = () => {\r\n    const dispatch = useDispatch();\r\n    const userDataStore = useSelector(x => x.userDataStore);\r\n    const userInfo = userDataStore.user;\r\n    const [userData, setUserData] = useState(\"\");\r\n    const [ newImageUrl, setNewImageUrl ] = useState(\"\")\r\n    const [ errorField, setErrorField ] = useState([])\r\n    const [ isBusy, setIsBusy ] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setUserData({ ...userInfo });\r\n    }, [userInfo]);\r\n\r\n    const validateFields = async () => {\r\n        var errorList = Array();\r\n        errorList = isEmpty(userData, \"first_name\", errorList);\r\n        errorList = isEmpty(userData, \"last_name\", errorList);\r\n        errorList = isEmpty(userData, \"old_password\", errorList);\r\n        errorList = isEmpty(userData, \"new_password\", errorList);\r\n        errorList = isEmpty(userData, \"confirm_password\", errorList);\r\n        if (userData[\"new_password\"] !== userData[\"confirm_password\"]) {\r\n            errorList = [...errorList, \"new_password\"];\r\n            errorList = [...errorList, \"confirm_password\"];\r\n        }\r\n        setErrorField([...errorList]);\r\n        return errorList.length == 0;\r\n    };\r\n    const onClickUpdate = () => {\r\n        if(validateFields()){\r\n            setIsBusy(true)\r\n            apiUpdateProfile(userData, newImageUrl)\r\n                .then((data) => {\r\n                setIsBusy(false);\r\n                message.success(\"User Profile Info was changed successfully.\")\r\n                dispatch(updateUser({user:data}));\r\n            })\r\n            .catch((err) => {\r\n                message.error(\"Server failed. \" + err);\r\n            });\r\n        }\r\n    }\r\n    return ((userData != undefined && userData != \"\") &&\r\n        <CommonDivWidget style={{ padding: 0}}>\r\n            <Spin spinning={isBusy} tip=\"\">\r\n                <div className=\"profile-top-background\"></div>\r\n                <div className=\"avatar-block\">\r\n                    <AvatarWidget defaultImageUrl={userData.image_url} setNewImageUrl={setNewImageUrl}></AvatarWidget>\r\n                    <div style={{marginTop:10}}>{userData.email}</div>\r\n                    <div>Joined: &nbsp;\r\n                        {userData.date_joined != null && userData.date_joined != \"\" && new Intl.DateTimeFormat(\"en-US\", {\r\n                            dateStyle: \"medium\",\r\n                        }).format(new Date(userData.date_joined))}\r\n                    </div>\r\n                </div>\r\n                <div style={{padding:20}}>\r\n                    <Row gutter={32} justify={\"center\"}>\r\n                        <Col xs={0} sm={0} md={3} lg={3} xl={3}/>\r\n                        <Col xs={24} sm={24} md={9} lg={9} xl={9}>\r\n                            <div style={{ paddingBottom: \"5px\" }}>First Name</div>\r\n                            <Input\r\n                            value={userData.first_name}\r\n                            className=\"custom-input\"\r\n                            style={{\r\n                                border: errorField.includes(\"first_name\")\r\n                                ? \"1px solid red\"\r\n                                : \"\",\r\n                            }}\r\n                            onChange={(e) => {\r\n                                if (errorField.includes(\"first_name\")) {\r\n                                    let errors = errorField.filter((x) => x != \"first_name\");\r\n                                    setErrorField([...errors]);\r\n                                }\r\n                                setUserData({...userData, first_name: e.target.value});\r\n                            }}/>\r\n                        </Col>\r\n                        <Col xs={24} sm={24} md={9} lg={9} xl={9}>\r\n                        <div style={{ paddingBottom: \"5px\" }}>Last Name</div>\r\n                            <Input\r\n                            value={userData.last_name}\r\n                            className=\"custom-input\"\r\n                            style={{\r\n                                border: errorField.includes(\"last_name\")\r\n                                ? \"1px solid red\"\r\n                                : \"\",\r\n                            }}\r\n                            onChange={(e) => {\r\n                                if (errorField.includes(\"last_name\")) {\r\n                                    let errors = errorField.filter((x) => x != \"last_name\");\r\n                                    setErrorField([...errors]);\r\n                                }\r\n                                setUserData({...userData, last_name: e.target.value});\r\n                            }}/>\r\n                        </Col>\r\n                        <Col xs={0} sm={0} md={3} lg={3} xl={3}/>\r\n                    </Row>\r\n                    <Row gutter={32} justify={\"center\"} style={{marginTop:20}}>\r\n                        <Col xs={0} sm={0} md={3} lg={3} xl={3}/>\r\n                        <Col xs={24} sm={24} md={9} lg={9} xl={9}>\r\n                            <div style={{ paddingBottom: \"5px\" }}>Email</div>\r\n                            <Input\r\n                                type={\"email\"}\r\n                                className=\"custom-input\"\r\n                                value={userData.email}\r\n                                disabled={userData.register_with==\"Email\"?true:false}\r\n                                style={{\r\n                                    border: errorField.includes(\"email\")\r\n                                    ? \"1px solid red\"\r\n                                    : \"\",\r\n                                }}\r\n                                onChange={(e) =>{\r\n                                    if (errorField.includes(\"email\")) {\r\n                                        let errors = errorField.filter((x) => x != \"email\");\r\n                                        setErrorField([...errors]);\r\n                                    }\r\n                                    setUserData({...userData, email: e.target.value});\r\n                                }}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={24} sm={24} md={9} lg={9} xl={9}>\r\n                        <div style={{ paddingBottom: \"5px\" }}>Phone Number</div>\r\n                            <PhoneInput\r\n                                placeholder=\"Enter phone number\"\r\n                                className=\"custom-input\"\r\n                                disabled={userData.register_with!=\"Email\"?true:false}\r\n                                value={\"+\"+userData.countryCode+\"\"+userData.phoneNumber}\r\n                                defaultCountry={\"ZA\"}\r\n                                onChange={(value) => {\r\n                                    if (value === undefined) return;\r\n                                    const info = parsePhoneNumber(value);\r\n                                    if (info === undefined) return;\r\n                                    const {nationalNumber, countryCallingCode} = info;\r\n                                    setUserData({...userData, countryCode: countryCallingCode, phoneNumber: nationalNumber});\r\n                                }}/>\r\n                        </Col>\r\n                        <Col xs={0} sm={0} md={3} lg={3} xl={3}/>\r\n                    </Row>\r\n                    <Row gutter={32} justify={\"center\"} style={{marginTop:20}}>\r\n                        <Col xs={0} sm={0} md={3} lg={3} xl={3}/>\r\n                        <Col xs={24} sm={24} md={9} lg={9} xl={9}>\r\n                            <div style={{ paddingBottom: \"5px\" }}>Old Password</div>\r\n                            <Input\r\n                            type={\"password\"}\r\n                            className=\"custom-input\"\r\n                            style={{\r\n                                border: errorField.includes(\"old_password\")\r\n                                ? \"1px solid red\"\r\n                                : \"\",\r\n                            }}\r\n                            onChange={(e) => {\r\n                                if (errorField.includes(\"old_password\")) {\r\n                                    let errors = errorField.filter((x) => x != \"old_password\");\r\n                                    setErrorField([...errors]);\r\n                                }\r\n                                setUserData({...userData, old_password: e.target.value});\r\n                            }}/>\r\n                        </Col>\r\n                        <Col xs={24} sm={24} md={9} lg={9} xl={9}/>\r\n                        <Col xs={0} sm={0} md={3} lg={3} xl={3}/>\r\n                    </Row>\r\n                    <Row gutter={32} justify={\"center\"} style={{marginTop:20}}>\r\n                        <Col xs={0} sm={0} md={3} lg={3} xl={3}/>\r\n                        <Col xs={24} sm={24} md={9} lg={9} xl={9}>\r\n                            <div style={{ paddingBottom: \"5px\" }}>Password</div>\r\n                            <Input\r\n                            type={\"password\"}\r\n                            className=\"custom-input\"\r\n                            style={{\r\n                                border: errorField.includes(\"new_password\")\r\n                                ? \"1px solid red\"\r\n                                : \"\",\r\n                            }}\r\n                            onChange={(e) => {\r\n                                if (errorField.includes(\"new_password\")) {\r\n                                    let errors = errorField.filter((x) => x != \"new_password\");\r\n                                    setErrorField([...errors]);\r\n                                }\r\n                                setUserData({...userData, new_password: e.target.value});\r\n                            }}/>\r\n                        </Col>\r\n                        <Col xs={24} sm={24} md={9} lg={9} xl={9}>\r\n                        <div style={{ paddingBottom: \"5px\" }}>Confirm Password</div>\r\n                            <Input\r\n                            type={\"password\"}\r\n                            className=\"custom-input\"\r\n                            style={{\r\n                                border: errorField.includes(\"confirm_password\")\r\n                                ? \"1px solid red\"\r\n                                : \"\",\r\n                            }}\r\n                            onChange={(e) => {\r\n                                if (errorField.includes(\"confirm_password\")) {\r\n                                    let errors = errorField.filter((x) => x != \"confirm_password\");\r\n                                    setErrorField([...errors]);\r\n                                }\r\n                                setUserData({...userData, confirm_password: e.target.value});\r\n                            }}/>\r\n                        </Col>\r\n                        <Col xs={0} sm={0} md={3} lg={3} xl={3}/>\r\n                    </Row>\r\n                    <Row style={{marginTop:50, marginBottom: 50}} justify={\"center\"}>\r\n                        <CommonButton onClick={onClickUpdate}>Update</CommonButton>\r\n                    </Row>\r\n                    \r\n                </div>\r\n            </Spin>\r\n        </CommonDivWidget>\r\n    );\r\n};\r\n\r\nexport default UserProfilePage;","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\PrivacyPage\\PrivacyPage.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\TermsPage\\TermsPage.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\redux\\actions\\userActions.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\DashboardPage\\MiddleWidget\\MiddleWidget.js",["1596","1597","1598","1599","1600"],"import React from 'react';\r\nimport { useState } from \"react\";\r\nimport { Col, Row, message } from 'antd';\r\nimport CommonButton from 'components/ButtonWidgets/CommonButton/CommonButton';\r\nimport CommonDivWidget from 'components/CommonDivWidget/CommonDivWidget';\r\n\r\nimport './MiddleWidget.css'\r\nimport MiddleLeftWidget from './MiddleLeftWidget';\r\n\r\n\r\n\r\nconst MiddleWidget = (props) => {\r\n    const { dashboardDetail } = props;\r\n    const { comments } = dashboardDetail === undefined ? { comments: undefined } : dashboardDetail;\r\n    \r\n    \r\n\r\n    return (\r\n        <Row align={'middle'} gutter={32}>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={12}>\r\n                <MiddleLeftWidget comments={comments}/>\r\n            </Col>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={12}>\r\n                <CommonDivWidget>\r\n                    <p className=\"follower-comment-widget-title\">Post &#38; Announcemnet</p>\r\n                    <div className=\"post-panel-bg\">\r\n                        <Row  justify={'space-between'} align={'middle'}>\r\n                            <Col><img className=\"follower-direction-button\" src=\"/assets/icons/ic_prev.svg\" /></Col>\r\n                            <Col><img className=\"follower-direction-button\" src=\"/assets/icons/ic_next.svg\" /></Col>\r\n                        </Row>\r\n                    </div>\r\n                    <Row  justify={'space-between'} align={'middle'}>\r\n                        <Col>\r\n                            <img className=\"follower-dot-button\" src=\"/assets/icons/ic_comment.svg\" />\r\n                            <span style={{paddingLeft:\"5px\"}}>23 comments</span>\r\n                        </Col>\r\n                        <Col>\r\n                            <CommonButton>View</CommonButton>\r\n                        </Col>\r\n                    </Row>\r\n                </CommonDivWidget>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default MiddleWidget;","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\DashboardPage\\TopWidget\\TopWidget.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\DashboardPage\\BottomWidget\\BottomWidget.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\AboutusPage\\AboutusDescriptionWidget\\AboutusDescriptionWidget.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\AboutusPage\\AboutusIntroImage\\AboutusIntroImage.js",["1601"],"import { ROUTE_REGISTER } from \"navigation/CONSTANTS\";\r\nimport { useHistory } from \"react-router\";\r\nimport \"./AboutusIntroImage.css\";\r\nexport const AboutusIntroImage = (props) => {\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"about-us-intro-image-container\">\r\n      <img\r\n        className=\"about-us-intro-image\"\r\n        src=\"/assets/images/about-us/background.jpg\"\r\n      />\r\n      <div className=\"about-us-intro-info\">\r\n        <div>Connect with stores, products and activities</div>\r\n        <div\r\n          onClick={() => history.push(ROUTE_REGISTER)}\r\n          className=\"about-us-intro-join-button\"\r\n        >\r\n          Join now - its free\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AboutusIntroImage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\AboutusPage\\DownloadAppWidget\\DownloadAppWidget.js",["1602","1603","1604"],"import \"./DownloadAppWidget.css\";\r\nexport const DownloadAppWidget = () => {\r\n  const onClickStoreUrl = (url) => {\r\n    var win = window.open(url, \"_blank\");\r\n    win.focus();\r\n  };\r\n  return (\r\n    <div className=\"download-app-widget-container\">\r\n      <div className=\"download-app-widget-container-title\">\r\n        Download for iOS/Android/Huawei.\r\n      </div>\r\n      <div className=\"download-app-widget-container-description\">\r\n        The best part is you can do all this from your mobile device.\r\n      </div>\r\n      <div className=\"download-app-container\">\r\n        <div className=\"download-app-item custom-button\">\r\n          <img\r\n            src=\"/assets/images/about-us/googleplay.png\"\r\n            onClick={() => {\r\n              onClickStoreUrl(\r\n                \"https://play.google.com/store/apps/details?id=com.mobile.seemesave\"\r\n              );\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"download-app-item custom-button\">\r\n          <img\r\n            src=\"/assets/images/about-us/appstore.png\"\r\n            onClick={() => {\r\n              onClickStoreUrl(\r\n                \"https://apps.apple.com/us/app/seemesave/id1543279452\"\r\n              );\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"download-app-item custom-button\">\r\n          <img\r\n            src=\"/assets/images/about-us/huawei.png\"\r\n            onClick={() => {\r\n              onClickStoreUrl(\"https://seemesave.dra.agconnect.link/ygkE\");\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DownloadAppWidget;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\services\\userServices.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\ProfilePage\\AvatarWidget\\AvatarWidget.js",["1605","1606"],"import React, { useState,useEffect } from \"react\";\r\nimport { EditOutlined } from \"@ant-design/icons\";\r\nimport \"./AvatarWidget.css\";\r\nconst AvatarWidget = (props) => {\r\n  const {defaultImageUrl, setNewImageUrl} = props;\r\n  const [ imageUrl, setImageUrl ] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    setImageUrl(defaultImageUrl);\r\n  }, [defaultImageUrl]);\r\n  \r\n  const onDropImage = async (e) => {\r\n    const files = Array.from(e.target.files);\r\n    if (files.length === 0) return;\r\n    setImageUrl(URL.createObjectURL(files[0]));\r\n    setNewImageUrl(files[0])\r\n  };\r\n  return (\r\n    <div className=\"profile-avatar-widget\">\r\n      <div className=\"profile-image-edit-icon-block\">\r\n      <label htmlFor=\"upload_avatar_image\">\r\n        <input\r\n          type=\"file\"\r\n          id=\"upload_avatar_image\"\r\n          name=\"upload_avatar_image\"\r\n          style={{ display: \"none\" }}\r\n          accept=\"image/x-png,image/gif,image/jpeg\"\r\n          onChange={onDropImage}\r\n        />\r\n        <img\r\n          src={\r\n            imageUrl == null || imageUrl == \"\"\r\n              ? \"/assets/icons/ic_profile.svg\"\r\n              : imageUrl\r\n          }\r\n          className={\"profile-user-avatar\"}\r\n        />\r\n      </label>\r\n      <div className=\"profile-image-edit-icon\">\r\n          <EditOutlined/>\r\n      </div>\r\n    </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AvatarWidget;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\InventoryGroup\\ByName\\TableWidget\\TableWidget.js",["1607","1608","1609","1610"],"import React, { useState } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Table, } from \"antd\";\r\nimport DetailTable from './DetailTable';\r\nimport { showConfirmDlgWidget } from 'components/ConfirmDlgWidget/showConfirmDlgWidget';\r\nfunction TableWidget(props) {\r\n  const [isBusy, setIsBusy] = useState(false);\r\n  const { dataList, onUpdateAction, onDeleteAction, } = props;\r\n  if (dataList === undefined) return <div />\r\n\r\n\r\n\r\n  const columns = [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\",\r\n    },\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      sorter: {\r\n        compare: (a, b) => a.name.localeCompare(b.name),\r\n      },\r\n    },\r\n    {\r\n      title: \"Count\",\r\n      dataIndex: \"total_count\",\r\n      sorter: {\r\n        compare: (a, b) => a.total_count - b.total_count,\r\n      },\r\n    },\r\n    {\r\n      title: \"Qty\",\r\n      dataIndex: \"qty\",\r\n      sorter: {\r\n        compare: (a, b) => a.qty - b.qty,\r\n      },\r\n    },\r\n    {\r\n      title: \"Spoilage\",\r\n      dataIndex: \"spoilage\",\r\n      sorter: {\r\n        compare: (a, b) => a.spoilage - b.spoilage,\r\n      },\r\n    },\r\n    {\r\n      title: \"Average Price/Unit\",\r\n      dataIndex: \"average_price_per_unit\",\r\n      sorter: {\r\n        compare: (a, b) => a.average_price_per_unit - b.average_price_per_unit,\r\n      },\r\n      render: text => <p>$ {text}</p>,\r\n    },\r\n    {\r\n      title: \"Created Date\",\r\n      dataIndex: \"add_timestamp\",\r\n      sorter: {\r\n        compare: (a, b) => a.name.localeCompare(b.name),\r\n      },\r\n    },\r\n    {\r\n      title: \"Updated Date\",\r\n      dataIndex: \"update_timestamp\",\r\n      sorter: {\r\n        compare: (a, b) => a.name.localeCompare(b.name),\r\n      },\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      render: (text, record) => {\r\n\r\n        return <div size=\"middle\" direction={\"vertical\"}>\r\n          <a style={{ color: \"var(--blueColor)\" }} className=\"del-btn\" onClick={async () => {\r\n            var res = await showConfirmDlgWidget({ title: \"Delete Confirmation\", content: \"Are you sure to delete this record?\" });\r\n            if (res == false) return;\r\n          }}>\r\n            Print Share\r\n          </a>\r\n        </div>\r\n      },\r\n    },\r\n  ];\r\n  const dataSource = dataList.map((info) => {\r\n    return { ...info, key: info.id };\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Table\r\n        pagination={{ defaultPageSize: 5, showSizeChanger: true, pageSizeOptions: ['5', '10', '15'] }}\r\n        columns={columns}\r\n        dataSource={dataSource}\r\n        scroll={{ x: 900 }}\r\n        expandedRowRender={record => {\r\n          if (record.total_count !== 0) {\r\n            return <DetailTable\r\n              dataList={record.subItemList}\r\n              onUpdateAction={onUpdateAction}\r\n              onDeleteAction={onDeleteAction} />\r\n          }\r\n          else {\r\n            return <div className=\"ant-table-expanded-row-fixed\" style={{ width: \"1428px\", position: 'sticky', left: 0, overflow: 'hidden' }}>\r\n              <div className=\"ant-empty ant-empty-normal\">\r\n                <div className=\"ant-empty-image\">\r\n                  <svg className=\"ant-empty-img-simple\" width=\"64\" height=\"41\" viewBox=\"0 0 64 41\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <g transform=\"translate(0 1)\" fill=\"none\" fillRule=\"evenodd\">\r\n                    <ellipse className=\"ant-empty-img-simple-ellipse\" cx=\"32\" cy=\"33\" rx=\"32\" ry=\"7\"></ellipse>\r\n                    <g className=\"ant-empty-img-simple-g\" fillRule=\"nonzero\">\r\n                      <path d=\"M55 12.76L44.854 1.258C44.367.474 43.656 0 42.907 0H21.093c-.749 0-1.46.474-1.947 1.257L9 12.761V22h46v-9.24z\"></path><path d=\"M41.613 15.931c0-1.605.994-2.93 2.227-2.931H55v18.137C55 33.26 53.68 35 52.05 35h-40.1C10.32 35 9 33.259 9 31.137V13h11.16c1.233 0 2.227 1.323 2.227 2.928v.022c0 1.605 1.005 2.901 2.237 2.901h14.752c1.232 0 2.237-1.308 2.237-2.913v-.007z\" className=\"ant-empty-img-simple-path\"></path>\r\n                    </g>\r\n                  </g>\r\n                </svg>\r\n                </div>\r\n                <div className=\"ant-empty-description\">No Data</div>\r\n              </div>\r\n            </div>\r\n          }\r\n\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(TableWidget)\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\RecipeAddPage\\TableWidget\\RecipeAddTableWidget.js",["1611","1612","1613","1614","1615","1616","1617","1618","1619","1620"],"import React, { useContext, useState, useEffect, useRef } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Table, Input, Button, Popconfirm, Form } from 'antd';\r\nimport { showConfirmDlgWidget } from 'components/ConfirmDlgWidget/showConfirmDlgWidget';\r\nimport ProductTypeSelector from 'components/ProductPage/ProductTypeSelector/ProductTypeSelector';\r\n\r\nconst EditableContext = React.createContext(null);\r\n\r\nconst EditableRow = ({ index, ...props }) => {\r\n  const [form] = Form.useForm();\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <EditableContext.Provider value={form}>\r\n        <tr {...props} />\r\n      </EditableContext.Provider>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst EditableCell = ({\r\n  title,\r\n  editable,\r\n  children,\r\n  dataIndex,\r\n  record,\r\n  handleSave,\r\n  ...restProps\r\n}) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const inputRef = useRef(null);\r\n  const form = useContext(EditableContext);\r\n  useEffect(() => {\r\n    if (editing) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [editing]);\r\n\r\n  const toggleEdit = () => {\r\n    setEditing(!editing);\r\n    form.setFieldsValue({\r\n      [dataIndex]: record[dataIndex],\r\n    });\r\n  };\r\n\r\n  const save = async () => {\r\n    try {\r\n      const values = await form.validateFields();\r\n      toggleEdit();\r\n      handleSave({ ...record, ...values });\r\n    } catch (errInfo) {\r\n      console.log('Save failed:', errInfo);\r\n    }\r\n  };\r\n\r\n  let childNode = children;\r\n\r\n  if (editable) {\r\n    childNode = editing ? (\r\n      <Form.Item\r\n        style={{\r\n          margin: 0,\r\n        }}\r\n        name={dataIndex}\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: `${title} is required.`,\r\n          },\r\n        ]}\r\n      >\r\n        <Input ref={inputRef} onPressEnter={save} onBlur={save} placeholder={title} />\r\n      </Form.Item>\r\n    ) : (\r\n      <div\r\n        className=\"editable-cell-value-wrap\"\r\n        onClick={toggleEdit}\r\n      >\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <td {...restProps}>{childNode}</td>;\r\n};\r\n\r\nfunction RecipeAddTableWidget(props) {\r\n  const [isBusy, setIsBusy] = useState(false);\r\n  const { dataList, handleSave, handleDelete, } = props;\r\n  const { errorField, setErrorField,  } = props;\r\n\r\n  const {\r\n    ownCommonData,\r\n    setOwnCommonData,\r\n  } = props;\r\n  const {\r\n    nameList,\r\n    locationList,\r\n    unitList,\r\n    categoryList,\r\n  } = ownCommonData;\r\n  if (unitList == undefined) {\r\n    return <div></div>;\r\n  }\r\n  const components = {\r\n    body: {\r\n      row: EditableRow,\r\n      cell: EditableCell,\r\n    },\r\n  };\r\n  const columns = [\r\n    {\r\n      title: \"No\",\r\n      dataIndex: \"key\",\r\n    },\r\n    {\r\n      title: \"QTY\",\r\n      dataIndex: \"qty\",\r\n      editable: true,\r\n      width:100,\r\n      sorter: {\r\n        compare: (a, b) => a.qty.localeCompare(b.qty),\r\n      },\r\n    },\r\n    {\r\n      title: \"Unit\",\r\n      dataIndex: \"unit_id\",\r\n      width:100,\r\n      sorter: {\r\n        compare: (a, b) => a.unit_id - b.unit_id,\r\n      },\r\n      render: (text, record) => {\r\n\r\n        return <ProductTypeSelector\r\n          field={\"unit_id\"}\r\n          productInfo={record}\r\n          setProductInfo={handleSave}\r\n          placeholder={\"Select *\"}\r\n          list={unitList}\r\n          displayField=\"name\"\r\n          idField=\"id\"\r\n          errorField = {errorField}\r\n          setErrorField = {setErrorField}\r\n        />\r\n      },\r\n    },\r\n    {\r\n      title: \"Pre-Instruction\",\r\n      dataIndex: \"pre_instruction\",\r\n      editable: true,\r\n      width:300,\r\n      sorter: {\r\n        compare: (a, b) => a.pre_instruction.localeCompare(b.pre_instruction),\r\n      },\r\n    },\r\n    {\r\n      title: \"Ingredient\",\r\n      dataIndex: \"ingredient_id\",\r\n      width:150,\r\n      sorter: {\r\n        compare: (a, b) => a.ingredient_id - b.ingredient_id,\r\n      },\r\n      render: (text, record) => {\r\n\r\n        return <ProductTypeSelector\r\n          field={\"name_id\"}\r\n          productInfo={record}\r\n          setProductInfo={handleSave}\r\n          placeholder={\"Select *\"}\r\n          list={nameList}\r\n          displayField=\"name\"\r\n          idField=\"id\"\r\n          errorField = {errorField}\r\n          setErrorField = {setErrorField}\r\n        />\r\n      },\r\n    },\r\n    {\r\n      title: \"Post-Instruction\",\r\n      dataIndex: \"post_instruction\",\r\n      width:300,\r\n      editable: true,\r\n      sorter: {\r\n        compare: (a, b) => a.post_instruction.localeCompare(b.post_instruction),\r\n      },\r\n    },\r\n    {\r\n      title: \"Procedure\",\r\n      dataIndex: \"procedure\",\r\n      width:300,\r\n      editable: true,\r\n      sorter: {\r\n        compare: (a, b) => a.procedure.localeCompare(b.procedure),\r\n      },\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      render: (text, record) => {\r\n\r\n        return <div size=\"middle\" direction={\"vertical\"}>\r\n          <a style={{ color: \"var(--blueColor)\" }} className=\"del-btn\" onClick={async () => {\r\n            var res = await showConfirmDlgWidget({ title: \"Delete Confirmation\", content: \"Are you sure to delete this record?\" });\r\n            if (res == false) return;\r\n            handleDelete(record)\r\n\r\n          }}>\r\n            Delete\r\n          </a>\r\n        </div>\r\n      },\r\n    },\r\n  ];\r\n  const dataSource = dataList.map((info) => {\r\n    return { ...info, key: info.key };\r\n  });\r\n  const edit_columns = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        editable: col.editable,\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        handleSave: handleSave,\r\n      }),\r\n    };\r\n  });\r\n  return (\r\n    <div>\r\n      <Table\r\n        pagination={{ defaultPageSize: 5, showSizeChanger: true, pageSizeOptions: ['5', '10', '15'] }}\r\n        columns={edit_columns}\r\n        dataSource={dataSource}\r\n        scroll={{ x: 900 }}\r\n        rowClassName={() => 'editable-row'}\r\n        components={components}\r\n        bordered\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(RecipeAddTableWidget)\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\BestDealPage\\BestDealDlgWidget\\showBestDealWidget.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\BestDealPage\\BestDealTopWidget\\BestDealTopWidget.js",["1621","1622"],"import React from 'react';\r\nimport CommonButton from 'components/ButtonWidgets/CommonButton/CommonButton';\r\nimport \"./BestDealTopWidget.css\"\r\nconst BestDealTopWidget = (props) => {\r\n    const { bestDealList } = props === undefined ? { bestDealList : undefined } : props\r\n    const { addDeal, totalCount } = props\r\n    var active_cnt = 0, total_cnt = 0, past_cnt = 0, future_cnt = 0;\r\n    if(bestDealList !== undefined && bestDealList.length>0){\r\n        let today = new Date();\r\n        today = `${today.getFullYear()}-${(\r\n            \"0\" +\r\n            (today.getMonth() + 1)\r\n        ).slice(-2)}-${(\"0\" + today.getDate()).slice(-2)}`;\r\n\r\n        active_cnt = bestDealList.filter(\r\n            (x) =>\r\n            x.is_active !=null && x.start_date !=null && x.end_date.localeCompare(today) >= 0 && x.start_date.localeCompare(today) <= 0 && x.is_active === true\r\n          ).length\r\n        total_cnt = bestDealList.filter(\r\n            (x) =>\r\n            x.end_date !=null && x.start_date !=null && x.end_date.localeCompare(today) >= 0 && x.start_date.localeCompare(today) <= 0\r\n          ).length\r\n     \r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <span className=\"header-add-button\">\r\n                <CommonButton \r\n                    onClick={addDeal}>\r\n                    Add New Best Deal\r\n                </CommonButton>\r\n            </span>\r\n            <div>\r\n                <span className=\"header-title\">Total Deals: {totalCount}</span>\r\n            </div>\r\n            <div className=\"promotions-status-widget-title-current\">\r\n                Current Deals(Active/Total):{\" \"}\r\n                { active_cnt }/{ total_cnt }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BestDealTopWidget;","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\BestDealPage\\BestDealTableWidget\\BestDealTableWidget.js",["1623","1624","1625","1626","1627","1628","1629","1630","1631","1632","1633","1634","1635","1636","1637","1638"],"import React, { useState } from \"react\";\r\nimport \"./BestDealTableWidget.css\";\r\nimport { Button, message, Popconfirm, Space, Table, Tag, Col, Row } from \"antd\";\r\nimport { withRouter } from \"react-router\";\r\nfunction BestDealTableWidget(props) {\r\n\r\n  const { setIsBusy, bestDealList, editBestDeal, deleteBestDeal, pagination, onPageHandler } = props;\r\n\r\n  const handleTableChange = (pagination, filters, sorter)=>{\r\n    onPageHandler(pagination, filters, sorter)\r\n  }\r\n  const OneProductItem = (props) => {\r\n    const { info } = props;\r\n    return <Col className=\"bestdeal-one-item\">\r\n      <div>\r\n        <img\r\n          src={info.thumbnail_image}\r\n          style={{ maxWidth: 100, maxHeight: 100 }}\r\n        />\r\n      </div>\r\n      <div className=\"best-one-item-txt\">{info.description}</div>\r\n    </Col>\r\n}\r\n  \r\n  const bestDealTableData = bestDealList.length==0 ? \"\" : bestDealList.map((info) => {\r\n    let deal = { ...info };\r\n    deal.key = deal.id;\r\n    const productItem = deal[deal.dealType][0]\r\n    let product = []\r\n    if(deal.dealType == \"SingleProduct\"){\r\n      product.push(productItem.product)\r\n    }else if(deal.dealType == \"ComboProduct\"){\r\n      if(productItem.combo_products.length>2){\r\n        for(let i = 0; i < productItem.combo_products.length; i++){\r\n          product.push(productItem.combo_products[i])\r\n        }\r\n      }else{\r\n        product = productItem.combo_products\r\n      }\r\n    }else if(deal. dealType == \"Buy1Get1Product\"){\r\n      for(let i = 0; i < productItem.buy_products.length; i++){\r\n        product.push(productItem.buy_products[i])\r\n      }\r\n      if(productItem.buy_products.length > 1){\r\n        if(productItem.free_products.length > 0){\r\n          product[2] = productItem.free_products[0]\r\n        }\r\n      }else if(productItem.buy_products.length == 1){\r\n        if(productItem.free_products.length > 0){\r\n          product[1] = productItem.free_products[0]\r\n        }\r\n      }else if(productItem.buy_products.length == 0){\r\n        if(productItem.free_products.length > 0){\r\n          product[0] = productItem.free_products[0]\r\n        }\r\n      }\r\n    }\r\n    deal.product = product\r\n    let store_names = deal.stores.map((x) => x.name)\r\n    deal.store_names = store_names;\r\n    return deal;\r\n  });\r\n\r\n  const columns = [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\",\r\n    },\r\n    {\r\n      title: \"Product\",\r\n      dataIndex: \"product\",\r\n      render: (info) => {\r\n        return (\r\n          <Row>\r\n            {info !== undefined ? info.map((x, index) => {\r\n                return <OneProductItem\r\n                    key={`id-${index}`}\r\n                    info={x}\r\n                />\r\n            }) : \"\"}\r\n          </Row>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"Price\",\r\n      dataIndex: \"product\",\r\n      render: (info) => {\r\n        return <div>R{info.selling_price}</div>;\r\n      },\r\n    },\r\n    {\r\n      title: \"Stores\",\r\n      dataIndex: \"store_names\",\r\n      render: (info) => {\r\n        return (\r\n          <span>\r\n            {info.map((tag) => {\r\n              return (\r\n                <Tag color={\"geekblue\"} key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              );\r\n            })}\r\n          </span>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"Start\",\r\n      dataIndex: \"start_date\",\r\n      sorter: {\r\n        compare: (a, b) => a.start_date.localeCompare(b.start_date),\r\n      },\r\n    },\r\n    {\r\n      title: \"End\",\r\n      dataIndex: \"end_date\",\r\n      sorter: {\r\n        compare: (a, b) => a.end_date.localeCompare(b.end_date),\r\n      },\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      dataIndex: \"status\",\r\n      render: (info) => {\r\n        let color =\"red\"\r\n          \r\n        return (\r\n          <Tag color={color}>\r\n            {info == undefined ? \"NEW\" : info.toUpperCase()}\r\n          </Tag>\r\n        );\r\n      },\r\n      sorter: {\r\n        compare: (a, b) => a.status.localeCompare(b.status),\r\n      },\r\n      onFilter: (value, record) => record.status.indexOf(value) === 0,\r\n      filters: [\r\n        \r\n      ],\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      render: (text, record) => (\r\n        <Space size=\"middle\" direction={\"vertical\"}>\r\n          <a\r\n            onClick={() => {\r\n              editBestDeal(record.id)\r\n            }}\r\n          >\r\n            Edit\r\n          </a>\r\n          <a onClick={() => {\r\n              deleteBestDeal(record.id)\r\n            }}\r\n            style={{ color: \"red\" }}\r\n            >\r\n          Delete</a>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"deal-table\">\r\n     <Table \r\n     columns={columns} \r\n     dataSource={bestDealTableData} \r\n     pagination={pagination}\r\n     onChange={handleTableChange}\r\n     scroll={{ x: 900 }} />\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(BestDealTableWidget);\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\LinkRoute.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\redux\\actions\\feedActions.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\InventoryCategoryPage\\CategoryListTableWidget\\CategoryListTableWidget.js",["1639","1640","1641"],"import React, { useState } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Col, Table, Row, List, Avatar} from \"antd\";\r\nimport { showColumnAction } from './CategoryListTableColumn';\r\nimport \"./CategoryListTableWidget.css\"\r\nimport { PicCenterOutlined } from '@ant-design/icons';\r\nfunction CategoryListTableWidget(props) {\r\n    const [isBusy, setIsBusy] = useState(false);\r\n    const { categoryList, onUpdateAction, onDeleteAction, } = props;\r\n    if (categoryList === undefined) return <div />\r\n    const listData = [\r\n      {\r\n        img : \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\r\n        title: 'CSV',\r\n        description : 'Export CSV File',\r\n      },\r\n      {\r\n        img : \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\r\n        title: 'PDF',\r\n        description : 'Export PDF File',\r\n      },\r\n      {\r\n        img : \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\r\n        title: 'DOC',\r\n        description : 'Export DOC File',\r\n      },\r\n      {\r\n        img : \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\r\n        title: 'Print share',\r\n        description : 'Make Print Share',\r\n      },\r\n    ];\r\n    const columns = [\r\n      {\r\n        title: \"ID\",\r\n        dataIndex: \"id\",\r\n        width : \"8%\"\r\n      },\r\n      {\r\n        title: \"Name\",\r\n        dataIndex: \"name\",\r\n\r\n        sorter: {\r\n          compare: (a, b) => a.name.localeCompare(b.name),\r\n        },\r\n      },\r\n      // {\r\n      //   title: \"Description\",\r\n      //   dataIndex: \"name\",\r\n      //   align: \"center\",\r\n      //   sorter: {\r\n      //     compare: (a, b) => a.name.localeCompare(b.name),\r\n      //   },\r\n      //   render: (text, record) => {\r\n      //     return <span>This is Testing Description.</span>\r\n      //   }\r\n      // },\r\n\r\n      {\r\n        title: \"Created Date\",\r\n        dataIndex: \"add_timestamp\",\r\n\r\n        sorter: {\r\n          compare: (a, b) => a.name.localeCompare(b.name),\r\n        },\r\n      },\r\n      {\r\n        title: \"Updated Date\",\r\n        dataIndex: \"update_timestamp\",\r\n        sorter: {\r\n          compare: (a, b) => a.name.localeCompare(b.name),\r\n        },\r\n      },\r\n      { title: \"Status\", \r\n        dataIndex: \"active\",\r\n        sorter: {\r\n          compare: (a, b) => a.active - b.active,\r\n        },\r\n        render: (text, record) => {\r\n          if (record.active === \"1\") {\r\n            return <span className = \"active-btn\">Active</span>\r\n          }\r\n          else {\r\n            return <span className = \"inactive-btn\">InActive</span>\r\n          }\r\n        }\r\n      },\r\n      {\r\n        title: \"Action\",\r\n        key: \"action\",\r\n        render: (text, record) => {\r\n          return showColumnAction(text, record, onUpdateAction, onDeleteAction)\r\n        },\r\n      },\r\n    ];\r\n    const categoryDataSource = categoryList.map((info) => {\r\n      return { ...info, key: info.id };\r\n    });\r\n    return (\r\n    <div>\r\n\r\n    <Row gutter={16}>\r\n    <Col xs={16} sm={16} md={16} lg={16} xl={20}>\r\n          <Table\r\n            pagination={{ defaultPageSize: 5, showSizeChanger: true, pageSizeOptions: ['5', '10', '15']}}\r\n            columns={columns}\r\n            dataSource={categoryDataSource}\r\n            scroll={{ x: 900 }}\r\n          />\r\n        </Col>\r\n        <Col xs={8} sm={8} md={8} lg={8} xl={4}>\r\n          <List\r\n          header={<div className=\"active-btn\">Export Available option :</div>}\r\n          itemLayout=\"horizontal\"\r\n          dataSource={listData}\r\n          renderItem={item => (\r\n            <List.Item>\r\n              <List.Item.Meta\r\n                avatar={<Avatar src={item.img}/>}\r\n                title={<a href=\"https://ant.design\">{item.title}</a>}\r\n                description={item.description}\r\n              />\r\n            </List.Item>\r\n          )}\r\n        />\r\n        </Col>\r\n       \r\n      </Row>\r\n        \r\n      </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(CategoryListTableWidget)\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\RecipeListPage\\TableWidget\\RecipeListTableWidget.js",["1642","1643","1644","1645","1646"],"import React, { useState } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Table, } from \"antd\";\r\nimport RecipeDetailTableWidget from './RecipeDetailTableWidget';\r\nimport { showConfirmDlgWidget } from 'components/ConfirmDlgWidget/showConfirmDlgWidget';\r\nimport { showColumnAction } from 'pages/InventoryCategoryPage/CategoryListTableWidget/CategoryListTableColumn';\r\n\r\nfunction RecipeListTableWidget(props) {\r\n    const [isBusy, setIsBusy] = useState(false);\r\n    const { dataList, onUpdateAction, onDeleteAction, ownCommonData } = props;\r\n    if (dataList === undefined || ownCommonData.categoryList === undefined) return <div />\r\n\r\n    function createMarkup(html) {\r\n        return { __html: html };\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: \"ID\",\r\n            dataIndex: \"id\",\r\n        },\r\n        {\r\n            title: \"Thumbnail\",\r\n            dataIndex: \"thumbnail_image\",\r\n            render: (text, record) => {\r\n                if (record.thumbnail_image === null) {\r\n                    return (\r\n                        <img className=\"thumbnail-img\" src={'/assets/icons/ic_picture.svg'} />\r\n                    )\r\n                }\r\n                else {\r\n                    return (\r\n                        <img className=\"thumbnail-img\" src={record.thumbnail_image} />\r\n                    )\r\n                }\r\n\r\n            },\r\n        },\r\n        {\r\n            title: \"Name\",\r\n            dataIndex: \"name\",\r\n            sorter: {\r\n                compare: (a, b) => a.name.localeCompare(b.name),\r\n            },\r\n        },\r\n\r\n        {\r\n            title: \"Description\",\r\n            dataIndex: \"description\",\r\n            sorter: {\r\n                compare: (a, b) => a.description.localeCompare(b.description),\r\n            },\r\n            render: (text, record) => {\r\n                return <div dangerouslySetInnerHTML={createMarkup(record.description)} />;\r\n            },\r\n        },\r\n        {\r\n            title: \"Category\",\r\n            dataIndex: \"category_id\",\r\n            sorter: {\r\n                compare: (a, b) => a.category_id - b.category_id,\r\n            },\r\n            render: (text, record) => {\r\n                const result = ownCommonData.categoryList.filter(item => item.id === record.category_id);\r\n                if (result.length === 0) {\r\n                    return \"Empty\";\r\n\r\n                }\r\n                else {\r\n                    return result[0].name;\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: \"Location\",\r\n            dataIndex: \"location_id\",\r\n            sorter: {\r\n                compare: (a, b) => a.location_id - b.location_id,\r\n            },\r\n            render: (text, record) => {\r\n                const result = ownCommonData.locationList.filter(item => item.id === record.location_id);\r\n                if (result.length === 0) {\r\n                    return \"Empty\";\r\n\r\n                }\r\n                else {\r\n                    return result[0].name;\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: \"Author\",\r\n            dataIndex: \"author\",\r\n            sorter: {\r\n                compare: (a, b) => a.author.localeCompare(b.author),\r\n            },\r\n        },\r\n        {\r\n            title: \"Sub Recipe\",\r\n            dataIndex: \"sub_recipe\",\r\n            sorter: {\r\n                compare: (a, b) => a.sub_recipe - b.sub_recipe,\r\n            },\r\n            render: (text, record) => {\r\n                if (record.sub_recipe === \"1\") {\r\n                    return <div className=\"active-btn\">Yes</div>\r\n                }\r\n                else {\r\n                    return <div className=\"inactive-btn\">No</div>\r\n                }\r\n            }\r\n        },\r\n        {\r\n            title: \"Salable\",\r\n            dataIndex: \"salable\",\r\n            sorter: {\r\n                compare: (a, b) => a.salable - b.salable,\r\n            },\r\n            render: (text, record) => {\r\n                if (record.salable === \"1\") {\r\n                    return <div className=\"active-btn\">Yes</div>\r\n                }\r\n                else {\r\n                    return <div className=\"inactive-btn\">No</div>\r\n                }\r\n            }\r\n        },\r\n        {\r\n            title: \"Active\",\r\n            dataIndex: \"active\",\r\n            sorter: {\r\n                compare: (a, b) => a.active - b.active,\r\n            },\r\n            render: (text, record) => {\r\n                if (record.active === \"1\") {\r\n                    return <div className=\"active-btn\">Yes</div>\r\n                }\r\n                else {\r\n                    return <div className=\"inactive-btn\">No</div>\r\n                }\r\n            }\r\n        },\r\n        {\r\n            title: \"Created Date\",\r\n            dataIndex: \"add_timestamp\",\r\n            align : \"center\",\r\n            sorter: {\r\n                compare: (a, b) => a.name.localeCompare(b.name),\r\n            },\r\n        },\r\n        {\r\n            title: \"Updated Date\",\r\n            dataIndex: \"update_timestamp\",\r\n            align: \"center\",\r\n            sorter: {\r\n                compare: (a, b) => a.name.localeCompare(b.name),\r\n            },\r\n        },\r\n        {\r\n            title: \"Action\",\r\n            key: \"action\",\r\n            render: (text, record) => {\r\n                return showColumnAction(text, record, onUpdateAction, onDeleteAction)\r\n            },\r\n        },\r\n    ];\r\n    const dataSource = dataList.map((info) => {\r\n        return { ...info, key: info.id };\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Table\r\n                pagination={{ defaultPageSize: 5, showSizeChanger: true, pageSizeOptions: ['5', '10', '15'] }}\r\n                columns={columns}\r\n                dataSource={dataSource}\r\n                scroll={{ x: 900 }}\r\n                expandedRowRender={record => {\r\n                    if (record.guideList.length !== 0) {\r\n                        return <RecipeDetailTableWidget\r\n                            dataList={record.guideList}\r\n                            ownCommonData={ownCommonData}\r\n                            onUpdateAction={onUpdateAction}\r\n                            onDeleteAction={onDeleteAction} />\r\n                    }\r\n                    else {\r\n                        return <div className=\"ant-table-expanded-row-fixed\" style={{ width: \"1428px\", position: 'sticky', left: 0, overflow: 'hidden' }}>\r\n                            <div className=\"ant-empty ant-empty-normal\">\r\n                                <div className=\"ant-empty-image\">\r\n                                    <svg className=\"ant-empty-img-simple\" width=\"64\" height=\"41\" viewBox=\"0 0 64 41\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                        <g transform=\"translate(0 1)\" fill=\"none\" fillRule=\"evenodd\">\r\n                                            <ellipse className=\"ant-empty-img-simple-ellipse\" cx=\"32\" cy=\"33\" rx=\"32\" ry=\"7\"></ellipse>\r\n                                            <g className=\"ant-empty-img-simple-g\" fillRule=\"nonzero\">\r\n                                                <path d=\"M55 12.76L44.854 1.258C44.367.474 43.656 0 42.907 0H21.093c-.749 0-1.46.474-1.947 1.257L9 12.761V22h46v-9.24z\"></path><path d=\"M41.613 15.931c0-1.605.994-2.93 2.227-2.931H55v18.137C55 33.26 53.68 35 52.05 35h-40.1C10.32 35 9 33.259 9 31.137V13h11.16c1.233 0 2.227 1.323 2.227 2.928v.022c0 1.605 1.005 2.901 2.237 2.901h14.752c1.232 0 2.237-1.308 2.237-2.913v-.007z\" className=\"ant-empty-img-simple-path\"></path>\r\n                                            </g>\r\n                                        </g>\r\n                                    </svg>\r\n                                </div>\r\n                                <div className=\"ant-empty-description\">No Data</div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(RecipeListTableWidget)","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\services\\dashboardService.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\services\\InventoryGroupService.js",["1647"],"import { axiosGet, axiosPost } from \"./ajaxServices\";\r\nimport { urlGetInventoryName} from \"./CONSTANTS\";\r\n\r\nexport const apiGetInventoryName = () => {\r\n  const url = urlGetInventoryName;\r\n  return new Promise((resolve, reject) => {\r\n    axiosGet(url)\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\services\\profileService.js",["1648","1649","1650","1651"],"import { axiosDelete, axiosGet, axiosPost, axiosPut } from \"./ajaxServices\";\r\nimport { urlGetProfileInfo, urlGetVendorInfo, urlUpdateProfileInfo, urlUpdateVendorInfo } from \"./CONSTANTS\";\r\nexport const apiGetProfileInfo = () => {\r\n    const url = urlGetProfileInfo;\r\n    return new Promise((resolve, reject) => {\r\n      axiosGet(url)\r\n        .then((res) => {\r\n          resolve(res);\r\n        })\r\n        .catch((err) => {\r\n          reject(err);\r\n        });\r\n    });\r\n};\r\nexport const apiGetVendorInfo = () => {\r\n    const url = urlGetVendorInfo;\r\n    return new Promise((resolve, reject) => {\r\n      axiosGet(url)\r\n        .then((res) => {\r\n          resolve(res);\r\n        })\r\n        .catch((err) => {\r\n          reject(err);\r\n        });\r\n    });\r\n};\r\nexport function apiUpdateProfile(userData, new_image_url) {\r\n    const url = urlUpdateProfileInfo;\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n    var formData = new FormData();\r\n    formData.append(\"first_name\", userData.first_name);\r\n    formData.append(\"last_name\", userData.last_name);\r\n    formData.append(\"email\", userData.email);\r\n    formData.append(\"countryCode\", userData.countryCode);\r\n    formData.append(\"phoneNumber\", userData.phoneNumber);\r\n    formData.append(\"old_password\", userData.old_password);\r\n    formData.append(\"new_password\", userData.new_password);\r\n    if (new_image_url != undefined) {\r\n      if (new_image_url instanceof File) {\r\n        formData.append(\"new_image_url\", new_image_url);\r\n      }\r\n    }\r\n  \r\n    return new Promise((resolve, reject) => {\r\n      axiosPost(url, formData, config)\r\n      .then(function (response) {\r\n        resolve(response);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n    });\r\n    \r\n}\r\nexport function apiUpdateVendor(vendorData, new_image_url) {\r\n  const url = urlUpdateVendorInfo;\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  var formData = new FormData();\r\n  formData.append(\"new_email\", vendorData.email);\r\n  formData.append(\"new_phone\", vendorData.phone);\r\n  formData.append(\"new_name\", vendorData.name);\r\n  formData.append(\"new_site\", vendorData.website);\r\n  if (new_image_url != undefined) {\r\n    if (new_image_url instanceof File) {\r\n      formData.append(\"new_logo\", new_image_url);\r\n    }\r\n  }\r\n\r\n  return new Promise((resolve, reject) => {\r\n    axiosPost(url, formData, config)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });\r\n  \r\n}","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\services\\recipeService.js",["1652","1653","1654"],"import { ConsoleSqlOutlined } from \"@ant-design/icons\";\r\nimport { axiosDelete, axiosGet, axiosPost, axiosPut } from \"./ajaxServices\";\r\nimport { urlCreateRecipe, urlGetRecipeList, urlDeleteRecipe, urlGetRecipeById, urlUpdateRecipe} from \"./CONSTANTS\";\r\n\r\nexport function apiCreateRecipe(recipeData) {\r\n  const url = urlCreateRecipe;\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  var formData = new FormData();\r\n  formData.append(\"name\", recipeData.name);\r\n  formData.append(\"description\", recipeData.description);\r\n  formData.append(\"category_id\", recipeData.category_id);\r\n  formData.append(\"location_id\", recipeData.location_id);\r\n  formData.append(\"unit_id\", recipeData.unit_id);\r\n  formData.append(\"active\", recipeData.active);\r\n  formData.append(\"salable\", recipeData.salable);\r\n  formData.append(\"sub_recipe\", recipeData.sub_recipe);\r\n  formData.append(\"author\", recipeData.author);\r\n  formData.append(\"guideList\", JSON.stringify(recipeData.guideList));\r\n  if (recipeData.image_name instanceof File) {\r\n    formData.append(\"image_name\", recipeData.image_name);\r\n  }\r\n  return new Promise((resolve, reject) => {\r\n    axiosPost(url, formData, config)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });\r\n}\r\n\r\nexport function apiUpdateRecipe(recipeData) {\r\n  const url = urlUpdateRecipe;\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  var formData = new FormData();\r\n  formData.append(\"id\", recipeData.id);\r\n  formData.append(\"name\", recipeData.name);\r\n  formData.append(\"description\", recipeData.description);\r\n  formData.append(\"category_id\", recipeData.category_id);\r\n  formData.append(\"location_id\", recipeData.location_id);\r\n  formData.append(\"unit_id\", recipeData.unit_id);\r\n  formData.append(\"active\", recipeData.active);\r\n  formData.append(\"salable\", recipeData.salable);\r\n  formData.append(\"sub_recipe\", recipeData.sub_recipe);\r\n  formData.append(\"author\", recipeData.author);\r\n  formData.append(\"guideList\", JSON.stringify(recipeData.guideList));\r\n  if (recipeData.image_name instanceof File) {\r\n    formData.append(\"image_name\", recipeData.image_name);\r\n  }\r\n  return new Promise((resolve, reject) => {\r\n    axiosPost(url, formData, config)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });\r\n}\r\n\r\n\r\nexport const apiGetRecipeList = () => {\r\n  const url = urlGetRecipeList;\r\n  return new Promise((resolve, reject) => {\r\n    axiosGet(url)\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\n\r\nexport function apiDeleteRecipe(id) {\r\n  const url = urlDeleteRecipe;\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  var formData = new FormData();\r\n  formData.append(\"id\", id);\r\n  return new Promise((resolve, reject) => {\r\n    axiosPost(url, formData, config)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });\r\n}\r\n\r\n\r\nexport function apiGetRecipeById(id) {\r\n  const url = urlGetRecipeById;\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  var formData = new FormData();\r\n  formData.append(\"id\", id);\r\n  return new Promise((resolve, reject) => {\r\n    axiosPost(url, formData, config)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });\r\n}","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\utils\\GlobalFunctions.js",["1655","1656","1657"],"export const isEmpty = (list, field, errorList) => {\r\n  if (list[field] === undefined || list[field] === \"\") {\r\n    var res = [...errorList, field];\r\n    return res;\r\n  }\r\n  return errorList;\r\n};\r\n\r\nexport const onlyUnique = (value, index, self) => {\r\n  return self.indexOf(value) === index;\r\n};\r\n\r\nexport const ValidateEmail = (email) => {\r\n  var pattern = new RegExp(\r\n    /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i\r\n  );\r\n  if (!pattern.test(email)) {\r\n    return false;\r\n  } else {\r\n    return true;\r\n  }\r\n}\r\nexport const ValidPhone = (str)=>{\r\n  var isphone = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im.test(\r\n      str\r\n  );\r\n  return isphone;\r\n}","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\services\\inventoryService.js",["1658","1659"],"import { axiosDelete, axiosGet, axiosPost, axiosPut } from \"./ajaxServices\";\r\nimport { urlGetInventoryList, urlCreateIventory, urlInventoryBasicData, urlUpdateIventory, urlDeleteIventory } from \"./CONSTANTS\";\r\n\r\nexport const apiGetInventoryList = () => {\r\n  const url = urlGetInventoryList;\r\n  return new Promise((resolve, reject) => {\r\n    axiosGet(url)\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport const apiGetInventoryBasicData = () => {\r\n  const url = urlInventoryBasicData;\r\n  return new Promise((resolve, reject) => {\r\n    axiosGet(url)\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport function apiCreateInventory(inventoryData) {\r\n  const url = urlCreateIventory;\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  var formData = new FormData();\r\n  formData.append(\"name_id\", inventoryData.name_id);\r\n  formData.append(\"description\", inventoryData.description);\r\n  formData.append(\"category_id\", inventoryData.category_id);\r\n  formData.append(\"location_id\", inventoryData.location_id);\r\n  formData.append(\"category\", inventoryData.category);\r\n  formData.append(\"unit_id\", inventoryData.unit_id);\r\n  formData.append(\"description\", inventoryData.description);\r\n  formData.append(\"qty\", inventoryData.qty);\r\n  formData.append(\"spoilage\", inventoryData.spoilage);\r\n  formData.append(\"price_per_unit\", inventoryData.price_per_unit);\r\n\r\n  \r\n  if (inventoryData.image_name instanceof File) {\r\n    formData.append(\"image_name\", inventoryData.image_name);\r\n  }\r\n  return new Promise((resolve, reject) => {\r\n    axiosPost(url, formData, config)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });\r\n}\r\n\r\n\r\nexport function apiUpdateInventory(inventoryData) {\r\n  const url = urlUpdateIventory;\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  var formData = new FormData();\r\n  formData.append(\"id\", inventoryData.id);\r\n  formData.append(\"name_id\", inventoryData.name_id);\r\n  formData.append(\"description\", inventoryData.description);\r\n  formData.append(\"category_id\", inventoryData.category_id);\r\n  formData.append(\"location_id\", inventoryData.location_id);\r\n  formData.append(\"category\", inventoryData.category);\r\n  formData.append(\"unit_id\", inventoryData.unit_id);\r\n  formData.append(\"description\", inventoryData.description);\r\n  formData.append(\"qty\", inventoryData.qty);\r\n  formData.append(\"spoilage\", inventoryData.spoilage);\r\n  formData.append(\"price_per_unit\", inventoryData.price_per_unit);\r\n\r\n  if (inventoryData.image_name instanceof File) {\r\n    formData.append(\"image_name\", inventoryData.image_name);\r\n  }\r\n  return new Promise((resolve, reject) => {\r\n    axiosPost(url, formData, config)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });\r\n}\r\n\r\n\r\nexport function apiDeleteInventory(id) {\r\n  const url = urlDeleteIventory;\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  var formData = new FormData();\r\n  formData.append(\"id\", id);\r\n  return new Promise((resolve, reject) => {\r\n    axiosPost(url, formData, config)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });\r\n}","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\CommonDivWidget\\CommonDivWidget.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\ProductPage\\ActiveProductPanel\\ActiveProductPanel.js",["1660","1661"],"import React, { useState, useEffect } from 'react';\r\nimport { Col, message, Row, Collapse } from \"antd\";\r\nimport { apiGetActiveProductData } from 'services/productService';\r\nimport OneProduct from '../MyProductPanel/OneProduct/OneProduct';\r\n\r\nconst { Panel } = Collapse;\r\nconst ActiveProductPanel = (props) => {\r\n    const [isBusy, setIsBusy] = useState(false);\r\n    const [activeProductList, setActiveProductList] = useState([]);\r\n\r\n    const { activeKey, setActiveKey } = props;\r\n    \r\n    useEffect(() => {\r\n        setIsBusy(true);\r\n        apiGetActiveProductData()\r\n            .then((data) => {\r\n                setIsBusy(false);\r\n                setActiveProductList(data);\r\n            })\r\n            .catch((err) => {\r\n                setIsBusy(false);\r\n                message.error(\"Server failed. \" + err);\r\n            });\r\n    }, []);\r\n\r\n    const activeProductUIList =\r\n    activeProductList == undefined ? (\r\n      <div className=\"dont-have-product\">\r\n        You don't have any favourite products\r\n      </div>\r\n    ) : ( activeProductList.map((info, index) => {\r\n        let brand = info.Brand.name\r\n        let category = info.Category.title\r\n        let pack_size = info.PackSize.name\r\n        let unit = info.Unit.name\r\n        return (\r\n            <Col xs={24} sm={8} md={8} lg={8} xl={4} key={info.barcode}>\r\n              <OneProduct\r\n                key={info.barcode}\r\n                productInfo={info}\r\n                brand={brand}\r\n                category={category}\r\n                pack_size={pack_size}\r\n                unit={unit}\r\n                />\r\n            </Col>\r\n        );\r\n      }));\r\n    function callback(key) {\r\n        setActiveKey(3);\r\n    }\r\n    return (\r\n        <div>\r\n            <Collapse className=\"custom-collapse\" activeKey={[activeKey]} onChange={callback}>\r\n                <Panel showArrow={false} header=\"Active Products\" key=\"3\">\r\n                    <Row align={'middle'} gutter={16} style={{marginTop:\"10px\"}} className=\"product-page-active-products\">\r\n                        {activeProductUIList}\r\n                    </Row>\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ActiveProductPanel;","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\CodeVerificationWidget\\CodeVerificationWidget.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\SidebarWidget\\SidebarWidget.js",["1662","1663"],"import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Layout, Menu, Divider } from \"antd\";\r\nimport { MENU_ITEMS, } from \"navigation/CONSTANTS\";\r\nimport collapseIcon from '../../assets/icons/ic_collapse.svg'\r\nimport \"./SidebarWidget.css\";\r\n\r\nimport { IconWidget } from \"components/IconWidget/IconWidget\";\r\n\r\nimport { ChangeMenuCollapsed, UpdateCurrentRoot } from \"redux/actions/appActions\";\r\nconst { SubMenu } = Menu;\r\n\r\nconst SidebarWidget = (props) => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const appDataStore = useSelector(x => x.appDataStore);\r\n    const { collapsed, width, currentRoute} = appDataStore;\r\n    \r\n    const menuUI = MENU_ITEMS.filter((x)=>x.type == \"sidebar\").map((info, index) => {\r\n        if (info.submenu !== undefined && info.submenu.length > 0) {\r\n            let subMenuUI = info.submenu.filter((x)=>x.type == \"sidebar\").map((subInfo, subIndex) => {\r\n                return <Menu.Item className=\"c-menu-item\" key={subInfo.route} icon={subInfo.icon} onClick={() => { history.push(subInfo.route) }}>\r\n                {subInfo.title}\r\n                </Menu.Item>\r\n            })\r\n            return <SubMenu className=\"c-menu-item\" key={info.route} icon={info.icon} title={info.title}>\r\n               {subMenuUI}\r\n            </SubMenu>\r\n        }\r\n        return <Menu.Item className=\"c-menu-item\" key={info.route} icon={info.icon} onClick={() => { history.push(info.route) }}>\r\n            {info.title}\r\n        </Menu.Item>\r\n    })\r\n    const onToggleCollapsed = () => {\r\n        dispatch(ChangeMenuCollapsed({ collapsed: !collapsed }))\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"logo\">\r\n                <img\r\n                    style={{ maxWidth: \"80%\", maxHeight: 200 }}\r\n                    src={'/assets/images/logo.png'}\r\n                    alt=\"kalaecafe\"\r\n                />\r\n                {\r\n                width > 1024 ? \r\n                <div className=\"side-collapse\" onClick={() => { onToggleCollapsed(); }}>\r\n                    <IconWidget Icon={collapseIcon} />\r\n                </div>\r\n                :<div></div>}\r\n            </div>\r\n            <Divider />\r\n            <div className=\"layout-store-name\"></div>\r\n            <Menu\r\n                mode=\"inline\"\r\n                defaultSelectedKeys={[currentRoute]}\r\n                className=\"c-menu\"\r\n                onSelect={(v) => {\r\n                    dispatch(UpdateCurrentRoot({ currentRoute: v.key }))\r\n                }}\r\n            >\r\n                {menuUI}\r\n            </Menu>\r\n            <Layout>\r\n                {props.children}\r\n            </Layout>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SidebarWidget;","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\InventoryPage\\AddInventoryDialog\\ProductImageWidget.js",["1664","1665","1666","1667","1668"],"// @flow strict\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { PictureOutlined } from \"@ant-design/icons\";\r\n// avatarBlank\r\nfunction ProductImageWidget(props) {\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n  const { productInfo, setProductInfo } = props;\r\n  const { errorField, setErrorField } = props;\r\n  useEffect(() => {\r\n    // console.log(\"image loaded\", imageUrl);\r\n    if (\r\n      productInfo.thumbnail_image !== undefined &&\r\n      productInfo.thumbnail_image !== \"\" &&\r\n      (imageUrl === \"\" || imageUrl === undefined)\r\n    ) {\r\n      setImageUrl(productInfo.thumbnail_image);\r\n    }\r\n  }, [productInfo]);\r\n  const onDropImage = async (e) => {\r\n    // console.log(\"/////////////////\");\r\n    const files = Array.from(e.target.files);\r\n    if (files.length === 0) return;\r\n    setImageUrl(URL.createObjectURL(files[0]));\r\n    setProductInfo({ ...productInfo, image_name: files[0] });\r\n  };\r\n  //   product-image-widget-error\r\n  return (\r\n    <div className=\"product-image-widget\">\r\n      <label htmlFor=\"upload_product_image\">\r\n        <input\r\n          type=\"file\"\r\n          id=\"upload_product_image\"\r\n          name=\"upload_product_image\"\r\n          style={{ display: \"none\" }}\r\n          accept=\"image/x-png,image/gif,image/jpeg\"\r\n          onChange={onDropImage}\r\n        />\r\n        {imageUrl == null || imageUrl == \"\" ? (\r\n          <img\r\n            className={\r\n              \"product-image-widget-image \" +\r\n              (errorField.includes(\"image_name\") ? \"product-image-widget-error\" : \"\")\r\n            }\r\n            src={'/assets/icons/ic_picture.svg'}\r\n            alt=\"Kalaecafe\"\r\n                />\r\n        ) : (\r\n          <img src={imageUrl} className={\"product-image-widget-image \"} />\r\n        )}\r\n        <div style={{ textAlign: \"center\", cursor: \"pointer\", marginBottom: \"10px\" }}>click here to insert image</div>\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductImageWidget;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\SearchWidget\\TitleSearch.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\InventoryPage\\AddInventoryDialog\\showAddInventoryDialog.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\IconWidget\\IconWidget.js",["1669"],"import './IconWidget.css'\r\nexport const IconWidget = (props) => {\r\n    return <img src={props.Icon} className=\"icon-widget\" />\r\n}","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\ProductPage\\FavouriteProductPanel\\FavouriteProductPanel.js",["1670","1671","1672","1673","1674","1675","1676"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Col, message, Row, Collapse } from \"antd\";\r\nimport { apiGetFavoriteData, apiAddFavoriteProduct, apiDeleteFavoriteProduct } from 'services/productService';\r\nimport { CloseOutlined } from \"@ant-design/icons\";\r\nimport OneProduct from '../MyProductPanel/OneProduct/OneProduct';\r\n\r\nimport \"./FavouriteProductPanel.css\";\r\nimport ProductSearch from './ProductSearch/ProductSearch';\r\nimport { showConfirmDlgWidget } from 'components/ConfirmDlgWidget/showConfirmDlgWidget';\r\n\r\n\r\nconst { Panel } = Collapse;\r\nconst FavouriteProductPanel = (props) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const appDataStore = useSelector(x => x.appDataStore);\r\n    const { collapsed, width } = appDataStore;\r\n\r\n    \r\n    const [isBusy, setIsBusy] = useState(false);\r\n    const [favouriteProductList, setFavouriteProductList] = useState([]);\r\n    const [detail_button_flag, setDetailShown] = useState(false);\r\n\r\n    const { activeKey, setActiveKey } = props;\r\n\r\n    const userDataStore = useSelector(x => x.userDataStore);\r\n    useEffect(() => {\r\n        if (userDataStore.token === undefined || userDataStore.token === \"\") {\r\n            return;\r\n        }\r\n        getProductFavoriteList();\r\n    }, []);\r\n\r\n\r\n    const getProductFavoriteList = () => {\r\n        setIsBusy(true);\r\n        apiGetFavoriteData()\r\n            .then((data) => {\r\n                setIsBusy(false);\r\n                setFavouriteProductList(data);\r\n            })\r\n            .catch((err) => {\r\n                setIsBusy(false);\r\n                message.error(\"Server failed. \" + err);\r\n            });\r\n    };\r\n\r\n    const onSelectProduct = (pInfo) => {\r\n        let param = { barcode: pInfo.barcode }\r\n        apiAddFavoriteProduct(param)\r\n            .then((data) => {\r\n                setIsBusy(false);\r\n                var tmpStoreList = favouriteProductList == undefined ? [] : [...favouriteProductList];\r\n                tmpStoreList = [...tmpStoreList, { ...data }];\r\n                setFavouriteProductList(tmpStoreList);\r\n            })\r\n            .catch((err) => {\r\n                setIsBusy(false);\r\n                message.error(\"Server failed. \" + err);\r\n            });\r\n    }\r\n\r\n    const onDeleteFavoriteProduct = (barcode) => {\r\n        setIsBusy(true);\r\n        apiDeleteFavoriteProduct(barcode)\r\n            .then((data) => {\r\n                setIsBusy(false);\r\n                setFavouriteProductList(data);\r\n            })\r\n            .catch((err) => {\r\n                setIsBusy(false);\r\n                message.error(\"Server error. \" + err);\r\n            });\r\n    }\r\n\r\n    const favouriteProductUIList =\r\n    favouriteProductList == undefined ? (\r\n      <div className=\"dont-have-product\">\r\n        You don't have any favourite products\r\n      </div>\r\n    ) : (\r\n      favouriteProductList.map((info, index) => {\r\n        try {\r\n            let brand = info.Brand.name\r\n            let category = info.Category.title\r\n            let pack_size = info.PackSize.name\r\n            let unit = info.Unit.name\r\n\r\n          return (\r\n            <Col xs={24} sm={8} md={8} lg={8} xl={4} key={info.barcode} style={{ marginTop: 10 }}>\r\n              <div className=\"favourite-product-container\"\r\n                    onMouseEnter={() => setDetailShown(true)}\r\n                    onMouseLeave={() => setDetailShown(false)}\r\n              >\r\n                <OneProduct\r\n                  key={info.barcode}\r\n                  productInfo={info}\r\n                  brand={brand}\r\n                  category={category}\r\n                  pack_size={pack_size}\r\n                  unit={unit}/>\r\n                <div style={(collapsed && width >= 1920)?{right:\"38px\"}:{}} className=\"favourite-product-remove-button\"\r\n                    onClick={async() => {\r\n                        onDeleteFavoriteProduct(info.barcode)\r\n                    }}\r\n                >\r\n                    <CloseOutlined />\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          );\r\n        } catch (e) {\r\n          return <div key={`error-product-${index}`}></div>;\r\n        }\r\n      })\r\n    );\r\n    function callback(key) {\r\n        setActiveKey(2);\r\n    }\r\n    return (\r\n        <div>\r\n            <Collapse className=\"custom-collapse\" activeKey={[activeKey]} onChange={callback}>\r\n                <Panel showArrow={false} header=\"Favourite Products\" key=\"2\">\r\n                    <ProductSearch ownProducts={favouriteProductList} onSelectProduct={onSelectProduct}></ProductSearch>\r\n                    <Row align={'middle'} gutter={16} style={{marginTop:\"10px\"}} className=\"product-page-favourite-products\">\r\n                        {favouriteProductUIList}\r\n                    </Row>\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FavouriteProductPanel;","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\ProductPage\\MyProductPanel\\MyProductPanel.js",["1677","1678","1679","1680","1681"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport { Col, message, Row, Collapse } from \"antd\";\r\nimport { apiGetMyProductList, apiCreateProduct, apiUpdateProduct, apiDeleteProduct } from 'services/productService';\r\nimport OneProduct from './OneProduct/OneProduct';\r\n\r\nimport \"./MyProductPanel.css\";\r\nimport { showAddProductDialog } from './AddProductDialog/showAddProductDialog';\r\n\r\nconst { Panel } = Collapse;\r\n\r\nconst MyProductPanel = (props) => {\r\n    \r\n    const [mProductList, setMyProductList] = useState([]);\r\n    const { activeKey, setActiveKey,isBusy, setIsBusy } = props;\r\n    useEffect(() => {\r\n        getMyProductList();\r\n    }, []);\r\n\r\n    const getMyProductList = () => {\r\n        setIsBusy(true);\r\n        apiGetMyProductList()\r\n            .then((data) => {\r\n                setIsBusy(false);\r\n                setMyProductList(data);\r\n            })\r\n            .catch((err) => {\r\n                setIsBusy(false);\r\n                message.error(\"Server failed. \" + err);\r\n            });\r\n    };\r\n    \r\n    const  addNewProduct = async() => {\r\n        var res = await showAddProductDialog({\r\n            title: \"Add Product\",\r\n            canAddNewUnits: true,\r\n          });\r\n          if (res === null) return;\r\n          setIsBusy(true);\r\n          apiCreateProduct(res)\r\n            .then((data) => {\r\n              setIsBusy(false);\r\n              if (data === null) {\r\n                message.error(\"There's something wrong while creating a product\");\r\n              }\r\n              let updateData = [...mProductList];\r\n              updateData = [data, ...updateData];\r\n              setMyProductList(updateData);\r\n            })\r\n          .catch((err) => {\r\n              setIsBusy(false);\r\n              message.error(\"Server failed. \" + err);\r\n          });\r\n\r\n    }\r\n\r\n    const onClickEdit = async(pInfo) => {\r\n      \r\n      let info = pInfo\r\n      info['brand'] = pInfo.Brand.id\r\n      info['category'] = pInfo.Category.id\r\n      info['pack_size'] = pInfo.PackSize.id\r\n      info['unit'] = pInfo.Unit.id\r\n      \r\n      var res = await showAddProductDialog({\r\n        title: \"Edit Product\",\r\n        productInfo: info,\r\n        canAddNewUnits: false,\r\n      });\r\n      if (res === null) return;\r\n\r\n      setIsBusy(true);\r\n      apiUpdateProduct(res)\r\n        .then((data) => {\r\n          setIsBusy(false);\r\n          if (data === null) {\r\n            message.error(\"There's something wrong while creating a product\");\r\n          }\r\n          var tmpProductList = [...mProductList];\r\n          var pIndex = tmpProductList.findIndex(x => x.barcode == data.barcode);\r\n          tmpProductList[pIndex] = data;\r\n          setMyProductList(tmpProductList);\r\n        })\r\n        .catch((err) => {\r\n            setIsBusy(false);\r\n            message.error(\"Server failed. \" + err);\r\n      });\r\n    }\r\n    const onClickDelete = (pInfo) => {\r\n      setIsBusy(true);\r\n      apiDeleteProduct(pInfo.barcode)\r\n          .then((data) => {\r\n              setIsBusy(false);\r\n              setMyProductList(data);\r\n          })\r\n          .catch((err) => {\r\n              setIsBusy(false);\r\n              message.error(\"Server error. \" + err);\r\n          });\r\n    }\r\n    const vendorProductUIList = mProductList == undefined ? \"\": mProductList.map((info, index) => {\r\n      let brand = info.Brand.name\r\n      let category = info.Category.title\r\n      let pack_size = info.PackSize.name\r\n      let unit = info.Unit.name\r\n    \r\n        return (\r\n          <Col xs={24} sm={8} md={8} lg={8} xl={4} key={info.barcode}>\r\n            <OneProduct\r\n              productInfo={info}\r\n              brand={brand}\r\n              category={category}\r\n              pack_size={pack_size}\r\n              unit={unit}\r\n              product_status={info.product_status}\r\n              onClickEdit={onClickEdit}\r\n              onClickDelete={onClickDelete}\r\n            />\r\n          </Col>\r\n        );\r\n      });\r\n      function callback(key) {\r\n        setActiveKey(1);\r\n      }\r\n      return (\r\n        <Collapse className=\"custom-collapse\" activeKey={[activeKey]} onChange={callback}>\r\n          <Panel showArrow={false} header=\"My Own Products\"\r\n                extra={\r\n                  <div onClick={e => e.stopPropagation()}>\r\n                  <span className=\"custom-collapse-text\" onClick={addNewProduct}>\r\n                      Upload new product\r\n                  </span>\r\n                  </div>\r\n              }\r\n              key=\"1\" \r\n              >\r\n                  <Row align={'middle'} gutter={16} className=\"product-page-my-product\">\r\n                      {vendorProductUIList}\r\n                  </Row>\r\n          </Panel>\r\n        </Collapse>\r\n      );\r\n};\r\n\r\nexport default MyProductPanel;","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\StorePage\\FeaturedStoreModal\\showFeaturedStoreModal.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\StorePage\\StoreDetailModal\\showStoreDetailModal.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\ButtonWidgets\\ButtonWithIcon\\ButtonWithIcon.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\ButtonWidgets\\CommonButton\\CommonButton.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\StorePage\\StoreListTableWidget\\StoreListTableWidget.js",["1682","1683","1684"],"\r\nimport React from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { useState } from \"react\";\r\nimport { Table } from \"antd\";\r\nimport { showInfoAlert, showColumnFeature, showColumnStoreType, showColumnAction} from \"./StoreListTableColumn\"\r\nimport \"./StoreListTableWidget.css\";\r\n\r\nfunction StoreListTableWidget(props) {\r\n  \r\n  const [isBusy, setIsBusy] = useState(false);\r\n  const { storeList, onUpdateStore, onDeleteStore, onFeatured } = props;\r\n  if (storeList === undefined) return <div />\r\n\r\n  const columns = [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\",\r\n    },\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      sorter: {\r\n        compare: (a, b) => a.name.localeCompare(b.name),\r\n      },\r\n    },\r\n    { title: \"Address\", dataIndex: \"street\" },\r\n    {\r\n      title: \"Featured\",\r\n      render: (info) => {\r\n        return showColumnFeature(info, onFeatured)\r\n      },\r\n    },\r\n    {\r\n      title: \"Type\",\r\n      dataIndex: \"store_type\",\r\n      sorter: {\r\n        compare: (a, b) => a.store_type.localeCompare(b.store_type),\r\n      },\r\n      render: (info, record) => {\r\n        return showColumnStoreType(info, record)\r\n      },\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      render: (text, record) => {\r\n        return showColumnAction(text, record, onUpdateStore, onDeleteStore)\r\n      },\r\n    },\r\n  ];\r\n  \r\n  const storeDataSource = storeList.map((store) => {\r\n    return { ...store, key: store.id };\r\n  });\r\n  return (\r\n    <div className=\"store-status-widget\">\r\n      <Table\r\n        columns={columns}\r\n        dataSource={storeDataSource}\r\n        scroll={{ x: 900 }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(StoreListTableWidget);\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\services\\ajaxServices.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\services\\CONSTANTS.js",["1685"],"import { googleKey } from \"config/CONSTANTS\";\r\nexport const GET_ALL_USERS = () => `/data/users`; ////// will remove soon\r\nexport const GET_USER_DETAILS = (id) => `/data/user`; ////// will remove soon\r\n\r\nexport const BASE_URL = \"http://192.168.0.72/000_work/hlx_node/test/ju/backEnd/mobile\";\r\n\r\n//export const BASE_URL = \"http://192.168.0.57:8000/vendor_api/v3\";\r\n// export const BASE_URL = \"https://test.admin.seemesave.com/vendor_api/v3\";\r\n// export const BASE_URL = \"https://admin.seemesave.com/vendor_api/v3\";\r\nexport const urlUserLogin = BASE_URL + \"/main/login\";\r\nexport const urlUserActivate = BASE_URL + \"/vendor/register/\";\r\nexport const urlUserResendActivationCode = BASE_URL + \"/user/send-activate-code/\";\r\nexport const urlUserUpdate = BASE_URL + \"/user/user-mgr/\";\r\nexport const urlUserRegister = BASE_URL + \"/user/register/\";\r\nexport const urlUserVerifyAccount = BASE_URL + \"/user/forgot-password/\";\r\nexport const urlUserChangePassword = BASE_URL + \"/user/forgot-password/\";\r\n\r\nexport const urlDashboardDetail = BASE_URL + \"/dashboard/\";\r\nexport const urlFollowerCommentList = BASE_URL + \"/dashboard/more-comments/\";\r\n\r\n\r\nexport const urlGetInventoryList = BASE_URL + \"/Inventory/all\";\r\nexport const urlCreateIventory = BASE_URL + \"/Inventory/addInventory\";\r\nexport const urlUpdateIventory = BASE_URL + \"/Inventory/updateInventory\";\r\nexport const urlDeleteIventory = BASE_URL + \"/Inventory/deleteInventory\";\r\n\r\n\r\nexport const urlInventoryBasicData = BASE_URL + \"/Inventory/getBasicInfo\";\r\n\r\nexport const urlCreateInventoryCategory = BASE_URL + \"/Inventory/createCategory\";\r\nexport const urlGetInventoryCategory = BASE_URL + \"/Inventory/getCategory\";\r\nexport const urlUpdateIventoryCategory = BASE_URL + \"/Inventory/updateCategory\";\r\nexport const urlDeleteIventoryCategory = BASE_URL + \"/Inventory/deleteCategory\";\r\n\r\nexport const urlCreateInventoryLocation = BASE_URL + \"/Inventory/createLocation\";\r\nexport const urlGetInventoryLocation = BASE_URL + \"/Inventory/getLocation\";\r\nexport const urlUpdateIventoryLocation = BASE_URL + \"/Inventory/updateLocation\";\r\nexport const urlDeleteIventoryLocation = BASE_URL + \"/Inventory/deleteLocation\";\r\n\r\nexport const urlCreateInventoryUnit = BASE_URL + \"/Inventory/createUnit\";\r\nexport const urlGetInventoryUnit = BASE_URL + \"/Inventory/getUnit\";\r\nexport const urlUpdateIventoryUnit = BASE_URL + \"/Inventory/updateUnit\";\r\nexport const urlDeleteIventoryUnit = BASE_URL + \"/Inventory/deleteUnit\";\r\n\r\nexport const urlCreateInventoryName = BASE_URL + \"/Inventory/createName\";\r\nexport const urlGetInventoryName = BASE_URL + \"/Inventory/getName\";\r\nexport const urlUpdateIventoryName = BASE_URL + \"/Inventory/updateName\";\r\nexport const urlDeleteIventoryName = BASE_URL + \"/Inventory/deleteName\";\r\n\r\nexport const urlGetInventoryGroupByName = BASE_URL + \"/InventoryGroup/getInventoryByName\";\r\n\r\nexport const urlCreateRecipe = BASE_URL + \"/Recipe/createRecipe\";\r\nexport const urlGetRecipeList = BASE_URL + \"/Recipe/getRecipeList\";\r\nexport const urlDeleteRecipe = BASE_URL + \"/Recipe/deleteRecipe\";\r\nexport const urlGetRecipeById = BASE_URL + \"/Recipe/getRecipeById\";\r\nexport const urlUpdateRecipe = BASE_URL + \"/Recipe/updateRecipe\";\r\n\r\n\r\n\r\n\r\n\r\nexport const urlStoreListAll = BASE_URL + \"/stores/\";\r\nexport const urlCreateNewStore = BASE_URL + \"/stores/create/\";\r\nexport const urlUpdateStore = BASE_URL + \"/stores/update/\";\r\nexport const urlDeleteStore = BASE_URL + \"/stores/delete/\";\r\nexport const urlMakeFeatureStore = BASE_URL + \"/stores/make-featured/\";\r\n\r\nexport const urlMyProductListAll = BASE_URL + \"/product/all/\";\r\nexport const urlProductBasicData = BASE_URL + \"/product/product-basic/\";\r\nexport const urlProductCreate = BASE_URL + \"/product/create/\";\r\nexport const urlProductUpdate = BASE_URL + \"/product/update/\";\r\nexport const urlProductDelete = BASE_URL + \"/product/delete/\";\r\n\r\nexport const urlCreateProductBrand = BASE_URL + \"/product/brand/create/\";\r\nexport const urlCreateProductCategory = BASE_URL + \"/product/category/create/\";\r\nexport const urlCreateProductPacksize = BASE_URL + \"/product/packsize/create/\";\r\nexport const urlCreateProductUnit = BASE_URL + \"/product/unit/create/\";\r\n\r\nexport const urlProductFavoriteData = BASE_URL + \"/product/favourite/\";\r\nexport const urlSearchProduct = BASE_URL + \"/product/search/?keyword=\";\r\nexport const urlSearchProductByBarcode = BASE_URL + \"/product/get-by-barcode/\";\r\nexport const urlAddFavoriteProduct = BASE_URL + \"/product/favourite/create/\";\r\nexport const urlDeleteFavouriteProduct = BASE_URL + \"/product/favourite/delete/\"\r\n\r\nexport const urlProductActiveData = BASE_URL + \"/product/activated/\";\r\n\r\n\r\nexport const urlMyPromotionListAll = BASE_URL + \"/promotion/all/\";\r\nexport const urlCreatePromotion = BASE_URL + \"/promotion/create/\";\r\nexport const urlUpdatePromotion = BASE_URL + \"/promotion/update/\";\r\nexport const urlPromotionDelete = BASE_URL + \"/promotion/delete/\";\r\nexport const urlGetOnePromotion = BASE_URL + \"/promotion/\";\r\n\r\nexport const urlFollowerListAll = BASE_URL + \"/follower/\";\r\nexport const urlFollowerListByOneStore = BASE_URL + \"/follower/store/\";\r\nexport const urlFollowerDelete = BASE_URL + \"/follower/store/invite/delete/\";\r\nexport const urlFollowerTempSendInvite = BASE_URL + \"/follower/store/invite/\";\r\nexport const urlFollowerInvite = BASE_URL + \"/follower/store/invite/send/\";\r\n\r\nexport const urlGetBestDealList = BASE_URL + \"/bestdeal/all/\";\r\nexport const urlCreateBestDeal = BASE_URL + \"/bestdeal/create/\";\r\nexport const urlGetOneBestDeal = BASE_URL + \"/bestdeal/\";\r\nexport const urlUpdateBestDeal = BASE_URL + \"/bestdeal/update/\";\r\nexport const urlBestDealDelete = BASE_URL + \"/bestdeal/delete/\";\r\n\r\nexport const urlGetProfileInfo = BASE_URL + \"/vendor/get-user-info/\";\r\nexport const urlGetVendorInfo = BASE_URL + \"/vendor/get-vendor-info/\";\r\nexport const urlUpdateProfileInfo = BASE_URL + \"/vendor/update-profile/\";\r\nexport const urlUpdateVendorInfo = BASE_URL + \"/vendor/update-vendor/\";\r\n\r\nexport const urlGetAllFeeds = BASE_URL + \"/promotion/all/\";\r\nexport const urlSetPromotionLike = BASE_URL + \"/promotion/set-like/\";\r\nexport const urlGetPromotionDetail = BASE_URL + \"/promotion/detail/\";\r\n\r\nexport const urlGetHomeData = BASE_URL + \"/common/\";\r\nexport const urlGoogleAutoComplete = BASE_URL + \"/common/google-auto-complete/\";\r\nexport const urlGetLocationFromCoordinate =\r\n  BASE_URL + \"/common/get-location-from-coordinate/\";\r\nexport const urlGetCoordFromPlaceId =\r\n  BASE_URL + \"/common/get-coordinate-from-placeid/\";\r\nexport const urlGetLocationDetail = BASE_URL + \"/common/get-detail-from-ip/\";\r\n\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\InventoryGroup\\ByName\\TableWidget\\DetailTable.js",["1686","1687","1688"],"import React, { useState } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Table,} from \"antd\";\r\nimport { showColumnAction } from 'pages/InventoryCategoryPage/CategoryListTableWidget/CategoryListTableColumn';\r\n\r\nconst DetailTable = (props) => {\r\n    const [isBusy, setIsBusy] = useState(false);\r\n    const { dataList, onUpdateAction, onDeleteAction, } = props;\r\n    if (dataList === undefined) return <div />\r\n    const columns = [\r\n      {\r\n        title: \"ID\",\r\n        dataIndex: \"id\",\r\n      },\r\n      {\r\n        title: \"Thumbnail\",\r\n        dataIndex: \"thumbnail_image\",\r\n        render: (text, record) => {\r\n            return (\r\n                <img className=\"detail-widget-image\" src={record.thumbnail_image}/>\r\n            )\r\n          },\r\n      },\r\n      { title: \"Description\", dataIndex: \"description\" },\r\n      {\r\n        title: \"QTY\",\r\n        dataIndex:\"qty\",\r\n        sorter: {\r\n          compare: (a, b) => a.qty - b.qty\r\n        },\r\n      },\r\n      {\r\n        title: \"Spoilage\",\r\n        dataIndex:\"spoilage\",\r\n        sorter: {\r\n          compare: (a, b) => a.spoilage - b.spoilage\r\n        },\r\n      },\r\n      {\r\n        title: \"Price/Unit\",\r\n        dataIndex:\"price_per_unit\",\r\n        sorter: {\r\n          compare: (a, b) => a.price_per_unit - b.price_per_unit\r\n        },\r\n        render: text => <p>$ {text}</p>,\r\n      },\r\n      {\r\n        title: \"Unit\",\r\n        dataIndex:\"unit_name\",\r\n        sorter: {\r\n          compare: (a, b) => a.unit_name.localeCompare(b.unit_name)\r\n        },\r\n      },\r\n      {\r\n        title: \"Category\",\r\n        dataIndex:\"category_name\",\r\n        sorter: {\r\n          compare: (a, b) => a.category_name.localeCompare(b.category_name)\r\n        },\r\n      },\r\n      {\r\n        title: \"Location\",\r\n        dataIndex:\"location_name\",\r\n        sorter: {\r\n          compare: (a, b) => a.location_name.localeCompare(b.location_name)\r\n        },\r\n      },\r\n       {\r\n        title: \"Created Date\",\r\n        dataIndex: \"add_timestamp\",\r\n        sorter: {\r\n          compare: (a, b) => a.name.localeCompare(b.name),\r\n        },\r\n      },\r\n      {\r\n        title: \"Updated Date\",\r\n        dataIndex: \"update_timestamp\",\r\n        sorter: {\r\n          compare: (a, b) => a.name.localeCompare(b.name),\r\n        },\r\n      },\r\n      {\r\n        title: \"Action\",\r\n        key: \"action\",\r\n        render: (text, record) => {\r\n          return showColumnAction(text, record, onUpdateAction, onDeleteAction)\r\n        },\r\n      },\r\n    ]\r\n    const dataSource = dataList.map((info) => {\r\n    return { ...info, key: info.id, name: info.name.name, category_name: info.category.name, unit_name: info.unit.name, location_name: info.location.name };\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Table\r\n            size=\"small\"\r\n            pagination={false}\r\n            columns={columns}\r\n            dataSource={dataSource}\r\n            scroll={{ x: 900 }}\r\n          />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(DetailTable)\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\ProductPage\\ProductTypeSelector\\ProductTypeSelector.js",["1689","1690","1691","1692","1693","1694","1695","1696","1697","1698"],"// @flow strict\r\n\r\nimport * as React from \"react\";\r\nimport { Select } from \"antd\";\r\nimport \"./ProductTypeSelector.css\";\r\nconst { Option } = Select;\r\n\r\nfunction ProductTypeSelector(props) {\r\n  const { field, productInfo, setProductInfo, isCategory } = props;\r\n  const { displayField, idField } = props;\r\n  const { errorField, setErrorField } = props;\r\n  const { placeholder, list } = props;\r\n  const display = displayField === undefined ? \"name\" : displayField;\r\n  const id = idField === undefined ? \"id\" : idField;\r\n  return (\r\n    <div>\r\n      <Select\r\n        showSearch\r\n        disabled={list == undefined || list.length == 0}\r\n        style={{\r\n          width: \"100%\",\r\n          border: errorField !== undefined && errorField.includes(field) ? \"1px solid red\" : \"1px solid #d9d9d9\",\r\n        }}\r\n        placeholder={placeholder}\r\n        optionFilterProp=\"children\"\r\n        value={\r\n          productInfo === undefined || productInfo[field] == undefined ||\r\n          list.filter((x) => x[id] == productInfo[field]).length == 0\r\n            ? null\r\n            : productInfo[field]\r\n        }\r\n        onChange={(value) => {\r\n          var info = productInfo;\r\n          info[field] = value;\r\n          if (errorField.includes(field)) {\r\n            var errors = errorField.filter((x) => x != field);\r\n            setErrorField([...errors]);\r\n          }\r\n          setProductInfo({ ...info });\r\n        }}\r\n        filterOption={(input, option) =>\r\n          option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n        }\r\n      >\r\n        \r\n        {list != undefined &&\r\n          list.map((info) => {\r\n            return (\r\n              <Option\r\n                key={`${field}_key${info.id}`}\r\n                value={info.id}\r\n                disabled={!info.active}\r\n                style={{\r\n                  fontWeight:\r\n                    isCategory == true && info.parent == null\r\n                      ? \"bold\"\r\n                      : \"normal\",\r\n                  color: info.active == false ? \"var(--greyColor)\" : \"var(--blackColor)\",\r\n                }}\r\n              >\r\n                {(isCategory == true && info.parent != null)\r\n                  ? \"---\" + info[display]\r\n                  : info[display]}\r\n              </Option>\r\n            );\r\n          })}\r\n      </Select>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductTypeSelector;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\ProductPage\\ProductDescriptionInput\\ProductDescriptionInput.js",["1699","1700","1701","1702"],"import * as React from \"react\";\r\n\r\nimport { Input, Typography } from \"antd\";\r\n\r\nconst { Text } = Typography;\r\nfunction ProductDescriptionInput(props) {\r\n  const { productInfo, setProductInfo } = props;\r\n  const { placeholder, field } = props;\r\n  const { errorField, setErrorField } = props;\r\n  const { disabled, type, is_password } = props;\r\n  return (\r\n    <div style={{ textAlign: \"left\", marginBottom: 10 }}>\r\n      <Input\r\n        style={{\r\n          border: errorField !== undefined && errorField.includes(field)\r\n            ? \"1px solid red\"\r\n            : \"1px solid #d9d9d9\",\r\n          borderRadius: \"8px\",\r\n          background: `var(--backgroundColor)`,\r\n          padding: \"8px 12px\"\r\n        }}\r\n        placeholder={placeholder}\r\n        value={ productInfo === undefined || productInfo[field] == undefined ? \"\" : productInfo[field]}\r\n        disabled={disabled === undefined ? false : disabled}\r\n        type={type === undefined ? \"text\" : type}\r\n        onChange={(e) => {\r\n          var info = productInfo;\r\n          info[field] = e.target.value;\r\n          if (errorField.includes(field)) {\r\n            var errors = errorField.filter((x) => x != field);\r\n            // console.log(errors);\r\n            setErrorField([...errors]);\r\n          }\r\n          setProductInfo({ ...info });\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductDescriptionInput;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\CollapsedContent\\CollapsedContent.js",["1703","1704"],"import {\r\n  DownCircleFilled,\r\n  DownCircleOutlined,\r\n  RightCircleFilled,\r\n  RightCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Col, Row } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport \"./CollapsedContent.css\";\r\nexport const CollapsedContent = (props) => {\r\n  const { title } = props;\r\n  const [isCollapsed, setIsCollapsed] = useState(true);\r\n  return (\r\n    <div className=\"collapsed-content-widget\">\r\n      <div>\r\n        <Row\r\n          className=\"collapsed-content-title custom-button\"\r\n          onClick={() => setIsCollapsed(!isCollapsed)}\r\n          align={\"middle\"}\r\n          gutter={8}\r\n          style={{ backgroundColor: \"var(--whiteColor)\" }}\r\n          wrap={false}\r\n        >\r\n          <Col>\r\n            {isCollapsed ? (\r\n              <RightCircleFilled className={\"collapsed-content-icon\"} />\r\n            ) : (\r\n              <DownCircleFilled className={\"collapsed-content-icon\"} />\r\n            )}\r\n          </Col>\r\n          <Col>{title}</Col>\r\n        </Row>\r\n      </div>\r\n\r\n      {!isCollapsed && (\r\n        <div className=\"collapsed-content-description\"> {props.children}</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CollapsedContent;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\services\\bestdealService.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\ConfirmDlgWidget\\showConfirmDlgWidget.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\DashboardPage\\MiddleWidget\\MiddleLeftWidget.js",["1705","1706","1707","1708","1709","1710","1711"],"import React from 'react';\r\nimport { useState } from \"react\";\r\nimport { Col, Row, message } from 'antd';\r\nimport RatingWidget from 'components/RatingWidget/RatingWidget';\r\nimport { apiFollowerCommentList } from 'services/dashboardService';\r\nimport CommonButton from 'components/ButtonWidgets/CommonButton/CommonButton';\r\nimport CommonDivWidget from 'components/CommonDivWidget/CommonDivWidget';\r\nconst OneFollowerComment = (props) => {\r\n    const { commentInfo } = props;\r\n    const { rating, review, owner } = commentInfo;\r\n    const { first_name, last_name, image_url } = owner;\r\n    return <Row align={'middle'} gutter={16} className={'one-follower-comment'} wrap={false}>\r\n        <Col flex={'50px'}>\r\n            <img src={\r\n                    image_url == null || image_url == \"\"\r\n                    ? \"/assets/images/avatar_blank.png\"\r\n                    : image_url\r\n                } className=\"one-follower-comment-avatar\" />\r\n        </Col>\r\n        <Col flex={'auto'}>\r\n            <div className=\"one-follower-comment-name\">{first_name} {last_name}</div>\r\n            <div className=\"one-follower-comment-rating\"><RatingWidget rating={rating} /></div>\r\n            <div className=\"one-follower-comment-comment\">{review}</div>\r\n        </Col>\r\n        <Col flex={'100px'}>\r\n            <CommonButton onClick={() => {\r\n                console.log(\"CLICKED FOLLOWER COMMENT\");\r\n            }}>\r\n                Reply\r\n            </CommonButton>\r\n        </Col>\r\n    </Row>\r\n}\r\n\r\nconst MiddleLeftWidget = (props) => {\r\n    const [isBusy, setIsBusy] = useState(false);\r\n    const [followerCommentOffset, setFollowerCommentOffset] = useState();\r\n\r\n    \r\n    const { comments } = props === undefined ? { comments: undefined } : props;\r\n\r\n    var commentList = comments\r\n\r\n    const onClickDirection = (type) => {\r\n        let tmp_offset = 0\r\n        let offset = 3, page_size = 3;\r\n        if(followerCommentOffset !== undefined){\r\n            tmp_offset = followerCommentOffset\r\n        }\r\n        if(type === 'next'){\r\n            if(commentList.length == 3){\r\n                tmp_offset += offset\r\n            }\r\n        }else if(type === 'prev'){\r\n            tmp_offset -= offset\r\n        }\r\n        if(tmp_offset < 0){\r\n            tmp_offset = 0\r\n        }\r\n        setFollowerCommentOffset(tmp_offset)\r\n            \r\n        if(tmp_offset >= 0){\r\n            getFollowerCommentList(tmp_offset, page_size)\r\n        }\r\n    };\r\n    const getFollowerCommentList = (offset, page_size) => {\r\n        setIsBusy(true);\r\n        apiFollowerCommentList(offset, page_size)\r\n            .then((list) => {\r\n                commentList = [...list]\r\n            })\r\n            .catch((err) => {\r\n                setIsBusy(false);\r\n                message.error(\"Server failed. \" + err);\r\n        });\r\n    };\r\n    \r\n    return (\r\n        <CommonDivWidget>\r\n            <p className=\"follower-comment-widget-title\">Followers comments</p>\r\n            <div className=\"follower-comments-bg\">\r\n            {commentList !== undefined ? commentList.map((commentInfo) => {\r\n                return <OneFollowerComment\r\n                    key={`one-follower-comment-${commentInfo.id}`}\r\n                    commentInfo={commentInfo}\r\n                />\r\n            }) : \"\"}</div>\r\n            <Row  justify={'space-between'} align={'middle'}>\r\n                <Col>\r\n                    <img className=\"follower-direction-button\" src=\"/assets/icons/ic_prev.svg\" onClick={()=>{\r\n                        onClickDirection('prev');\r\n                    }}/>\r\n                </Col>\r\n                <Col><img className=\"follower-dot-button\" src=\"/assets/icons/ic_3dot.svg\" /></Col>\r\n                <Col>\r\n                    <img className=\"follower-direction-button\" src=\"/assets/icons/ic_next.svg\" onClick={()=>{\r\n                        onClickDirection('next');\r\n                    }}/>\r\n                </Col>\r\n            </Row>\r\n        </CommonDivWidget>\r\n    );\r\n};\r\n\r\nexport default MiddleLeftWidget;","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\services\\inventoryCategoryService.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\DashboardPage\\TopWidget\\CategoryItemWidget\\CategoryItemWidget.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\BestDealPage\\BestDealDlgWidget\\BestDealDlgWidget.js",["1712","1713","1714","1715","1716","1717","1718","1719","1720","1721","1722","1723","1724","1725","1726","1727","1728","1729","1730"],"import React, { useState, useEffect } from 'react';\r\nimport { message, Spin, Modal, Row, Col, Input } from \"antd\";\r\nimport { confirmable } from \"react-confirm\";\r\nimport BestDealDlgLeftPanel from './BestDealDlgLeftPanel/BestDealDlgLeftPanel';\r\nimport BestDealDlgRightPanel from './BestDealDlgRightPanel/BestDealDlgRightPanel';\r\nimport moment from \"moment\";\r\nimport \"./BestDealDlgWidget.css\"\r\nimport { isEmpty } from 'utils/GlobalFunctions';\r\nconst BestDealWidget = (props) => {\r\n    const [isBusy, setIsBusy] = useState(false);\r\n    const { show, proceed, dealId, newFlag, title, bestDealInfo, initData, } = props;\r\n\r\n    const [errorField, setErrorField] = useState([]);\r\n    const [curBestDeal, setCurBestDeal] = useState({});\r\n    const [selectedStore, setSelectedStore] = useState(null);\r\n\r\n    const [selDeal, setSelDeal] = useState({});\r\n    const [fromDate, setFromDate] = useState(\r\n      moment(moment().format(\"YYYY-MM-DD\"))\r\n    );\r\n    const [period, setPeriod] = useState(newFlag ? 1 : 0);\r\n    const [timeAddFlag, setTimeAddFlag] = useState(false);\r\n\r\n    useEffect(() => {\r\n      if(initData!=undefined){\r\n        setFromDate(moment(initData.start_date))\r\n        setSelDeal(initData.start_date, initData.end_date)\r\n        let endDate = moment(initData.end_date, \"YYYY-MM-DD\");\r\n        let startDate = moment(initData.start_date , \"YYYY-MM-DD\");\r\n        var diff = endDate.diff(startDate, \"d\");\r\n        if (diff > 0) {\r\n          setPeriod(diff + 1);\r\n        }\r\n        setSelectedStore(initData.stores[0].id)\r\n        if(initData.SingleProduct.length>0){\r\n          setCurBestDeal({...curBestDeal,single_product:initData.SingleProduct[0].product,name:initData.name, dealType:initData.dealType,stores:initData.stores}); \r\n        } \r\n        if(initData.ComboProduct.length>0) {\r\n            setCurBestDeal({...curBestDeal, combo_list:initData.ComboProduct[0].combo_products,name:initData.name, dealType:initData.dealType,stores:initData.stores})\r\n        }\r\n        if(initData.Buy1Get1Product.length>0 && initData.Buy1Get1Product.length>0) {\r\n            setCurBestDeal({...curBestDeal, buy_list:initData.Buy1Get1Product[0].buy_products,free_list:initData.Buy1Get1Product[0].free_products,name:initData.name, dealType:initData.dealType,stores:initData.stores})\r\n        }\r\n        \r\n      }\r\n    }, [initData])\r\n    \r\n    const onClickOk = ()=>{\r\n      if(validateFields()){\r\n        if(curBestDeal.price == undefined || curBestDeal.price.length == 0){\r\n          message.error(\"Please add price\")\r\n        }else{\r\n          let newDealTime = { ...selDeal }\r\n          newDealTime.start_date = timeAddFlag ? newDealTime.start_date : fromDate.format(\"YYYY-MM-DD\");\r\n          const toDate = fromDate\r\n            .clone()\r\n            .add(period - 1, \"d\")\r\n            .format(\"YYYY-MM-DD\");\r\n          newDealTime.end_date = toDate;\r\n\r\n          let curType = curBestDeal.dealType == undefined ? \"SingleProduct\":curBestDeal.dealType\r\n          let price = curBestDeal.price\r\n          let description = curBestDeal.description\r\n          let newDeal = {\r\n            name: curBestDeal.name, \r\n            start_date: newDealTime.start_date,\r\n            end_date: newDealTime.end_date,\r\n            stores: curBestDeal.stores,\r\n            dealType: curType, \r\n            SingleProduct:[], \r\n            ComboProduct:[], \r\n            Buy1Get1Product:[]\r\n          }\r\n          let dealProductData = {}\r\n          if(curType === \"SingleProduct\"){\r\n            if(curBestDeal.single_product == undefined){\r\n                message.error(\"Please Add Combo Product\")\r\n            }else{\r\n                dealProductData = {\"product\":curBestDeal.single_product, \"selling_price\": price, \"description\":description}\r\n            }\r\n          }else if(curType === \"ComboProduct\"){\r\n            if(curBestDeal.combo_list == undefined || curBestDeal.combo_list.length == 0){\r\n                message.error(\"Please Add Combo Product\")\r\n            }else{\r\n              dealProductData = {\"combo_products\":curBestDeal.combo_list, \"selling_price\": price, \"description\":description, \"promotion_price\": \"0.00\"}\r\n            }\r\n          }else if(curType === \"Buy1Get1Product\"){\r\n            if(curBestDeal.buy_list == undefined || curBestDeal.buy_list.length == 0){\r\n                message.error(\"Please Add Main Product\")\r\n            }else if(curBestDeal.free_list == undefined || curBestDeal.free_list.length == 0){\r\n                message.error(\"Please Add Free Product\")\r\n            }else{\r\n                dealProductData = {\"buy_products\":curBestDeal.buy_list, \"free_products\":curBestDeal.free_list, \"selling_price\": price, \"description\":description, \"promotion_price\": \"0.00\"}\r\n            }\r\n          }else{\r\n            return;\r\n          }\r\n          newDeal[curType] = [dealProductData]\r\n          proceed({\r\n            param: newDeal,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    const validateFields = () => {\r\n        var errorList = Array();\r\n        if (Object.keys(curBestDeal).length !== 0){\r\n          errorList = isEmpty(curBestDeal, \"name\", errorList);\r\n          errorList = isEmpty(curBestDeal, \"stores\", errorList);\r\n          if (errorList.length === 0) {\r\n              if (curBestDeal[\"stores\"].length === 0) {\r\n                  errorList = [...errorList, \"stores\"];\r\n              }\r\n          }\r\n          setErrorField([...errorList]);\r\n          return errorList.length == 0;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n          visible={show}\r\n          onCancel={() => {\r\n            proceed(null);\r\n          }}\r\n          destroyOnClose={true}\r\n          closable={true}\r\n          maskClosable={false}\r\n          className=\"best-deal-modal\"\r\n          title={title}\r\n          onOk={onClickOk}\r\n        >\r\n          <Row gutter={32}>\r\n            <Col xs={24} sm={24} md={24} lg={8} xl={8} xxl={8}>\r\n                <BestDealDlgLeftPanel\r\n                    newFlag={newFlag}\r\n                    curBestDeal={curBestDeal}\r\n                    setCurBestDeal={setCurBestDeal}\r\n                    errorField={errorField}\r\n                    setErrorField={setErrorField}\r\n                    selectedStore={selectedStore}\r\n                    fromDate={fromDate}\r\n                    setFromDate={setFromDate}\r\n                    period={period}\r\n                    setPeriod={setPeriod}\r\n                    selDeal={selDeal}\r\n                    setTimeAddFlag={setTimeAddFlag}\r\n                />\r\n            </Col>\r\n            <Col xs={24} sm={24} md={24} lg={16} xl={16} xxl={16}>\r\n                <BestDealDlgRightPanel\r\n                    newFlag={newFlag}\r\n                    initData={initData} \r\n                    setCurBestDeal={setCurBestDeal} \r\n                    curBestDeal={curBestDeal} \r\n                    setIsBusy={setIsBusy} \r\n                    errorField={errorField}\r\n                    setErrorField={setErrorField}  \r\n                    onClickOk={onClickOk}\r\n                />\r\n            </Col>\r\n          </Row>\r\n        </Modal>\r\n      );\r\n};\r\nexport default confirmable(BestDealWidget);","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\InventoryPage\\AddInventoryDialog\\AddNewCategoryDialog\\showAddNewCategoryDialog.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\RecipeListPage\\TableWidget\\RecipeDetailTableWidget.js",["1731","1732","1733"],"import React, { useState } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Table, } from \"antd\";\r\nimport { showColumnAction } from 'pages/InventoryCategoryPage/CategoryListTableWidget/CategoryListTableColumn';\r\n\r\nconst RecipeDetailTableWidget = (props) => {\r\n  const [isBusy, setIsBusy] = useState(false);\r\n  const { dataList, ownCommonData } = props;\r\n  if (dataList === undefined || ownCommonData.nameList === undefined) return <div />\r\n  const columns = [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\",\r\n    },\r\n    {\r\n      title: \"QTY\",\r\n      dataIndex: \"qty\",\r\n      sorter: {\r\n        compare: (a, b) => a.qty - b.qty\r\n      },\r\n    },\r\n    {\r\n      title: \"Unit\",\r\n      dataIndex: \"unit_id\",\r\n      sorter: {\r\n        compare: (a, b) => a.unit_id - b.unit_id,\r\n      },\r\n      render: (text, record) => {\r\n        const result = ownCommonData.unitList.filter(item => item.id === record.unit_id);\r\n        if (result.length === 0) {\r\n          return \"Empty\";\r\n\r\n        }\r\n        else {\r\n          return result[0].name;\r\n        }\r\n      },\r\n    },\r\n    {\r\n      title: \"Pre Instruction\",\r\n      dataIndex: \"pre_instruction\",\r\n      sorter: {\r\n        compare: (a, b) => a.pre_instruction.localeCompare(b.pre_instruction)\r\n      },\r\n    },\r\n    {\r\n      title: \"Ingredient\",\r\n      dataIndex: \"name_id\",\r\n      sorter: {\r\n        compare: (a, b) => a.name_id - b.name_id,\r\n      },\r\n      render: (text, record) => {\r\n        const result = ownCommonData.nameList.filter(item => item.id === record.name_id);\r\n        if (result.length === 0) {\r\n          return \"Empty\";\r\n\r\n        }\r\n        else {\r\n          return result[0].name;\r\n        }\r\n      },\r\n    },\r\n    {\r\n      title: \"Post Instruction\",\r\n      dataIndex: \"post_instruction\",\r\n      sorter: {\r\n        compare: (a, b) => a.post_instruction.localeCompare(b.post_instruction)\r\n      },\r\n    },\r\n    {\r\n      title: \"Created Date\",\r\n      dataIndex: \"add_timestamp\",\r\n      sorter: {\r\n        compare: (a, b) => a.name.localeCompare(b.name),\r\n      },\r\n    },\r\n    {\r\n      title: \"Updated Date\",\r\n      dataIndex: \"update_timestamp\",\r\n      sorter: {\r\n        compare: (a, b) => a.name.localeCompare(b.name),\r\n      },\r\n    },\r\n  ]\r\n  const dataSource = dataList.map((info) => {\r\n    return { ...info, key: info.id };\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Table\r\n        size=\"small\"\r\n        pagination={false}\r\n        columns={columns}\r\n        dataSource={dataSource}\r\n        scroll={{ x: 900 }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(RecipeDetailTableWidget)\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\InventoryCategoryPage\\CategoryListTableWidget\\CategoryListTableColumn.js",["1734","1735","1736","1737"],"import { Space } from 'antd';\r\nimport { showConfirmDlgWidget } from 'components/ConfirmDlgWidget/showConfirmDlgWidget';\r\nimport React from 'react'\r\n\r\nexport function showColumnAction(text, record, onUpdateAction, onDeleteAction) {\r\n    return (\r\n      <div size=\"middle\" direction={\"vertical\"}>\r\n        <a className=\"edit-btn\"\r\n          onClick={() => {\r\n            onUpdateAction(record)\r\n          }}\r\n        >\r\n          Edit\r\n        </a>\r\n        <a style={{ color: \"var(--redColor)\", marginLeft:20 }}  className=\"del-btn\" onClick={ async()=>{\r\n          var res = await showConfirmDlgWidget({ title: \"Delete Confirmation\", content: \"Are you sure to delete this record?\" });\r\n          if (res == false) return;\r\n          onDeleteAction(record)\r\n        }}>\r\n          Delete\r\n        </a>\r\n      </div>\r\n    );\r\n  \r\n  }\r\n  \r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\config\\CONSTANTS.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\InventoryPage\\AddInventoryDialog\\AddInventoryDialog.js",["1738","1739","1740","1741"],"import React, { useEffect, useState } from 'react'\r\nimport { confirmable } from 'react-confirm'\r\nimport { message, Modal, } from 'antd';\r\n\r\nimport \"./AddInventoryDialog.css\"\r\nimport AddInventoryDialogContent from './AddInventoryDialogContent';\r\nimport { apiGetInventoryBasicData } from 'services/inventoryService';\r\nimport { isEmpty } from 'utils/GlobalFunctions';\r\n\r\nfunction AddInventoryDialog(props) {\r\n    const { show, proceed, inventoryInfo, title } = props\r\n\r\n    const [inventoryBasicData, setInventoryBasicData] = useState({});\r\n    const [ownCommonData, setOwnCommonData] = useState({});\r\n    const [selInventory, setSelInventory] = useState({});\r\n    const [errorField, setErrorField] = useState([]);\r\n\r\n    useEffect(() => {\r\n      apiGetInventoryBasicData()\r\n      .then((data) => {\r\n          setInventoryBasicData(data);\r\n        })\r\n      .catch((err) => {\r\n          message.error(\"Server failed. \" + err);\r\n      });\r\n    },[])\r\n\r\n    useEffect(() => {\r\n      const { categoryList } = inventoryBasicData === undefined ? { categoryList: undefined } : inventoryBasicData;\r\n      const { unitList } = inventoryBasicData === undefined ? { unitList: undefined } : inventoryBasicData;\r\n      const { locationList } = inventoryBasicData === undefined ? { locationList: undefined } : inventoryBasicData;\r\n      const { nameList } = inventoryBasicData === undefined ? { nameList: undefined } : inventoryBasicData;\r\n      \r\n      if (inventoryBasicData != undefined) {\r\n        setOwnCommonData({\r\n          locationList: locationList,\r\n          unitList: unitList,\r\n          categoryList: categoryList,\r\n          nameList: nameList,\r\n        });\r\n      }\r\n    }, [inventoryBasicData]);\r\n\r\n    useEffect(() => {\r\n      if (inventoryInfo !== undefined) {\r\n        setSelInventory({ ...inventoryInfo });\r\n      } else {\r\n        setSelInventory({});\r\n      }\r\n    }, [inventoryInfo]);\r\n\r\n    const validateFields = async () => {\r\n      var errorList = Array();\r\n      if (selInventory === undefined)\r\n      errorList = isEmpty(selInventory, \"image_name\", errorList);\r\n      errorList = isEmpty(selInventory, \"unit_id\", errorList);\r\n      errorList = isEmpty(selInventory, \"location_id\", errorList);\r\n      errorList = isEmpty(selInventory, \"category_id\", errorList);\r\n      errorList = isEmpty(selInventory, \"description\", errorList);\r\n      errorList = isEmpty(selInventory, \"name_id\", errorList);\r\n      setErrorField([...errorList]);\r\n      return errorList.length == 0;\r\n    };\r\n    return (\r\n        <Modal\r\n          visible={inventoryBasicData == undefined ? !show:show}\r\n          destroyOnClose={true}\r\n          onCancel={() => {\r\n            proceed(null);\r\n          }}\r\n          closable={true}\r\n          maskClosable={false}\r\n          title={title}\r\n          className=\"custom-add-inventory-dlg\"\r\n          onOk={async () => {\r\n            if ((await validateFields()) === false) return;\r\n            proceed({\r\n              ...selInventory,\r\n            });\r\n          }}\r\n        >\r\n          <AddInventoryDialogContent\r\n            inventoryBasicData={inventoryBasicData}\r\n            selInventory={selInventory}\r\n            setSelInventory={setSelInventory}\r\n            errorField={errorField}\r\n            setErrorField={setErrorField}\r\n            isEditing={inventoryInfo !== undefined}\r\n            ownCommonData={ownCommonData}\r\n            setOwnCommonData={setOwnCommonData}\r\n          />\r\n        </Modal>\r\n      );\r\n}\r\n\r\nexport default  confirmable(AddInventoryDialog)\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\CodeVerificationWidget\\ResendCodeWidget.js",["1742","1743"],"// @flow strict\r\n\r\nimport { message } from \"antd\";\r\nimport TextButton from \"components/ButtonWidgets/TextButton/TextButton\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { apiResendActivationCode } from \"services/userServices\";\r\n\r\nimport \"./ResendCodeWidget.css\";\r\nconst defaultWaitTime = 60;\r\nfunction ResendCodeWidget(props) {\r\n  const { user_id, setIsWrong } = props;\r\n\r\n  const [waitTime, setWaitTime] = useState(0);\r\n  const [tick, setTick] = useState(true);\r\n  const [intervalId, setIntervalID] = useState(null);\r\n  const onClickResendCode = () => {\r\n    setWaitTime(defaultWaitTime);\r\n    setIsWrong(false);\r\n    apiResendActivationCode(user_id)\r\n      .then((res) => {\r\n        message.success(\"Activation code has been sent.\");\r\n      })\r\n      .catch((res) => {\r\n        message.error(res);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    if (waitTime === defaultWaitTime) {\r\n      setIntervalID(setInterval(timer, 1000));\r\n    } else if (waitTime === 0) {\r\n      clearInterval(intervalId);\r\n    }\r\n  }, [waitTime]);\r\n  const timer = () => {\r\n    setTick((t) => !t);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (waitTime > 0) {\r\n      setWaitTime(waitTime - 1);\r\n    }\r\n  }, [tick]);\r\n\r\n  return (\r\n    <div className=\"resend-code-widget\">\r\n      {waitTime === 0 ? (\r\n        <div>\r\n          <TextButton\r\n            onClick={onClickResendCode}\r\n            style={{ color: \"var(--blueColor)\", fontSize: 16, marginRight: 20 }}\r\n          >\r\n            {\" \"}\r\n            Resend Code\r\n          </TextButton>\r\n        </div>\r\n      ) : (\r\n        <div style={{ fontSize: 16, marginRight: 20 }}>\r\n          Resend code in {waitTime}s\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResendCodeWidget;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\ProductPage\\MyProductPanel\\OneProduct\\OneProduct.js",["1744","1745","1746","1747"],"import React, { useState} from \"react\";\r\nimport \"./OneProduct.css\";\r\nimport { IMAGE_BASE_URL } from \"../../../../config/CONSTANTS\";\r\nimport {\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n} from '@ant-design/icons';\r\nimport { showConfirmDlgWidget } from \"components/ConfirmDlgWidget/showConfirmDlgWidget\";\r\nfunction OneProduct(props) {\r\n  const {\r\n    productInfo,\r\n    brand,\r\n    category,\r\n    pack_size,\r\n    unit,\r\n    product_status,\r\n    selectProduct,\r\n    onClickEdit, \r\n    onClickDelete\r\n  } = props;\r\n  const [detail_button_flag, setDetailShown] = useState(false);\r\n  return (\r\n    <div\r\n      className={\"one-product-widget-container\"}\r\n      style={{ position: \"relative\" }}\r\n      onMouseEnter={() => setDetailShown(true)}\r\n      onMouseLeave={() => setDetailShown(false)}\r\n      \r\n    >\r\n      <div className=\"one-product-image-container\">\r\n        <img\r\n          className=\"one-product-image\"\r\n          src={`${IMAGE_BASE_URL}${productInfo.thumbnail_image}`}\r\n        />\r\n        \r\n      </div>\r\n\r\n      <div className=\"one-product-info-container\">\r\n        <div className=\"one-product-info-title\">{brand}</div>\r\n        <div\r\n          className=\"one-product-info-text\"\r\n          style={{\r\n            color: \"var(--blueColor)\",\r\n            fontWeight: \"bold\",\r\n          }}\r\n        >\r\n          {productInfo.description}\r\n        </div>\r\n        <div className=\"one-product-info-text\" style={{marginTop:\"10px\"}}>\r\n          Unit: &nbsp;\r\n          {productInfo.quantity > 1 ? `${productInfo.quantity}x` : \"\"}\r\n          {pack_size}\r\n          {unit}\r\n        </div>\r\n        <div className=\"one-product-info-text\">\r\n          Category: {category}\r\n        </div>\r\n      </div>\r\n      {product_status !== undefined && (\r\n        <div>\r\n          <div\r\n          style={{\r\n            background:\r\n              product_status === \"Active\"\r\n                ? \"green\"\r\n                : product_status == \"Review\"\r\n                ? \"orange\"\r\n                : 'var(--blueColor)',\r\n            fontWeight: \"bold\",\r\n            color: \"white\",\r\n            position: \"absolute\",\r\n            top: \"3%\",\r\n            right:\"33%\",\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n            padding: 10,\r\n            opacity: 0.85,\r\n            transform: 'rotate(320deg)'\r\n          }}\r\n        >\r\n          <span className=\"one-product-info-status\">{product_status}</span>\r\n        </div>\r\n          <div className=\"detail-button-group\" style={{display:detail_button_flag?\"block\":\"none\"}}>\r\n            <div className=\"detail-button-view-bg\">\r\n              <EditOutlined \r\n              onClick={ async()=>{\r\n                onClickEdit(productInfo)\r\n              }}\r\n              />\r\n            </div>\r\n            <div className=\"detail-button-delete-bg\">\r\n              <DeleteOutlined \r\n                   onClick={ async()=>{\r\n                    var res = await showConfirmDlgWidget({ title: \"Delete Confirmation\", content: \"Are you sure to delete this product?\" });\r\n                    if (res == false) return;\r\n                    onClickDelete(productInfo)\r\n              }}\r\n             />\r\n            </div>\r\n            \r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OneProduct;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\StorePage\\StoreListTableWidget\\StoreListTableColumn.js",["1748","1749","1750","1751","1752","1753","1754","1755","1756","1757","1758"],"import React from 'react';\r\nimport { Tag, Popconfirm, Space, message } from \"antd\";\r\nimport { showConfirmDlgWidget } from 'components/ConfirmDlgWidget/showConfirmDlgWidget';\r\n\r\nexport function showColumnFeature(info, onFeatured) {\r\n  let strFeaturedStatus = \"\";\r\n  let status = 0;\r\n\r\n  if (info.store_type !== \"PRI\" && info.payment == null) {\r\n    strFeaturedStatus = \" - \"\r\n  } else {\r\n    if (info.featured_start_date == null) {\r\n      strFeaturedStatus = \"Make Featured!\";\r\n    } else {\r\n      var today = new Date();\r\n      today = `${today.getFullYear()}-${(\r\n        \"0\" +\r\n        (today.getMonth() + 1)\r\n      ).slice(-2)}-${(\"0\" + today.getDate()).slice(-2)}`;\r\n\r\n      if (\r\n        info.featured_end_date.localeCompare(today) >= 0 &&\r\n        info.featured_start_date.localeCompare(today) <= 0\r\n      ) {\r\n        status = 1;\r\n        strFeaturedStatus = (\r\n          <div>\r\n            <div> {info.featured_start_date}</div>\r\n            <div> ~{info.featured_end_date}</div>\r\n          </div>\r\n        );\r\n      } else if (info.featured_start_date.localeCompare(today) > 0) {\r\n        status = 3;\r\n        strFeaturedStatus = \"Future\";\r\n      } else {\r\n        status = 2;\r\n        strFeaturedStatus = \"Expired\";\r\n      }\r\n    }\r\n  }\r\n\r\n  if (info.store_type !== \"PRI\" && info.payment == null) {\r\n    return strFeaturedStatus\r\n  } else {\r\n    return (\r\n      <div\r\n        onClick={async () => {\r\n          var res = await showConfirmDlgWidget({ title: \"Making Store Feature\", content: \"Are you sure to upgrade your store?\" });\r\n          if (res == false) return;\r\n          onFeatured(info)\r\n        }}\r\n        className={\r\n          \"store-featured-button\" +\r\n          (status === 0\r\n            ? \" featured-available\"\r\n            : status === 1\r\n              ? \" featured-working\"\r\n              : status === 2\r\n                ? \" featured-expired\"\r\n                : \" featured-future\")\r\n        }\r\n      >\r\n        {strFeaturedStatus}\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\n}\r\nexport function showColumnStoreType(info, record) {\r\n  if (record.store_type != \"PRI\") {\r\n    if (record.payment == null) {\r\n      return <Tag color={\"grey\"}>{\"DISABLED\"}</Tag>;\r\n    } else {\r\n      return <Tag color={\"grey\"}>{\"SEC\"}</Tag>;\r\n    }\r\n  }\r\n  return <Tag color={info === \"PRI\" ? \"blue\" : \"cyan\"}>{info}</Tag>;\r\n}\r\nexport function showColumnAction(text, record, onUpdateStore, onDeleteStore) {\r\n  if (record.store_type != \"PRI\") {\r\n    return (\r\n      <Space size=\"middle\" direction={\"vertical\"}>\r\n        <a style={{ color: \"var(--blueColor)\" }} onClick={ async()=>{\r\n          var res = await showConfirmDlgWidget({ title: \"Activate Confirmation\", content: \"Will you activate the current store?\" });\r\n          if (res == false) return;\r\n          //onActivateStore(record);\r\n        }}>\r\n          Activate\r\n        </a>\r\n        <a style={{ color: \"var(--redColor)\" }} onClick={ async()=>{\r\n          if (record.store_type === \"PRI\") {\r\n            message.warn(\"You can't delete the Primary store\");\r\n            return;\r\n          }\r\n          var res = await showConfirmDlgWidget({ title: \"Delete Confirmation\", content: \"Are you sure to delete this store?\" });\r\n          if (res == false) return;\r\n          onDeleteStore(record.id)\r\n        }}>\r\n          Delete\r\n        </a>\r\n      </Space>\r\n\r\n    );\r\n  }\r\n  return (\r\n    <Space size=\"middle\" direction={\"vertical\"}>\r\n      <a\r\n        onClick={() => {\r\n          onUpdateStore(record)\r\n        }}\r\n      >\r\n        Edit\r\n      </a>\r\n      <a style={{ color: \"var(--redColor)\" }} onClick={ async()=>{\r\n        if (record.store_type === \"PRI\") {\r\n          message.warn(\"You can't delete the Primary store\");\r\n          return;\r\n        }\r\n        var res = await showConfirmDlgWidget({ title: \"Delete Confirmation\", content: \"Are you sure to delete this store?\" });\r\n        if (res == false) return;\r\n        onDeleteStore(record.id)\r\n      }}>\r\n        Delete\r\n      </a>\r\n    </Space>\r\n  );\r\n\r\n}\r\n\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\StorePage\\FeaturedStoreModal\\FeaturedStoreModal.js",["1759","1760","1761","1762"],"// @flow strict\r\n\r\nimport Modal from \"antd/lib/modal/Modal\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { confirmable } from \"react-confirm\";\r\nimport \"./FeaturedStoreModal.css\";\r\nimport { Col, Input, message, Row } from \"antd\";\r\nimport moment from \"moment\";\r\nimport { Calendar } from \"antd\";\r\nimport { StarFilled } from \"@ant-design/icons\";\r\n\r\nfunction FeaturedStoreModal(props) {\r\n  const { show, proceed, storeInfo } = props;\r\n  const dayPricing = 1;\r\n  const [shouldAdd, setShouldAdd] = useState(false);\r\n  const [fromDate, setFromDate] = useState(\r\n    moment(moment().format(\"YYYY-MM-DD\"))\r\n  );\r\n  const [period, setPeriod] = useState(1);\r\n  const { featured_start_date, featured_end_date } = storeInfo;\r\n  useEffect(() => {\r\n    if (storeInfo != undefined) {\r\n      if (featured_end_date == null) {\r\n        setFromDate(moment(moment().format(\"YYYY-MM-DD\")));\r\n      } else {\r\n        console.log(\"OLD\", featured_start_date, featured_end_date);\r\n        var date = moment(featured_end_date, \"YYYY-MM-DD\");\r\n        if (moment(moment().format(\"YYYY-MM-DD\")).diff(date, \"d\") > 0) {\r\n          setFromDate(moment(moment().format(\"YYYY-MM-DD\")));\r\n        } else {\r\n          date = date.add(1, \"d\");\r\n          setShouldAdd(true);\r\n          setFromDate(moment(date.format()));\r\n        }\r\n      }\r\n    }\r\n  }, [storeInfo]);\r\n\r\n  const onSelectDate = (newDate) => {\r\n    newDate = moment(newDate.format(\"YYYY-MM-DD\"));\r\n    var diff = newDate.diff(fromDate, \"d\");\r\n    if (diff <= 0) {\r\n      return;\r\n    }\r\n    setPeriod(diff + 1);\r\n  };\r\n\r\n  const toDate = fromDate.clone().add(period - 1, \"d\").format(\"YYYY-MM-DD\");\r\n  return (\r\n    <Modal\r\n      visible={show}\r\n      destroyOnClose={true}\r\n      onCancel={() => {\r\n        proceed(null);\r\n      }}\r\n      closable={true}\r\n      maskClosable={false}\r\n      title={\"Upgrade your store to be featured today!\"}\r\n      className=\"store-feature-modal\"\r\n      onOk={() => {\r\n        proceed({\r\n          from: shouldAdd ? featured_start_date : fromDate.format(\"YYYY-MM-DD\"),\r\n          to: toDate,\r\n          period: period,\r\n        });\r\n      }}\r\n    >\r\n      <div>Please select the feature period</div>\r\n      <div>\r\n        <Row>\r\n          <Col xs={12}>\r\n            <Input\r\n              type={\"number\"}\r\n              min={1}\r\n              value={period}\r\n              onChange={(e) => setPeriod(e.target.value)}\r\n            />\r\n          </Col>\r\n          <Col xs={12} style={{ textAlign: \"center\" }}>\r\n            {/* Pricing: <strong>{period * dayPricing}</strong> USD */}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      <div style={{ marginTop: 20 }}>\r\n        <Calendar\r\n          // defaultValue={fromDate}\r\n          fullscreen={false}\r\n          onChange={onSelectDate}\r\n          // disabledDate={(date) => {\r\n          //   return moment(moment().format(\"YYYY-MM-DD\")).diff(date, \"d\") > 0;\r\n          // }}\r\n          dateCellRender={(date) => {\r\n            date = moment(date.format(\"YYYY-MM-DD\"));\r\n            if (\r\n              date.diff(fromDate, \"d\") >= 0 &&\r\n              date.diff(moment(toDate), \"d\") <= 0\r\n            ) {\r\n              return (\r\n                <div\r\n                  style={{\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    color: \"#FFBB17\",\r\n                  }}\r\n                >\r\n                  <StarFilled />\r\n                </div>\r\n              );\r\n            } else {\r\n              if (featured_start_date != null && featured_end_date != null) {\r\n                var old_start = moment(featured_start_date);\r\n                var old_end = moment(featured_end_date);\r\n\r\n                if (\r\n                  old_start.diff(date, \"d\") <= 0 &&\r\n                  date.diff(old_end, \"d\") <= 0\r\n                ) {\r\n                  return (\r\n                    <div\r\n                      style={{\r\n                        width: \"100%\",\r\n                        height: \"100%\",\r\n                        color: \"blue\",\r\n                      }}\r\n                    >\r\n                      <StarFilled />\r\n                    </div>\r\n                  );\r\n                }\r\n              }\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default confirmable(FeaturedStoreModal);\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\StorePage\\StoreDetailModal\\StoreDetailModal.js",["1763","1764","1765","1766","1767","1768"],"import React, { useEffect, useState } from \"react\";\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport { Col, message, Row, Spin, Input, Modal } from \"antd\";\r\nimport { confirmable } from \"react-confirm\";\r\nimport { showStoreBillWidget } from \"./StoreBillWidget/showStoreBillWidget\";\r\nimport NormalInput from \"../../../components/StorePage/NormalInput\";\r\nimport InputLocation from \"components/InputWidgets/InputLocation/InputLocation\";\r\nimport { googleKey } from \"../../../config/CONSTANTS\";\r\nimport \"./StoreDetailModal.css\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nfunction StoreDetailModal(props) {\r\n  const { show, proceed, title, isCreateStore } = props;\r\n  const { vendorData, storeId } = props;\r\n  const { storeInfo } = vendorData;\r\n  const [selStore, setSelStore] = useState({});\r\n  const [errorField, setErrorField] = useState([]);\r\n  const [isBusy, setIsBusy] = useState(true);\r\n  const [location, setLocation] = useState(null);\r\n  \r\n\r\n  useEffect(()=>{\r\n    let latitude = null;\r\n    let longitude = null;\r\n    let street = null;\r\n    if(location != null){\r\n      latitude = location.lat + \"\"\r\n      longitude = location.lng + \"\"\r\n      street = location.address\r\n    }\r\n    console.log(\"street:\", street)\r\n    setSelStore({\r\n      ...selStore,\r\n      street: street,\r\n      coordinates: [longitude, latitude],\r\n    });\r\n  },[location])\r\n\r\n  useEffect(() => {\r\n    if (storeId === undefined || storeId === \"\") {\r\n      let latitude = \"-24.60670\";\r\n      let longitude = \"31.08750\";\r\n      setIsBusy(false);\r\n      setSelStore({\r\n        coordinates: [longitude, latitude],\r\n      });\r\n\r\n    } else {\r\n      setIsBusy(false);\r\n      try {\r\n        let store = storeInfo.find((x) => x.id === storeId);\r\n        let street = store.street;\r\n        street = `${street}`;\r\n        var coordinates = [store.coordinates[1], store.coordinates[0]];\r\n        setSelStore({ ...store, street: street, coordinates: coordinates });\r\n      } catch (e) {\r\n        message.error(\"There's something wrong with your store\");\r\n        proceed(null);\r\n      }\r\n    }\r\n  }, [storeId]);\r\n\r\n  const isEmpty = (list, field, errorList) => {\r\n    if (list[field] === undefined || list[field] === \"\" || list[field] === null) {\r\n      var res = [...errorList, field];\r\n      return res;\r\n    }\r\n    return errorList;\r\n  };\r\n\r\n  //   console.log(selStore);\r\n  const validateFields = () => {\r\n    var errorList = Array();\r\n    errorList = isEmpty(selStore, \"name\", errorList);\r\n    // errorList = isEmpty(selStore, \"street\", errorList);\r\n    errorList = isEmpty(selStore, \"coordinates\", errorList);\r\n    errorList = isEmpty(selStore, \"building_number\", errorList);\r\n    errorList = isEmpty(selStore, \"contact_number\", errorList);\r\n    errorList = isEmpty(selStore, \"vat_number\", errorList);\r\n\r\n    setErrorField([...errorList]);\r\n    return errorList.length == 0;\r\n  };\r\n  return (\r\n    <div>\r\n      <Modal\r\n        visible={show}\r\n        destroyOnClose={true}\r\n        onCancel={() => {\r\n          proceed(null);\r\n        }}\r\n        closable={true}\r\n        maskClosable={false}\r\n        className=\"store-detail-modal\"\r\n        title={title}\r\n        okText={title===\"Add New Store\"?\"Create store\":\"Update store\"}\r\n        onOk={async () => {\r\n          if (validateFields() === false) return;\r\n          if (isCreateStore) {\r\n            if (location === null) return;\r\n            const billingInfo = await showStoreBillWidget({\r\n              storePlan: undefined,\r\n              exchangeRate: undefined,\r\n              is_closed: true,\r\n            });\r\n            if (billingInfo == null) {\r\n              return;\r\n            }\r\n            let paymentInfo = {};\r\n            if (billingInfo.isEFT == true) {\r\n              paymentInfo = {\r\n                amount: 10,//storePlan.price,\r\n                isEFT: true,\r\n              };\r\n            } else {\r\n              const { id, start_time, subscriber, billing_info } = billingInfo;\r\n              const next_billing_time = billing_info.next_billing_time;\r\n              const { email_address, payer_id, name } = subscriber;\r\n              const { given_name, surname } = name;\r\n              const amount = billing_info.last_payment.amount.value;\r\n              // console.log(\"BILLING INFO\", billing_info);\r\n\r\n              paymentInfo = {\r\n                paypalSubscriptionId: id,\r\n                paypalPayerId: payer_id,\r\n                paypalPayerName: `${given_name} ${surname}`,\r\n                email: email_address,\r\n                next_bill_date: next_billing_time,\r\n                start_bill_time: start_time,\r\n                amount: amount,\r\n              };\r\n            }\r\n            proceed({\r\n              storeInfo: {\r\n                ...selStore,\r\n                coordinates: [\r\n                  parseFloat(selStore.coordinates[0] + \"\"),\r\n                  parseFloat(selStore.coordinates[1] + \"\"),\r\n                ],\r\n              },\r\n              paymentInfo: paymentInfo,\r\n            });\r\n          } else {\r\n            \r\n            proceed({\r\n              ...selStore,\r\n              coordinates: [\r\n                parseFloat(selStore.coordinates[0] + \"\"),\r\n                parseFloat(selStore.coordinates[1] + \"\"),\r\n              ],\r\n            });\r\n          }\r\n        }}\r\n      >\r\n        <Spin spinning={isBusy}>\r\n          <Row gutter={32}>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={10} >\r\n              <div style={{ paddingBottom: \"5px\" }}>Store Name</div>\r\n              <NormalInput\r\n                placeholder=\"Store Name\"\r\n                field={\"name\"}\r\n                vendorInfo={selStore}\r\n                setVendorInfo={setSelStore}\r\n                errorField={errorField}\r\n                setErrorField={setErrorField}\r\n              />\r\n\r\n              <div style={{ marginTop: \"15px\", paddingBottom: \"5px\" }}>Address of your store</div>\r\n              <InputLocation \r\n                location={location} \r\n                setLocation={setLocation}\r\n                address={selStore.street}\r\n                />\r\n\r\n              <div style={{ marginTop: \"15px\", paddingBottom: \"5px\" }}>Building Number</div>\r\n              <NormalInput\r\n                placeholder=\"Building Number\"\r\n                field={\"building_number\"}\r\n                vendorInfo={selStore}\r\n                setVendorInfo={setSelStore}\r\n                errorField={errorField}\r\n                setErrorField={setErrorField}\r\n              />\r\n              <div style={{ marginTop: \"15px\", paddingBottom: \"5px\" }}>Contact Number</div>\r\n              <NormalInput\r\n                placeholder=\"Contact Number of your store\"\r\n                field={\"contact_number\"}\r\n                vendorInfo={selStore}\r\n                setVendorInfo={setSelStore}\r\n                errorField={errorField}\r\n                setErrorField={setErrorField}\r\n                type={\"tel\"}\r\n              />\r\n              <div style={{ marginTop: \"15px\", paddingBottom: \"5px\" }}>VAT Number(Optional)</div>\r\n              <NormalInput\r\n                placeholder=\"VAT Number\"\r\n                field={\"vat_number\"}\r\n                vendorInfo={selStore}\r\n                setVendorInfo={setSelStore}\r\n                errorField={errorField}\r\n                setErrorField={setErrorField}\r\n              />\r\n              <div style={{ marginTop: \"15px\", paddingBottom: \"5px\" }}>Store Description(optional)</div>\r\n              <TextArea\r\n                placeholder=\"Please specify the information of the store.\"\r\n                rows={4}\r\n                value={selStore.description}\r\n                onChange={(e) => {\r\n                  setSelStore({ ...selStore, description: e.target.value });\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={14} >\r\n              {(!isBusy && selStore.coordinates != undefined) && (\r\n                <div style={{ width: \"100%\", height: \"570px\", borderRadius: \"10px\", border: \"5px solid var(--backgroundColor)\", marginTop: \"20px\" }}>\r\n                  <GoogleMapReact\r\n                    bootstrapURLKeys={{\r\n                      key: googleKey,\r\n                      libraries: [\"places\"],\r\n                    }}\r\n                    center={{\r\n                      lng: parseFloat(selStore.coordinates[0]),\r\n                      lat: parseFloat(selStore.coordinates[1]),\r\n                    }}\r\n                    yesIWantToUseGoogleMapApiInternals\r\n                    defaultZoom={10}\r\n                    onClick={(value) => {\r\n                      setSelStore({\r\n                        ...selStore,\r\n                        coordinates: [`${value.lng}`, `${value.lat}`],\r\n                      });\r\n                    }}\r\n                  >\r\n                    <div\r\n                      lat={parseFloat(selStore.coordinates[1])}\r\n                      lng={parseFloat(selStore.coordinates[0])}\r\n                    >\r\n                      <i\r\n                        className=\"fas fa-store\"\r\n                        style={{\r\n                          cursor: \"pointer\",\r\n                          color: \"red\",\r\n                          fontSize: 25,\r\n                        }}\r\n                      ></i>\r\n                    </div>\r\n                  </GoogleMapReact>\r\n                </div>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n\r\n        </Spin>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default confirmable(StoreDetailModal);\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\ProductPage\\MyProductPanel\\AddProductDialog\\showAddProductDialog.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\ConfirmDlgWidget\\ConfirmDlgWidget.js",["1769"],"import React from 'react';\r\nimport { Modal, Spin } from 'antd';\r\nimport \"./ConfirmDlgWidget.css\"\r\nimport { confirmable } from 'react-confirm';\r\nconst ConfirmDlgWidget = (props) => {\r\n    const { show, proceed, title, okText, cancelText, content } = props;\r\n    return (\r\n        <div>\r\n            <Modal\r\n                visible={show}\r\n                destroyOnClose={true}\r\n                onCancel={() => {\r\n                    proceed(false);\r\n                }}\r\n                closable={true}\r\n                maskClosable={false}\r\n                className=\"confirm-modal\"\r\n                title={title}\r\n                okText={okText === undefined ? \"Yes\" : okText}\r\n                cancelText={cancelText === undefined ? \"Cancel\":cancelText}\r\n                onOk={() => {\r\n                    proceed(true);\r\n                }}>\r\n                <div>\r\n                    <p>{content}</p>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default confirmable(ConfirmDlgWidget);","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\ProductPage\\FavouriteProductPanel\\ProductSearch\\ProductSearch.js",["1770","1771","1772","1773","1774","1775","1776","1777"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Button, Select, Space, Spin, message } from \"antd\";\r\nimport { IMAGE_BASE_URL } from \"../../../../config/CONSTANTS\";\r\nimport { getBrand, getCategory, getPackSize, getUnit } from \"../../../../utils/GlobalFunctions\"\r\nimport { urlSearchProduct } from \"../../../../services/CONSTANTS\";\r\nimport { axiosGet } from \"../../../../services/ajaxServices\";\r\nimport \"./ProductSearch.css\"\r\nconst { Option } = Select;\r\n\r\nfunction ProductSearch(props) {\r\n  const { ownProducts,  onSelectProduct } = props;\r\n  \r\n  const [fetching, setFetching] = useState(false);\r\n  const [tempProduct, setTempProduct] = useState([]);\r\n  const [fetchedProduct, setFetchedProduct] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchProduct(\"\");\r\n  }, []);\r\n  const fetchProduct = (value) => {\r\n    // console.log(\"fetching Product\", value);\r\n    setFetching(true);\r\n    setTempProduct([]);\r\n\r\n    var url = urlSearchProduct + value;\r\n\r\n    new Promise((resolve, reject) => {\r\n      axiosGet(url)\r\n        .then((res) => {\r\n          if(res.length !=0){\r\n            const data = res.map((info) => ({\r\n              info: info,\r\n              value: info.barcode,\r\n            }));\r\n      \r\n            setTempProduct([...data]);\r\n            setFetching(false);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          message.error(\"Server failed. \" + err);      \r\n          reject(err);\r\n        });\r\n    });\r\n  };\r\n  const handleChange = (value) => {\r\n    setFetching(false);\r\n    setTempProduct([]);\r\n    setFetchedProduct(value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Select\r\n        labelInValue\r\n        value={fetchedProduct}\r\n        placeholder=\"Search products by brand, name, barcode or packsize\"\r\n        notFoundContent={fetching ? <Spin size=\"small\" /> : null}\r\n        filterOption={false}\r\n        showSearch={true}\r\n        onSearch={(v) => fetchProduct(v)}\r\n        onChange={handleChange}\r\n        className=\"custom-product-search-select\"\r\n        onSelect={(v) => {\r\n          var product = tempProduct.filter(\r\n            (x) => x.info.barcode === v.value\r\n          )[0];\r\n          onSelectProduct(product.info)\r\n          setFetchedProduct([]);\r\n        }}\r\n        style={{\r\n          width:\"80%\",\r\n        }}\r\n      >\r\n        {tempProduct.map((pInfo, index) => {\r\n          //   console.log(d);\r\n          const { info } = pInfo;\r\n          let brand = info.Brand.name\r\n          let category = info.Category.title\r\n          let pack_size = info.PackSize.name\r\n          let unit = info.Unit.name\r\n\r\n          return (\r\n            <Option key={pInfo.value} className=\"product-search-one-item-container\">\r\n              <Space dispatch={\"horizontal\"}>\r\n                <img\r\n                  src={IMAGE_BASE_URL + info.thumbnail_image}\r\n                  className=\"product-search-image\"\r\n                />\r\n                <div>\r\n                  Name: {info.description}\r\n                  <br />\r\n                  Brand: {brand}\r\n                  <br />\r\n                  Unit: &nbsp;\r\n                  {info.quantity > 1 ? `${info.quantity}x` : \"\"}\r\n                  {pack_size}\r\n                  {unit}\r\n                  <br />\r\n                  Category: {category}\r\n                </div>\r\n              </Space>\r\n            </Option>\r\n          );\r\n        })}\r\n      </Select>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductSearch;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\InventoryPage\\AddInventoryDialog\\AddNewCategoryDialog\\AddNewCategoryDialog.js",["1778","1779","1780","1781","1782","1783","1784","1785","1786","1787"],"import { Input, message, Modal } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { confirmable } from \"react-confirm\";\r\nimport { apiCreateInventoryCategory, apiUpdateIventoryCategory } from \"services/inventoryCategoryService\";\r\nimport ProductTypeSelector from \"../../../../components/ProductPage/ProductTypeSelector/ProductTypeSelector\";\r\nimport { axiosDelete, axiosGet, axiosPost, axiosPut } from \"../../../../services/ajaxServices\";\r\nimport \"./AddNewCategoryDialog.css\";\r\nconst { TextArea } = Input;\r\nfunction AddNewCategoryDialog(props) {\r\n  const { proceed, show } = props;\r\n  const { selInfo, oldList } = props;\r\n  const [newCategory, setNewCategory] = useState({});\r\n  const { isEdit, title } = props;\r\n\r\n  useEffect(()=>{\r\n    if(selInfo !== undefined){\r\n      setNewCategory(selInfo)\r\n    }\r\n  }, [selInfo])\r\n//   console.log(oldList);\r\n  const createNewCategory = () => {\r\n    if (newCategory.name == \"\"){\r\n      message.error(`Please enter category name`);\r\n      return;\r\n    } \r\n    console.log(\"oldList-\", oldList);\r\n    const newValue = newCategory.name.trim();\r\n    setNewCategory({ ...newCategory, name: newValue });\r\n\r\n    if (\r\n      oldList.filter((x) => x.name.toLowerCase() == newValue.toLowerCase())\r\n        .length > 0\r\n    ) {\r\n      message.error(`${newValue} is already in the list`);\r\n      return;\r\n    }\r\n    apiCreateInventoryCategory(newCategory)\r\n        .then((data) => {\r\n            proceed({\r\n              addedItem: data,\r\n            });\r\n\r\n        })\r\n        .catch((err) => {\r\n            message.error(\"There's something wrong while creating Category. \" + err);\r\n        });\r\n  };\r\n\r\n  const updateNewCategory = () => {\r\n    if (newCategory.name == \"\"){\r\n      message.error(`Please enter category name`);\r\n      return;\r\n    } \r\n    console.log(\"oldList-\", oldList);\r\n    const newValue = newCategory.name.trim();\r\n    setNewCategory({ ...newCategory, name: newValue });\r\n\r\n    if (\r\n      oldList.filter((x) => x.name.toLowerCase() == newValue.toLowerCase())\r\n        .length > 0\r\n    ) {\r\n      message.error(`${newValue} is already in the list`);\r\n      return;\r\n    }\r\n    apiUpdateIventoryCategory(newCategory)\r\n        .then((data) => {\r\n            proceed({\r\n              addedItem: data,\r\n            });\r\n\r\n        })\r\n        .catch((err) => {\r\n            message.error(\"There's something wrong while creating Category. \" + err);\r\n        });\r\n  };\r\n\r\n  const onOKAction = () => {\r\n    if (isEdit === false) {\r\n      createNewCategory()\r\n    }\r\n    else {\r\n      updateNewCategory()\r\n    }\r\n  }\r\n  return (\r\n    <Modal\r\n      visible={show}\r\n      destroyOnClose={true}\r\n      onCancel={() => {\r\n        proceed(null);\r\n      }}\r\n      closable={true}\r\n      maskClosable={false}\r\n      title={title}\r\n      className=\"custom-new-category-dlg\"\r\n      onOk={onOKAction}\r\n    >\r\n      <div>Please Enter new Category Name.</div>\r\n      <div style={{ marginTop: 10 }}>name *</div>\r\n      <Input\r\n        value={newCategory.name === undefined ? \"\":newCategory.name}\r\n        className=\"normal-input\"\r\n        onChange={(e) =>\r\n          setNewCategory({ ...newCategory, name: e.target.value })\r\n        }\r\n      />\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default confirmable(AddNewCategoryDialog);\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\BestDealPage\\BestDealDlgWidget\\BestDealDlgLeftPanel\\BestDealDlgLeftPanel.js",["1788","1789","1790","1791","1792"],"import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col, Input, Calendar, Select, message } from \"antd\"\r\nimport moment from \"moment\";\r\nimport { StarFilled } from \"@ant-design/icons\";\r\nimport { apiGetStoreListAll } from \"services/storeService\";\r\n\r\nconst { Option } = Select;\r\nconst BestDealDlgLeftPanel = (props) => {\r\n    const { newFlag, curBestDeal, setCurBestDeal, errorField, setErrorField, selectedStore } = props;\r\n    const [storeList, setStoreList] = useState([]);\r\n    \r\n    const {\r\n        fromDate,\r\n        setFromDate,\r\n        period,\r\n        setPeriod,\r\n        selDeal,\r\n        setTimeAddFlag,\r\n      } = props;\r\n    \r\n      const { start_date, end_date } = selDeal;\r\n      useEffect(() => {\r\n        if (selDeal != undefined) {\r\n          if (end_date == null) {\r\n            setFromDate(moment(moment().format(\"YYYY-MM-DD\")));\r\n          } else {\r\n            var date = moment(end_date, \"YYYY-MM-DD\");\r\n            if (moment(moment().format(\"YYYY-MM-DD\")).diff(date, \"d\") > 0) {\r\n              setFromDate(moment(moment().format(\"YYYY-MM-DD\")));\r\n            } else {\r\n              date = date.add(1, \"d\");\r\n              setTimeAddFlag(true);\r\n              setFromDate(moment(date.format()));\r\n            }\r\n          }\r\n        }\r\n      }, [selDeal]);\r\n      const onSelectDate = (newDate) => {\r\n        newDate = moment(newDate.format(\"YYYY-MM-DD\"));\r\n        var diff = newDate.diff(fromDate, \"d\");\r\n        if (diff <= 0) {\r\n          return;\r\n        }\r\n        setPeriod(diff + 1);\r\n      };\r\n      const toDate = fromDate\r\n        .clone()\r\n        .add(period - 1, \"d\")\r\n        .format(\"YYYY-MM-DD\");\r\n\r\n    useEffect(()=>{\r\n        apiGetStoreListAll()\r\n            .then((data) => {\r\n                setStoreList(data);\r\n            })\r\n            .catch((err) => {\r\n                message.error(\"Server failed. \" + err);\r\n        });\r\n    },[])\r\n    \r\n    return (\r\n        <div>\r\n            <Row gutter={16}>\r\n                <Col xs={12}>\r\n                    <div>\r\n                        Name\r\n                        <Input\r\n                        value={curBestDeal !== undefined ? curBestDeal.name: \"\"}\r\n                        className=\"custom-input\"\r\n                        disabled={newFlag === 1 ? false : true}\r\n                        style={{\r\n                            border: errorField.includes(\"name\")\r\n                              ? \"1px solid red\"\r\n                              : \"\",\r\n                          }}\r\n                        onChange={(e) => {\r\n                            if (errorField.includes(\"name\")) {\r\n                                let errors = errorField.filter((x) => x != \"name\");\r\n                                setErrorField([...errors]);\r\n                            }\r\n                            setCurBestDeal({...curBestDeal,name: e.target.value});\r\n                        }}\r\n                        />\r\n                    </div>\r\n                </Col>\r\n                <Col xs={12}>\r\n                    <div>\r\n                        Store\r\n                    </div>\r\n                    <Select placeholder=\"Select store\" className=\"select-store\"\r\n                        value={curBestDeal !== undefined && curBestDeal.stores !==undefined && curBestDeal.stores.length > 0 ? curBestDeal.stores[0].id: null}\r\n                        style={{\r\n                            width: \"100%\",\r\n                            border: errorField.includes(\"stores\") ? \"1px solid red\" : \"\",\r\n                        }}\r\n                        onChange={(e) => {\r\n                            if (errorField.includes(\"stores\")) {\r\n                                let errors = errorField.filter((x) => x != \"stores\");\r\n                                setErrorField([...errors]);\r\n                            }\r\n                            let stores = []\r\n                            stores = [...stores, {id:e}]\r\n                            setCurBestDeal({...curBestDeal,stores: stores});\r\n                        }}\r\n                    >\r\n                        {storeList.map((info) => {\r\n                            return (\r\n                                <Option key={`key_${info.id}`} value={info.id}>\r\n                                {info.name}\r\n                                </Option>\r\n                            );\r\n                        })}\r\n                    </Select>\r\n                </Col>\r\n            </Row>\r\n            <div style={{marginTop:30}}>Please select the feature period</div>\r\n            <div>\r\n                <Row gutter={16}>\r\n                    <Col xs={12}>\r\n                        <Input\r\n                            type={\"number\"}\r\n                            className=\"custom-input\"\r\n                            min={1}\r\n                            value={period}\r\n                            onChange={(e) => setPeriod(e.target.value)}/>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n            <div style={{ marginTop: 20 }}>\r\n                <Calendar\r\n                defaultValue={fromDate}\r\n                fullscreen={false}\r\n                onChange={onSelectDate}\r\n                // disabledDate={(date) => {\r\n                //   return moment(moment().format(\"YYYY-MM-DD\")).diff(date, \"d\") > 0;\r\n                // }}\r\n                dateCellRender={(date) => {\r\n                    date = moment(date.format(\"YYYY-MM-DD\"));\r\n                    if ( date.diff(fromDate, \"d\") >= 0 && date.diff(moment(toDate), \"d\") <= 0 ) {\r\n                    return (\r\n                        <div\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"100%\",\r\n                            color: \"#FFBB17\",\r\n                        }}\r\n                        >\r\n                        <StarFilled />\r\n                        </div>\r\n                    );\r\n                    } else {\r\n                        if (start_date != null && end_date != null) {\r\n                            let old_start = moment(start_date);\r\n                            let old_end = moment(end_date);\r\n            \r\n                            if (\r\n                              old_start.diff(date, \"d\") <= 0 &&\r\n                              date.diff(old_end, \"d\") <= 0\r\n                            ) {\r\n                              return (\r\n                                <div\r\n                                  style={{\r\n                                    width: \"100%\",\r\n                                    height: \"100%\",\r\n                                    color: \"blue\",\r\n                                  }}\r\n                                >\r\n                                  <StarFilled />\r\n                                </div>\r\n                              );\r\n                            }\r\n                        }\r\n                    }\r\n                }}\r\n                />\r\n            </div>\r\n    \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BestDealDlgLeftPanel;","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\BestDealPage\\BestDealDlgWidget\\BestDealDlgRightPanel\\BestDealDlgRightPanel.js",["1793","1794","1795","1796","1797","1798","1799","1800","1801","1802","1803","1804","1805","1806","1807","1808","1809","1810","1811","1812","1813","1814","1815"],"\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Divider, message, Radio } from 'antd';\r\nimport ProductRefWidget from 'components/PromotionPage/ProductRefWidget/ProductRefWidget';\r\nimport NormalProduct from 'pages/PromotionPage/PromotionDetailModal/OnePromotionProductDetailModal/NormalProduct/NormalProduct';\r\nimport { apiGetActiveProductData, apiGetFavoriteData } from 'services/productService';\r\nimport ComboDealProduct from \"pages/PromotionPage/PromotionDetailModal/OnePromotionProductDetailModal/ComboDealProduct/ComboDealProduct\";\r\nimport Buy1Get1DealProduct from \"pages/PromotionPage/PromotionDetailModal/OnePromotionProductDetailModal/Buy1Get1DealProduct/Buy1Get1DealProduct\";\r\n\r\nconst BestDealDlgRightPanel = (props) => {\r\n    const { curBestDeal, setCurBestDeal, initData, newFlag, onClickOk, errorField, setErrorField, isBusy, setIsBusy } = props;\r\n    const [favouriteProductList, setFavouriteProductList] = useState([]);\r\n    const [activeProductList, setActiveProductList] = useState([]);\r\n  \r\n    const [curSingleProduct, setCurSingleProduct] = useState(undefined)\r\n    const [comboProductList, setComboProductList] = useState([])\r\n    const [buyProductList, setBuyProductList] = useState([])\r\n    const [freeProductList, setFreeProductList] = useState([])\r\n    const [productType, setProductType] = useState(\"Main\");\r\n    const [sellingInfo, setSellingInfo] = useState({selling_price:\"\", description: \"\"})\r\n    const [curType, setCurType] =useState(\"SingleProduct\");\r\n\r\n    useEffect(() => {\r\n        setIsBusy(true)\r\n        apiGetFavoriteData()\r\n          .then((data) => {\r\n            setFavouriteProductList(data);\r\n          })\r\n          .catch((err) => {\r\n              message.error(\"Server failed. \" + err);\r\n          });\r\n        apiGetActiveProductData()\r\n          .then((data) => {\r\n              setActiveProductList(data);\r\n          })\r\n          .catch((err) => {\r\n              message.error(\"Server failed. \" + err);\r\n          }); \r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if(curBestDeal != undefined){\r\n            if(curBestDeal.dealType != undefined){\r\n                if(curBestDeal[curBestDeal.dealType] != undefined){\r\n                    let product = curBestDeal[curBestDeal.dealType][0]\r\n                    setSellingInfo({selling_price:product.selling_price, description: product.description})\r\n                }\r\n                setCurType(curBestDeal.dealType)\r\n            }\r\n        } \r\n    }, [curBestDeal]);\r\n    useEffect(()=>{\r\n        setCurBestDeal({...curBestDeal,single_product: curSingleProduct});\r\n    }, [curSingleProduct])\r\n    useEffect(()=>{\r\n        setCurBestDeal({...curBestDeal,combo_list: comboProductList});\r\n    }, [comboProductList])\r\n    useEffect(()=>{\r\n        setCurBestDeal({...curBestDeal,buy_list: buyProductList});\r\n    }, [buyProductList])\r\n    useEffect(()=>{\r\n        setCurBestDeal({...curBestDeal,free_list: freeProductList});\r\n    }, [freeProductList])\r\n    useEffect(()=>{\r\n        if(initData!=undefined){\r\n            if(initData.SingleProduct.length>0){\r\n                setCurSingleProduct(initData.SingleProduct[0].product)\r\n            } \r\n            if(initData.ComboProduct.length>0) {\r\n                setComboProductList(...comboProductList, initData.ComboProduct[0].combo_products)\r\n            }\r\n            if(initData.Buy1Get1Product.length>0) {\r\n                setBuyProductList(...buyProductList, initData.Buy1Get1Product[0].buy_products)\r\n            }\r\n            if(initData.Buy1Get1Product.length>0) {\r\n                setFreeProductList(...freeProductList, initData.Buy1Get1Product[0].free_products)\r\n            }\r\n            setSellingInfo({selling_price:initData[initData.dealType][0].selling_price, description: initData[initData.dealType][0].description})\r\n        }\r\n    }, [initData])\r\n    useEffect(()=>{\r\n        onSaveInfo()\r\n    }, [sellingInfo])\r\n\r\n    const onChangeDealType = e => {\r\n        setCurBestDeal({...curBestDeal,dealType: e.target.value});\r\n    };\r\n\r\n    const onProductSelect = (pInfo) => {\r\n        if(newFlag == 1){\r\n            if(curType === \"SingleProduct\"){\r\n                setCurSingleProduct(pInfo)\r\n            }else if(curType === \"ComboProduct\"){\r\n                let tmp = [...comboProductList]\r\n                tmp = [pInfo, ...tmp]\r\n                setComboProductList(tmp)\r\n            }else if(curType === \"Buy1Get1Product\"){\r\n                if(productType === \"Main\"){\r\n                  let tmp = [...buyProductList]\r\n                  tmp = [pInfo, ...tmp]\r\n                  setBuyProductList(tmp)\r\n                }else{\r\n                  let tmp = [...freeProductList]\r\n                  tmp = [pInfo, ...tmp]\r\n                  setFreeProductList(tmp)\r\n                }\r\n            }\r\n        }else{\r\n            message.error(\"When updating, we can't change product info\")\r\n        }\r\n        \r\n    }\r\n\r\n    const onDeleteProduct = (pInfo)=>{\r\n        if(curType === \"ComboProduct\"){\r\n          let tmp = comboProductList.filter(\r\n            (x) => x.barcode != pInfo.barcode\r\n          )\r\n          setComboProductList(tmp)\r\n        }else if(curType === \"Buy1Get1Product\"){\r\n          if(productType === \"Main\"){\r\n            let tmp = buyProductList.filter(\r\n              (x) => x.barcode != pInfo.barcode\r\n            )\r\n            setBuyProductList(tmp)\r\n          }else{\r\n            let tmp = freeProductList.filter(\r\n              (x) => x.barcode != pInfo.barcode\r\n            )\r\n            setFreeProductList(tmp)\r\n          }\r\n        }\r\n    }\r\n    const onSaveInfo = ()=>{\r\n        let price = sellingInfo.selling_price\r\n        let description = sellingInfo.description\r\n        setCurBestDeal({...curBestDeal,price: price, description:description});\r\n    }\r\n    return (\r\n        <div>\r\n            <ProductRefWidget\r\n                activeProductList={favouriteProductList}\r\n                favoriteProductList={activeProductList}\r\n                productSelect={onProductSelect}\r\n            />\r\n            <Divider orientation=\"left\">\r\n            <Radio.Group onChange={onChangeDealType} value={curBestDeal == undefined || curBestDeal.dealType == undefined ? \"SingleProduct\":curBestDeal.dealType}>\r\n                <Radio value=\"SingleProduct\">Single Product</Radio>\r\n                <Radio value=\"ComboProduct\">Combo Product</Radio>\r\n                <Radio value=\"Buy1Get1Product\">Buy1 Get1 Product</Radio>\r\n            </Radio.Group>\r\n            </Divider>\r\n            \r\n            <Divider orientation=\"left\"> Product Info </Divider>\r\n            {curType == \"SingleProduct\" && (\r\n            <NormalProduct\r\n                selectedPromotionProduct={curSingleProduct}\r\n                sellingInfo={sellingInfo}\r\n                setSellingInfo={setSellingInfo}\r\n                errorField={errorField}\r\n                disabled={newFlag==1?false:true}\r\n                setErrorField={setErrorField}  \r\n                onClickOk={onSaveInfo}\r\n            />\r\n            )}\r\n            {curType === \"ComboProduct\" && (\r\n                <ComboDealProduct\r\n                selectedPromotionProductList={comboProductList}\r\n                sellingInfo={sellingInfo}\r\n                setSellingInfo={setSellingInfo}\r\n                deleteProduct={onDeleteProduct}\r\n                disabled={newFlag==1?false:true}\r\n                errorField={errorField}\r\n                setErrorField={setErrorField}  \r\n                onClickOk={onSaveInfo}\r\n                />\r\n            )}\r\n            {curType === \"Buy1Get1Product\" && (\r\n                <Buy1Get1DealProduct\r\n                    buyProductList={buyProductList}\r\n                    freeProductList={freeProductList}\r\n                    productType={productType}\r\n                    setProductType={setProductType}\r\n                    sellingInfo={sellingInfo}\r\n                    setSellingInfo={setSellingInfo}\r\n                    deleteProduct={onDeleteProduct}\r\n                    disabled={newFlag==1?false:true}\r\n                    errorField={errorField}\r\n                    setErrorField={setErrorField}  \r\n                    onClickOk={onSaveInfo}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BestDealDlgRightPanel;","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\AuthDialogWidget\\AuthDialogWidget.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\AuthLogoWidget\\AuthLogoWidget.js",["1816"],"// @flow strict\r\n\r\nimport React from \"react\";\r\nimport \"./AuthLogoWidget.css\";\r\nimport { logoUrl } from \"config/CONSTANTS\";\r\nexport const AuthLogoWidget = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"auth-logo-widget\">\r\n        <img src={logoUrl} style={{ maxWidth: \"90%\", maxHeight: 150 }} />\r\n        <div className=\"auth-logo-widget-description\">\r\n          Inventory Manage\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthLogoWidget;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\ButtonWidgets\\TextButton\\TextButton.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\InventoryPage\\AddInventoryDialog\\AddInventoryDialogContent.js",["1817","1818","1819","1820","1821","1822"],"import React, { useEffect, useState } from \"react\";\r\nimport { Col, Input, message, Row, Tooltip } from \"antd\";\r\nimport ProductDescriptionInput from \"../../../components/ProductPage/ProductDescriptionInput/ProductDescriptionInput\";\r\nimport ProductTypeSelector from \"../../../components/ProductPage/ProductTypeSelector/ProductTypeSelector\";\r\nimport ProductImageWidget from \"./ProductImageWidget\";\r\nimport { urlCreateInventoryName, urlCreateInventoryUnit, urlCreateInventoryLocation} from \"../../../services/CONSTANTS\";\r\nimport { showAddBaseUnitDialog } from \"./AddBaseUnitDialog/showAddBaseUnitDialog\";\r\nimport { showAddNewCategoryDialog } from \"./AddNewCategoryDialog/showAddNewCategoryDialog\";\r\nimport CommonButton from \"components/ButtonWidgets/CommonButton/CommonButton\";\r\nimport ProductInputNumber from \"components/InputWidgets/InputNumber/ProductInputNumber\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nfunction AddInventoryDialogContent(props) {\r\n  const {\r\n    ownCommonData,\r\n    setOwnCommonData,\r\n  } = props;\r\n\r\n  const {\r\n    selInventory,\r\n    setSelInventory,\r\n    isEditing,\r\n  } = props;\r\n  const { errorField, setErrorField } = props;\r\n\r\n  const {\r\n    nameList,\r\n    locationList,\r\n    unitList,\r\n    categoryList,\r\n  } = ownCommonData;\r\n  if (categoryList == undefined) {\r\n    return <div></div>;\r\n  }\r\n  const createNewCategory = async () => {\r\n    var res = await showAddNewCategoryDialog({\r\n      title : \"New Category\",\r\n      isEdit : false,\r\n      oldList: categoryList\r\n    });\r\n    if (res == null) return;\r\n    \r\n    var tmpData = ownCommonData;\r\n    let updateData = [...tmpData[\"categoryList\"]];\r\n\r\n    var storeIndex = updateData.findIndex(x => x.id == res['addedItem'].id);\r\n    updateData.splice(storeIndex+1, 0, res['addedItem']);\r\n\r\n    tmpData[\"categoryList\"] = [...updateData];\r\n    setOwnCommonData({ ...tmpData });\r\n    message.success(`new Category has been created.`);\r\n  };\r\n  \r\n\r\n  const addNewBaseUnit = async (fieldName, fieldTitle, createUrl) => {\r\n    var res = await showAddBaseUnitDialog({\r\n      url: createUrl,\r\n      unitName: fieldTitle,\r\n      oldList: ownCommonData[fieldName],\r\n    });\r\n    if (res == null) return;\r\n\r\n    var tmpData = ownCommonData;\r\n    let updateData = [...tmpData[fieldName]];\r\n\r\n    updateData = [res['addedItem'], ...updateData];\r\n    tmpData[fieldName] = [...updateData];\r\n    setOwnCommonData({ ...tmpData });\r\n    message.success(`${fieldTitle} has been created.`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>Inventory Image*</div>\r\n      <ProductImageWidget\r\n        field={\"image_name\"}\r\n        productInfo={selInventory}\r\n        setProductInfo={setSelInventory}\r\n        errorField={errorField}\r\n        setErrorField={setErrorField}\r\n      />\r\n      <Row align={\"middle\"} gutter={16} style={{marginTop:\"10px\"}}>\r\n      <Col xs={24} sm={24} md={24} lg={24} xl={12}>\r\n          <div>Select Name*</div>\r\n          <Row align={\"middle\"} gutter={16}>\r\n            <Col flex={\"auto\"}>\r\n              <ProductTypeSelector\r\n                placeholder={\"Select Name\"}\r\n                field={\"name_id\"}\r\n                productInfo={selInventory}\r\n                setProductInfo={setSelInventory}\r\n                list={nameList}\r\n                displayField=\"name\"\r\n                idField=\"id\"\r\n                errorField={errorField}\r\n                setErrorField={setErrorField}\r\n              />\r\n            </Col>\r\n              <Col flex={\"30px\"}>\r\n                <Tooltip title={\"Click to add new one.\"}>\r\n                  <CommonButton\r\n                    customClass={\"product-upload-basic-unit-add-button\"}\r\n                    onClick={() => {\r\n                      addNewBaseUnit(\"nameList\", \"Name\", urlCreateInventoryName);\r\n                    }}\r\n                  >\r\n                    Add\r\n                  </CommonButton>\r\n                </Tooltip>\r\n              </Col>\r\n            \r\n          </Row>\r\n        </Col>\r\n        <Col xs={24} sm={24} md={24} lg={24} xl={12}>\r\n        <div>Select Category*</div>\r\n           <Row align={\"middle\"}>\r\n        <Col flex={\"auto\"}>\r\n          <ProductTypeSelector\r\n            field={\"category_id\"}\r\n            productInfo={selInventory}\r\n            setProductInfo={setSelInventory}\r\n            placeholder={\"Select Category\"}\r\n            list={categoryList}\r\n            errorField={errorField}\r\n            setErrorField={setErrorField}\r\n            displayField=\"name\"\r\n            idField=\"id\"\r\n            isCategory={true}\r\n          />\r\n        </Col>\r\n          <Col flex={\"30px\"} style={{marginLeft:\"20px\"}}>\r\n            <Tooltip title={\"Click to add new one.\"}>\r\n              <CommonButton\r\n                customClass={\"product-upload-basic-unit-add-button\"}\r\n                onClick={() => {\r\n                  createNewCategory();\r\n                }}\r\n              >\r\n                Add\r\n              </CommonButton>\r\n            </Tooltip>\r\n          </Col>\r\n        \r\n      </Row>\r\n        </Col>\r\n      </Row>\r\n  \r\n      <Row gutter={16} style={{marginTop:\"10px\"}}>\r\n        <Col xs={24} sm={24} md={24} lg={24} xl={12}>\r\n          <div>Location*</div>\r\n          <Row align={\"middle\"} gutter={16}>\r\n            <Col flex={\"auto\"}>\r\n              <ProductTypeSelector\r\n                placeholder={\"Select Location\"}\r\n                field={\"location_id\"}\r\n                productInfo={selInventory}\r\n                setProductInfo={setSelInventory}\r\n                list={locationList}\r\n                displayField=\"name\"\r\n                idField=\"id\"\r\n                errorField={errorField}\r\n                setErrorField={setErrorField}\r\n              />\r\n            </Col>\r\n              <Col flex={\"30px\"}>\r\n                <Tooltip title={\"Click to add new one.\"}>\r\n                  <CommonButton\r\n                    customClass={\"product-upload-basic-unit-add-button\"}\r\n                    onClick={() => {\r\n                      addNewBaseUnit(\"locationList\",\"Location\",urlCreateInventoryLocation);\r\n                    }}\r\n                  >\r\n                    Add\r\n                  </CommonButton>\r\n                </Tooltip>\r\n              </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={24} sm={24} md={24} lg={24} xl={12}>\r\n          <div>Unit*</div>\r\n          <Row align={\"middle\"} gutter={16}>\r\n            <Col flex={\"auto\"}>\r\n              <ProductTypeSelector\r\n                placeholder={\"Select Unit\"}\r\n                field={\"unit_id\"}\r\n                productInfo={selInventory}\r\n                setProductInfo={setSelInventory}\r\n                list={unitList}\r\n                displayField=\"name\"\r\n                idField=\"id\"\r\n                errorField={errorField}\r\n                setErrorField={setErrorField}\r\n              />\r\n            </Col>\r\n              <Col flex={\"30px\"}>\r\n                <Tooltip title={\"Click to add new one.\"}>\r\n                  <CommonButton\r\n                    customClass={\"product-upload-basic-unit-add-button\"}\r\n                    onClick={() => {\r\n                      addNewBaseUnit(\"unitList\", \"Unit\", urlCreateInventoryUnit);\r\n                    }}\r\n                  >\r\n                    Add\r\n                  </CommonButton>\r\n                </Tooltip>\r\n              </Col>\r\n            \r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    \r\n      <Row align={\"middle\"} gutter={16} style={{marginTop:\"10px\"}}>\r\n        <Col xs={24} sm={24} md={24} lg={24} xl={12}>\r\n          <div>QTY*</div>\r\n          <ProductInputNumber\r\n            field={\"qty\"}\r\n            productInfo={selInventory}\r\n            setProductInfo={setSelInventory}\r\n            errorField={errorField}\r\n            setErrorField={setErrorField}\r\n            />\r\n        </Col>\r\n        <Col xs={24} sm={24} md={24} lg={24} xl={12}>\r\n          <div>Description*</div>\r\n          <ProductDescriptionInput\r\n            placeholder=\"Description\"\r\n            field={\"description\"}\r\n            productInfo={selInventory}\r\n            setProductInfo={setSelInventory}\r\n            errorField={errorField}\r\n            setErrorField={setErrorField}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row align={\"middle\"} gutter={16}>\r\n        <Col xs={24} sm={24} md={24} lg={24} xl={12}>\r\n          <div>Spoilage*</div>\r\n          <ProductInputNumber\r\n            min={\"-10000\"}\r\n            field={\"spoilage\"}\r\n            productInfo={selInventory}\r\n            setProductInfo={setSelInventory}\r\n            errorField={errorField}\r\n            setErrorField={setErrorField}\r\n            />\r\n          </Col>\r\n        <Col xs={24} sm={24} md={24} lg={24} xl={12}>\r\n          <div>Price Per Unit*</div>\r\n          <ProductInputNumber\r\n            field={\"price_per_unit\"}\r\n            productInfo={selInventory}\r\n            setProductInfo={setSelInventory}\r\n            errorField={errorField}\r\n            setErrorField={setErrorField}\r\n            formatter= {value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n            parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\r\n            />\r\n        </Col>\r\n      </Row>\r\n      \r\n      \r\n\r\n\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddInventoryDialogContent;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\services\\productService.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\RatingWidget\\RatingWidget.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\InventoryPage\\AddInventoryDialog\\AddBaseUnitDialog\\showAddBaseUnitDialog.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\services\\storeService.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\PromotionPage\\ProductRefWidget\\ProductRefWidget.js",["1823","1824"],"import React from \"react\";\r\nimport { Collapse } from \"antd\";\r\nimport SmallProductWidget from \"../../../components/PromotionPage/SmallProductWidget/SmallProductWidget\";\r\nimport ProductSearch from \"pages/ProductPage/FavouriteProductPanel/ProductSearch/ProductSearch\";\r\nimport \"./ProductRefWidget.css\";\r\n\r\nconst { Panel } = Collapse\r\nfunction ProductRefWidget(props) {\r\n  \r\n  const { activeProductList, favoriteProductList, productSelect } = props\r\n\r\n  const onSelectProduct = (pInfo) => {\r\n    productSelect(pInfo)\r\n  }\r\n\r\n  const favoriteProductUIList =\r\n  favoriteProductList == undefined ? (\r\n      <div className=\"dont-have-product\">\r\n        You don't have any favourite products\r\n      </div>\r\n    ) : ( favoriteProductList.map((info, index) => {\r\n        let brand = info.Brand.name\r\n        let category = info.Category.title\r\n        let pack_size = info.PackSize.name\r\n        let unit = info.Unit.name\r\n        return (\r\n          <SmallProductWidget\r\n          key={info.barcode}\r\n          productInfo={info}\r\n          brand={brand}\r\n          category={category}\r\n          pack_size={pack_size}\r\n          unit={unit}\r\n          onSelectProduct={onSelectProduct}\r\n          />\r\n        );\r\n  }));\r\n  const activeProductUIList =\r\n    activeProductList == undefined ? (\r\n      <div className=\"dont-have-product\">\r\n        You don't have any favourite products\r\n      </div>\r\n    ) : ( activeProductList.map((info, index) => {\r\n        let brand = info.Brand.name\r\n        let category = info.Category.title\r\n        let pack_size = info.PackSize.name\r\n        let unit = info.Unit.name\r\n        return (\r\n          <SmallProductWidget\r\n          key={info.barcode}\r\n          productInfo={info}\r\n          brand={brand}\r\n          category={category}\r\n          pack_size={pack_size}\r\n          unit={unit}\r\n          onSelectProduct={onSelectProduct}\r\n          />\r\n        );\r\n      }));\r\n\r\n  return (\r\n    <div>\r\n      <Collapse accordion className=\"custom-ref-collapse\" defaultActiveKey={['3']}>\r\n        <Panel showArrow={false} header=\"My Favourite Products\" key=\"1\">\r\n          <div className=\"promotion-detail-favourite-products-container\">\r\n            {favoriteProductUIList}\r\n          </div>\r\n        </Panel>\r\n        <Panel showArrow={false} header=\"Activated Products\" key=\"2\">\r\n          <div className=\"promotion-detail-favourite-products-container\">\r\n            {activeProductUIList}\r\n          </div>\r\n        </Panel>\r\n        <Panel showArrow={false} header=\"Search By Keyword\" key=\"3\">\r\n          <ProductSearch onSelectProduct={onSelectProduct}></ProductSearch>\r\n        </Panel>\r\n      </Collapse>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductRefWidget;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\PromotionPage\\PromotionDetailModal\\OnePromotionProductDetailModal\\ComboDealProduct\\ComboDealProduct.js",["1825"],"// @flow strict\r\n\r\nimport { Col, Input, Row } from \"antd\";\r\nimport React, { useEffect } from \"react\";\r\nimport SmallProductWidget from \"../../../../../components/PromotionPage/SmallProductWidget/SmallProductWidget\";\r\nimport { CloseOutlined } from \"@ant-design/icons\";\r\nimport { useRef } from \"react\";\r\nfunction ComboDealProduct(props) {\r\n  const {\r\n    selectedPromotionProductList,\r\n    sellingInfo,\r\n    setSellingInfo,\r\n    deleteProduct,\r\n    onClickOk,\r\n    disabled, \r\n  } = props;\r\n\r\n  const { selling_price } = sellingInfo === undefined ? { selling_price: undefined } : sellingInfo;\r\n  const { description } = sellingInfo === undefined ? { description: undefined } : sellingInfo;\r\n  const { quantity } = sellingInfo === undefined ? { quantity: \"1\" } : sellingInfo;\r\n\r\n  const priceRef = useRef(null);\r\n  useEffect(() => {\r\n    try {\r\n      priceRef.current.focus();\r\n    } catch (e) {}\r\n  }, [selectedPromotionProductList]);\r\n  return (\r\n    <div>\r\n      <Row gutter={16}>\r\n        <Col xs={24} sm={16}>\r\n          <div\r\n            style={{\r\n              overflowX: \"auto\",\r\n              overflowY: \"hidden\",\r\n              whiteSpace: \"nowrap\",\r\n            }}\r\n          >\r\n            {selectedPromotionProductList.map((info, index) => {\r\n              var brand = info.Brand.name\r\n              var category = info.Category.title\r\n              var pack_size = info.PackSize.name\r\n              var unit = info.Unit.name\r\n              return (\r\n                <div\r\n                  key={`${info.barcode} - ${index}`}\r\n                  style={{ display: \"inline-block\", position: \"relative\" }}\r\n                >\r\n                  <SmallProductWidget\r\n                    info={info}\r\n                    key={info.barcode}\r\n                    productInfo={info}\r\n                    brand={brand}\r\n                    category={category}\r\n                    pack_size={pack_size}\r\n                    unit={unit}\r\n                    canDelete={true}\r\n                    onSelectProduct={() => {}}\r\n                  />\r\n                  \r\n                  <div className=\"product-remove-button\"\r\n                    onClick={() => {\r\n                      deleteProduct(info);\r\n                    }}\r\n                  >\r\n                    <CloseOutlined />\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </Col>\r\n        <Col xs={24} sm={8}>\r\n          <div>\r\n            Price\r\n            <Input\r\n              ref={priceRef}\r\n              type={\"number\"}\r\n              value={selling_price}\r\n              disabled={disabled}\r\n              className=\"custom-input\"\r\n              prefix={\"R\"}\r\n              onChange={(e) => {\r\n                setSellingInfo({...sellingInfo,selling_price: e.target.value});\r\n              }}\r\n              onPressEnter={(e) => {\r\n                e.target.blur();\r\n                onClickOk();\r\n              }}\r\n            />\r\n          </div>\r\n          <div>\r\n            Description\r\n            <Input\r\n              maxLength={99}\r\n              type={\"text\"}\r\n              value={description}\r\n              className=\"custom-input\"\r\n              onChange={(e) => {\r\n                setSellingInfo({...sellingInfo,description: e.target.value});\r\n              }}\r\n            />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ComboDealProduct;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\PromotionPage\\PromotionDetailModal\\OnePromotionProductDetailModal\\NormalProduct\\NormalProduct.js",["1826","1827","1828","1829"],"import React, { useEffect } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { Col, Input, Row } from \"antd\";\r\nimport SmallProductWidget from \"../../../../../components/PromotionPage/SmallProductWidget/SmallProductWidget\";\r\n\r\nfunction NormalProduct(props) {\r\n  const { selectedPromotionProduct, sellingInfo, setSellingInfo, onClickOk, disabled, errorField, setErrorField } = props;\r\n\r\n  const { selling_price } = sellingInfo === undefined ? { selling_price: undefined } : sellingInfo;\r\n  const { description } = sellingInfo === undefined ? { description: undefined } : sellingInfo;\r\n  const { quantity } = sellingInfo === undefined ? { quantity: \"1\" } : sellingInfo;\r\n  \r\n  const priceRef = useRef(null);\r\n  useEffect(() => {\r\n    try {\r\n      priceRef.current.focus();\r\n    } catch (e) {}\r\n  }, [selectedPromotionProduct]);\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col xs={24} sm={12} style={{ textAlign: \"center\" }}>\r\n          {selectedPromotionProduct !== undefined && (\r\n            <SmallProductWidget\r\n              productInfo={selectedPromotionProduct}\r\n              brand={selectedPromotionProduct.Brand.name}\r\n              category={selectedPromotionProduct.Category.title}\r\n              pack_size={selectedPromotionProduct.PackSize.name}\r\n              unit={selectedPromotionProduct.Unit.name}\r\n              onSelectProduct={() => {}}\r\n            />\r\n          )}\r\n        </Col>\r\n        <Col xs={24} sm={12}>\r\n          <div>\r\n            Price\r\n            <Input\r\n              ref={priceRef}\r\n              type={\"number\"}\r\n              value={selling_price}\r\n              disabled={disabled}\r\n              className=\"custom-input\"\r\n              style={{\r\n                border: errorField !=undefined && errorField.includes(\"price\")\r\n                  ? \"1px solid red\"\r\n                  : \"\",\r\n              }}\r\n              prefix={\"R\"}\r\n              onChange={(e) => {\r\n                if (errorField !=undefined && errorField.includes(\"price\")) {\r\n                  let errors = errorField.filter((x) => x != \"price\");\r\n                  setErrorField([...errors]);\r\n              }\r\n                setSellingInfo({...sellingInfo,selling_price: e.target.value});\r\n              }}\r\n              onPressEnter={(e) => {\r\n                e.target.blur();\r\n                onClickOk();\r\n              }}\r\n            />\r\n          </div>\r\n          <div style={{paddingTop:10}}>\r\n            Description\r\n            <Input\r\n              type={\"text\"}\r\n              maxLength={99}\r\n              value={description}\r\n              className=\"custom-input\"\r\n              onChange={(e) => {\r\n                setSellingInfo({...sellingInfo,description: e.target.value});\r\n              }}\r\n            />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NormalProduct;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\PromotionPage\\PromotionDetailModal\\OnePromotionProductDetailModal\\Buy1Get1DealProduct\\Buy1Get1DealProduct.js",["1830","1831","1832","1833","1834","1835","1836"],"import React, { useEffect, useState } from \"react\";\r\nimport { Col, Divider, Input, Row, Space, Radio, Tabs } from \"antd\";\r\nimport SmallProductWidget from \"../../../../../components/PromotionPage/SmallProductWidget/SmallProductWidget\";\r\nimport { CloseOutlined } from \"@ant-design/icons\";\r\nimport { useRef } from \"react\";\r\nimport \"./Buy1Get1DealProduct.css\"\r\nconst { TabPane } = Tabs;\r\n\r\nfunction Buy1Get1DealProduct(props) {\r\n  const {\r\n    buyProductList,\r\n    freeProductList,\r\n    productType,\r\n    setProductType,\r\n    deleteProduct,\r\n    onClickOk,\r\n    sellingInfo,\r\n    setSellingInfo,\r\n    disabled, \r\n  } = props;\r\n\r\n  const { selling_price } = sellingInfo === undefined ? { selling_price: undefined } : sellingInfo;\r\n  const { description } = sellingInfo === undefined ? { description: undefined } : sellingInfo;\r\n  const { quantity } = sellingInfo === undefined ? { quantity: \"1\" } : sellingInfo;\r\n\r\n  const priceRef = useRef(null);\r\n  useEffect(() => {\r\n    try {\r\n      priceRef.current.focus();\r\n    } catch (e) {}\r\n  }, [buyProductList, freeProductList]);\r\n  \r\n  return (\r\n    <div>\r\n      <Row gutter={16}>\r\n        <Col xs={24} sm={18} style={{ textAlign: \"center\" }}>\r\n          <Row gutter={8} className=\"card-container\">\r\n            <Tabs type=\"card\"\r\n                onChange={(key) => {\r\n                setProductType(key);\r\n              }}>\r\n              <TabPane tab=\"Main Products\" key=\"Main\">\r\n              <div className={\"buy1get1product-products-container\"}>\r\n                {buyProductList === undefined ? (\r\n                  <div></div>\r\n                ) : (\r\n                  buyProductList.map((product, index) => {\r\n                    return (\r\n                      <div\r\n                        style={{\r\n                          display: \"inline-block\",\r\n                          position: \"relative\",\r\n                        }}\r\n                        key={`main_product_${index}`}\r\n                      >\r\n                        <SmallProductWidget\r\n                          productInfo={product}\r\n                          brand={product.Brand.name}\r\n                          category={product.Category.title}\r\n                          pack_size={product.PackSize.name}\r\n                          unit={product.Unit.name}\r\n                          canDelete={true}\r\n                          selectProduct={() => {}}\r\n                        />\r\n                        <div className=\"product-remove-button\"\r\n                            onClick={() => {\r\n                              deleteProduct(product);\r\n                            }}\r\n                          >\r\n                            <CloseOutlined />\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })\r\n                )}\r\n              </div>\r\n              </TabPane>\r\n              <TabPane tab=\"Free Products\" key=\"Free\">\r\n              <div className={\"buy1get1product-products-container\"}>\r\n                {freeProductList == undefined ? (\r\n                  <div></div>\r\n                ) : (\r\n                  freeProductList.map((product, index) => {\r\n                    return (\r\n                      <div\r\n                        style={{\r\n                          display: \"inline-block\",\r\n                          position: \"relative\",\r\n                        }}\r\n                        key={`free_product_${index}`}\r\n                      >\r\n                        <SmallProductWidget\r\n                          productInfo={product}\r\n                          brand={product.Brand.name}\r\n                          category={product.Category.title}\r\n                          pack_size={product.PackSize.name}\r\n                          unit={product.Unit.name}\r\n                          canDelete={true}\r\n                          isSmall={true}\r\n                          onSelectProduct={() => {}}\r\n                        />\r\n                        <div className=\"product-remove-button\"\r\n                            onClick={() => {\r\n                              deleteProduct(product);\r\n                            }}\r\n                          >\r\n                            <CloseOutlined />\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })\r\n                )}\r\n              </div>\r\n              </TabPane>\r\n            </Tabs>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={24} sm={6}>\r\n          <div>\r\n            Price\r\n            <Input\r\n              ref={priceRef}\r\n              type={\"number\"}\r\n              value={selling_price}\r\n              disabled={disabled}\r\n              className=\"custom-input\"\r\n              prefix={\"R\"}\r\n              onChange={(e) => {\r\n                setSellingInfo({...sellingInfo,selling_price: e.target.value});\r\n              }}\r\n              onPressEnter={(e) => {\r\n                e.target.blur();\r\n                onClickOk();\r\n              }}\r\n            />\r\n          </div>\r\n          <div>\r\n            Description\r\n            <Input\r\n              type={\"text\"}\r\n              maxLength={99}\r\n              value={description}\r\n              className=\"custom-input\"\r\n              onChange={(e) => {\r\n                setSellingInfo({...sellingInfo,description: e.target.value});\r\n              }}\r\n            />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      {/* </Radio.Group> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Buy1Get1DealProduct;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\InputWidgets\\InputNumber\\ProductInputNumber.js",["1837","1838"],"import * as React from \"react\";\r\n\r\nimport { InputNumber  } from \"antd\";\r\n\r\nfunction ProductInputNumber(props) {\r\n  const { productInfo, setProductInfo } = props;\r\n  const { step, field } = props;\r\n  const { errorField, setErrorField } = props;\r\n  const { disabled, min, max, formatter, parser } = props;\r\n  return (\r\n    <div style={{ textAlign: \"left\", marginBottom: 10 }}>\r\n      <InputNumber\r\n        style={{\r\n          border: errorField !== undefined && errorField.includes(field)\r\n            ? \"1px solid red\"\r\n            : \"1px solid #d9d9d9\",\r\n          borderRadius: \"8px\",\r\n          background: `var(--backgroundColor)`,\r\n          padding: \"4px 12px\",\r\n          width: \"100%\"\r\n        }}\r\n        defaultValue ={ productInfo === undefined || productInfo[field] == undefined ? \"0\" : productInfo[field]}\r\n        disabled={disabled === undefined ? false : disabled}\r\n        formatter={formatter === undefined ?  \"\": formatter}\r\n        parser={parser === undefined ?  \"\": parser}\r\n        \r\n        min={min === undefined ? \"0\" : min}\r\n        max={max === undefined ? \"1000000\" : max}\r\n        step={step === undefined ? \"1\" : step}\r\n        onChange={(value) => {\r\n          var info = productInfo;\r\n          info[field] = value;\r\n          if (errorField.includes(field)) {\r\n            var errors = errorField.filter((x) => x != field);\r\n            // console.log(errors);\r\n            setErrorField([...errors]);\r\n          }\r\n          setProductInfo({ ...info });\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductInputNumber;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\InventoryPage\\AddInventoryDialog\\AddBaseUnitDialog\\AddBaseUnitDialog.js",["1839","1840","1841","1842","1843"],"// @flow strict\r\n\r\nimport { Input, message } from \"antd\";\r\nimport Modal from \"antd/lib/modal/Modal\";\r\nimport React, { useState } from \"react\";\r\nimport { confirmable } from \"react-confirm\";\r\nimport { axiosDelete, axiosGet, axiosPost, axiosPut } from \"../../../../services/ajaxServices\";\r\nimport \"./AddBaseUnitDialog.css\"\r\nfunction AddBaseUnitDialog(props) {\r\n  const { show, proceed } = props;\r\n  const { url, unitName, oldList } = props;\r\n  const [value, setValue] = useState(\"\");\r\n  const createOneUnit = () => {\r\n    //   proceed()\r\n    if (value == \"\") return;\r\n    const newValue = value.trim();\r\n    setValue(newValue);\r\n    if (\r\n      oldList.filter((x) => x.name.toLowerCase() == newValue.toLowerCase())\r\n        .length > 0\r\n    ) {\r\n      message.error(`${newValue} is already in the list`);\r\n      return;\r\n    }\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n    var formData = new FormData();\r\n    formData.append(\"name\", newValue);\r\n    new Promise((resolve, reject) => {\r\n      axiosPost(url, formData, config)\r\n      .then((res) => {\r\n        if (res == null) {\r\n          message.error(\"There's same value from other vendor\");\r\n          return;\r\n        }\r\n        proceed({\r\n          addedItem: res,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n\r\n      });\r\n    });\r\n  };\r\n  \r\n  return (\r\n    <Modal\r\n      visible={show}\r\n      destroyOnClose={true}\r\n      onCancel={() => {\r\n        proceed(null);\r\n      }}\r\n      className=\"custom-base-unit-dlg\"\r\n      closable={true}\r\n      maskClosable={false}\r\n      title={`${unitName} Add Dialog`}\r\n      onOk={createOneUnit}\r\n    >\r\n      <div>Please specify new {unitName} you want to add.</div>\r\n      <Input className=\"normal-input\" value={value} onChange={(e) => setValue(e.target.value)} />\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default confirmable(AddBaseUnitDialog);\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\PromotionPage\\SmallProductWidget\\SmallProductWidget.js",["1844","1845","1846"],"// @flow strict\r\n\r\nimport React from \"react\";\r\nimport { IMAGE_BASE_URL } from \"../../../config/CONSTANTS\";\r\n\r\nimport \"./SmallProductWidget.css\";\r\n\r\nfunction SmallProductWidget(props) {\r\n  const {\r\n    productInfo,\r\n    brand,\r\n    category,\r\n    pack_size,\r\n    unit,\r\n    canDelete,\r\n    isSmall,\r\n    onSelectProduct\r\n  } = props;\r\n  return (\r\n    <div\r\n      className={\"one-small-product-widget-container\"}\r\n      // style={{\r\n      //   cursor: canDelete === true ? \"default\" : \"pointer\",\r\n      //   background: isSmall === true ? \"#F6F6F6\" : \"white\",\r\n      // }}\r\n      onClick={() => {\r\n        onSelectProduct(productInfo);\r\n      }}\r\n    >\r\n      <div className=\"one-small-product-image-container\">\r\n        <img\r\n          className=\"one-small-product-image\"\r\n          src={`${IMAGE_BASE_URL}${productInfo.thumbnail_image}`}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"one-small-product-info-container\">\r\n        <div className=\"one-small-product-info-title\">{brand}</div>\r\n        <div\r\n          className=\"one-small-product-info-text\"\r\n          style={{\r\n            fontWeight: \"bold\",\r\n          }}\r\n        >\r\n          {productInfo.description}\r\n        </div>\r\n        <div\r\n          className=\"one-small-product-info-text\"\r\n        >\r\n          Unit: &nbsp;\r\n          {productInfo.quantity > 1 ? `${productInfo.quantity}x` : \"\"}\r\n          {pack_size}\r\n          {unit}\r\n        </div>\r\n        <div\r\n          className=\"one-small-product-info-text\"\r\n        >\r\n          Category: {category}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SmallProductWidget;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\ProductPage\\MyProductPanel\\AddProductDialog\\AddProductDialog.js",["1847","1848","1849","1850"],"import Modal from \"antd/lib/modal/Modal\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { confirmable } from \"react-confirm\";\r\nimport { message } from \"antd\";\r\nimport AddProductDialogContent from \"./AddProductDialogContent\";\r\nimport { isEmpty } from \"../../../../utils/GlobalFunctions\"\r\nimport { apiGetBasicData } from 'services/productService';\r\nimport \"./AddProductDialog.css\";\r\n\r\nfunction AddProductDialog(props) {\r\n  const { show, proceed, productInfo, title } = props;\r\n  const { canAddNewUnits } = props;\r\n  const [selProduct, setSelProduct] = useState({});\r\n  const [errorField, setErrorField] = useState([]);\r\n  const [ownCommonData, setOwnCommonData] = useState({});\r\n  const [isCreatedNewUnit, setIsCreatedNewUnit] = useState(false);\r\n  const [productBasicData, setProductBasicData] = useState({});\r\n\r\n  useEffect(() => {\r\n    apiGetBasicData()\r\n    .then((data) => {\r\n          setProductBasicData(data);\r\n      })\r\n    .catch((err) => {\r\n        message.error(\"Server failed. \" + err);\r\n    });\r\n  },[])\r\n  \r\n  useEffect(() => {\r\n    const { categoryList } = productBasicData === undefined ? { categoryList: undefined } : productBasicData;\r\n    const { brandList } = productBasicData === undefined ? { brandList: undefined } : productBasicData;\r\n    const { packList } = productBasicData === undefined ? { packList: undefined } : productBasicData;\r\n    const { unitList } = productBasicData === undefined ? { unitList: undefined } : productBasicData;\r\n    const { supplierList } = productBasicData === undefined ? { supplierList: undefined } : productBasicData;\r\n    if (productBasicData != undefined) {\r\n      setOwnCommonData({\r\n        packList: packList,\r\n        supplierList: supplierList,\r\n        unitList: unitList,\r\n        brandList: brandList,\r\n        categoryList: categoryList,\r\n      });\r\n    }\r\n  }, [productBasicData]);\r\n\r\n  useEffect(() => {\r\n    if (productInfo !== undefined) {\r\n      setSelProduct({ ...productInfo });\r\n    } else {\r\n      setSelProduct({});\r\n    }\r\n  }, [productInfo]);\r\n  const validateFields = async () => {\r\n    var errorList = Array();\r\n    if (productInfo === undefined)\r\n      errorList = isEmpty(selProduct, \"media\", errorList);\r\n\r\n    errorList = isEmpty(selProduct, \"barcode\", errorList);\r\n    errorList = isEmpty(selProduct, \"brand\", errorList);\r\n    errorList = isEmpty(selProduct, \"pack_size\", errorList);\r\n    errorList = isEmpty(selProduct, \"unit\", errorList);\r\n    errorList = isEmpty(selProduct, \"supplier\", errorList);\r\n    errorList = isEmpty(selProduct, \"category\", errorList);\r\n    errorList = isEmpty(selProduct, \"description\", errorList);\r\n    errorList = isEmpty(selProduct, \"supplier_product_code\", errorList);\r\n\r\n    setErrorField([...errorList]);\r\n    return errorList.length == 0;\r\n  };\r\n  return (\r\n    <Modal\r\n      visible={productBasicData == undefined ? !show:show}\r\n      destroyOnClose={true}\r\n      onCancel={() => {\r\n        proceed(null);\r\n      }}\r\n      closable={true}\r\n      maskClosable={false}\r\n      title={title}\r\n      className=\"custom-add-product-dlg\"\r\n      onOk={async () => {\r\n        if ((await validateFields()) === false) return;\r\n        if (isCreatedNewUnit) {\r\n          proceed({\r\n            ...selProduct,\r\n            newUnits: ownCommonData,\r\n          });\r\n        } else {\r\n          proceed({\r\n            ...selProduct,\r\n          });\r\n        }\r\n      }}\r\n    >\r\n      <AddProductDialogContent\r\n        productBasicData={productBasicData}\r\n        selProduct={selProduct}\r\n        setSelProduct={setSelProduct}\r\n        errorField={errorField}\r\n        setErrorField={setErrorField}\r\n        isEditing={productInfo !== undefined}\r\n        ownCommonData={ownCommonData}\r\n        setOwnCommonData={setOwnCommonData}\r\n        setIsCreatedNewUnit={setIsCreatedNewUnit}\r\n        isCreatedNewUnit={isCreatedNewUnit}\r\n        canAddNewUnits = {canAddNewUnits}\r\n      />\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default confirmable(AddProductDialog);\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\StorePage\\StoreDetailModal\\StoreBillWidget\\showStoreBillWidget.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\StorePage\\NormalInput.js",["1851","1852","1853","1854"],"// @flow strict\r\n\r\nimport * as React from \"react\";\r\n\r\nimport { Input, Typography } from \"antd\";\r\n\r\nconst { Text } = Typography;\r\nfunction NormalInput(props) {\r\n  const { vendorInfo, setVendorInfo } = props;\r\n  const { placeholder, field } = props;\r\n  const { errorField, setErrorField } = props;\r\n  const { disabled, type, is_password } = props;\r\n  return (\r\n    <div style={{ textAlign: \"left\", marginBottom: 10 }}>\r\n      <Input\r\n        style={{\r\n          border: errorField.includes(field)\r\n            ? \"1px solid red\"\r\n            : \"1px solid #707070\",\r\n          borderRadius: \"8px\",\r\n          background: `var(--backgroundColor)`,\r\n          padding: \"12px\"\r\n        }}\r\n        placeholder={placeholder}\r\n        value={vendorInfo[field] == undefined ? \"\" : vendorInfo[field]}\r\n        disabled={disabled === undefined ? false : disabled}\r\n        type={type === undefined ? \"text\" : type}\r\n        \r\n        onChange={(e) => {\r\n          var info = vendorInfo;\r\n          info[field] = e.target.value;\r\n          if (errorField.includes(field)) {\r\n            var errors = errorField.filter((x) => x != field);\r\n            // console.log(errors);\r\n            setErrorField([...errors]);\r\n          }\r\n          setVendorInfo({ ...info });\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NormalInput;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\PromotionPage\\PromotionDetailModal\\showPromotionDetailModal.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\ForgotPasswordPage\\ChangePasswordPage.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\LoginPage\\InputPage.js",["1855","1856","1857","1858","1859"],"import React from \"react\";\r\nimport { Button, Col, Divider, Input, Row } from \"antd\";\r\nimport AuthDialogWidget from \"components/AuthDialogWidget/AuthDialogWidget\";\r\nimport AuthLogoWidget from \"components/AuthLogoWidget/AuthLogoWidget\";\r\nimport NormalButton from \"components/ButtonWidgets/NormalButton/NormalButton\";\r\nimport TextButton from \"components/ButtonWidgets/TextButton/TextButton\";\r\nimport CodeVerificationWidget from \"components/CodeVerificationWidget/CodeVerificationWidget\";\r\nimport InputEmailOrPhone from \"components/InputWidgets/InputEmailOrPhone/InputEmailOrPhone\";\r\nimport InputPassword from \"components/InputWidgets/InputPassword/InputPassword\";\r\nimport { useState } from \"react\";\r\nimport { REGISTER_WITH } from \"config/CONSTANTS\";\r\nimport { validateEmail } from \"services/commonService\";\r\nimport { ROUTE_FORGOT_PASSWORD } from \"navigation/CONSTANTS\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nfunction InputPage(props) {\r\n  const { userDetail, setUserDetail } = props;\r\n  const { onClickLogin, onClickRegister, onClickRegisterVendor } = props;\r\n  const [wrongList, setWrongList] = useState([]);\r\n  const validateFields = () => {\r\n    const { email, phone, password, register_with } = userDetail;\r\n    // console.log(email, phone, password, register_with);\r\n    let tmpWrongList = [];\r\n    if (register_with === REGISTER_WITH.phone) {\r\n      if (phone === undefined || phone === \"\") {\r\n        tmpWrongList.push(\"phone\");\r\n      }\r\n    } else {\r\n      if (validateEmail(email) === false) {\r\n        tmpWrongList.push(\"email\");\r\n      }\r\n    }\r\n    if (password === undefined || password === \"\") {\r\n      tmpWrongList.push(\"password\");\r\n    }\r\n    setWrongList(tmpWrongList);\r\n\r\n    return tmpWrongList.length === 0;\r\n  };\r\n\r\n  const onClickNext = () => {\r\n    if (validateFields() === false) {\r\n      // console.log(\"REJECTED\");\r\n      return;\r\n    }\r\n    onClickLogin();\r\n  };\r\n  return (\r\n    <div style={{color:'var(--blackColor)'}}>\r\n      <Row align={\"middle\"}>\r\n        <Col xs={24} sm={24} style={{ textAlign: \"center\" }}>\r\n          <AuthLogoWidget />\r\n        </Col>\r\n        <Col xs={24} sm={24} style={{ textAlign: \"center\" }}>\r\n          <AuthDialogWidget title={\"Login\"}>\r\n            <div style={{ marginTop: 10 }}>\r\n              <InputEmailOrPhone\r\n                userDetail={userDetail}\r\n                setUserDetail={setUserDetail}\r\n                wrongList={wrongList}\r\n                setWrongList={setWrongList}\r\n              />\r\n            </div>\r\n            <div style={{ marginTop: 20 }}>\r\n              <InputPassword\r\n                userDetail={userDetail}\r\n                setUserDetail={setUserDetail}\r\n                onClickEnter={onClickNext}\r\n                wrongList={wrongList}\r\n                setWrongList={setWrongList}\r\n              />\r\n            </div>\r\n            <div style={{ marginTop: 20 }}>\r\n              <NormalButton\r\n                style={{ backgroundColor: \"var(--blueColor)\" }}\r\n                onClick={onClickNext}\r\n              >\r\n                Login\r\n              </NormalButton>\r\n            </div>\r\n            <div style={{ marginTop: 20 }}>\r\n              <TextButton\r\n                style={{\r\n                  color: \"var(--blueColor)\",\r\n                  fontFamily: \"regularFont\",\r\n                }}\r\n                onClick={() => props.history.replace(ROUTE_FORGOT_PASSWORD)}\r\n              >\r\n                Forgotten password?\r\n              </TextButton>\r\n            </div>\r\n            <div>\r\n              <Divider />\r\n            </div>\r\n            <div style={{ textAlign: \"center\" }}>\r\n                Welcome Inventory Manage System!\r\n            </div>\r\n          </AuthDialogWidget>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(InputPage);\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\FollowerPage\\FollowerListWidget\\FollowerListWidget.js",["1860","1861","1862","1863","1864","1865","1866","1867","1868","1869","1870","1871","1872","1873","1874"],"import React, { useEffect, useState } from 'react';\r\nimport { Table, Row, Col, message } from \"antd\";\r\nimport { CheckCircleOutlined, CloseOutlined, ConsoleSqlOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport { showColumnAction } from \"./FollowerListColumn\"\r\nimport { apiGetFollowerListByOneStore, apiDeleteFollower } from 'services/followerService';\r\nimport \"./FollowerListWidget.css\";\r\n\r\nconst FollowerListWidget = (props) => {\r\n    const { curStore, setCurStore, tempFollowerList, setTempFollowerList, selFollowers, setSelFollowers } = props\r\n    const [followerList, setFollowerList] = useState([])\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    useEffect(() => {\r\n        if (curStore != undefined && curStore != null) {\r\n            setIsLoading(true);\r\n            apiGetFollowerListByOneStore(curStore.id)\r\n                .then((res) => {\r\n                    setIsLoading(false);\r\n                    if (res != undefined && res.length > 0) {\r\n                        setFollowerList(\r\n                            res.map((x) => {\r\n                                return { key: x.id, ...x };\r\n                            })\r\n                        );\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    setIsLoading(false);\r\n                    message.error(\"Server failed. \" + err);\r\n                });\r\n        }\r\n    }, [curStore])\r\n    useEffect(() => {\r\n        if (tempFollowerList.length > 0) {\r\n            setFollowerList([...tempFollowerList, ...followerList])\r\n            setTempFollowerList([]);\r\n        }\r\n    }, [tempFollowerList])\r\n\r\n    const blockUser = (user, block = true) => {\r\n\r\n    };\r\n    const deleteUser = (user) => {\r\n        apiDeleteFollower(user.id)\r\n            .then((data) => {\r\n                setFollowerList(followerList.filter((x) => x.id != user.id))\r\n            })\r\n            .catch((err) => {\r\n                message.error(\"Server error. \" + err);\r\n            });\r\n\r\n    };\r\n    const columns = [\r\n        {\r\n            title: \"\",\r\n            dataIndex: \"image_url\",\r\n            render: (op, followInfo) => {\r\n                const user = followInfo.User;\r\n                return (\r\n                    (\r\n                        user == null ? \"Pending\" :\r\n                            <img src={user.image_url == null || user.image_url == \"\"\r\n                                ? \"/assets/images/avatar_blank.png\"\r\n                                : user.image_url} style={{ width: 50 }} />\r\n                    )\r\n                );\r\n            },\r\n        },\r\n        {\r\n            title: \"Name\",\r\n            dataIndex: \"name\",\r\n            sorter: (a, b) =>\r\n                `${a.first_name}`.localeCompare(`${b.first_name}`),\r\n            render: (name, followInfo) => {\r\n                return `${followInfo.first_name}`;\r\n            },\r\n        },\r\n        {\r\n            title: \"User Type\",\r\n            dataIndex: \"is_trader\",\r\n            sorter: (a, b) =>\r\n                `${a.user.is_trader}`.localeCompare(`${b.user.is_trader}`),\r\n            render: (op, followInfo) => {\r\n                return followInfo.User != null && followInfo.User.is_trader == true ? \"Trader\" : followInfo.User == null ? \"\" : \"Consumer\";\r\n            },\r\n        },\r\n        {\r\n            title: \"Operator\",\r\n            dataIndex: \"operator\",\r\n            render: (op, followInfo) => {\r\n                return (\r\n                    showColumnAction(followInfo, blockUser, deleteUser)\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    const rowSelection = {\r\n        selFollowers,\r\n        onChange: setSelFollowers,\r\n        getCheckboxProps: (record) => ({\r\n            disabled: record.is_blocked === true,\r\n        }),\r\n    };\r\n    return (\r\n        <div>\r\n            <div className=\"follower-cnt-txt\">\r\n                Followers: {followerList.length}\r\n            </div>\r\n\r\n            <div className=\"follower-list-table\">\r\n                <Table\r\n                    columns={columns}\r\n                    rowSelection={rowSelection}\r\n                    dataSource={followerList}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FollowerListWidget;","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\ForgotPasswordPage\\InputPage.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\FollowerPage\\FollowerStoreWidget\\FollowerStoreWidget.js",["1875","1876","1877"],"import React from 'react';\r\nimport { Select } from \"antd\";\r\nimport \"./FollowerStoreWidget.css\"\r\nconst { Option } = Select;\r\nconst FollowerStoreWidget = (props) => {\r\n    const { curStore, setCurStore, storeList } = props;\r\n    return (\r\n        <div className=\"follower-store-widget\">\r\n            <Select\r\n                className=\"select-store\"\r\n                style={{ width: 200 }}\r\n                value={curStore == null ? null : curStore.id}\r\n                onSelect={(v) => {\r\n                    const store = storeList != undefined && storeList.length > 0 && storeList.find((x) => x.id == v);\r\n                    setCurStore(store);\r\n                }}\r\n                >\r\n                { storeList != undefined && storeList.length > 0 && storeList.map((storeInfo, index) => {\r\n                    return (\r\n                    <Option\r\n                        value={storeInfo.id}\r\n                        key={`store-${storeInfo.id}-${index}`}\r\n                    >\r\n                        {storeInfo.name}\r\n                    </Option>\r\n                    );\r\n                })}\r\n            </Select>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FollowerStoreWidget;","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\FollowerPage\\FollowerExcelWidget\\FollowerExcelWidget.js",["1878","1879","1880","1881","1882","1883","1884","1885","1886","1887","1888"],"import React, { useState } from 'react';\r\nimport { Row, Col, Progress, message, Space } from \"antd\"\r\nimport readXlsxFile from \"read-excel-file\";\r\nimport FollowerInvite from '../FollowerInviteWidget/FollowerInvite';\r\n\r\nimport \"./FollowerExcelWidget.css\"\r\nimport { ValidateEmail } from 'utils/GlobalFunctions';\r\nimport { CloseOutlined } from '@ant-design/icons';\r\nimport NormalButton from 'components/ButtonWidgets/NormalButton/NormalButton';\r\nimport { apiSendTempInvite, apiFollowerSendInvite } from 'services/followerService';\r\nconst FollowerExcelWidget = (props) => {\r\n    const { curStore, setCurStore, tempFollowerList, setTempFollowerList, selFollowers, curFollowerList, isBusy, setIsBusy } = props\r\n    const [followerList, setFollowerList] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [loadingPercent, setLoadingPercent] = useState(0)\r\n\r\n    const onClickTemplateDownload = () => {\r\n        setTimeout(() => {\r\n            const response = {\r\n                file: \"/assets/template/followerListTemplate.xlsx\",\r\n            };\r\n            window.open(response.file);\r\n        }, 100);\r\n    };\r\n    const onDropExcelFile = async (e) => {\r\n        setFollowerList([])\r\n        setTempFollowerList([])\r\n        setIsLoading(false)\r\n        const files = Array.from(e.target.files);\r\n        if (files.length === 0) return;\r\n        readXlsxFile(files[0]).then((rows) => {\r\n            extractExcelFile(rows);\r\n        });\r\n        e.target.value = null;\r\n    };\r\n    const getStartIndex = (rows) => {\r\n        if (rows.length === 0) return false;\r\n        for (let i = 0; i < rows.length; i++) {\r\n            let column = rows[i];\r\n            for (let j = 0; j < column.length; j++) {\r\n                let data = column[j];\r\n                if (data === \"No\") {\r\n                    return [i, j];\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    const getFieldIndex = (rows, field) => {\r\n        if (rows.length === 0) return false;\r\n        for (let i = 0; i < rows.length; i++) {\r\n            var data = rows[i] == null ? rows[i] : rows[i].toString().trim().replace(/\\r?\\n|\\r/g, \"\");\r\n            if (data === field) {\r\n                return i;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    const extractExcelFile = (rows) => {\r\n        if (!validateExcelFile(rows)) {\r\n            message.error(\"Excel file is not valid. Please download template.\");\r\n            return\r\n        }\r\n        let startIndex = getStartIndex(rows)\r\n        let nameIndex = getFieldIndex(rows[startIndex[0]], \"First Name\")\r\n        let emailIndex = getFieldIndex(rows[startIndex[0]], \"Email\")\r\n        let countryCodeIndex = getFieldIndex(rows[startIndex[0]], \"Country Code\")\r\n        let phoneNumberIndex = getFieldIndex(rows[startIndex[0]], \"Phone Number\")\r\n\r\n        let followers = [];\r\n        let index = startIndex[0] + 1;\r\n        while (rows[index][1] != null) {\r\n            followers.push([index, rows[index][nameIndex], rows[index][emailIndex], rows[index][countryCodeIndex], rows[index][phoneNumberIndex]]);\r\n            index++;\r\n        }\r\n        setFollowerList(\r\n            followers.map((follower, index) => {\r\n                const email = (ValidateEmail(follower[emailIndex]) && follower[emailIndex] != null) ? follower[emailIndex] : \"\";\r\n                const countryCode =\r\n                    follower[countryCodeIndex] != null && follower[countryCodeIndex] != \"\" ? follower[countryCodeIndex] : \"\";\r\n                const phoneNumber =\r\n                    follower[phoneNumberIndex] != null && follower[phoneNumberIndex] != \"\" ? follower[phoneNumberIndex] : \"\";\r\n                return [index, follower[nameIndex], email, countryCode, phoneNumber];\r\n            })\r\n        );\r\n\r\n    }\r\n    const validateExcelFile = (rows) => {\r\n        let fieldList = [\r\n            \"No\",\r\n            \"First Name\",\r\n            \"Email\",\r\n            \"Country Code\",\r\n            \"Phone Number\",\r\n        ];\r\n\r\n        for (var i = 0; i < rows.length; i++) {\r\n            var columns = rows[i];\r\n            for (var j = 0; j < columns.length; j++) {\r\n                var value = columns[j] == null ? columns[j] : columns[j].toString().trim().replace(/\\r?\\n|\\r/g, \"\");\r\n                var field = fieldList.find((x) => x === value);\r\n                if (field !== undefined) {\r\n                    fieldList = fieldList.filter((x) => x !== field);\r\n                    if (fieldList.length === 0) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    const deleteTempFollower = (follower) => {\r\n        let tmpFollower = followerList.filter((x) => x != follower);\r\n        setFollowerList(tmpFollower);\r\n    };\r\n    const sendTempInvite = async () => {\r\n        setIsLoading(true)\r\n        const cnt_avg = Math.ceil((100 / (followerList.length)).toFixed(2))\r\n        const current_progress = 0;\r\n        let progressStatus = {\r\n            cnt_avg: cnt_avg,\r\n            current_progress: current_progress\r\n        }\r\n        let follower_IDs = []\r\n        let tmpFollowers = []\r\n        for (let i = 0; i < followerList.length; i++) {\r\n            let param = { store_id: curStore.id, first_name: followerList[i][1], email: followerList[i][2], countryCode: followerList[i][3].toString(), phoneNumber: followerList[i][4].toString() }\r\n            const response = await apiSendTempInvite(param);\r\n            if (response == null) continue;\r\n            if (response != null){\r\n                follower_IDs = [...follower_IDs, response.id]\r\n                tmpFollowers = [...tmpFollowers, { ...response, key: response.id }]\r\n            }\r\n            progressStatus.current_progress += progressStatus.cnt_avg\r\n            setLoadingPercent(progressStatus.current_progress.toFixed(2))\r\n        }\r\n        setFollowerList([])\r\n        setIsBusy(true)\r\n        setTempFollowerList(tmpFollowers)\r\n        await apiFollowerSendInvite({ follow_ids: follower_IDs })\r\n            .then((res) => {\r\n                setIsBusy(false)\r\n                message.success(\"Invitation has been sent successfully.\")\r\n            })\r\n            .catch((err) => {\r\n                message.error(\"Server failed. \" + err);\r\n            });\r\n\r\n    }\r\n    return (\r\n        <div className=\"follower-page-invite-background\">\r\n            <Row gutter={16} justify={\"start\"} align={\"middle\"}>\r\n                <Col xs={24} sm={24} md={8} lg={8} xl={8} xxl={8}>\r\n                    <span className=\"follower-page-invite-header-title\">Intive customers to follow your store</span>\r\n                </Col>\r\n                <Col xs={24} sm={24} md={16} lg={16} xl={16} xxl={16}>\r\n                    <Row gutter={16} align={\"middle\"} justify={\"end\"}>\r\n                        <Col>\r\n                            <label htmlFor=\"upload-follower-excel-file\">\r\n                                <input\r\n                                    type=\"file\"\r\n                                    id=\"upload-follower-excel-file\"\r\n                                    name=\"upload-follower-excel-file\"\r\n                                    style={{ display: \"none\" }}\r\n                                    accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n                                    onChange={onDropExcelFile}\r\n                                />\r\n                                <div className=\"follower-excel-rel-widget-upload-button\">\r\n                                    <img\r\n                                        src={\"/assets/images/ic_excel.svg\"}\r\n                                        className={\"excel-rel-widget-upload-image\"}\r\n                                    />\r\n                                Upload Follower Excel File\r\n                                </div>\r\n                            </label>\r\n                        </Col>\r\n                        <Col>\r\n                            <div className=\"follower-excel-rel-widget-upload-button\" onClick={onClickTemplateDownload}>\r\n                                <img\r\n                                    src={\"/assets/images/ic_download.svg\"}\r\n                                    className={\"excel-rel-widget-upload-image\"}\r\n                                />\r\n                                Download Template\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n            {(\r\n                <Row style={{ height: 10, marginTop: 10, marginBottom: 10 }}>\r\n                    {isLoading && <Progress\r\n                        strokeColor={{\r\n                            '0%': 'rgb(96 168 220)',\r\n                            '100%': '#87d068',\r\n                        }}\r\n                        percent={loadingPercent}\r\n                    />}\r\n                </Row>)}\r\n            <Row align={\"middle\"} gutter={16} style={{ marginBottom: 10 }}>\r\n                <Col span={24} style={{ marginTop: 10 }}>\r\n                    {followerList.length > 0 && (\r\n                        <div>\r\n                            {followerList.map((follower, index) => {\r\n                                const email = follower[2];\r\n                                const phone = follower[3] + follower[4];\r\n                                return (\r\n                                    <div\r\n                                        className=\"temp-follower-item\"\r\n                                        key={`temp-follower-item-${index}`}\r\n                                    >\r\n                                        <Space>\r\n                                            <div>{follower[1]}</div>\r\n                                            {email != \"\" && (\r\n                                                <div style={{ marginLeft: 5 }}>{email}</div>\r\n                                            )}\r\n                                            {phone != \"\" && (\r\n                                                <div style={{ marginLeft: 5 }}>{phone}</div>\r\n                                            )}\r\n                                            <div\r\n                                                className=\"temp-follower-delete-button\"\r\n                                                onClick={() => {\r\n                                                    deleteTempFollower(follower);\r\n                                                }}\r\n                                            >\r\n                                                <CloseOutlined />\r\n                                            </div>\r\n                                        </Space>\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                            <NormalButton\r\n                                style={{ backgroundColor: \"var(--blueColor)\", maxWidth: 120, height: 30, fontFamily: 'regularFont', fontSize: 14, marginTop: 5 }}\r\n                                onClick={() => {\r\n                                    sendTempInvite()\r\n                                }}\r\n                            >\r\n                                Send Invite\r\n                        </NormalButton>\r\n                        </div>\r\n                    )}\r\n                </Col>\r\n            </Row>\r\n            <FollowerInvite curStore={curStore} setCurStore={setCurStore} selFollowers={selFollowers} followerList={curFollowerList} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FollowerExcelWidget;","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\PromotionPage\\PromotionTableWidget\\PromotionTableWidget.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\PromotionPage\\PromotionTopWidget\\PromotionTopWidget.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\InventoryPage\\InventoryListTableWidget\\InventoryListTableWidget.js",["1889","1890","1891"],"import React, { useState } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Table } from \"antd\";\r\nimport \"./InventoryListTableWidget.css\"\r\nimport { showColumnAction } from 'pages/InventoryCategoryPage/CategoryListTableWidget/CategoryListTableColumn';\r\n\r\nfunction InventoryListTableWidget(props) {\r\n    const [isBusy, setIsBusy] = useState(false);\r\n    const { inventoryList, onUpdateAction, onDeleteAction, } = props;\r\n    if (inventoryList === undefined) return <div />\r\n    const columns = [\r\n      {\r\n        title: \"ID\",\r\n        dataIndex: \"id\",\r\n        align: 'center',\r\n      },\r\n      {\r\n        title: \"Thumbnail\",\r\n        dataIndex: \"thumbnail_image\",\r\n        align: 'center',\r\n        render: (text, record) => {\r\n            return (\r\n                <img className=\"thumbnail-img\" src={record.thumbnail_image}/>\r\n            )\r\n          },\r\n      },\r\n      {\r\n        title: \"Name\",\r\n        dataIndex: \"name\",\r\n        align: 'center',\r\n        sorter: {\r\n          compare: (a, b) => a.name.localeCompare(b.name),\r\n        },\r\n      },\r\n      { title: \"Description\", dataIndex: \"description\" },\r\n      {\r\n        title: \"QTY\",\r\n        dataIndex:\"qty\",\r\n        align: 'center',\r\n        sorter: {\r\n          compare: (a, b) => a.qty - b.qty\r\n        },\r\n      },\r\n      {\r\n        title: \"Spoilage\",\r\n        dataIndex:\"spoilage\",\r\n        align: 'center',\r\n        sorter: {\r\n          compare: (a, b) => a.spoilage - b.spoilage\r\n        },\r\n      },\r\n      {\r\n        title: \"Price Per Unit\",\r\n        dataIndex:\"price_per_unit\",\r\n        align: 'center',\r\n        sorter: {\r\n          compare: (a, b) => a.price_per_unit - b.price_per_unit\r\n        },\r\n      },\r\n      {\r\n        title: \"Unit\",\r\n        dataIndex:\"unit_name\",\r\n        align: 'center',\r\n        sorter: {\r\n          compare: (a, b) => a.unit_name.localeCompare(b.unit_name)\r\n        },\r\n      },\r\n      {\r\n        title: \"Category\",\r\n        dataIndex:\"category_name\",\r\n        align: 'center',\r\n        sorter: {\r\n          compare: (a, b) => a.category_name.localeCompare(b.category_name)\r\n        },\r\n      },\r\n      {\r\n        title: \"Location\",\r\n        dataIndex:\"location_name\",\r\n        align: 'center',\r\n        sorter: {\r\n          compare: (a, b) => a.location_name.localeCompare(b.location_name)\r\n        },\r\n      },\r\n       {\r\n        title: \"Created Date\",\r\n        dataIndex: \"add_timestamp\",\r\n        align: 'center',\r\n        sorter: {\r\n          compare: (a, b) => a.name.localeCompare(b.name),\r\n        },\r\n      },\r\n      {\r\n        title: \"Updated Date\",\r\n        dataIndex: \"update_timestamp\",\r\n        align: 'center',\r\n        sorter: {\r\n          compare: (a, b) => a.name.localeCompare(b.name),\r\n        },\r\n      },\r\n      {\r\n        title: \"Action\",\r\n        key: \"action\",\r\n        align: 'center',\r\n        render: (text, record) => {\r\n          return showColumnAction(text, record, onUpdateAction, onDeleteAction)\r\n        },\r\n      },\r\n    ];\r\n    const inventoryDataSource = inventoryList.map((info) => {\r\n      return { ...info, key: info.id, name: info.name.name, category_name: info.category.name, unit_name: info.unit.name, location_name: info.location.name };\r\n    });\r\n    return (\r\n    <div>\r\n        <Table\r\n          pagination={{ defaultPageSize: 5, showSizeChanger: true, pageSizeOptions: ['5', '10', '15']}}\r\n          columns={columns}\r\n          dataSource={inventoryDataSource}\r\n          scroll={{ x: 900 }}\r\n        />\r\n      </div>\r\n    )\r\n}\r\nexport default withRouter(InventoryListTableWidget)\r\n\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\InventoryPage\\InventoryItemWidget\\InventoryItemWidget.js",["1892","1893"],"import React, { useState} from 'react'\r\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons';\r\nimport \"./InventoryItemWidget.css\"\r\nimport { showConfirmDlgWidget } from 'components/ConfirmDlgWidget/showConfirmDlgWidget';\r\n\r\nfunction InventoryItemWidget(props) {\r\n    const { inventoryInfo, onClickEdit, onClickDelete } = props\r\n    const [detail_button_flag, setDetailShown] = useState(false);\r\n    return (\r\n        <div className={\"one-product-widget-container\"}\r\n            style={{ position: \"relative\" }}\r\n            onMouseEnter={() => setDetailShown(true)}\r\n            onMouseLeave={() => setDetailShown(false)}>\r\n      <div className=\"one-product-image-container\">\r\n        <img\r\n          className=\"one-product-image\"\r\n          src={inventoryInfo.thumbnail_image}\r\n        />\r\n        \r\n      </div>\r\n\r\n      <div className=\"one-product-info-container\">\r\n        <div className=\"one-product-info-title\">{inventoryInfo.name.name}</div>\r\n        <div\r\n          className=\"one-product-info-text\"\r\n          style={{\r\n            color: \"var(--blueColor)\",\r\n            fontWeight: \"bold\",\r\n          }}\r\n        >\r\n          {inventoryInfo.description}\r\n        </div>\r\n        <div className=\"one-product-info-text\"  style={{marginTop:\"10px\"}}>\r\n          QTY : {inventoryInfo.qty}\r\n        </div>\r\n        <div className=\"one-product-info-text\">\r\n          Unit : &nbsp;\r\n          {inventoryInfo.unit.name}\r\n        </div>\r\n        <div className=\"one-product-info-text\">\r\n          Price Per Unit : &nbsp;$\r\n          {inventoryInfo.price_per_unit}\r\n        </div>\r\n      </div>\r\n      {inventoryInfo.status !== undefined && (\r\n        <div>\r\n          {/* <div\r\n          style={{\r\n            background:\r\n            inventoryInfo.status === \"0\"\r\n                ? \"green\"\r\n                : inventoryInfo.status == \"1\"\r\n                ? \"orange\"\r\n                : 'var(--blueColor)',\r\n            fontWeight: \"bold\",\r\n            color: \"white\",\r\n            position: \"absolute\",\r\n            top: \"3%\",\r\n            right:\"33%\",\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n            padding: 10,\r\n            opacity: 0.8,\r\n            transform: 'rotate(320deg)'\r\n          }}\r\n        >\r\n          <span className=\"one-product-info-status\">{inventoryInfo.status === '0' ? \"New\" :\"Pending\" }</span>\r\n        </div> */}\r\n          <div className=\"detail-button-group\" style={{display:detail_button_flag?\"block\":\"none\"}}>\r\n            <div className=\"detail-button-view-bg\" onClick={ async()=>{\r\n                 onClickEdit(inventoryInfo)\r\n              }}>\r\n              <EditOutlined/>\r\n            </div>\r\n            <div className=\"detail-button-delete-bg\" onClick={ async()=>{\r\n                    var res = await showConfirmDlgWidget({ title: \"Delete Confirmation\", content: \"Are you sure to delete this inventory?\" });\r\n                    if (res == false) return;\r\n                    onClickDelete(inventoryInfo)\r\n              }}>\r\n              <DeleteOutlined/>\r\n            </div>\r\n            \r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default InventoryItemWidget\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\InputWidgets\\InputLocation\\InputLocation.js",["1894","1895","1896","1897","1898","1899","1900"],"// @flow strict\r\n\r\nimport { Col, Input, message, Row, Select, Spin } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport \"./InputLocation.css\";\r\nimport AsyncSelect from \"react-select/async\";\r\nimport {\r\n  getAddresses,\r\n  getAddressFromCoord,\r\n  getCoordinateFromPlaceID,\r\n} from \"services/commonService\";\r\nimport { AimOutlined } from \"@ant-design/icons\";\r\nimport TextButton from \"components/ButtonWidgets/TextButton/TextButton\";\r\nconst customStyles = {\r\n  option: (provided, state) => ({\r\n    ...provided,\r\n    textAlign: \"left\",\r\n  }),\r\n};\r\nfunction InputLocation(props) {\r\n  const { location, setLocation } = props;\r\n  const { address } = props;\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const promiseOptions = (keyword) =>\r\n    new Promise((resolve, reject) => {\r\n      if (keyword === \"\" || keyword === undefined) {\r\n        reject();\r\n      } else {\r\n        getAddresses(keyword)\r\n          .then((res) => {\r\n            resolve(\r\n              res.map((info) => ({\r\n                value: info.place_id,\r\n                label: info.description,\r\n              }))\r\n            );\r\n          })\r\n          .catch((err) => reject());\r\n      }\r\n    });\r\n\r\n  const onClickGetMyLocation = () => {\r\n    // console.log(\"MY LOC CLICKED\");\r\n    navigator.permissions\r\n      .query({ name: \"geolocation\" })\r\n      .then(function (result) {\r\n        if (result.state == \"granted\" || result.state == \"prompt\") {\r\n          navigator.geolocation.getCurrentPosition(function (position) {\r\n            // console.log(\"POSITION\", position);\r\n            const latitude = position.coords.latitude;\r\n            const longitude = position.coords.longitude;\r\n            getAddressFromCoord(latitude, longitude)\r\n              .then((res) => {\r\n                setInputValue(res);\r\n                setLocation({\r\n                  address: res,\r\n                  lat: latitude,\r\n                  lng: longitude,\r\n                });\r\n              })\r\n              .then((err) => {});\r\n          });\r\n        } else if (result.state == \"denied\") {\r\n          message.error(\r\n            \"The permission is dinied. Please type yoru address manually.\"\r\n          );\r\n        }\r\n        result.onchange = function () {\r\n          console.log(\"onChange\", result.state);\r\n        };\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"input-location-widget\">\r\n      <Row align={\"middle\"}>\r\n        <Col flex={\"auto\"}>\r\n          <AsyncSelect\r\n            cacheOptions\r\n            styles={customStyles}\r\n            defaultOptions\r\n            loadOptions={promiseOptions}\r\n            inputValue={inputValue}\r\n            placeholder={(address === undefined || address === null)?\"Your address...\":address}\r\n            onInputChange={(e) => {\r\n              setInputValue(e);\r\n            }}\r\n            onChange={(info) => {\r\n              // getCoordinateFromPlaceID\r\n              getCoordinateFromPlaceID(info.value).then((res) => {\r\n                setLocation({\r\n                  address: info.label,\r\n                  ...res,\r\n                });\r\n              });\r\n            }}\r\n          />\r\n        </Col>\r\n        <Col flex={\"50px\"}>\r\n          <TextButton style={{ fontSize: 24 }} onClick={onClickGetMyLocation}>\r\n            <AimOutlined />\r\n          </TextButton>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputLocation;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\ProductPage\\MyProductPanel\\AddProductDialog\\AddProductDialogContent.js",["1901","1902","1903","1904","1905","1906","1907","1908","1909","1910","1911"],"import React, { useEffect, useState } from \"react\";\r\nimport { Col, Input, message, Row, Tooltip } from \"antd\";\r\nimport ProductDescriptionInput from \"../../../../components/ProductPage/ProductDescriptionInput/ProductDescriptionInput\";\r\nimport ProductTypeSelector from \"../../../../components/ProductPage/ProductTypeSelector/ProductTypeSelector\";\r\nimport ProductImageWidget from \"./ProductImageWidget\";\r\nimport { urlCreateProductBrand, urlCreateProductCategory, urlCreateProductPacksize, urlCreateProductUnit } from \"../../../../services/CONSTANTS\";\r\nimport { showAddBaseUnitDialog } from \"./AddBaseUnitDialog/showAddBaseUnitDialog\";\r\nimport { showAddNewCategoryDialog } from \"./AddNewCategoryDialog/showAddNewCategoryDialog\";\r\nimport CommonButton from \"components/ButtonWidgets/CommonButton/CommonButton\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nfunction AddProductDialogContent(props) {\r\n  const {\r\n    ownCommonData,\r\n    setOwnCommonData,\r\n    setIsCreatedNewUnit,\r\n    isCreatedNewUnit,\r\n    canAddNewUnits,\r\n  } = props;\r\n\r\n  const {\r\n    selProduct,\r\n    setSelProduct,\r\n    isEditing,\r\n  } = props;\r\n  const { errorField, setErrorField } = props;\r\n\r\n  const {\r\n    packList,\r\n    supplierList,\r\n    unitList,\r\n    brandList,\r\n    categoryList,\r\n  } = ownCommonData;\r\n  \r\n  if (brandList == undefined) {\r\n    return <div></div>;\r\n  }\r\n  const addNewBaseUnit = async (fieldName, fieldTitle, createUrl) => {\r\n    var res = await showAddBaseUnitDialog({\r\n      url: createUrl,\r\n      unitName: fieldTitle,\r\n      oldList: ownCommonData[fieldName],\r\n    });\r\n    if (res == null) return;\r\n    if (isCreatedNewUnit == false) setIsCreatedNewUnit(true);\r\n\r\n    var tmpData = ownCommonData;\r\n    let updateData = [...tmpData[fieldName]];\r\n\r\n    updateData = [res['addedItem'], ...updateData];\r\n    tmpData[fieldName] = [...updateData];\r\n    setOwnCommonData({ ...tmpData });\r\n    message.success(`${fieldTitle} has been created.`);\r\n  };\r\n\r\n  const createNewCategory = async () => {\r\n    var res = await showAddNewCategoryDialog({\r\n      url: urlCreateProductCategory,\r\n      oldList: categoryList,\r\n    });\r\n    if (res == null) return;\r\n    if (isCreatedNewUnit == false) setIsCreatedNewUnit(true);\r\n    \r\n    var tmpData = ownCommonData;\r\n    let updateData = [...tmpData[\"categoryList\"]];\r\n\r\n    var storeIndex = updateData.findIndex(x => x.id == res['addedItem'].parent);\r\n    updateData.splice(storeIndex+1, 0, res['addedItem']);\r\n\r\n    tmpData[\"categoryList\"] = [...updateData];\r\n    setOwnCommonData({ ...tmpData });\r\n    message.success(`new Category has been created.`);\r\n  };\r\n  return (\r\n    <div>\r\n      <div>Product Image*</div>\r\n      <ProductImageWidget\r\n        field={\"media\"}\r\n        productInfo={selProduct}\r\n        setProductInfo={setSelProduct}\r\n        errorField={errorField}\r\n        setErrorField={setErrorField}\r\n      />\r\n\r\n      <div>Barcode*</div>\r\n      <ProductDescriptionInput\r\n        placeholder=\"Barcode\"\r\n        field={\"barcode\"}\r\n        productInfo={selProduct}\r\n        setProductInfo={setSelProduct}\r\n        errorField={errorField}\r\n        setErrorField={setErrorField}\r\n        disabled={isEditing}\r\n      />\r\n\r\n      <div>Brand*</div>\r\n      <Row align={\"middle\"}>\r\n        <Col flex={\"auto\"}>\r\n          <ProductTypeSelector\r\n            field={\"brand\"}\r\n            productInfo={selProduct}\r\n            setProductInfo={setSelProduct}\r\n            placeholder={\"Select Brand\"}\r\n            list={brandList}\r\n            errorField={errorField}\r\n            setErrorField={setErrorField}\r\n          />\r\n        </Col>\r\n        {canAddNewUnits != false && (\r\n          <Col flex={\"30px\"} style={{marginLeft:\"20px\"}}>\r\n            <Tooltip title={\"Click to add new one.\"}>\r\n              <CommonButton\r\n                customClass={\"product-upload-basic-unit-add-button\"}\r\n                onClick={() => {\r\n                  addNewBaseUnit(\"brandList\", \"Brand\", urlCreateProductBrand);\r\n                }}\r\n              >\r\n                Add\r\n              </CommonButton>\r\n            </Tooltip>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n\r\n      <div style={{marginTop:\"10px\"}}>Description*</div>\r\n      <ProductDescriptionInput\r\n        placeholder=\"Description\"\r\n        field={\"description\"}\r\n        productInfo={selProduct}\r\n        setProductInfo={setSelProduct}\r\n        errorField={errorField}\r\n        setErrorField={setErrorField}\r\n      />\r\n\r\n      <Row gutter={16}>\r\n        <Col xs={24} sm={24} md={24} lg={24} xl={12}>\r\n          <div>Pack Size*</div>\r\n          <Row align={\"middle\"} gutter={16}>\r\n            <Col flex={\"auto\"}>\r\n              <ProductTypeSelector\r\n                field={\"pack_size\"}\r\n                productInfo={selProduct}\r\n                setProductInfo={setSelProduct}\r\n                placeholder={\"Select Pack Size\"}\r\n                list={packList}\r\n                errorField={errorField}\r\n                setErrorField={setErrorField}\r\n              />\r\n            </Col>\r\n            {canAddNewUnits != false && (\r\n              <Col flex={\"30px\"}>\r\n                <Tooltip title={\"Click to add new one.\"}>\r\n                  <CommonButton\r\n                    customClass={\"product-upload-basic-unit-add-button\"}\r\n                    onClick={() => {\r\n                      addNewBaseUnit(\"packList\",\"PackSize\",urlCreateProductPacksize);\r\n                    }}\r\n                  >\r\n                    Add\r\n                  </CommonButton>\r\n                </Tooltip>\r\n              </Col>\r\n            )}\r\n          </Row>\r\n        </Col>\r\n        <Col xs={24} sm={24} md={24} lg={24} xl={12}>\r\n          <div>Unit*</div>\r\n          <Row align={\"middle\"} gutter={16}>\r\n            <Col flex={\"auto\"}>\r\n              <ProductTypeSelector\r\n                field={\"unit\"}\r\n                productInfo={selProduct}\r\n                setProductInfo={setSelProduct}\r\n                placeholder={\"Select Unit\"}\r\n                list={unitList}\r\n                errorField={errorField}\r\n                setErrorField={setErrorField}\r\n              />\r\n            </Col>\r\n            {canAddNewUnits != false && (\r\n              <Col flex={\"30px\"}>\r\n                <Tooltip title={\"Click to add new one.\"}>\r\n                  <CommonButton\r\n                    customClass={\"product-upload-basic-unit-add-button\"}\r\n                    onClick={() => {\r\n                      addNewBaseUnit(\"unitList\", \"Unit\", urlCreateProductUnit);\r\n                    }}\r\n                  >\r\n                    Add\r\n                  </CommonButton>\r\n                </Tooltip>\r\n              </Col>\r\n            )}\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <div style={{marginTop:\"10px\"}}>Supplier Product Code*</div>\r\n\r\n      <ProductDescriptionInput\r\n        placeholder=\"Supplier Product Code\"\r\n        field={\"supplier_product_code\"}\r\n        productInfo={selProduct}\r\n        setProductInfo={setSelProduct}\r\n        errorField={errorField}\r\n        setErrorField={setErrorField}\r\n      />\r\n\r\n      <div>Supplier*</div>\r\n      <Row align={\"middle\"}>\r\n        <Col flex={\"auto\"}>\r\n          <ProductTypeSelector\r\n            field={\"supplier\"}\r\n            productInfo={selProduct}\r\n            setProductInfo={setSelProduct}\r\n            placeholder={\"Select Supplier\"}\r\n            list={supplierList}\r\n            errorField={errorField}\r\n            setErrorField={setErrorField}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n      <div style={{marginTop:\"10px\"}}>Category*</div>\r\n      <Row align={\"middle\"}>\r\n        <Col flex={\"auto\"}>\r\n          <ProductTypeSelector\r\n            field={\"category\"}\r\n            productInfo={selProduct}\r\n            setProductInfo={setSelProduct}\r\n            placeholder={\"Select Category\"}\r\n            list={categoryList}\r\n            errorField={errorField}\r\n            setErrorField={setErrorField}\r\n            displayField=\"title\"\r\n            idField=\"id\"\r\n            isCategory={true}\r\n          />\r\n        </Col>\r\n        {canAddNewUnits != false && (\r\n          <Col flex={\"30px\"} style={{marginLeft:\"20px\"}}>\r\n            <Tooltip title={\"Click to add new one.\"}>\r\n              <CommonButton\r\n                customClass={\"product-upload-basic-unit-add-button\"}\r\n                onClick={() => {\r\n                  createNewCategory();\r\n                }}\r\n              >\r\n                Add\r\n              </CommonButton>\r\n            </Tooltip>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddProductDialogContent;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\StorePage\\StoreDetailModal\\StoreBillWidget\\StoreBillWidget.js",["1912","1913"],"// @flow strict\r\n\r\nimport { Modal, message, Button } from \"antd\";\r\nimport React from \"react\";\r\nimport { confirmable } from \"react-confirm\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nfunction StoreBillWidget(props) {\r\n  const {\r\n    show,\r\n    proceed,\r\n    storePlan,\r\n    exchangeRate,\r\n    isActivateStore,\r\n    is_closed,\r\n  } = props;\r\n  console.log(\"exchangeRate\", exchangeRate);\r\n\r\n  return (\r\n    <Modal\r\n      visible={show}\r\n      destroyOnClose={true}\r\n      onCancel={() => {\r\n        proceed(null);\r\n      }}\r\n      closable={true}\r\n      maskClosable={false}\r\n      className=\"store-payment-modal\"\r\n      title={\r\n        isActivateStore == true\r\n          ? \"Purchase to activate the store\"\r\n          : \"Purchase for the new store.\"\r\n      }\r\n      footer={null}\r\n    >\r\n      <div>\r\n        <div style={{ marginTop: 20 }}>\r\n          <div style={{ fontSize: 16, fontWeight: \"bold\" }}>\r\n            {/* Store creation fee: ${storePlan.price}/mo (R\r\n            {parseFloat(storePlan.price * exchangeRate).toFixed(2)}/mo) */}\r\n            Store creation fee: $85/mo (R1195.17/mo)\r\n          </div>\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <PayPalButton\r\n              createSubscription={(data, actions) => {\r\n                console.log(\"data\", data);\r\n                return actions.subscription.create({\r\n                  plan_id: storePlan.paypalId,\r\n                });\r\n              }}\r\n              onApprove={(data, actions) => {\r\n                // Capture the funds from the transaction\r\n                return actions.subscription.get().then(function (details) {\r\n                  // console.log(details);\r\n                  proceed(details);\r\n                });\r\n              }}\r\n              onError={() => {\r\n                message.error(\"There's unexpected error. Please try again.\");\r\n              }}\r\n            />\r\n            <div style={{ marginTop: 10 }}>\r\n              <Button\r\n                type={\"primary\"}\r\n                size={\"large\"}\r\n                style={{ width: \"100%\" }}\r\n                onClick={() => {\r\n                  // if (is_closed == true) {\r\n                  //   message.error(\r\n                  //     \"You can not pay by EFT anymore due to your limitation.\"\r\n                  //   );\r\n                  //   return;\r\n                  // }\r\n                  proceed({ isEFT: true });\r\n                }}\r\n              >\r\n                EFT Payment\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default confirmable(StoreBillWidget);\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\services\\promotionService.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\ProductSearch\\ProductSearch.js",["1914","1915","1916","1917","1918","1919"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Button, Select, Space, Spin, message, Row } from \"antd\";\r\nimport { IMAGE_BASE_URL } from \"../../config/CONSTANTS\";\r\nimport { urlSearchProduct } from \"../../services/CONSTANTS\";\r\nimport { axiosGet } from \"../../services/ajaxServices\";\r\nimport \"./ProductSearch.css\"\r\nconst { Option } = Select;\r\n\r\nfunction ProductSearch(props) {\r\n  const { ownProducts,  onSelectProduct } = props;\r\n  \r\n  const [fetching, setFetching] = useState(false);\r\n  const [tempProduct, setTempProduct] = useState([]);\r\n\r\n  useEffect(() => {\r\n  }, []);\r\n  const fetchProduct = (value) => {\r\n    console.log(\"fetching Product\", value);\r\n    setFetching(true);\r\n    setTempProduct([]);\r\n    const tmpList = ownProducts.filter((info)=>info.name.name.includes(value))\r\n    console.log(tmpList)\r\n    setTempProduct([...tmpList]);\r\n    setFetching(false);\r\n\r\n  };\r\n  const handleFocus = (value) => {\r\n    setFetching(false);\r\n    setTempProduct(ownProducts);\r\n  };\r\n\r\n  return (\r\n    <Row justify=\"center\" style={{marginTop:20}}>\r\n      <Select\r\n        labelInValue \r\n        placeholder=\"Search inventory by name\"\r\n        notFoundContent={fetching ? <Spin size=\"small\" /> : null}\r\n        filterOption={false}\r\n        showSearch={true}\r\n        onSearch={(v) => fetchProduct(v)}\r\n        onFocus={handleFocus}\r\n        className=\"custom-product-search-select\"\r\n        onSelect={(v) => {\r\n          var index = 0\r\n          index = v.value\r\n          var product = tempProduct[index];\r\n          onSelectProduct(product)\r\n        }}\r\n        style={{\r\n          width:\"90%\",\r\n        }}\r\n      >\r\n        {tempProduct.map((pInfo, index) => {\r\n          //   console.log(d);\r\n          console.log(\"info\", pInfo)\r\n\r\n          return (\r\n            <Option key={index} className=\"product-search-one-item-container\">\r\n              <Space dispatch={\"horizontal\"}>\r\n                <img\r\n                  src={pInfo.thumbnail_image}\r\n                  className=\"product-search-image\"\r\n                />\r\n                <div>\r\n                  {pInfo.name.name} - {pInfo.description}\r\n                  {/* <br/>\r\n                  Category: {pInfo.category.name} */}\r\n                </div>\r\n              </Space>\r\n            </Option>\r\n          );\r\n        })}\r\n      </Select>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default ProductSearch;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\LocationInputTextWidget\\LocationInputTextWidget.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\FollowerPage\\FollowerListWidget\\FollowerListColumn.js",["1920","1921","1922","1923"],"import React from 'react';\r\nimport { Row, Col } from \"antd\";\r\nimport { showConfirmDlgWidget } from 'components/ConfirmDlgWidget/showConfirmDlgWidget';\r\nimport { CheckCircleOutlined, CloseOutlined, DeleteOutlined } from '@ant-design/icons';\r\n\r\nexport function showColumnAction(followInfo, blockUser, deleteUser){\r\n    return <Row>\r\n    {/* <Col>\r\n        <a onClick={async()=>{\r\n            let title = `Are you sure to ${\r\n                followInfo.is_blocked == true ? \"unblock\" : \"block\"\r\n              } this user?`\r\n            var res = await showConfirmDlgWidget({ title: \"Block Confirmation\", content: title });\r\n            if (res == false) return;\r\n            blockUser(followInfo, !followInfo.is_blocked);\r\n        }}>\r\n          {followInfo.is_blocked == true ? (\r\n            <span style={{ color: \"var(--greenColor)\" }}>\r\n              <CheckCircleOutlined /> Unblock\r\n            </span>\r\n          ) : (\r\n            <span style={{ color: \"rebeccapurple\" }}>\r\n              <CloseOutlined /> Block\r\n            </span>\r\n          )}\r\n        </a>\r\n    </Col> */}\r\n    <Col style={{ marginLeft: 20 }}>\r\n        <a style={{ color: \"red\" }} onClick={async()=>{\r\n            var res = await showConfirmDlgWidget({ title: \"Delete Confirmation\", content: \"Are you sure to Delete this user?\" });\r\n            if (res == false) return;\r\n            deleteUser(followInfo);\r\n        }}>\r\n          <DeleteOutlined /> Delete\r\n        </a>\r\n    </Col>\r\n  </Row>\r\n}","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\PromotionPage\\PromotionDetailModal\\PromotionDetailModal.js",["1924","1925","1926","1927","1928","1929","1930","1931","1932","1933","1934"],"import React, { useEffect, useState } from \"react\";\r\nimport { Col, Row, message, Button, Spin } from \"antd\";\r\nimport Modal from \"antd/lib/modal/Modal\";\r\nimport { confirmable } from \"react-confirm\";\r\nimport \"./PromotionDetailModal.css\";\r\nimport moment from \"moment\";\r\nimport { isEmpty } from \"../../../utils/GlobalFunctions\";\r\nimport { apiGetFavoriteData } from 'services/productService';\r\nimport { apiGetActiveProductData } from 'services/productService';\r\nimport { apiGetStoreListAll } from 'services/storeService';\r\nimport { showOnePromotionProductDetailModal } from \"./OnePromotionProductDetailModal/showOnePromotionProductDetailModal\";\r\nimport PromotionDescriptionWidget from \"./PromotionDescriptionWidget/PromotionDescriptionWidget\";\r\nimport NormalPromotionProductList from \"./NormalPromotionProductList/NormalPromotionProductList\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport ComboDealProductList from \"./ComboDealProductList/ComboDealProductList\";\r\nimport Buy1Get1ProductList from \"./Buy1Get1ProductList/Buy1Get1ProductList\";\r\nimport ExcelRelWidget from \"./ExcelRelWidget/ExcelRelWidget\";\r\nfunction PromotionDetailModal(props) {\r\n  const { show, proceed, title, initData } = props;\r\n  \r\n  const [favouriteProductList, setFavouriteProductList] = useState([]);\r\n  const [activeProductList, setActiveProductList] = useState([]);\r\n  const [storeList, setStoreList] = useState([]);\r\n\r\n  const [selPromotion, setSelPromotion] = useState({});\r\n\r\n  const [promotionProducts, setPromotionProducts] = useState({});\r\n  const [errorField, setErrorField] = useState([]);\r\n  const [isBusy, setIsBusy] = useState(false);\r\n  const [followerList, setFollowerList] = useState([]);\r\n  \r\n\r\n  \r\n  useEffect(() => {\r\n    setIsBusy(true)\r\n    apiGetFavoriteData()\r\n      .then((data) => {\r\n        setFavouriteProductList(data);\r\n      })\r\n      .catch((err) => {\r\n          message.error(\"Server failed. \" + err);\r\n      });\r\n    apiGetActiveProductData()\r\n      .then((data) => {\r\n          setActiveProductList(data);\r\n      })\r\n      .catch((err) => {\r\n          message.error(\"Server failed. \" + err);\r\n      });\r\n    apiGetStoreListAll()\r\n      .then((data) => {\r\n        setIsBusy(false);\r\n        setStoreList(data);\r\n      })\r\n      .catch((err) => {\r\n          message.error(\"Server failed. \" + err);\r\n      });\r\n      if(initData !== undefined){\r\n        let stores = []\r\n        initData.Stores.map((x)=>{\r\n          stores = [...stores, x.id]\r\n        })\r\n        let allow_users = []\r\n        initData.AllowedUsers.map((x)=>{\r\n          allow_users = [...allow_users, x.id]\r\n        })\r\n        setSelPromotion({ ...selPromotion, name: initData.name, start_date: initData.start_date, end_date: initData.end_date, store: stores, private: initData.private })\r\n        setFollowerList([...allow_users])\r\n        setPromotionProducts({...promotionProducts, \"SingleProducts\" : initData.SingleProducts, \"ComboProducts\" : initData.ComboProducts, \"Buy1Get1Products\" : initData.Buy1Get1Products});\r\n      }\r\n    }, []);\r\n\r\n    \r\n \r\n  const validateFields = () => {\r\n    var errorList = Array();\r\n\r\n    errorList = isEmpty(selPromotion, \"name\", errorList);\r\n    errorList = isEmpty(selPromotion, \"store\", errorList);\r\n    if(isEmpty(selPromotion, \"start_date\", errorList)) {\r\n      setSelPromotion({ ...selPromotion, start_date: moment().format(\"YYYY-MM-DD\")});\r\n    } \r\n    if(isEmpty(selPromotion, \"end_date\", errorList)){\r\n      setSelPromotion({ ...selPromotion, end_date: moment().format(\"YYYY-MM-DD\")});\r\n    }\r\n    if (errorList.length === 0) {\r\n      if (selPromotion[\"store\"].length === 0) {\r\n        errorList = [...errorList, \"store\"];\r\n      }\r\n      if (selPromotion[\"start_date\"].localeCompare(selPromotion[\"end_date\"]) > 0 ) {\r\n        errorList = [...errorList, \"end_date\"];\r\n      }\r\n    }\r\n    setErrorField([...errorList]);\r\n    return errorList.length == 0;\r\n  };\r\n  \r\n  const onCreateOnePromotionProduct = async (title) => {\r\n    var res = await showOnePromotionProductDetailModal({\r\n      favoriteData: favouriteProductList,\r\n      activeData: activeProductList,\r\n      title: title\r\n    });\r\n    if (res === null) return;\r\n    let key = Object.keys(res.data)[0]\r\n    let new_data = [res.data[key]]\r\n    if(promotionProducts !== undefined && promotionProducts[key] !== undefined){\r\n      new_data = [...new_data, ...promotionProducts[key]]\r\n    }\r\n    setPromotionProducts({...promotionProducts, [key] : [...new_data]});\r\n  };\r\n  return (\r\n    <Modal\r\n      visible={show}\r\n      onCancel={() => {\r\n        proceed(null);\r\n      }}\r\n      destroyOnClose={true}\r\n      closable={true}\r\n      maskClosable={false}\r\n      className=\"promotion-detail-modal\"\r\n      title={title}\r\n      onOk={() => {\r\n        if (selPromotion.private == true && followerList.length == 0) {\r\n          message.error(\r\n            \"You should select followers for this private promotion.\"\r\n          );\r\n          return;\r\n        }\r\n        if (validateFields() == false) {\r\n          message.error(\"Please specify the promotion information\");\r\n          return;\r\n        }\r\n        let product_cnt = 0\r\n        if (Object.keys(promotionProducts).length === 0){\r\n          message.error(\"Please add products\");\r\n          return;\r\n        }else{\r\n          Object.keys(promotionProducts).map((key)=>{                        \r\n            product_cnt += promotionProducts[key].length\r\n          })\r\n          if(product_cnt === 0){\r\n            message.error(\"Please add products\");\r\n            return;\r\n          }\r\n        }\r\n        let stores = []\r\n        if(selPromotion.store !== undefined){\r\n          selPromotion.store.map((x)=>{\r\n            stores = [...stores, { \"id\" : x }]\r\n          })\r\n        }\r\n        let allow_users = []\r\n        followerList.map((x)=>{\r\n          allow_users = [...allow_users, { \"id\" : x }]\r\n        })\r\n        let newPromotionInfo = { \r\n          name : selPromotion.name, \r\n          start_date: selPromotion.start_date, \r\n          end_date: selPromotion.end_date, \r\n          private: selPromotion.private,\r\n          Stores: stores,\r\n          AllowedUsers: allow_users,\r\n          ...promotionProducts\r\n        }\r\n        proceed({\r\n          param: newPromotionInfo\r\n        });\r\n      }}\r\n    >\r\n\r\n      <Spin spinning={isBusy}>\r\n        <ExcelRelWidget\r\n            isBusy={isBusy}\r\n            setIsBusy={setIsBusy}\r\n            selPromotion={selPromotion}\r\n            setSelPromotion={setSelPromotion}\r\n            promotionProducts={promotionProducts}\r\n            setPromotionProducts={setPromotionProducts}\r\n            storeList={storeList}\r\n          />\r\n        <PromotionDescriptionWidget\r\n          selPromotion={selPromotion}\r\n          setSelPromotion={setSelPromotion}\r\n          storeInfo={storeList}\r\n          errorField={errorField}\r\n          setErrorField={setErrorField}\r\n          followerList={followerList}\r\n          setFollowerList={setFollowerList}\r\n        />\r\n        \r\n        <div className=\"promotion-product-add-button-container\">\r\n          <Row gutter={16} vgutter={8} style={{rowGap:12}}>\r\n            <Col xs={24} sm={24} md={8} lg={8} xl={8}>\r\n              <Button\r\n                type={\"primary\"}\r\n                className=\"add-one-promotion-product-button\"\r\n                onClick={() =>\r\n                  onCreateOnePromotionProduct(\"Single Product\")\r\n                }\r\n              >\r\n                <PlusOutlined />\r\n                <br />\r\n                Single Product\r\n              </Button>\r\n            </Col>\r\n            <Col xs={24} sm={24} md={8} lg={8} xl={8}>\r\n              <Button\r\n                type={\"primary\"}\r\n                className=\"add-one-promotion-product-button\"\r\n                onClick={() =>\r\n                  onCreateOnePromotionProduct(\"Combo Deal\")\r\n                }\r\n              >\r\n                <PlusOutlined />\r\n                <br />\r\n                Combo Deal\r\n              </Button>\r\n            </Col>\r\n            <Col xs={24} sm={24} md={8} lg={8} xl={8}>\r\n              <Button\r\n                type={\"primary\"}\r\n                className=\"add-one-promotion-product-button\"\r\n                onClick={() => {\r\n                  onCreateOnePromotionProduct(\"Buy 1 Get 1 Free\");\r\n                }}\r\n              >\r\n                <PlusOutlined />\r\n                <br />\r\n                Buy 1 Get 1 Free\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n\r\n        <NormalPromotionProductList\r\n          promotionProducts={promotionProducts}\r\n          setPromotionProducts={setPromotionProducts}\r\n        />\r\n        <ComboDealProductList\r\n          promotionProducts={promotionProducts}\r\n          setPromotionProducts={setPromotionProducts}\r\n        />\r\n        <Buy1Get1ProductList\r\n          promotionProducts={promotionProducts}\r\n          setPromotionProducts={setPromotionProducts}\r\n        />\r\n      </Spin>\r\n    </Modal>\r\n  );\r\n}\r\nexport default confirmable(PromotionDetailModal);\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\PromotionPage\\PromotionTableWidget\\PromotionTableColumn.js",["1935","1936","1937","1938","1939"],"import React from 'react';\r\nimport { Tag, Popconfirm, Space, message, Tooltip } from \"antd\";\r\nimport { showConfirmDlgWidget } from 'components/ConfirmDlgWidget/showConfirmDlgWidget';\r\n\r\nexport function showColumnStores(info, total) {\r\n    return (\r\n        <span>\r\n          {total===undefined || total.stores === undefined? \"\" : total.stores.map((tag) => {\r\n            const storeID = tag.id;\r\n            return (\r\n              <Tooltip title={\"click to check store\"} key={storeID}>\r\n                <Tag\r\n                  color={\"geekblue\"}\r\n                  key={storeID}\r\n                  className=\"promotion-table-store-tag\"\r\n                  onClick={() => {\r\n                    window.open(\r\n                      \"https://seemesave.com/store/\" + storeID,\r\n                      \"\",\r\n                    );\r\n                  }}\r\n                >\r\n                  {tag.name}\r\n                </Tag>\r\n              </Tooltip>\r\n            );\r\n          })}\r\n        </span>\r\n    );\r\n}\r\n\r\nexport function showColumnStatus(info, s){\r\n    return (\r\n        <div style={{ textAlign: \"center\" }}>\r\n        <div>\r\n            <Tag color={s.private === true ? \"red\" : \"blue\"}>\r\n            {s.private === true ? \"PRIVATE\" : \"PUBLIC\"}\r\n            </Tag>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function showColumnAction(record, editPromotion, deletePromotion){\r\n    return <Space size=\"middle\" direction={\"vertical\"}>\r\n        <a\r\n        onClick={() => {\r\n            editPromotion(record.id);\r\n        }}\r\n        >\r\n        Edit\r\n        </a>\r\n        <a style={{ color: \"red\" }} onClick={async()=>{\r\n            var res = await showConfirmDlgWidget({ title: \"Delete Confirmation\", content: \"Are you sure to delete this promotion?\" });\r\n            if (res == false) return;\r\n            deletePromotion(record.id)\r\n\r\n        }}>Delete</a>\r\n    </Space>\r\n}","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\FollowerPage\\FollowerInviteWidget\\FollowerInvite.js",["1940","1941","1942","1943","1944","1945","1946","1947","1948","1949","1950"],"import React, { useState } from 'react';\r\nimport { Row, Col, Radio, Input, Button, message } from \"antd\"\r\nimport \"./FollowerInvite.css\"\r\nimport 'react-phone-number-input/style.css'\r\nimport PhoneInput, { parsePhoneNumber } from 'react-phone-number-input'\r\n\r\nimport NormalButton from 'components/ButtonWidgets/NormalButton/NormalButton';\r\nimport { apiSendTempInvite, apiFollowerSendInvite } from 'services/followerService';\r\nconst FollowerInvite = (props) => {\r\n    const { curStore, selFollowers, followerList } = props;\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n    const [type, setType] = useState(\"email\");\r\n    const [countryCode, setCountryCode] = useState(\"\");\r\n    const validateFields = () => {\r\n        if(curStore == undefined){\r\n            message.error(\"Please select Store\")\r\n            return false\r\n        }\r\n        if(firstName == \"\"){\r\n            message.error(\"Please Input First Name\")\r\n            return false\r\n        }\r\n        if(type == \"email\" && email == \"\"){\r\n            message.error(\"Please input Email\")\r\n            return false\r\n        }\r\n        if(type == \"phone\" && (countryCode == \"\" || phoneNumber == \"\")){\r\n            message.error(\"Please input Phone Number\")\r\n            return false\r\n        }else{\r\n            return true\r\n        }\r\n    }\r\n    const onClickInvite = async() => {\r\n        if(validateFields()){\r\n            let param = {\r\n                store_id: curStore.id,\r\n                first_name: firstName,\r\n                countryCode: countryCode,\r\n                phoneNumber: phoneNumber,\r\n                email: email, \r\n            }\r\n            const response = await apiSendTempInvite(param);\r\n            if(response == null) return\r\n            apiFollowerSendInvite({follow_ids:[response.id]})\r\n                .then((res) => {\r\n                    message.success(\"Invitation has been sent successfully.\")\r\n                })\r\n                .catch((err) => {\r\n                    message.error(\"Server failed. \" + err);\r\n            });\r\n            \r\n        }\r\n       \r\n        \r\n    }\r\n    return (\r\n        <div className=\"follower-invite-widget\">\r\n            <Row>\r\n                <Col xs={24} sm={24}>\r\n                    <Row gutter={24} align={\"bottom\"}>\r\n                        <Col xs={24} sm={8}>\r\n                            <Input\r\n                                placeholder=\"First Name\"\r\n                                value={firstName}\r\n                                className=\"custom-input\"\r\n                                onChange={(e) => setFirstName(e.target.value)}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={24} sm={8} style={{marginTop:10}}>\r\n                            <Radio.Group\r\n                                onChange={(v) => setType(v.target.value)}\r\n                                value={type}\r\n                            >\r\n                                <Radio value=\"email\">Email</Radio>\r\n                                <Radio value=\"phone\">Cell Phone</Radio>\r\n                            </Radio.Group>\r\n\r\n                            <div style={{ marginTop: 10, width: \"100%\" }}>\r\n                                {type == \"email\" ? (\r\n                                    <Input\r\n                                        type={\"email\"}\r\n                                        className=\"custom-input\"\r\n                                        placeholder={\"Enter your email address here\"}\r\n                                        value={email}\r\n                                        onChange={(v) => setEmail(v.target.value)}\r\n                                    />\r\n                                ) : (\r\n                                    <div className={\"store-invite-phone-input\"}>\r\n                                        <PhoneInput\r\n                                            placeholder=\"Enter phone number\"\r\n                                            className=\"custom-input\"\r\n                                            value={\"+\"+countryCode+\"\"+phoneNumber}\r\n                                            defaultCountry={\"ZA\"}\r\n                                            onChange={(value) => {\r\n                                                console.log(value)\r\n                                                if (value === undefined) return;\r\n                                                const info = parsePhoneNumber(value);\r\n                                                if (info === undefined) return;\r\n                                                const {nationalNumber, countryCallingCode} = info;\r\n                                                setPhoneNumber(nationalNumber);\r\n                                                setCountryCode(countryCallingCode);\r\n                                            }} />\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </Col>\r\n                        <Col xs={24} sm={8}>\r\n                            <NormalButton style={{ backgroundColor: \"var(--blueColor)\", maxWidth: 150, height: 40, fontFamily: 'regularFont', fontSize: 15, marginTop:10 }} onClick={() => onClickInvite()}>\r\n                                Invite\r\n                            </NormalButton>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FollowerInvite;","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\ProductPage\\MyProductPanel\\AddProductDialog\\ProductImageWidget.js",["1951","1952","1953","1954","1955"],"// @flow strict\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { PictureOutlined } from \"@ant-design/icons\";\r\n// avatarBlank\r\nfunction ProductImageWidget(props) {\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n  const { productInfo, setProductInfo } = props;\r\n  const { errorField, setErrorField } = props;\r\n  useEffect(() => {\r\n    // console.log(\"image loaded\", imageUrl);\r\n    if (\r\n      productInfo.thumbnail_image !== undefined &&\r\n      productInfo.thumbnail_image !== \"\" &&\r\n      (imageUrl === \"\" || imageUrl === undefined)\r\n    ) {\r\n      setImageUrl(productInfo.thumbnail_image);\r\n    }\r\n  }, [productInfo]);\r\n  const onDropImage = async (e) => {\r\n    // console.log(\"/////////////////\");\r\n    const files = Array.from(e.target.files);\r\n    if (files.length === 0) return;\r\n    setImageUrl(URL.createObjectURL(files[0]));\r\n    setProductInfo({ ...productInfo, media: files[0] });\r\n  };\r\n  //   product-image-widget-error\r\n  return (\r\n    <div className=\"product-image-widget\">\r\n      <label htmlFor=\"upload_product_image\">\r\n        <input\r\n          type=\"file\"\r\n          id=\"upload_product_image\"\r\n          name=\"upload_product_image\"\r\n          style={{ display: \"none\" }}\r\n          accept=\"image/x-png,image/gif,image/jpeg\"\r\n          onChange={onDropImage}\r\n        />\r\n        {imageUrl == null || imageUrl == \"\" ? (\r\n          <img\r\n            className={\r\n              \"product-image-widget-image \" +\r\n              (errorField.includes(\"media\") ? \"product-image-widget-error\" : \"\")\r\n            }\r\n            src={'/assets/icons/ic_picture.svg'}\r\n            alt=\"SeemeSave\"\r\n                />\r\n        ) : (\r\n          <img src={imageUrl} className={\"product-image-widget-image \"} />\r\n        )}\r\n        <div style={{ textAlign: \"center\", cursor: \"pointer\", marginBottom: \"10px\" }}>click here to insert image</div>\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductImageWidget;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\ProductPage\\MyProductPanel\\AddProductDialog\\AddBaseUnitDialog\\showAddBaseUnitDialog.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\ProductPage\\MyProductPanel\\AddProductDialog\\AddNewCategoryDialog\\showAddNewCategoryDialog.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\ButtonWidgets\\NormalButton\\NormalButton.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\services\\commonService.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\services\\followerService.js",["1956"],"import { axiosDelete, axiosGet, axiosPost, axiosPut } from \"./ajaxServices\";\r\nimport { urlFollowerListAll, urlFollowerListByOneStore, urlFollowerDelete, urlFollowerTempSendInvite, urlFollowerInvite } from \"./CONSTANTS\";\r\n\r\nexport const apiGetFollowerListAll = () => {\r\n    const param = { }\r\n    return new Promise((resolve, reject) => {\r\n      axiosPost(urlFollowerListAll, param, \"Get Follower List error\")\r\n          .then((res) => {\r\n            resolve(res);\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n        });\r\n    });\r\n      \r\n};\r\nexport const apiGetFollowerListByOneStore = (id, offset=null, page_size=null) => {\r\n  const url = urlFollowerListByOneStore;\r\n  let param = { id: id, offset: offset, page_size: page_size };\r\n  if(offset === null || page_size == null){\r\n      param = {id: id}\r\n  }\r\n    return new Promise((resolve, reject) => {\r\n        axiosGet(url, param, \"GET_Follower_LIST error\")\r\n          .then((res) => {\r\n            resolve(res);\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n        });\r\n    });\r\n};\r\n\r\nexport const apiDeleteFollower = (id) => {\r\n  const url = urlFollowerDelete;\r\n  const param = { follow_id: id };\r\n  return new Promise((resolve, reject) => {\r\n    axiosDelete(url, param, \"Delete Follower error\")\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n}\r\nexport const apiSendTempInvite = (param) => {\r\n  return new Promise((resolve, reject) => {\r\n    axiosPost(urlFollowerTempSendInvite, param, \"Send Invite error\")\r\n        .then((res) => {\r\n          resolve(res);\r\n        })\r\n        .catch((err) => {\r\n          reject(err);\r\n      });\r\n  });\r\n}\r\n\r\nexport const apiFollowerSendInvite = (param) => {\r\n  return new Promise((resolve, reject) => {\r\n    axiosPost(urlFollowerInvite, param, \"Send Follower Invite error\")\r\n        .then((res) => {\r\n          resolve(res);\r\n        })\r\n        .catch((err) => {\r\n          reject(err);\r\n      });\r\n  });\r\n    \r\n};","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\PromotionPage\\PromotionDetailModal\\OnePromotionProductDetailModal\\showOnePromotionProductDetailModal.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\InputWidgets\\InputEmailOrPhone\\InputEmailOrPhone.js",["1957","1958"],"// @flow strict\r\n\r\nimport React from \"react\";\r\nimport \"react-phone-number-input/style.css\";\r\nimport PhoneInput, { isPossiblePhoneNumber } from \"react-phone-number-input\";\r\nimport \"./InputEmailOrPhone.css\";\r\nimport { Input, Radio } from \"antd\";\r\nimport { REGISTER_WITH } from \"config/CONSTANTS\";\r\nfunction InputEmailOrPhone(props) {\r\n  const { userDetail, setUserDetail } = props;\r\n  const { wrongList, setWrongList } = props;\r\n  return (\r\n    <div>\r\n      <div className=\"register-with-switcher\">\r\n        <Radio.Group\r\n          style={{ textAlign: \"left\", color: \"var(--blackColor)\" }}\r\n          onChange={(e) =>\r\n            setUserDetail({ ...userDetail, register_with: e.target.value })\r\n          }\r\n          value={userDetail.register_with}\r\n        >\r\n          <Radio style={{color: 'var(--blackColor)'}} value={REGISTER_WITH.email}>Email</Radio>\r\n          <Radio style={{color: 'var(--blackColor)'}} value={REGISTER_WITH.phone}>Phone number</Radio>\r\n        </Radio.Group>\r\n      </div>\r\n\r\n      <div\r\n        className=\"email-input\"\r\n        style={{\r\n          display:\r\n            userDetail.register_with === REGISTER_WITH.email ? \"block\" : \"none\",\r\n        }}\r\n      >\r\n        <Input\r\n          type=\"email\"\r\n          placeholder=\"Enter your email\"\r\n          value={userDetail.email === undefined ? \"\" : userDetail.email}\r\n          onChange={(e) =>\r\n            setUserDetail({ ...userDetail, email: e.target.value })\r\n          }\r\n          style={{\r\n            border:\r\n              wrongList.includes(\"email\") === true\r\n                ? \"1px solid var(--redColor)\"\r\n                : \"1px solid var(--greyColor)\",\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <div\r\n        className=\"phone-number-input\"\r\n        style={{\r\n          display:\r\n            userDetail.register_with === REGISTER_WITH.phone ? \"block\" : \"none\",\r\n        }}\r\n      >\r\n        <PhoneInput\r\n          defaultCountry=\"SG\"\r\n          placeholder=\"Enter your phone number\"\r\n          value={userDetail.phone === undefined ? \"\" : userDetail.phone}\r\n          onChange={(e) => setUserDetail({ ...userDetail, phone: e })}\r\n          className={\r\n            wrongList.includes(\"phone\") === true\r\n              ? \"phone-input-wrong\"\r\n              : \"phone-input-correct\"\r\n          }\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputEmailOrPhone;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\InputWidgets\\InputPassword\\InputPassword.js",["1959"],"import { Input } from \"antd\";\r\nimport React from \"react\";\r\nimport \"./InputPassword.css\";\r\nfunction InputPassword(props) {\r\n  const { userDetail, setUserDetail, onClickEnter } = props;\r\n  const { wrongList, setWrongList } = props;\r\n  return (\r\n    <div className=\"input-password\">\r\n      <Input.Password\r\n        placeholder={\"Password\"}\r\n        onPressEnter={(e) =>{\r\n            setUserDetail({ ...userDetail, password: e.target.value })\r\n            onClickEnter()\r\n          }\r\n        }\r\n        value={userDetail.password === undefined ? \"\" : userDetail.password}\r\n        onChange={(e) =>\r\n          setUserDetail({ ...userDetail, password: e.target.value })\r\n        }\r\n        className={\r\n          wrongList.includes(\"password\") === true\r\n            ? \"phone-input-password-wrong\"\r\n            : \"phone-input-password-correct\"\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputPassword;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\PromotionPage\\PromotionDetailModal\\NormalPromotionProductList\\NormalPromotionProductList.js",["1960","1961","1962","1963"],"import React from \"react\";\r\nimport { Space, Table } from \"antd\";\r\nimport { EditableRow, EditableCell } from \"../../../../components/PromotionPage/EditableCell/EditableCell\";\r\nimport { IMAGE_BASE_URL } from \"../../../../config/CONSTANTS\";\r\nimport { showConfirmDlgWidget } from \"components/ConfirmDlgWidget/showConfirmDlgWidget\";\r\nimport \"./NormalPromotionProductList.css\";\r\n\r\nfunction NormalPromotionProductList(props) {\r\n  const { promotionProducts, setPromotionProducts } = props;\r\n  const columns = [\r\n    {\r\n      title: \"Image\",\r\n      dataIndex: \"thumbnail_image\",\r\n      width: 40,\r\n      render: (info) => {\r\n        return (\r\n          <div className=\"normal-promotion-product-table-image-container\">\r\n            <img\r\n              src={IMAGE_BASE_URL + info}\r\n              className=\"normal-promotion-product-table-image\"\r\n            />\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"Barcode\",\r\n      dataIndex: \"barcode\",\r\n    },\r\n    {\r\n      title: \"Brand\",\r\n      dataIndex: \"brand\",\r\n      sorter: {\r\n        compare: (a, b) => a.brand.localeCompare(b.brand),\r\n      },\r\n    },\r\n    {\r\n      title: \"Description\",\r\n      dataIndex: \"description\",\r\n      sorter: {\r\n        compare: (a, b) => a.description.localeCompare(b.description),\r\n      },\r\n    },\r\n    {\r\n      title: \"Pack Size\",\r\n      dataIndex: \"pack_size\",\r\n    },\r\n    {\r\n      title: \"Price\",\r\n      dataIndex: \"selling_price\",\r\n      sorter: {\r\n        compare: (a, b) => a.selling_price.localeCompare(b.selling_price),\r\n      },\r\n      editable: true,\r\n      render: (info) => {\r\n        return parseFloat(`${info}`).toFixed(2);\r\n      },\r\n    },\r\n    {\r\n      title: \"Note\",\r\n      dataIndex: \"note\",\r\n      width: \"120px\",\r\n      textWrap: \"word-break\",\r\n      render: (text) => (\r\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-word\" }}>\r\n          {text}\r\n        </div>\r\n      ),\r\n    },\r\n\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      render: (text, record) => (\r\n        <Space size=\"middle\" direction={\"vertical\"}>\r\n            <a style={{ color: \"red\" }} onClick={async()=>{\r\n              var res = await showConfirmDlgWidget({ title: \"Delete Confirmation\", content: \"Are you sure to delete this product?\" });\r\n              if (res == false) return;\r\n              if(promotionProducts !== undefined && promotionProducts[\"SingleProducts\"] !== undefined){\r\n                let newData = promotionProducts[\"SingleProducts\"].filter((x) => x.product.barcode != record.barcode);\r\n                setPromotionProducts({...promotionProducts, \"SingleProducts\" : [...newData]});\r\n              }\r\n            }}>Delete</a>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const editPromotionProductItem = (row) => {\r\n    const { quantity, selling_price, barcode } = row;\r\n    if(promotionProducts !== undefined && promotionProducts[\"SingleProducts\"] !== undefined){\r\n      let newData = promotionProducts[\"SingleProducts\"];\r\n      let index = newData.findIndex((item) => item.product.barcode === barcode);\r\n  \r\n      let item = {\r\n        ...newData[index],\r\n        quantity: quantity,\r\n        selling_price: selling_price,\r\n      };\r\n      newData.splice(index, 1, { ...item });\r\n      setPromotionProducts({...promotionProducts, \"SingleProducts\" : [...newData]});\r\n    }\r\n  };\r\n  \r\n  const promotionProductsInfo = promotionProducts === undefined || promotionProducts[\"SingleProducts\"] === undefined ? [] : promotionProducts[\"SingleProducts\"].map((pInfo, index) => {\r\n   \r\n    var brand = pInfo.product.Brand.name;\r\n    var pack_size = pInfo.product.PackSize.name;\r\n    var unit = pInfo.product.Unit.name;\r\n    return {\r\n      key: index,\r\n      barcode: pInfo.product.barcode,\r\n      thumbnail_image: pInfo.product.thumbnail_image,\r\n      description: pInfo.product.description,\r\n      brand: brand,\r\n      quantity: pInfo.quantity,\r\n      selling_price: parseFloat(`${pInfo.selling_price}`).toFixed(2),\r\n      products_id: \"\",//promotion.products_id,\r\n      pack_size: pack_size + unit,\r\n      note: pInfo.description,\r\n    };\r\n  });\r\n  const editableColumns = columns.map((col) => {\r\n    if (col.editable !== true) {\r\n      return col;\r\n    }\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        editable: col.editable,\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        handleSave: editPromotionProductItem,\r\n      }),\r\n    };\r\n  });\r\n  const components = {\r\n    body: {\r\n      row: EditableRow,\r\n      cell: EditableCell,\r\n    },\r\n  };\r\n  if (promotionProductsInfo.length === 0) {\r\n    return <div></div>;\r\n  }\r\n  return (\r\n    <div className=\"normal-promotion-product-list\">\r\n      <div className=\"normal-promotion-product-list-title\">\r\n        Single Product List\r\n      </div>\r\n      <div className=\"normal-promotion-product-list-container\">\r\n        <Table\r\n          components={components}\r\n          columns={editableColumns}\r\n          dataSource={promotionProductsInfo}\r\n          scroll={{ x: 900 }}\r\n          rowClassName={() => \"editable-row\"}\r\n          bordered\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NormalPromotionProductList;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\PromotionPage\\PromotionDetailModal\\PromotionDescriptionWidget\\PromotionDescriptionWidget.js",["1964","1965","1966","1967","1968","1969","1970","1971","1972"],"import React from \"react\";\r\nimport moment from \"moment\";\r\nimport Checkbox from \"antd/lib/checkbox/Checkbox\";\r\nimport FollowerListWidget from \"./FollowerListWidget/FollowerListWidget\";\r\nimport { Col, DatePicker, Input, message, Row, Select } from \"antd\";\r\nimport \"./PromotionDescriptionWidget.css\";\r\nimport { isEmpty } from \"utils/GlobalFunctions\";\r\nconst { Option } = Select;\r\nconst dateFormat = \"YYYY-MM-DD\";\r\n\r\nfunction PromotionDescriptionWidget(props) {\r\n  const { selPromotion, setSelPromotion, storeInfo } = props;\r\n  const { followerList, setFollowerList } = props;\r\n  const { errorField, setErrorField } = props;\r\n  const { initFollowers } = props;\r\n  return (\r\n    <div className=\"promotion-detail-modal-name-container\">\r\n      <Row gutter={16}>\r\n        <Col xs={24} md={12}>\r\n          <span className=\"promotion-description-title\">Name:</span>\r\n          <Input\r\n            style={{\r\n              border: errorField.includes(\"name\")\r\n                ? \"1px solid red\"\r\n                : \"1px solid #D9D9D9\",\r\n              borderRadius: \"8px\",\r\n              background: `var(--backgroundColor)`,\r\n              padding: \"8px 12px\"\r\n            }}\r\n            value={selPromotion.name == undefined ? \"\" : selPromotion.name}\r\n            onChange={(e) =>{\r\n              let newErrList = errorField.filter((x, index) => x != \"name\");\r\n              setErrorField([...newErrList])\r\n              setSelPromotion({ ...selPromotion, name: e.target.value })\r\n            }\r\n              \r\n            }\r\n            placeholder={\"Promotion Name\"}\r\n          />\r\n        </Col>\r\n        <Col xs={24} md={12}>\r\n          <span className=\"promotion-description-title\">Store:</span>\r\n          <Select\r\n            placeholder={\"Please select the store.\"}\r\n            mode=\"multiple\"\r\n            style={{\r\n              width: \"100%\",\r\n              border: errorField.includes(\"store\")\r\n                ? \"1px solid red\"\r\n                : \"1px solid #D9D9D9\",\r\n            }}\r\n            onChange={(v) => {\r\n              let newErrList = errorField.filter((x, index) => x != \"store\");\r\n              setErrorField([...newErrList])\r\n              setSelPromotion({ ...selPromotion, store: [...v] });\r\n            }}\r\n            value={selPromotion.store == undefined ? [] : [...selPromotion.store]}\r\n          >\r\n            {storeInfo===undefined?\"\":storeInfo.map((info) => {\r\n              return (\r\n                <Option key={info.id} value={info.id} selected>\r\n                  {info.name}\r\n                </Option>\r\n              );\r\n            })}\r\n          </Select>\r\n        </Col>\r\n        <Col xs={24} md={12} style={{marginTop:10}}>\r\n          <span className=\"promotion-description-title\">Start Date:</span>\r\n          <DatePicker\r\n            style={{\r\n              width: \"100%\",\r\n              border: errorField.includes(\"start_date\")\r\n                ? \"1px solid red\"\r\n                : \"1px solid #D9D9D9\",\r\n              borderRadius: \"8px\",\r\n              background: `var(--backgroundColor)`,\r\n              padding: \"8px 12px\"\r\n            }}\r\n            format={dateFormat}\r\n            allowClear={false}\r\n            showToday\r\n            onChange={(v, str) => {\r\n              if(selPromotion !== undefined && selPromotion.end_date !== undefined){\r\n                if (str.localeCompare(selPromotion.end_date) > 0) {\r\n                  message.error(\r\n                    \"The start date should be less than the end date\"\r\n                  );\r\n                  return;\r\n                }\r\n              }\r\n              setSelPromotion({ ...selPromotion, start_date: str });\r\n              console.log(\"str:\", str)\r\n            }}\r\n            value={\r\n              selPromotion.start_date == undefined\r\n                ? moment()\r\n                : moment(selPromotion.start_date, dateFormat)\r\n            }\r\n          />\r\n        </Col>\r\n        <Col xs={24} md={12} style={{marginTop:10}}>\r\n          <span className=\"promotion-description-title\">End Date:</span>\r\n          <DatePicker\r\n            style={{\r\n              width: \"100%\",\r\n              border: errorField.includes(\"end_date\")\r\n                ? \"1px solid red\"\r\n                : \"1px solid #D9D9D9\",\r\n              borderRadius: \"8px\",\r\n              background: `var(--backgroundColor)`,\r\n              padding: \"8px 12px\"\r\n            }}\r\n            format={dateFormat}\r\n            allowClear={false}\r\n            showToday\r\n            onChange={(v, str) => {\r\n              if(selPromotion !== undefined && selPromotion.start_date !== undefined){\r\n                if (str.localeCompare(selPromotion.start_date) < 0) {\r\n                  message.error(\r\n                    \"The end date should be greater than the start date\"\r\n                  );\r\n                  return;\r\n                }\r\n              }\r\n              setSelPromotion({ ...selPromotion, end_date: str });\r\n            }}\r\n            value={\r\n              selPromotion.end_date == undefined\r\n                ? moment()\r\n                : moment(selPromotion.end_date, dateFormat)\r\n            }\r\n          />\r\n        </Col>\r\n        <Col xs={24} md={12} style={{ marginTop: 15 }}>\r\n          <Checkbox\r\n            style={{ fontWeight: \"bold\" }}\r\n            className=\"round-check\"\r\n            checked={\r\n              selPromotion.private == undefined ? false : selPromotion.private\r\n            }\r\n            onChange={(e) => {\r\n              setSelPromotion({\r\n                ...selPromotion,\r\n                private: e.target.checked,\r\n              });\r\n            }}\r\n          >\r\n            Private Promotion\r\n          </Checkbox>\r\n        </Col>\r\n      </Row>\r\n\r\n      <div\r\n        style={{\r\n          marginLeft: 20,\r\n          display: selPromotion.private == true ? \"block\" : \"none\",\r\n        }}\r\n      >\r\n        <FollowerListWidget\r\n          followerList={followerList}\r\n          setFollowerList={setFollowerList}\r\n          selPromotion={selPromotion}\r\n          initFollowers={initFollowers}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PromotionDescriptionWidget;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\PromotionPage\\PromotionDetailModal\\Buy1Get1ProductList\\Buy1Get1ProductList.js",["1973","1974","1975","1976","1977"],"import React from \"react\";\r\nimport { Col, Row, Space, Table } from \"antd\";\r\nimport { EditableCell, EditableRow } from \"../../../../components/PromotionPage/EditableCell/EditableCell\";\r\nimport { IMAGE_BASE_URL } from \"../../../../config/CONSTANTS\";\r\nimport { showConfirmDlgWidget } from \"components/ConfirmDlgWidget/showConfirmDlgWidget\";\r\nimport \"./Buy1Get1ProductList.css\";\r\n\r\nfunction Buy1Get1ProductList(props) {\r\n  const { promotionProducts, setPromotionProducts } = props;\r\n  \r\n  const columns = [\r\n    {\r\n      title: \"MainProduct\",\r\n      dataIndex: \"main_product\",\r\n      render: (products, record) => {\r\n        return (\r\n          <div key={`${Math.random()}`}>\r\n            {record.buy_products.map((product, index) => {\r\n              let brand = product.Brand.name\r\n              let pack_size = product.PackSize.name\r\n              let unit = product.Unit.name\r\n              let count = record.buy_counts.filter((x)=>x.product=product.barcode)[0].count\r\n              if(count <=1){\r\n                count = \"\"\r\n              }else{\r\n                count = \" × \" + count.toString()\r\n              }\r\n              return (\r\n                <div key={`${product.barcode}${index}`}>\r\n                  <Row align={\"middle\"}>\r\n                    <Col flex={\"60px\"}>\r\n                      <img\r\n                        className=\"combo-deal-product-table-image\"\r\n                        src={IMAGE_BASE_URL + product.thumbnail_image}\r\n                      />\r\n                    </Col>\r\n                    <Col flex={\"auto\"}>\r\n                      <Row gutter={16} align={\"middle\"}>\r\n                        <Col xs={8}>\r\n                          <div>{brand}</div>\r\n                        </Col>\r\n                        <Col xs={12}>{product.description}</Col>\r\n                        <Col xs={4}>\r\n                          {pack_size} {unit} {count}\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"FreeProduct\",\r\n      dataIndex: \"free_product\",\r\n      render: (products, record) => {\r\n        return (\r\n          <div key={`${Math.random()}`}>\r\n            {record.free_products.map((product, index) => {\r\n\r\n            let count = record.free_counts.filter((x)=>x.product=product.barcode)[0].count\r\n            if(count <=1){\r\n              count = \"\"\r\n            }else{\r\n              count = \" × \" + count.toString()\r\n            }\r\n              return (\r\n                <div key={`${product.barcode}${index}`}>\r\n                  <Row align={\"middle\"}>\r\n                    <Col flex={\"60px\"}>\r\n                      <img\r\n                        className=\"combo-deal-product-table-image\"\r\n                        src={IMAGE_BASE_URL + product.thumbnail_image}\r\n                      />\r\n                    </Col>\r\n                    <Col flex={\"auto\"}>{product.description} {count}</Col>\r\n                  </Row>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"Price\",\r\n      dataIndex: \"selling_price\",\r\n      editable: true,\r\n      render: (info) => {\r\n        return parseFloat(`${info}`).toFixed(2);\r\n      },\r\n    },\r\n    {\r\n      title: \"Note\",\r\n      dataIndex: \"description\",\r\n      width: \"120px\",\r\n      textWrap: \"word-break\",\r\n      render: (text) => (\r\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-word\" }}>\r\n          {text}\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      render: (text, record) => (\r\n        <Space size=\"middle\" direction={\"vertical\"}>\r\n          <a style={{ color: \"red\" }} onClick={async()=>{\r\n              var res = await showConfirmDlgWidget({ title: \"Delete Confirmation\", content: \"Are you sure to delete this product?\" });\r\n              if (res == false) return;\r\n              if(promotionProducts !== undefined && promotionProducts[\"Buy1Get1Products\"] !== undefined){\r\n                let newData = promotionProducts[\"Buy1Get1Products\"].filter((x, index) => index != record.key);\r\n                setPromotionProducts({...promotionProducts, \"Buy1Get1Products\" : [...newData]});\r\n              }\r\n            }}>Delete</a>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n  const editPromotionProductItem = (row) => {\r\n    const { selling_price, key } = row;\r\n    if(promotionProducts !== undefined && promotionProducts[\"Buy1Get1Products\"] !== undefined){\r\n      let newData = promotionProducts[\"Buy1Get1Products\"];\r\n      let index = newData.findIndex((item, index) => index === key);\r\n  \r\n      let item = {\r\n        ...newData[index],\r\n        selling_price: selling_price,\r\n      };\r\n      newData.splice(index, 1, { ...item });\r\n      setPromotionProducts({...promotionProducts, \"Buy1Get1Products\" : [...newData]});\r\n    }\r\n  };\r\n  const editableColumns = columns.map((col) => {\r\n    if (col.editable !== true) {\r\n      return col;\r\n    }\r\n\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        editable: col.editable,\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        handleSave: editPromotionProductItem,\r\n      }),\r\n    };\r\n  });\r\n  const components = {\r\n    body: {\r\n      row: EditableRow,\r\n      cell: EditableCell,\r\n    },\r\n  };\r\n  const promotionProductsInfo = promotionProducts === undefined || promotionProducts[\"Buy1Get1Products\"] === undefined ? [] : promotionProducts[\"Buy1Get1Products\"].map((promotion, index) => {\r\n    if (promotion.buy_products === undefined || promotion.free_products === undefined) {\r\n      return null;\r\n    }\r\n    return { ...promotion, key: index };\r\n  });\r\n\r\n  if (promotionProductsInfo.length === 0) {\r\n    return <div></div>;\r\n  }\r\n  return (\r\n    <div className=\"buy1get1-product-list\">\r\n      <div className=\"buy1get1-product-list-title\">\r\n        Buy 1 Get 1 Free Product List\r\n      </div>\r\n      <div className=\"buy1get1-product-list-container\">\r\n        <Table\r\n          components={components}\r\n          columns={editableColumns}\r\n          dataSource={promotionProductsInfo.filter((x) => x !== null)}\r\n          scroll={{ x: 900 }}\r\n          rowClassName={() => \"editable-row\"}\r\n          bordered\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Buy1Get1ProductList;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\PromotionPage\\PromotionDetailModal\\ComboDealProductList\\ComboDealProductList.js",["1978","1979","1980","1981"],"import React from \"react\";\r\nimport { Col, Row, Space, Table } from \"antd\";\r\nimport { EditableCell, EditableRow } from \"../../../../components/PromotionPage/EditableCell/EditableCell\";\r\nimport { IMAGE_BASE_URL } from \"../../../../config/CONSTANTS\";\r\nimport { showConfirmDlgWidget } from \"components/ConfirmDlgWidget/showConfirmDlgWidget\";\r\n\r\nimport \"./ComboDealProductList.css\";\r\nfunction ComboDealProductList(props) {\r\n  const { promotionProducts, setPromotionProducts } = props;\r\n  \r\n  const columns = [\r\n    {\r\n      title: \"Products\",\r\n      dataIndex: \"products\",\r\n      render: (products, record) => {\r\n        return (\r\n          <div>\r\n            {record.combo_products.map((product, index) => {\r\n              var brand = product.Brand.name;\r\n              var pack_size = product.PackSize.name;\r\n              var unit = product.Unit.name;\r\n              let count = record.counts.filter((x)=>x.product=product.barcode)[0].count\r\n              if(count <=1){\r\n                count = \"\"\r\n              }else{\r\n                count = \" × \" + count.toString()\r\n              }\r\n              return (\r\n                <div key={`${product.barcode}-${index}`}>\r\n                  <Row align={\"middle\"}>\r\n                    <Col flex={\"60px\"}>\r\n                      <img\r\n                        className=\"combo-deal-product-table-image\"\r\n                        src={IMAGE_BASE_URL + product.thumbnail_image}\r\n                      />\r\n                    </Col>\r\n                    <Col flex={\"auto\"}>\r\n                      <Row gutter={16} align={\"middle\"}>\r\n                        <Col xs={8}>\r\n                          <div>{brand}</div>\r\n                        </Col>\r\n                        <Col xs={12}>{product.description}</Col>\r\n                        <Col xs={4}>\r\n                          {pack_size} {unit} {count}\r\n                        </Col>\r\n\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n\r\n    {\r\n      title: \"Price\",\r\n      dataIndex: \"selling_price\",\r\n      editable: true,\r\n      render: (info) => {\r\n        return parseFloat(`${info}`).toFixed(2);\r\n      },\r\n    },\r\n    {\r\n      title: \"Note\",\r\n      dataIndex: \"description\",\r\n      width: \"120px\",\r\n      textWrap: \"word-break\",\r\n      render: (text) => (\r\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-word\" }}>\r\n          {text}\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      render: (text, record) => (\r\n        <Space size=\"middle\" direction={\"vertical\"}>\r\n            <a style={{ color: \"red\" }} onClick={async()=>{\r\n              var res = await showConfirmDlgWidget({ title: \"Delete Confirmation\", content: \"Are you sure to delete this product?\" });\r\n              if (res == false) return;\r\n              if(promotionProducts !== undefined && promotionProducts[\"ComboProducts\"] !== undefined){\r\n                let newData = promotionProducts[\"ComboProducts\"].filter((x, index) => index != record.key);\r\n                setPromotionProducts({...promotionProducts, \"ComboProducts\" : [...newData]});\r\n              }\r\n            }}>Delete</a>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n  const editPromotionProductItem = (row) => {\r\n    const { selling_price, key } = row;\r\n    if(promotionProducts !== undefined && promotionProducts[\"ComboProducts\"] !== undefined){\r\n      let newData = promotionProducts[\"ComboProducts\"];\r\n      let index = newData.findIndex((item, index) => index === key);\r\n  \r\n      let item = {\r\n        ...newData[index],\r\n        selling_price: selling_price,\r\n      };\r\n      newData.splice(index, 1, { ...item });\r\n      setPromotionProducts({...promotionProducts, \"ComboProducts\" : [...newData]});\r\n    }\r\n  };\r\n  const editableColumns = columns.map((col) => {\r\n    if (col.editable !== true) {\r\n      return col;\r\n    }\r\n\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        editable: col.editable,\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        handleSave: editPromotionProductItem,\r\n      }),\r\n    };\r\n  });\r\n  const components = {\r\n    body: {\r\n      row: EditableRow,\r\n      cell: EditableCell,\r\n    },\r\n  };\r\n\r\n  const promotionProductsInfo = promotionProducts === undefined || promotionProducts[\"ComboProducts\"] === undefined ? [] : promotionProducts[\"ComboProducts\"].map((promotion, index) => {\r\n    let products = promotion.combo_products;\r\n    if (products === undefined) {\r\n      return null;\r\n    }\r\n    return { ...promotion, key: index };\r\n  });\r\n\r\n  if (promotionProductsInfo.length === 0) {\r\n    return <div></div>;\r\n  }\r\n  return (\r\n    <div className=\"combo-deal-product-list\">\r\n      <div className=\"combo-deal-product-list-title\">\r\n        Combo Deal Product List\r\n      </div>\r\n      <div className=\"combo-deal-product-list-container\">\r\n        <Table\r\n          components={components}\r\n          columns={editableColumns}\r\n          dataSource={promotionProductsInfo.filter((x) => x !== null)}\r\n          scroll={{ x: 900 }}\r\n          rowClassName={() => \"editable-row\"}\r\n          bordered\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ComboDealProductList;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\PromotionPage\\PromotionDetailModal\\ExcelRelWidget\\ExcelRelWidget.js",["1982","1983","1984","1985","1986","1987","1988","1989","1990","1991","1992","1993","1994","1995","1996","1997","1998","1999","2000","2001","2002","2003","2004","2005","2006","2007","2008","2009","2010","2011","2012","2013","2014","2015","2016","2017","2018","2019","2020","2021","2022","2023","2024","2025","2026","2027"],"import React, { useState } from \"react\";\r\nimport { Col, message, Progress, Row, Space } from \"antd\";\r\nimport readXlsxFile from \"read-excel-file\";\r\nimport moment from \"moment\";\r\nimport { apiGetProductInfoBybarcode } from \"services/promotionService\";\r\nimport \"./ExcelRelWidget.css\";\r\nimport { showConfirmDlgWidget } from \"components/ConfirmDlgWidget/showConfirmDlgWidget\";\r\nimport { showAddProductDialog } from \"pages/ProductPage/MyProductPanel/AddProductDialog/showAddProductDialog\";\r\nimport { apiCreateProduct } from \"services/productService\";\r\n\r\nfunction ExcelRelWidget(props) {\r\n  const {\r\n    selPromotion,\r\n    setSelPromotion,\r\n    promotionProducts,\r\n    setPromotionProducts,\r\n    storeList,\r\n    isBusy,\r\n    setIsBusy,\r\n  } = props;\r\n\r\n  const [errorBarcodeList, setErrorBarcodeList] = useState([]);\r\n\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [loadingPercent, setLoadingPercent] = useState(0)\r\n  const isNumber = (value) => {\r\n    return typeof value === \"number\" && !Number.isNaN(value);\r\n  }\r\n  const getProductsRow = (row) => {\r\n    if (row.length === 0) return false;\r\n    for (let i = 0; i < row.length; i++) {\r\n      let column = row[i];\r\n      for (let j = 0; j < column.length; j++) {\r\n        let data = column[j];\r\n        if (data === \"Single Product\") {\r\n          return i + 2;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n  const getStartIndex = (row) => {\r\n    if (row.length === 0) return false;\r\n    for (let i = 0; i < row.length; i++) {\r\n      let column = row[i];\r\n      for (let j = 0; j < column.length; j++) {\r\n        let data = column[j];\r\n        if (data === \"Promotion Name\") {\r\n          return [i, j];\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n  const getComboColIndex = (column) => {\r\n    if (column.length === 0) return false;\r\n    for (let j = 0; j < column.length; j++) {\r\n      let data = column[j];\r\n      if (data === \"Combo Deals\") {\r\n        return j;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n  const getBuyColIndex = (column) => {\r\n    if (column.length === 0) return false;\r\n    for (let j = 0; j < column.length; j++) {\r\n      let data = column[j];\r\n      if (data === \"Buy 1 Get 1 Free Deals\") {\r\n        return j;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n\r\n\r\n  const onClickTemplateDownload = () => {\r\n    setTimeout(() => {\r\n      const response = {\r\n        file: \"/assets/template/promotionTemplate.xlsx\",\r\n      };\r\n      window.open(response.file);\r\n    }, 100);\r\n  };\r\n  const onDropExcelFile = async (e) => {\r\n    const files = Array.from(e.target.files);\r\n    if (files.length === 0) return;\r\n    readXlsxFile(files[0]).then((rows) => {\r\n      setErrorBarcodeList([]);\r\n      setIsLoading(true)\r\n      extractExcelFile(rows);\r\n    });\r\n    e.target.value = null;\r\n  };\r\n  const extractExcelFile = async (rows) => {\r\n    setIsLoading(false)\r\n    if (!validateExcelFile(rows)) {\r\n      message.error(\r\n        \"Selected Excel file is not valid.\\nPlease download the template file.\"\r\n      );\r\n      return;\r\n    }\r\n    if (\r\n      !validatePromotionDescriptionField(rows, \"name\", \"Promotion Name\") ||\r\n      !validatePromotionDescriptionField(rows, \"store\", \"Store Name\") ||\r\n      !validatePromotionDescriptionField(rows, \"start_date\", \"Start Date\", true) ||\r\n      !validatePromotionDescriptionField(rows, \"end_date\", \"End Date\", true)\r\n    )\r\n      return;\r\n\r\n    let startIndex = getStartIndex(rows);\r\n    let productRowIndex = getProductsRow(rows);\r\n    let productHeaderRow = rows[productRowIndex - 2];\r\n\r\n    if (startIndex === false || productRowIndex === false || productHeaderRow === false) {\r\n      message.error(\r\n        \"Selected Excel file has invalid values.\\nPlease download the template file.\"\r\n      );\r\n      return;\r\n    }\r\n    let comboStartColIndex = getComboColIndex(productHeaderRow);\r\n    let buyStartColIndex = getBuyColIndex(productHeaderRow);\r\n    if (comboStartColIndex === false || buyStartColIndex === false) {\r\n      message.error(\r\n        \"Selected Excel file has invalid values.\\nPlease download the template file.\"\r\n      );\r\n      return;\r\n    }\r\n    setErrorBarcodeList([]);\r\n    let startRowIndex = startIndex[0]\r\n    let startColIndex = startIndex[1]\r\n    await createProducts(rows, productRowIndex, startRowIndex, startColIndex, comboStartColIndex, buyStartColIndex);\r\n  };\r\n\r\n  const validateExcelFile = (rows) => {\r\n    let fieldList = [\r\n      \"Promotion Name\",\r\n      \"Store Name\",\r\n      \"Start Date\",\r\n      \"End Date\",\r\n      \"Single Product\",\r\n      \"Combo Deals\",\r\n      \"Buy 1 Get 1 Free Deals\",\r\n      \"Product\",\r\n      \"Price\",\r\n      \"Promotion Text\",\r\n      \"Products\",\r\n      \"Main Product\",\r\n      \"Free Product\",\r\n    ];\r\n\r\n    for (var i = 0; i < rows.length; i++) {\r\n      var columns = rows[i];\r\n      for (var j = 0; j < columns.length; j++) {\r\n        var value = columns[j];\r\n        var field = fieldList.find((x) => x === value);\r\n        if (field !== undefined) {\r\n          fieldList = fieldList.filter((x) => x !== field);\r\n          if (fieldList.length === 0) {\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n  const validatePromotionDescriptionField = (rows, field, title, isDate) => {\r\n    for (var i = 0; i < rows.length; i++) {\r\n      var columns = rows[i];\r\n      for (var j = 0; j < columns.length; j++) {\r\n        var fieldName = columns[j];\r\n        if (fieldName === title) {\r\n          try {\r\n            var value = columns[j + 1].trim();\r\n            if (value === \"\" || value === null) {\r\n              message.error(`${title} is not valid.`);\r\n              return false;\r\n            }\r\n\r\n            if (isDate === true) {\r\n              var date = new Date(value);\r\n              if (date == \"Invalid Date\") {\r\n                message.error(`${title} is not valid.`);\r\n                return false;\r\n              }\r\n              value = moment(date).format(\"YYYY-MM-DD\");\r\n            }\r\n            let tmpInfo = selPromotion;\r\n            tmpInfo[field] = value;\r\n\r\n            if (field == \"store\" && tmpInfo['store'] != undefined && tmpInfo['store'].length > 0 && storeList != undefined && storeList.length > 0) {\r\n              let stores = []\r\n              const store_names = tmpInfo['store'].toLowerCase().split(\",\").map(x => x.trim());\r\n              if (tmpInfo['store'].split(\",\").length > 0) {\r\n                stores = storeList.filter(x => store_names.includes(x.name.toLowerCase())).map(x => x.id)\r\n              }\r\n              tmpInfo['store'] = [...stores]\r\n            }\r\n            setSelPromotion({ ...tmpInfo });\r\n            return true;\r\n          } catch (e) {\r\n            message.error(`${title} is not valid.`);\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const createSingleProductInfoList = async (singlePList, progressStatus, errorList) => {\r\n\r\n    let tmpSinglePList = []\r\n    for (var i = 0; i < singlePList.length; i++) {\r\n      const data = singlePList[i];\r\n      const product = await createSinglePromotionProduct(data, errorList);\r\n      progressStatus.current_progress += progressStatus.cnt_avg\r\n      setLoadingPercent(progressStatus.current_progress.toFixed(2))\r\n      if (product != false) {\r\n        tmpSinglePList = [...tmpSinglePList, product];\r\n      }\r\n    }\r\n    return tmpSinglePList;\r\n  };\r\n  const createSinglePromotionProduct = async (data, errList) => {\r\n    if (data[0] === null || data[0] === undefined || data[0] === \"\") {\r\n      return false;\r\n    }\r\n    const barcode = data[0].trim();\r\n    const product = await apiGetProductInfoBybarcode(barcode);\r\n    if (product != undefined && product.barcode != undefined && product.barcode != \"\") {\r\n      const newProduct = {\r\n        product: product,\r\n        quantity: 1,\r\n        selling_price: parseFloat(`${data[1] == null ? 0 : data[1]}`).toFixed(2),\r\n        description: data[2] === null ? \"\" : data[2],\r\n      };\r\n      return newProduct;\r\n    } else {\r\n      errList.push(barcode)\r\n      return false\r\n    }\r\n\r\n  };\r\n  const createComboProductInfoList = async (comboPList, progressStatus, errorList) => {\r\n\r\n    let tmpComboPList = []\r\n    for (var i = 0; i < comboPList.length; i++) {\r\n      const data = comboPList[i];\r\n      const product = await createComboPromotionProduct(data, errorList);\r\n      progressStatus.current_progress += progressStatus.cnt_avg\r\n      setLoadingPercent(progressStatus.current_progress.toFixed(2))\r\n      if (product != false) {\r\n        tmpComboPList = [...tmpComboPList, product];\r\n      }\r\n    }\r\n    return tmpComboPList;\r\n  };\r\n  const createComboPromotionProduct = async (data, errList) => {\r\n    if (data[0] === null || data[0] === undefined || data[0] === \"\")\r\n      return false;\r\n    let barcodeList = data[0].split(\",\").map((x) => x.replace(/\\r?\\n|\\r/g, \"\"));\r\n    let comboPlist = []\r\n    for (let i = 0; i < barcodeList.length; i++) {\r\n      let barcode = barcodeList[i].trim();\r\n      if (barcode != \"\") {\r\n        const product = await apiGetProductInfoBybarcode(barcode);\r\n        if (product != undefined && product.barcode != undefined && product.barcode != \"\") {\r\n          comboPlist.push(product)\r\n        } else {\r\n          errList.push(barcode)\r\n          return false\r\n        }\r\n        if (i == barcodeList.length - 1) {\r\n          const newProduct = {\r\n            combo_products: comboPlist,\r\n            quantity: 1,\r\n            selling_price: parseFloat(`${data[1] == null ? 0 : data[1]}`).toFixed(2),\r\n            description: data[2] === null ? \"\" : data[2],\r\n          };\r\n          return newProduct;\r\n        }\r\n      }\r\n    }\r\n\r\n  };\r\n  const createBuyProductInfoList = async (buyPList, progressStatus, errorList) => {\r\n    let tmpBuyPList = []\r\n    for (var i = 0; i < buyPList.length; i++) {\r\n      const data = buyPList[i];\r\n      const product = await createBuyPromotionProduct(data, errorList);\r\n      progressStatus.current_progress += progressStatus.cnt_avg\r\n      setLoadingPercent(progressStatus.current_progress.toFixed(2))\r\n      if (product != false) {\r\n        tmpBuyPList = [...tmpBuyPList, product];\r\n      }\r\n    }\r\n    return tmpBuyPList;\r\n  };\r\n  const createBuyPromotionProduct = async (data, errList) => {\r\n    if (data[0] === null || data[0] === undefined || data[0] === \"\")\r\n      return false;\r\n    if (data[1] === null || data[1] === undefined || data[1] === \"\")\r\n      return false;\r\n    data[0] = data[0].split(\",\").map((x) => x.replace(/\\r?\\n|\\r/g, \"\"));\r\n    data[1] = data[1].split(\",\").map((x) => x.replace(/\\r?\\n|\\r/g, \"\"));\r\n    let mainProducts = []\r\n    for (let i = 0; i < data[0].length; i++) {\r\n      let barcode = data[0][i].trim();\r\n      if (barcode != \"\") {\r\n        const product = await apiGetProductInfoBybarcode(barcode);\r\n        if (product != undefined && product.barcode != undefined && product.barcode != \"\") {\r\n          mainProducts.push(product)\r\n        } else {\r\n          errList.push(barcode)\r\n          return false\r\n        }\r\n      }\r\n    }\r\n\r\n    let freeProducts = []\r\n    for (let j = 0; j < data[1].length; j++) {\r\n      let barcode = data[1][j]\r\n      if (barcode != \"\") {\r\n        const product = await apiGetProductInfoBybarcode(barcode);\r\n        if (product != undefined && product.barcode != undefined && product.barcode != \"\") {\r\n          freeProducts.push(product)\r\n        }\r\n      }\r\n    }\r\n\r\n    if (mainProducts.length != 0 && freeProducts.length != 0) {\r\n      var newProduct = {\r\n        buy_products: mainProducts,\r\n        free_products: freeProducts,\r\n        quantity: 1,\r\n        selling_price: parseFloat(`${data[2] == null ? 0 : data[2]}`).toFixed(2),\r\n        description: data[2] === null ? \"\" : data[3],\r\n      };\r\n      return newProduct;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n  const createProducts = async (rows, productRowIndex, startRowIndex, startColIndex, startComboColIndex, startBuyColIndex) => {\r\n\r\n    let singlePList = []\r\n    let comboPList = []\r\n    let buyPList = []\r\n    for (let i = productRowIndex; i < rows.length; i++) {\r\n      setLoadingPercent(0)\r\n      let data = rows[i];\r\n      if (data[startColIndex] == null || data[startColIndex] == \"\") {\r\n        message.error(\r\n          \"In \" + (i + 1) + \"th rows of Selected Excel file, Single Product has not barcode.\\nPlease download the template file.\"\r\n        );\r\n        setPromotionProducts({ ...promotionProducts, \"SingleProducts\": [], \"ComboProducts\": [], \"Buy1Get1Products\": [] })\r\n        return;\r\n      } else {\r\n        let price = data[startColIndex + 1];\r\n        if (price == null || price == undefined || price == \"\" || !isNumber(price)) {\r\n          message.error(\r\n            \"In \" + (i + 1) + \"th rows of Selected Excel file, Single Product has not price.\\nPlease download the template file.\"\r\n          );\r\n          setPromotionProducts({ ...promotionProducts, \"SingleProducts\": [], \"ComboProducts\": [], \"Buy1Get1Products\": [] })\r\n          return;\r\n        } else {\r\n          let singleProductDetail = [\r\n            data[startColIndex],\r\n            data[startColIndex + 1],\r\n            data[startColIndex + 3],\r\n          ];\r\n          singlePList.push(singleProductDetail);\r\n        }\r\n\r\n      }\r\n\r\n\r\n    }\r\n\r\n    for (let i = productRowIndex; i < rows.length; i++) {\r\n      let data = rows[i];\r\n      if (data[startComboColIndex] !== null && data[startComboColIndex] !== \"\") {\r\n        let price = data[startComboColIndex + 1];\r\n        if (data[startComboColIndex] != null && (price == null || price == undefined || price == \"\" || !isNumber(price))) {\r\n          message.error(\r\n            \"In \" + (i + 1) + \"th rows of Selected Excel file, Combo Deals has not price.\\nPlease download the template file.\"\r\n          );\r\n          setPromotionProducts({ ...promotionProducts, \"SingleProducts\": [], \"ComboProducts\": [], \"Buy1Get1Products\": [] })\r\n          return;\r\n        } else {\r\n          let comboDealProductDetail = [\r\n            data[startComboColIndex],\r\n            data[startComboColIndex + 1],\r\n            data[startComboColIndex + 3],\r\n          ];\r\n          comboPList.push(comboDealProductDetail)\r\n        }\r\n      }\r\n\r\n    }\r\n    for (let i = productRowIndex; i < rows.length; i++) {\r\n      let data = rows[i];\r\n      if (data[startBuyColIndex] != null || data[startBuyColIndex] != \"\" && data[startBuyColIndex + 1] != null && data[startBuyColIndex + 1] != \"\") {\r\n        let price = data[startBuyColIndex + 2];\r\n        if (price == null || price == undefined || price == \"\" || !isNumber(price)) {\r\n          message.error(\r\n            \"In \" + (i + 1) + \"th rows of Selected Excel file, Buy 1 Get 1 Free Deals has not price.\\nPlease download the template file.\"\r\n          );\r\n          setPromotionProducts({ ...promotionProducts, \"SingleProducts\": [], \"ComboProducts\": [], \"Buy1Get1Products\": [] })\r\n          return;\r\n        } else {\r\n          let buy1get1ProductDetail = [\r\n            data[startBuyColIndex],\r\n            data[startBuyColIndex + 1],\r\n            data[startBuyColIndex + 2],\r\n            data[startBuyColIndex + 4],\r\n          ];\r\n          buyPList.push(buy1get1ProductDetail)\r\n        }\r\n      }\r\n\r\n    }\r\n    const cnt_avg = Math.ceil((100 / (singlePList.length + comboPList.length + buyPList.length)).toFixed(2))\r\n    const current_progress = 0;\r\n\r\n    let errorList = [];\r\n    let progressStatus = {\r\n      cnt_avg: cnt_avg,\r\n      current_progress: current_progress\r\n    }\r\n    const singleProducts = await createSingleProductInfoList(singlePList, progressStatus, errorList)\r\n    const comboProducts = await createComboProductInfoList(comboPList, progressStatus, errorList)\r\n    const buyProducts = await createBuyProductInfoList(buyPList, progressStatus, errorList)\r\n    setErrorBarcodeList(errorList)\r\n    setPromotionProducts({ ...promotionProducts, \"SingleProducts\": singleProducts, \"ComboProducts\": comboProducts, \"Buy1Get1Products\": buyProducts })\r\n    setLoadingPercent(100)\r\n\r\n  };\r\n  return (\r\n    <div className=\"excel-rel-widget\">\r\n      <Row gutter={16} justify={\"start\"} align={\"middle\"}>\r\n        <Col style={{ marginTop: 5 }}>\r\n          <label htmlFor=\"upload-promotion-excel-file\">\r\n            <input\r\n              type=\"file\"\r\n              id=\"upload-promotion-excel-file\"\r\n              name=\"upload-promotion-excel-file\"\r\n              style={{ display: \"none\" }}\r\n              accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n              onChange={onDropExcelFile}\r\n            />\r\n            <div className=\"excel-rel-widget-upload-button\">\r\n              <img\r\n                src={\"/assets/images/ic_excel.svg\"}\r\n                className={\"excel-rel-widget-upload-image\"}\r\n              />\r\n              Upload Promotion Excel File\r\n            </div>\r\n          </label>\r\n        </Col>\r\n        <Col style={{ marginTop: 5 }}>\r\n          <div className=\"excel-rel-widget-upload-button\" onClick={onClickTemplateDownload}>\r\n            <img\r\n              src={\"/assets/images/ic_download.svg\"}\r\n              className={\"excel-rel-widget-upload-image\"}\r\n            />\r\n              Download Template\r\n            </div>\r\n        </Col>\r\n      </Row>\r\n      <div className=\"error-barcode-list\">\r\n\r\n        {errorBarcodeList.length > 0 && (\r\n          <div>\r\n            <div>One or more barcodes are not registered in our library.</div>\r\n            <Space>\r\n              {errorBarcodeList.map((barcode, index) => {\r\n                return (\r\n                  <div className=\"error-barcode\" onClick={async () => {\r\n                    var res = await showConfirmDlgWidget({ title: \"Create Confirmation\", content: \"Are you sure to create new product?\" });\r\n                    if (res == false) return;\r\n                    var res = await showAddProductDialog({\r\n                      title: \"Add Product Dialog\",\r\n                      productInfo: { barcode: barcode },\r\n                      canAddNewUnits: true,\r\n                    });\r\n                    if (res === null) return;\r\n                    setIsBusy(true);\r\n                    apiCreateProduct(res)\r\n                      .then((data) => {\r\n                        if (data === null) {\r\n                          message.error(\"There's something wrong while creating a product\");\r\n                        } else {\r\n                          if (\r\n                            errorBarcodeList.filter((x) => x != barcode).length == 0\r\n                          ) {\r\n                            message.success(\r\n                              \"Success! Please import the excel file again.\",\r\n                              10\r\n                            );\r\n                          }\r\n                          setErrorBarcodeList(\r\n                            errorBarcodeList.filter((x) => x != barcode)\r\n                          );\r\n                        }\r\n                        setIsBusy(false);\r\n                      })\r\n                      .catch((err) => {\r\n                        message.error(\"Server failed. \" + err);\r\n                      });\r\n                  }}>{barcode}</div>\r\n\r\n                );\r\n              })}\r\n            </Space>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <Row style={{ height: 10 }}>\r\n        {isLoading && <Progress\r\n          strokeColor={{\r\n            '0%': 'rgb(96 168 220)',\r\n            '100%': '#87d068',\r\n          }}\r\n          percent={loadingPercent}\r\n        />}\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExcelRelWidget;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\ProductPage\\MyProductPanel\\AddProductDialog\\AddBaseUnitDialog\\AddBaseUnitDialog.js",["2028","2029","2030","2031","2032"],"// @flow strict\r\n\r\nimport { Input, message } from \"antd\";\r\nimport Modal from \"antd/lib/modal/Modal\";\r\nimport React, { useState } from \"react\";\r\nimport { confirmable } from \"react-confirm\";\r\nimport { axiosDelete, axiosGet, axiosPost, axiosPut } from \"../../../../../services/ajaxServices\";\r\nimport \"./AddBaseUnitDialog.css\"\r\nfunction AddBaseUnitDialog(props) {\r\n  const { show, proceed } = props;\r\n  const { url, unitName, oldList } = props;\r\n  const [value, setValue] = useState(\"\");\r\n  const createOneUnit = () => {\r\n    //   proceed()\r\n    if (value == \"\") return;\r\n    const newValue = value.trim();\r\n    setValue(newValue);\r\n    if (\r\n      oldList.filter((x) => x.name.toLowerCase() == newValue.toLowerCase())\r\n        .length > 0\r\n    ) {\r\n      message.error(`${newValue} is already in the list`);\r\n      return;\r\n    }\r\n    const param = {\r\n      name: newValue,\r\n    };\r\n    new Promise((resolve, reject) => {\r\n      axiosPost(url, param, \"\")\r\n      .then((res) => {\r\n        if (res == null) {\r\n          message.error(\"There's same value from other vendor\");\r\n          return;\r\n        }\r\n        proceed({\r\n          addedItem: res,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n\r\n      });\r\n    });\r\n  };\r\n  \r\n  return (\r\n    <Modal\r\n      visible={show}\r\n      destroyOnClose={true}\r\n      onCancel={() => {\r\n        proceed(null);\r\n      }}\r\n      className=\"custom-base-unit-dlg\"\r\n      closable={true}\r\n      maskClosable={false}\r\n      title={`${unitName} Add Dialog`}\r\n      onOk={createOneUnit}\r\n    >\r\n      <div>Please specify new {unitName} you want to add.</div>\r\n      <Input className=\"normal-input\" value={value} onChange={(e) => setValue(e.target.value)} />\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default confirmable(AddBaseUnitDialog);\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\ProductPage\\MyProductPanel\\AddProductDialog\\AddNewCategoryDialog\\AddNewCategoryDialog.js",["2033","2034","2035","2036","2037"],"import { Input, message, Modal } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport { confirmable } from \"react-confirm\";\r\nimport ProductTypeSelector from \"../../../../../components/ProductPage/ProductTypeSelector/ProductTypeSelector\";\r\nimport { axiosDelete, axiosGet, axiosPost, axiosPut } from \"../../../../../services/ajaxServices\";\r\nimport \"./AddNewCategoryDialog.css\";\r\nconst { TextArea } = Input;\r\nfunction AddNewCategoryDialog(props) {\r\n  const { proceed, show } = props;\r\n  const { url, oldList } = props;\r\n  const [newCategory, setNewCategory] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    parent:null,\r\n  });\r\n//   console.log(oldList);\r\n  const createNewCategory = () => {\r\n    if (newCategory.title == \"\"){\r\n      message.error(`Please input title`);\r\n      return;\r\n    } \r\n    const newValue = newCategory.title.trim();\r\n    setNewCategory({ ...newCategory, title: newValue });\r\n\r\n    if (\r\n      oldList.filter((x) => x.title.toLowerCase() == newValue.toLowerCase())\r\n        .length > 0\r\n    ) {\r\n      message.error(`${newValue} is already in the list`);\r\n      return;\r\n    }\r\n    if(newCategory.parent == null){\r\n      message.error(`Please select parent caregory`);\r\n      return;\r\n    }\r\n\r\n    console.log(\"NEW CATEGOTY\", newCategory);\r\n    new Promise((resolve, reject) => {\r\n      axiosPost(url, newCategory, \"\")\r\n      .then((res) => {\r\n        console.log(\"rerere:\", res)\r\n        if (res == null) {\r\n          message.error(\"There's same value from other vendor\");\r\n          return;\r\n        }\r\n        proceed({\r\n          addedItem: res,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n              \r\n      });\r\n    });\r\n    // postRequest(url, newCategory, (res) => {\r\n    //   if (res == null) {\r\n    //     message.error(\"There's same value from other vendor\");\r\n    //     return;\r\n    //   }\r\n    //   const newList = res[\"allList\"];\r\n      // const addedItem = newList.find((x) => x.title == newValue);\r\n      // proceed({\r\n      //   newList: newList,\r\n      //   addedItem: addedItem,\r\n      // });\r\n    // });\r\n  };\r\n  return (\r\n    <Modal\r\n      visible={show}\r\n      destroyOnClose={true}\r\n      onCancel={() => {\r\n        proceed(null);\r\n      }}\r\n      closable={true}\r\n      maskClosable={false}\r\n      title={\"New Category Add Dialog\"}\r\n      className=\"custom-new-category-dlg\"\r\n      onOk={createNewCategory}\r\n    >\r\n      <div>Please specify information of new category.</div>\r\n      <div style={{ marginTop: 10 }}>Title *</div>\r\n      <Input\r\n        value={newCategory.title}\r\n        className=\"normal-input\"\r\n        onChange={(e) =>\r\n          setNewCategory({ ...newCategory, title: e.target.value })\r\n        }\r\n      />\r\n      <div style={{ marginTop: 10 }}>Description </div>\r\n      <TextArea\r\n        value={newCategory.description}\r\n        className=\"normal-input\"\r\n        onChange={(e) =>\r\n          setNewCategory({ ...newCategory, description: e.target.value })\r\n        }\r\n      />\r\n\r\n      <div style={{ marginTop: 10 }}>Parent</div>\r\n      <div style={{ marginLeft: 10 }}>\r\n        If you don't set the parent, new category will be created as root\r\n        category.\r\n      </div>\r\n      <ProductTypeSelector\r\n        field={\"parent\"}\r\n        productInfo={newCategory}\r\n        setProductInfo={setNewCategory}\r\n        placeholder={\"Select Parent Category\"}\r\n        list={oldList.filter((x) => x.parent == null)}\r\n        errorField={[]}\r\n        displayField=\"title\"\r\n        idField=\"id\"\r\n        isCategory={true}\r\n      />\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default confirmable(AddNewCategoryDialog);\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\PromotionPage\\PromotionDetailModal\\OnePromotionProductDetailModal\\OnePromotionProductDetailModal.js",["2038","2039","2040","2041","2042","2043","2044","2045","2046","2047"],"import React, { useEffect, useState } from \"react\";\r\nimport { confirmable } from \"react-confirm\";\r\nimport { Divider, message } from \"antd\";\r\nimport Modal from \"antd/lib/modal/Modal\";\r\n\r\nimport ProductRefWidget from \"../../../../components/PromotionPage/ProductRefWidget/ProductRefWidget\";\r\n\r\nimport Buy1Get1DealProduct from \"./Buy1Get1DealProduct/Buy1Get1DealProduct\";\r\nimport ComboDealProduct from \"./ComboDealProduct/ComboDealProduct\";\r\nimport NormalProduct from \"./NormalProduct/NormalProduct\";\r\n\r\nimport \"./OnePromotionProductDetailModal.css\";\r\n\r\nfunction OnePromotionProductDetailModal(props) {\r\n  const { show, proceed, title } = props;\r\n  const { activeData, favoriteData } = props;\r\n  \r\n  const [curSingleProduct, setCurSingleProduct] = useState(undefined)\r\n  const [comboProductList, setComboProductList] = useState([])\r\n  const [buyProductList, setBuyProductList] = useState([])\r\n  const [freeProductList, setFreeProductList] = useState([])\r\n  const [productType, setProductType] = useState(\"Main\");\r\n  const [sellingInfo, setSellingInfo] = useState({selling_price:\"\", description: \"\"})\r\n  \r\n  const onDeleteProduct = (pInfo)=>{\r\n    if(title === \"Combo Deal\"){\r\n      let tmp = comboProductList.filter(\r\n        (x) => x.barcode != pInfo.barcode\r\n      )\r\n      setComboProductList(tmp)\r\n    }else if(title === \"Buy 1 Get 1 Free\"){\r\n      if(productType === \"Main\"){\r\n        let tmp = buyProductList.filter(\r\n          (x) => x.barcode != pInfo.barcode\r\n        )\r\n        setBuyProductList(tmp)\r\n      }else{\r\n        let tmp = freeProductList.filter(\r\n          (x) => x.barcode != pInfo.barcode\r\n        )\r\n        setFreeProductList(tmp)\r\n      }\r\n    }\r\n  }\r\n  const onClickOk = ()=>{\r\n    let newPromotionData = {}\r\n    if(validCheck()){\r\n      if(title === \"Single Product\"){\r\n        newPromotionData = {\r\n          \"SingleProducts\":{ quantity:\"1\", selling_price: sellingInfo.selling_price, description: sellingInfo.description, product: curSingleProduct}, \r\n        }\r\n      }else if(title === \"Combo Deal\"){\r\n        newPromotionData = {\r\n          \"ComboProducts\":{ quantity:\"1\", selling_price: sellingInfo.selling_price, description: sellingInfo.description, combo_products: comboProductList},\r\n        }\r\n      }else if(title === \"Buy 1 Get 1 Free\"){\r\n        newPromotionData = {\r\n          \"Buy1Get1Products\":{ quantity:\"1\", selling_price: sellingInfo.selling_price, description: sellingInfo.description, buy_products:buyProductList, free_products: freeProductList}\r\n        }\r\n      }\r\n      proceed({\r\n        data: newPromotionData,\r\n      });\r\n    }\r\n    \r\n  }\r\n  const validCheck = ()=>{\r\n    if(title === \"Single Product\"){\r\n      if( curSingleProduct === undefined ){\r\n        message.error(\"Please select the product.\")\r\n        return false; \r\n      }\r\n    }else if(title === \"Combo Deal\"){\r\n      if( comboProductList.length == 0){\r\n        message.error(\"Please select the product.\")\r\n        return false; \r\n      }\r\n    }else if(title === \"Buy 1 Get 1 Free\"){\r\n      if(buyProductList.length == 0 || freeProductList.length == 0){\r\n        message.error(\"Please select the product for both Main Product and Free Product.\")\r\n        return false; \r\n      }\r\n    }\r\n    if(sellingInfo === undefined || (sellingInfo != undefined && sellingInfo.selling_price == null) || (sellingInfo != undefined && sellingInfo.selling_price == \"\")){\r\n      message.error(\"Please specy the price.\")\r\n      return false;  \r\n    }else{\r\n      return true;\r\n    }\r\n  }\r\n  const onProductSelect = (pInfo) => {\r\n    if(title === \"Single Product\"){\r\n      setCurSingleProduct(pInfo)\r\n    }else if(title === \"Combo Deal\"){\r\n      let tmp = [...comboProductList]\r\n      tmp = [pInfo, ...tmp]\r\n      setComboProductList(tmp)\r\n    }else if(title === \"Buy 1 Get 1 Free\"){\r\n      if(productType === \"Main\"){\r\n        let tmp = [...buyProductList]\r\n        tmp = [pInfo, ...tmp]\r\n        setBuyProductList(tmp)\r\n      }else{\r\n        let tmp = [...freeProductList]\r\n        tmp = [pInfo, ...tmp]\r\n        setFreeProductList(tmp)\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <Modal\r\n      visible={show}\r\n      onCancel={() => {\r\n        proceed(null);\r\n      }}\r\n      onOk={() => {\r\n        onClickOk();\r\n      }}\r\n      closable={true}\r\n      maskClosable={false}\r\n      className=\"one-promotion-product-detail-modal\"\r\n      title={title}\r\n    >\r\n      <ProductRefWidget\r\n        title=\"My Favourite Products\"\r\n        activeProductList={activeData}\r\n        favoriteProductList={favoriteData}\r\n        productSelect={onProductSelect}\r\n      />\r\n      <Divider orientation=\"left\"> Promotion Product Info </Divider>\r\n      {title === \"Single Product\" && (\r\n        <NormalProduct\r\n          selectedPromotionProduct={curSingleProduct}\r\n          sellingInfo={sellingInfo}\r\n          setSellingInfo={setSellingInfo}\r\n          disabled={false}\r\n          onClickOk={onClickOk}\r\n        />\r\n      )}\r\n      {title === \"Combo Deal\" && (\r\n        <ComboDealProduct\r\n          selectedPromotionProductList={comboProductList}\r\n          sellingInfo={sellingInfo}\r\n          setSellingInfo={setSellingInfo}\r\n          deleteProduct={onDeleteProduct}\r\n          disabled={false}\r\n          onClickOk={onClickOk}\r\n        />\r\n      )}\r\n      {title === \"Buy 1 Get 1 Free\" && (\r\n        <Buy1Get1DealProduct\r\n          buyProductList={buyProductList}\r\n          freeProductList={freeProductList}\r\n          productType={productType}\r\n          setProductType={setProductType}\r\n          sellingInfo={sellingInfo}\r\n          disabled={false}\r\n          setSellingInfo={setSellingInfo}\r\n          deleteProduct={onDeleteProduct}\r\n          onClickOk={onClickOk}\r\n        />\r\n      )}\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default confirmable(OnePromotionProductDetailModal);\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\components\\PromotionPage\\EditableCell\\EditableCell.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\test\\ju\\frontEnd\\src\\pages\\PromotionPage\\PromotionDetailModal\\PromotionDescriptionWidget\\FollowerListWidget\\FollowerListWidget.js",["2048","2049","2050","2051","2052","2053"],"import React, { useState, useEffect } from \"react\";\r\nimport { Select, Spin, Table, message } from \"antd\";\r\nimport { apiGetFollowerListAll } from 'services/followerService';\r\nimport \"./FollowerListWidget.css\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"\",\r\n    dataIndex: \"image_url\",\r\n    render: (image_url) => {\r\n      return (\r\n        <img\r\n          src={\r\n            image_url == null || image_url == \"\"\r\n              ? \"/avatar_blank.png\"\r\n              : image_url\r\n          }\r\n          style={{ width: 50 }}\r\n        />\r\n      );\r\n    },\r\n  },\r\n  {\r\n    title: \"Name\",\r\n    dataIndex: \"name\",\r\n    sorter: (a, b) => `${a.first_name}`.localeCompare(`${b.first_name}`),\r\n    render: (name, user) => {\r\n      return `${user.first_name} ${user.last_name}`;\r\n    },\r\n  },\r\n  {\r\n    title: \"User Type\",\r\n    dataIndex: \"is_trader\",\r\n    filters: [\r\n      {\r\n        text: \"Trader\",\r\n        value: true,\r\n      },\r\n      {\r\n        text: \"Consumer\",\r\n        value: false,\r\n      },\r\n    ],\r\n    onFilter: (value, record) => {\r\n      if (value == true) {\r\n        return record.is_trader === value;\r\n      } else {\r\n        return record.is_trader != true;\r\n      }\r\n    },\r\n    sorter: (a, b) => `${a.is_trader}`.localeCompare(`${b.is_trader}`),\r\n    render: (is_trader) => {\r\n      return is_trader == true ? \"Trader\" : \"Consumer\";\r\n    },\r\n  },\r\n];\r\n\r\nfunction FollowerListWidget(props) {\r\n  const { followerList, setFollowerList } = props;\r\n  const [allFollowers, setAllFollowers] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    apiGetFollowerListAll()\r\n      .then((res) => {\r\n        setIsLoading(false);\r\n        setAllFollowers(\r\n          res.map((x) => {\r\n            return { key: x.id, ...x };\r\n          })\r\n        );\r\n      })\r\n      .catch((err) => {\r\n          setIsLoading(false);\r\n          message.error(\"Server failed. \" + err);\r\n    });\r\n  }, []);\r\n\r\n  const rowSelection = {\r\n    selectedRowKeys: followerList,\r\n    onChange: setFollowerList,\r\n  };\r\n\r\n  return (\r\n    <Spin spinning={isLoading}>\r\n      <div style={{ marginTop: 10 }}>\r\n        <div>Select your followers to send this promotion to</div>\r\n        <div className=\"follower-table\">\r\n          <Table\r\n            rowSelection={rowSelection}\r\n            columns={columns}\r\n            dataSource={allFollowers}\r\n            size={\"small\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    </Spin>\r\n  );\r\n}\r\n\r\nexport default FollowerListWidget;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\index.js",[],["2054","2055"],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\App.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\reportWebVitals.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\redux\\store.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\utils\\dropConsole.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\navigation\\RouterConfig.js",["2056","2057","2058","2059"],"import React, { useEffect, useState } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { NotFound } from \"navigation/NotFound\";\r\nimport {\r\n  ROUTE_LOGIN,\r\n  ROUTE_FREE_BOOK,\r\n  ROUTE_FORGOT_PASSWORD,\r\n  ROUTE_USER_DASHBOARD,\r\n  ROUTE_USER_FEED,\r\n  ROUTE_USER_SOFTWARE,\r\n  ROUTE_REGISTER,\r\n  ROUTE_REWARDS_PLAN,\r\n  ROUTE_ABOUT_US,\r\n  ROUTE_SUPPORT,\r\n  ROUTE_USER_AGREEMENT,\r\n  ROUTE_TERMS_CONDITIONS,\r\n  ROUTE_PRIVACY_POLICY,\r\n  ROUTE_RISK_WARNING,\r\n  ROUTE_AFFILIATE_AGREEMENT,\r\n  ROUTE_INCOME_DISCLAIME,\r\n  ROUTE_TRIAL_POLICY,\r\n  ROUTE_COMPLIANCE,\r\n  ROUTE_USER_VPS,\r\n  ROUTE_USER_TEAM,\r\n  ROUTE_USER_LICENSE,\r\n  ROUTE_USER_ACADEMY,\r\n  ROUTE_USER_MARKETING,\r\n  ROUTE_USER_CHART,\r\n  ROUTE_USER_WALLET,\r\n  ROUTE_USER_AFFILIATE,\r\n  ROUTE_USER_TICKET,\r\n  ROUTE_USER_SUPPORT,\r\n  ROUTE_USER_VERIFICATION,\r\n  ROUTE_USER_PROFILE,\r\n  ROUTE_WELCOME,\r\n  ROUTE_CONFIRM_PASSWORD,\r\n  ROUTE_USER_ACADEMY_BASIC,\r\n  ROUTE_USER_ACADEMY_ADVANCED,\r\n  ROUTE_USER_PAYMENT,\r\n  ROUTE_USER_VERIFICATION_CONFIRM,\r\n  ROUTE_USER_PAY_LICENSE,\r\n  ROUTE_USER_PAY_AFFILIATE,\r\n  ROUTE_USER_TEAM_DETAIL,\r\n  ROUTE_USER_TICKET_ADD,\r\n  ROUTE_USER_TICKET_DETAIL,\r\n  ROUTE_ADMIN_DASHBOARD,\r\n  ROUTE_ADMIN_USERS,\r\n  ROUTE_ADMIN_LICESES,\r\n  ROUTE_ADMIN_PAYMENTS,\r\n  ROUTE_ADMIN_WITHDRAWS,\r\n  ROUTE_ADMIN_TICKET,\r\n  ROUTE_ADMIN_FEED,\r\n  ROUTE_ADMIN_TICKET_DETAIL,\r\n  ROUTE_ADMIN_FEED_DETAIL,\r\n  ROUTE_ADMIN_ANNOUNCEMENT,\r\n  ROUTE_ADMIN_PROFILE,\r\n  ROUTE_ADMIN_STATS,\r\n  ROUTE_ADMIN_TEAM,\r\n  ROUTE_ADMIN_TEAM_DETAIL,\r\n  ROUTE_ADMIN_RANK,\r\n  ROUTE_ADMIN_RANK_DETAIL,\r\n  ROUTE_ADMIN_COUPON,\r\n\r\n} from \"navigation/CONSTANTS\";\r\nimport HomePage from \"pages/Home/HomePage/HomePage\";\r\nimport FreeBookPage from \"pages/Home/FreeBookPage/FreeBookPage\";\r\nimport UserLayout from \"layouts/UserLayout/UserLayout\";\r\nimport UserDashboardPage from \"pages/User/UserDashboardPage/UserDashboardPage\";\r\nimport UserFeedPage from \"pages/User/UserFeedPage/UserFeedPage\";\r\nimport UserSoftwarePage from \"pages/User/UserSoftwarePage/UserSoftwarePage\";\r\nimport LoginPage from \"pages/Home/LoginPage/LoginPage\";\r\nimport RegisterPage from \"pages/Home/RegisterPage/RegisterPage\";\r\nimport ForgotPasswordPage from \"pages/Home/ForgotPasswordPage/ForgotPasswordPage\";\r\nimport RewardsPlanPage from \"pages/Home/RewardsPlanPage/RewardsPlanPage\";\r\nimport AboutUsPage from \"pages/Home/AboutUsPage/AboutUsPage\";\r\nimport SupportPage from \"pages/Home/SupportPage/SupportPage\";\r\nimport UserAgreementPage from \"pages/Home/UserAgreementPage/UserAgreementPage\";\r\nimport TermsConditionsPage from \"pages/Home/TermsConditionsPage/TermsConditionsPage\";\r\nimport PrivacyPolicyPage from \"pages/Home/PrivacyPolicyPage/PrivacyPolicyPage\";\r\nimport RiskWarningPage from \"pages/Home/RiskWarningPage/RiskWarningPage\";\r\nimport AffiliateAgreementPage from \"pages/Home/AffiliateAgreementPage/AffiliateAgreementPage\";\r\nimport IncomeDisclaimerPage from \"pages/Home/IncomeDisclaimerPage/IncomeDisclaimerPage\";\r\nimport TrialPolicyPage from \"pages/Home/TrialPolicyPage/TrialPolicyPage\";\r\nimport CompliancePage from \"pages/Home/CompliancePage/CompliancePage\";\r\nimport UserVpsPage from \"pages/User/UserVpsPage/UserVpsPage\";\r\nimport UserTeamPage from \"pages/User/UserTeamPage/UserTeamPage\";\r\nimport UserLicensePage from \"pages/User/UserLicensePage/UserLicensePage\";\r\nimport UserAcademyPage from \"pages/User/UserAcademyPage/UserAcademyPage\";\r\nimport UserMarketingPage from \"pages/User/UserMarketingPage/UserMarketingPage\";\r\nimport UserChartPage from \"pages/User/UserChartPage/UserChartPage\";\r\nimport UserWalletPage from \"pages/User/UserWalletPage/UserWalletPage\";\r\nimport UserAffiliateIntroPage from \"pages/User/UserAffiliateIntroPage/UserAffiliateIntroPage\";\r\nimport UserTicketPage from \"pages/User/UserTicketPage/UserTicketPage\";\r\nimport UserSupportPage from \"pages/User/UserSupportPage/UserSupportPage\";\r\nimport UserVerificationPage from \"pages/User/UserVerificationPage/UserVerificationPage\";\r\nimport UserProfilePage from \"pages/User/UserProfilePage/UserProfilePage\";\r\nimport WelcomePage from \"pages/Home/WelcomePage/WelcomePage\";\r\nimport ConfirmPasswordPage from \"pages/Home/ConfirmPasswordPage/ConfirmPasswordPage\";\r\nimport UserBasicAcademyPage from \"pages/User/UserAcademyPage/inc/UserBasicAcademyPage\";\r\nimport UserAdvancedAcademyPage from \"pages/User/UserAcademyPage/inc/UserAdvancedAcademyPage\";\r\nimport UserPaymentListPage from \"pages/User/UserPaymentListPage/UserPaymentListPage\";\r\nimport UserPayLicensePage from \"pages/User/UserPayLicensePage/UserPayLicensePage\";\r\nimport UserPayAffiliatePage from \"pages/User/UserPayAffiliatePage/UserPayAffiliatePage\";\r\nimport UserAddTicketPage from \"pages/User/UserTicketPage/UserAddTicketPage\";\r\nimport UserDetailTicketPage from \"pages/User/UserTicketPage/UserDetailTicketPage\";\r\nimport AdminDashboardPage from \"pages/Admin/AdminDashboardPage/AdminDashboardPage\";\r\nimport AdminUsersPage from \"pages/Admin/AdminUsersPage/AdminUsersPage\";\r\nimport AdminLicensesPage from \"pages/Admin/AdminLicensesPage/AdminLicensesPage\";\r\nimport AdminPaymentsPage from \"pages/Admin/AdminPaymentsPage/AdminPaymentsPage\";\r\nimport AdminWithdrawPage from \"pages/Admin/AdminWithdrawPage/AdminWithdrawPage\";\r\nimport AdminTicketPage from \"pages/Admin/AdminTicketPage/AdminTicketPage\";\r\nimport AdminFeedPage from \"pages/Admin/AdminFeedPage/AdminFeedPage\";\r\nimport AdminDetailTicketPage from \"pages/Admin/AdminTicketPage/AdminDetailTicketPage\";\r\nimport AdminDetailFeedPage from \"pages/Admin/AdminFeedPage/AdminDetailFeedPage\";\r\nimport AdminAnnouncementPage from \"pages/Admin/AdminAnnouncementPage/AdminAnnouncementPage\";\r\nimport AdminProfilePage from \"pages/Admin/AdminProfilePage/AdminProfilePage\";\r\nimport AdminStatsPage from \"pages/Admin/AdminStatsPage/AdminStatsPage\";\r\nimport AdminTeamPage from \"pages/Admin/AdminTeamPage/AdminTeamPage\";\r\nimport NotFoundPage from \"pages/Home/NotFoundPage/NotFoundPage\";\r\nimport AdminRankPage from \"pages/Admin/AdminRankPage/AdminRankPage\";\r\nimport AdminRankDetailPage from \"pages/Admin/AdminRankPage/AdminRankDetailPage\";\r\nimport AdminCouponPage from \"pages/Admin/AdminCouponPage/AdminCouponPage\";\r\nexport const RouterConfig = () => {\r\n\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route exact path={\"/\"} component={HomePage} />\r\n        <Route exact path={ROUTE_FREE_BOOK } component={FreeBookPage} />\r\n        <Route exact path={ROUTE_LOGIN} component={LoginPage} />\r\n        <Route exact path={ROUTE_REGISTER} component={RegisterPage} />\r\n        <Route exact path={ROUTE_FORGOT_PASSWORD} component={ForgotPasswordPage} />\r\n        <Route exact path={ROUTE_CONFIRM_PASSWORD} component={ConfirmPasswordPage} />\r\n        <Route exact path={ROUTE_REWARDS_PLAN} component={RewardsPlanPage} />\r\n        <Route exact path={ROUTE_ABOUT_US} component={AboutUsPage} />\r\n        <Route exact path={ROUTE_SUPPORT} component={SupportPage} />\r\n        <Route exact path={ROUTE_USER_AGREEMENT} component={UserAgreementPage} />\r\n        <Route exact path={ROUTE_TERMS_CONDITIONS} component={TermsConditionsPage} />\r\n        <Route exact path={ROUTE_PRIVACY_POLICY} component={PrivacyPolicyPage} />\r\n        <Route exact path={ROUTE_RISK_WARNING} component={RiskWarningPage} />\r\n        <Route exact path={ROUTE_AFFILIATE_AGREEMENT} component={AffiliateAgreementPage} />\r\n        <Route exact path={ROUTE_INCOME_DISCLAIME} component={IncomeDisclaimerPage} />\r\n        <Route exact path={ROUTE_TRIAL_POLICY} component={TrialPolicyPage} />\r\n        <Route exact path={ROUTE_COMPLIANCE} component={CompliancePage} />\r\n        <Route exact path={ROUTE_WELCOME} component={WelcomePage} />\r\n\r\n        <Route exact path={ROUTE_ADMIN_DASHBOARD} component={AdminDashboardPage} />\r\n        <Route exact path={ROUTE_ADMIN_USERS} component={AdminUsersPage} />\r\n        <Route exact path={ROUTE_ADMIN_LICESES} component={AdminLicensesPage} />\r\n        <Route exact path={ROUTE_ADMIN_PAYMENTS} component={AdminPaymentsPage} />\r\n        <Route exact path={ROUTE_ADMIN_WITHDRAWS} component={AdminWithdrawPage} />\r\n        <Route exact path={ROUTE_ADMIN_TICKET} component={AdminTicketPage} />\r\n        <Route exact path={ROUTE_ADMIN_TICKET_DETAIL} component={AdminDetailTicketPage} />\r\n        <Route exact path={ROUTE_ADMIN_FEED} component={AdminFeedPage} />\r\n        <Route exact path={ROUTE_ADMIN_FEED_DETAIL} component={AdminDetailFeedPage} />\r\n        <Route exact path={ROUTE_ADMIN_ANNOUNCEMENT} component={AdminAnnouncementPage} />\r\n        <Route exact path={ROUTE_ADMIN_PROFILE} component={AdminProfilePage} />\r\n        <Route exact path={ROUTE_ADMIN_STATS} component={AdminStatsPage} />\r\n        <Route exact path={ROUTE_ADMIN_TEAM} component={AdminTeamPage} />\r\n        <Route exact path={ROUTE_ADMIN_TEAM_DETAIL} component={AdminTeamPage} />\r\n        <Route exact path={ROUTE_ADMIN_RANK} component={AdminRankPage} />\r\n        <Route exact path={ROUTE_ADMIN_RANK_DETAIL} component={AdminRankDetailPage} />\r\n        <Route exact path={ROUTE_ADMIN_COUPON} component={AdminCouponPage} />\r\n        \r\n        <UserLayout>\r\n          <Route exact path={ROUTE_USER_FEED} component={UserFeedPage} />\r\n          <Route exact path={ROUTE_USER_SOFTWARE} component={UserSoftwarePage} />\r\n          <Route exact path={ROUTE_USER_DASHBOARD} component={UserDashboardPage} />\r\n          <Route exact path={ROUTE_USER_VPS} component={UserVpsPage} />\r\n          <Route exact path={ROUTE_USER_TEAM} component={UserTeamPage} />\r\n          <Route exact path={ROUTE_USER_TEAM_DETAIL} component={UserTeamPage} />\r\n          <Route exact path={ROUTE_USER_LICENSE} component={UserLicensePage} />\r\n          <Route exact path={ROUTE_USER_ACADEMY} component={UserAcademyPage} />\r\n          <Route exact path={ROUTE_USER_ACADEMY_BASIC + \"/:type\"} component={UserBasicAcademyPage} />\r\n          <Route exact path={ROUTE_USER_ACADEMY_ADVANCED} component={UserAdvancedAcademyPage} />\r\n          <Route exact path={ROUTE_USER_MARKETING} component={UserMarketingPage} />\r\n          <Route exact path={ROUTE_USER_CHART} component={UserChartPage} />\r\n          <Route exact path={ROUTE_USER_WALLET} component={UserWalletPage} />\r\n          <Route exact path={ROUTE_USER_PAYMENT} component={UserPaymentListPage} />\r\n          <Route exact path={ROUTE_USER_AFFILIATE} component={UserAffiliateIntroPage} />\r\n          <Route exact path={ROUTE_USER_TICKET} component={UserTicketPage} />\r\n          <Route exact path={ROUTE_USER_TICKET_ADD} component={UserAddTicketPage} />\r\n          <Route exact path={ROUTE_USER_TICKET_DETAIL} component={UserDetailTicketPage} />\r\n          <Route exact path={ROUTE_USER_SUPPORT} component={UserSupportPage} />  \r\n          <Route exact path={ROUTE_USER_VERIFICATION} component={UserVerificationPage} />  \r\n          <Route exact path={ROUTE_USER_VERIFICATION_CONFIRM} component={UserVerificationPage} />\r\n          <Route exact path={ROUTE_USER_PROFILE} component={UserProfilePage} />          \r\n          <Route exact path={ROUTE_USER_PAY_LICENSE} component={UserPayLicensePage} />\r\n          <Route exact path={ROUTE_USER_PAY_AFFILIATE} component={UserPayAffiliatePage} />\r\n\r\n          {/* <Route exact path=\"\" component={NotFoundPage} /> */}\r\n          \r\n        </UserLayout>\r\n\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\redux\\reducers\\index.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\navigation\\CONSTANTS.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\navigation\\NotFound.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\redux\\actions\\appActions.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\redux\\reducers\\appReducer.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\redux\\reducers\\userReducer.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\redux\\actions\\userActions.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\components\\LinkRoute.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\utils\\GlobalFunctions.js",["2060","2061","2062","2063","2064","2065"],"export const isEmpty = (list, field, errorList) => {\r\n  if (list[field] === undefined || list[field] === null || list[field] === \"\") {\r\n    var res = [...errorList, field];\r\n    return res;\r\n  }\r\n  return errorList;\r\n};\r\n\r\nexport const onlyUnique = (value, index, self) => {\r\n  return self.indexOf(value) === index;\r\n};\r\n\r\nexport const ValidateEmail = (email) => {\r\n  var pattern = new RegExp(\r\n    /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i\r\n  );\r\n  if (!pattern.test(email)) {\r\n    return false;\r\n  } else {\r\n    return true;\r\n  }\r\n};\r\nexport const ValidPhone = (str) => {\r\n  var isphone =\r\n    /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im.test(str);\r\n  return isphone;\r\n};\r\n\r\nexport const get_data_value = (data, field, default_value) => {\r\n  if (is_empty(default_value)) {\r\n    default_value = \"\";\r\n  }\r\n  if (is_empty(data)) {\r\n    return default_value;\r\n  }\r\n  if (is_null(data[field])) {\r\n    return default_value;\r\n  } else {\r\n    return data[field];\r\n  }\r\n};\r\nexport const isJson = (str) => {\r\n  try {\r\n    JSON.parse(str);\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\nexport const is_empty = (value) => {\r\n  if (\r\n    value === undefined ||\r\n    value === null ||\r\n    value === \"\" ||\r\n    value === false\r\n  ) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\nexport const is_null = (value) => {\r\n  if (value === undefined || value === null) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\nexport const isEmptyObject = (obj) => {\r\n  for (var prop in obj) {\r\n    if (obj.hasOwnProperty(prop)) {\r\n      return false;\r\n    }\r\n  }\r\n  return JSON.stringify(obj) === JSON.stringify({});\r\n};\r\nexport const empty = (value) => {\r\n  let res = is_empty(value);\r\n  //return res;\r\n  if (!res) {\r\n    //if value is not empty (res is false)\r\n    if (Array.isArray(value)) {\r\n      return value.length === 0;\r\n    } else if (typeof value === \"object\") {\r\n      return isEmptyObject(value);\r\n    } else {\r\n      return false;\r\n    }\r\n  } else {\r\n    return true;\r\n  }\r\n};\r\nexport const intval = (value) => {\r\n  if (empty(value)) {\r\n    return 0;\r\n  } else {\r\n    let val = parseInt(value);\r\n    return val;\r\n  }\r\n};\r\nexport const priceFormat = (num) => {\r\n  return num.toFixed(2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\r\n};\r\nexport const timeConverter = (UNIX_timestamp, with_ago = false) => {\r\n  var unix = Math.round(Date.now() / 1000);\r\n  //unix = moment().unix();\r\n  //unix = unix - 360;///////////////////////////////\r\n  //console.log('unix timestamp', unix);\r\n  var delta = unix - UNIX_timestamp;\r\n  //console.log('delta', delta);\r\n  if (delta < 0) delta = 0;\r\n\r\n  var time = \"\";\r\n  if (delta < 86400 && with_ago) {\r\n    var hour = Math.floor(delta / 3600);\r\n    delta = delta - hour * 3600;\r\n    var min = Math.floor(delta / 60);\r\n    delta = delta - min * 60;\r\n    if (hour === 0) {\r\n      if (min === 0) {\r\n        time = \"Just now\";\r\n      } else {\r\n        time = min + \"minute\" + (min > 1 ? \"s\" : \"\") + \" ago\";\r\n      }\r\n    } else {\r\n      time = hour + \"hour\" + (hour > 1 ? \"s\" : \"\") + \" ago\";\r\n    }\r\n  } else {\r\n    var a = new Date(UNIX_timestamp * 1000);\r\n    var months = [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n    ];\r\n    var year = a.getFullYear();\r\n    var month = months[a.getMonth()];\r\n    var date = \"0\" + a.getDate();\r\n    var hour = \"0\" + a.getHours();\r\n    var min = \"0\" + a.getMinutes();\r\n    var sec = \"0\" + a.getSeconds();\r\n    //time = date.substr(-2) + ' ' + month + ' ' + year + ' ' + hour.substr(-2) + ':' + min.substr(-2) + ':' + sec.substr(-2) ;\r\n    time =\r\n      date.substr(-2) +\r\n      \" \" +\r\n      month +\r\n      \" \" +\r\n      year +\r\n      \" \" +\r\n      hour.substr(-2) +\r\n      \":\" +\r\n      min.substr(-2);\r\n  }\r\n  return time;\r\n};\r\nexport const toLocalDatetime = (unix_timestamp) => {\r\n  var milliseconds = unix_timestamp * 1000;\r\n  const dateObject = new Date(milliseconds);\r\n  const humanDateFormat = dateObject.toLocaleString(); //2019-12-9 10:30:15\r\n  return humanDateFormat;\r\n};\r\n\r\nexport const toLocalDate = (unix_timestamp) => {\r\n  var milliseconds = unix_timestamp * 1000;\r\n  const dateObject = new Date(milliseconds);\r\n  const humanDateFormat = dateObject.toLocaleDateString(); //2019-12-9 \r\n  return humanDateFormat;\r\n};\r\n\r\nexport const trim_phone = ($num) => {\r\n  $num = $num.replace(\"+\", \"\");\r\n  $num = $num.replace(\"-\", \"\");\r\n  $num = $num.replace(\"_\", \"\");\r\n  $num = $num.replace(\"(\", \"\");\r\n  $num = $num.replace(\")\", \"\");\r\n  $num = $num.replace(\" \", \"\");\r\n  $num = $num.replace(/ /g, \"\");\r\n  return $num;\r\n};\r\nexport const get_phone_number_info = (num, separator) => {\r\n  if (is_null(separator)) {\r\n    separator = \"-\";\r\n  }\r\n  num = trim_phone(num);\r\n  var phone_number = num.slice(-10);\r\n  var prefix = \"\";\r\n  if (num.length > phone_number.length) {\r\n    prefix = num.substring(0, num.length - phone_number.length);\r\n  }\r\n  //console.log('num,,,', num, phone_number, prefix);\r\n  var formatted =\r\n    \"\" +\r\n    phone_number.substring(0, 3) +\r\n    separator +\r\n    phone_number.substring(3, 6) +\r\n    separator +\r\n    phone_number.substring(6, 10);\r\n  return [prefix, formatted];\r\n};\r\nexport const format_phone = (num, separator, with_prefix) => {\r\n  if (is_null(separator)) {\r\n    separator = \"-\";\r\n  }\r\n  if (is_null(with_prefix)) {\r\n    with_prefix = false;\r\n  }\r\n  var obj = get_phone_number_info(num, separator);\r\n  if (with_prefix) {\r\n    return obj[0] + \" \" + obj[1];\r\n  }\r\n  return obj[1];\r\n};\r\nexport const to_array = (obj) => {\r\n  let arr = [];\r\n  for (let key in obj) {\r\n    arr.push(obj[key]);\r\n  }\r\n  return arr;\r\n};\r\nexport const encodeHtmlStr = (str) => {\r\n  return String(str)\r\n    .replace(/&/g, \"&amp;\")\r\n    .replace(/</g, \"&lt;\")\r\n    .replace(/>/g, \"&gt;\")\r\n    .replace(/\"/g, \"&quot;\");\r\n};\r\nexport const get_utc_timestamp = () => {\r\n  let a = 0;\r\n  let timestamp = new Date().getTime();\r\n  a = Math.floor(timestamp / 1000); //a = Math.floor(Date.now() / 1000);\r\n  return a;\r\n};\r\n\r\nexport const curl_post = (path, params, method='post') => {\r\n\r\n  // The rest of this code assumes you are not using a library.\r\n  // It can be made less verbose if you use one.\r\n  const form = document.createElement('form');\r\n  form.method = method;\r\n  form.action = path;\r\n\r\n  for (const key in params) {\r\n    if (params.hasOwnProperty(key)) {\r\n      const hiddenField = document.createElement('input');\r\n      hiddenField.type = 'hidden';\r\n      hiddenField.name = key;\r\n      hiddenField.value = params[key];\r\n\r\n      form.appendChild(hiddenField);\r\n    }\r\n  }\r\n\r\n  document.body.appendChild(form);\r\n  form.submit();\r\n  form.remove()\r\n}\r\n\r\nexport const showToast = (str, type) => {\r\n  window.showToast(str, type);\r\n};\r\nexport const show_dialog = (title, content, d_size) => {\r\n  window.show_dialog(title, content, d_size);\r\n};\r\nexport const isMobile = () => {\r\n  return window.is_mobile();\r\n};\r\nexport const show_loading = (status) => {\r\n  return window.show_loading(status);\r\n};\r\nexport const jQuery = window.jQuery;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\CONSTANTS.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\config\\CONSTANTS.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\ajaxServices.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\commonService.js",[],["2066","2067"],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\layouts\\HomeLayout\\HomeLayout.js",["2068"],"import React, { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./HomeLayout.css\";\r\nimport HomeBottom from \"./Includes/HomeBottom\";\r\nimport HomeChatBox from \"./Includes/HomeChatBox\";\r\nimport HomeFooter from \"./Includes/HomeFooter\";\r\nimport HomeHeader from \"./Includes/HomeHeader\";\r\nimport HomeLoader from \"./Includes/HomeLoader\";\r\nimport HomeNavbar from \"./Includes/HomeNavbar\";\r\n\r\nfunction HomeLayout(props) {\r\n    const appDataStore = useSelector((x) => x.appDataStore);\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n      }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"home-page\">\r\n                <HomeHeader></HomeHeader>\r\n                <HomeLoader></HomeLoader>\r\n                <a href=\"#main\" className=\"btn skip-to-content\">Skip to Content</a>\r\n\r\n                <div className=\"page\" id=\"top\">\r\n                    <HomeNavbar></HomeNavbar>\r\n                    <main id=\"main\" className=\"wow fadeIn\">{props.children}</main>\r\n                </div>\r\n                <HomeFooter></HomeFooter>\r\n                <HomeChatBox></HomeChatBox>\r\n                <HomeBottom></HomeBottom>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default HomeLayout;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\layouts\\HomeLayout\\Includes\\HomeHeader.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\layouts\\HomeLayout\\Includes\\HomeBottom.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\layouts\\HomeLayout\\Includes\\HomeLoader.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\layouts\\HomeLayout\\Includes\\HomeNavbar.js",["2069","2070","2071","2072","2073"],"import {\r\n  ROUTE_REGISTER,\r\n  ROUTE_ROOT,\r\n  ROUTE_USER_DASHBOARD,\r\n} from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { isMobile } from \"utils/GlobalFunctions\";\r\nimport { HOME_MENU_ITEMS } from \"./HomeMenuItems\";\r\n\r\nconst HomeNavbar = () => {\r\n  const appDataStore = useSelector((x) => x.appDataStore);\r\n  let is_mobile = isMobile();\r\n  //console.log(\"is_mobile\", is_mobile);\r\n  return (\r\n    <div>\r\n      <nav className={`main-nav stick-fixed ${is_mobile ? \"mobile-on\" : \"\"}`}>\r\n        <div className=\"full-wrapper relative clearfix\">\r\n          <div className=\"nav-logo-wrap local-scroll\">\r\n            <Link to={ROUTE_ROOT} className=\"logo\">\r\n              <img src=\"/assets/home/images/higherlevelfx_logo_tm.png\" alt=\"\" />\r\n            </Link>\r\n          </div>\r\n          <div\r\n            className=\"mobile-nav\"\r\n            role=\"button\"\r\n            style={{ height: \"75px\", lineHeight: \"75px\", width: \"75px\" }}\r\n          >\r\n            <i className=\"fa fa-bars\"></i>\r\n            <span className=\"sr-only\">Menu</span>\r\n          </div>\r\n          <div className=\"inner-nav desktop-nav\">\r\n            <ul className=\"clearlist local-scroll\">\r\n              {HOME_MENU_ITEMS.map((menuItem, index) => (\r\n                <li key={index}>\r\n                  <Link\r\n                    to={menuItem.route}\r\n                    activeclassname=\"active\"\r\n                    className={`${\r\n                      appDataStore.current_route === menuItem.route\r\n                        ? \"active\"\r\n                        : \"\"\r\n                    }`}\r\n                  >\r\n                    {menuItem.title}\r\n                  </Link>\r\n                </li>\r\n              ))}\r\n\r\n              <li className=\"t-show-desktop\">\r\n                <a href=\"#\">&nbsp;</a>\r\n              </li>\r\n              <li>\r\n                <Link to={ROUTE_REGISTER} activeclassname=\"active\">\r\n                  <span className=\"btn btn-mod btn-circle\">\r\n                    Start Your 7 Day Trial\r\n                  </span>\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeNavbar;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Home\\HomePage\\HomePage.js",["2074","2075","2076","2077"],"// @flow strict\r\n\r\nimport React, { useEffect } from \"react\";\r\nimport ReactTextRotator from \"react-text-rotator\";\r\nimport OwlCarousel from \"react-owl-carousel\";\r\nimport \"owl.carousel/dist/assets/owl.carousel.css\";\r\nimport \"owl.carousel/dist/assets/owl.theme.default.css\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation, withRouter } from \"react-router\";\r\nimport HomeLayout from \"layouts/HomeLayout/HomeLayout\";\r\nimport { ROUTE_REGISTER, ROUTE_ROOT } from \"navigation/CONSTANTS\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { APP_NAME } from \"config/CONSTANTS\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction SubHomePage(props) {\r\n  const content = [\r\n    {\r\n      text: \"GET STARTED NOW FOR $1!\",\r\n      className: \"classA\",\r\n      animation: \"fade\",\r\n    },\r\n    {\r\n      text: \"TRADE ON A HIGHER LEVEL\",\r\n      className: \"classA\",\r\n      animation: \"fade\",\r\n    },\r\n  ];\r\n  const carouselTitle = \"Messages from customers\";\r\n  const carouselItems = [\r\n    {\r\n      title: carouselTitle,\r\n      content:\r\n        \"HLX is the first company I've come across that is truly pushing and striving for the best products on the market. I have no doubt that they will continue to innovate and implement only the highest quality of services to their customers. There are no marketing tactics that try to get people to join, and no fake hype. Probably one of the most transparent companies I've seen.\",\r\n      author: \"Jacob Diamse\",\r\n    },\r\n    {\r\n      title: carouselTitle,\r\n      content:\r\n        \"HigherLevelFX has been an absolute game changer for my trading career. After failing miserably in Forex for a solid 2 1/2 years a buddy introduced me to HFX & I finally became a profitable trader! The education, tools & support I’ve received have been second to none. The value they provide pails in comparison to the monthly membership. They’re always updating, tweaking & refining their process to bring the best in class to the table. And because of this I’ll be a lifelong customer of HFX! Thank you HFX team for everything you do!\",\r\n      author: \"Drew Taylor\",\r\n    },\r\n    {\r\n      title: carouselTitle,\r\n      content:\r\n        \"I have been with HLX and using the Alpha software since the beginning. I am very impressed by their constant evolving tools and services that will definitely keep them on the cutting edge for years to come.  I strongly recommend this company for education and support for those who want to learn and grow in a great Forex community such as HLX. Long live HLX!\",\r\n      author: \"Jason Brus\",\r\n    },\r\n    {\r\n      title: carouselTitle,\r\n      content:\r\n        \"When a friend asked me to join HLX, I was initially very hesitant thinking I would have to undergo the same misfortune I experienced with the previous company I joined in. Several issues were encountered in that company, so it did not last long. The pandemic triggered me to find another source of income hence I decided to join. Fortunately for me, the people behind HLX are so helpful, responsive and are always available to listen to customer's feedback. The company also constantly improves their products and services. With this, I was very glad I got into this since they always put their customers first above anything else. Being with this company has helped me a lot especially during this pandemic. As a result, I also invited my Philippine friends to be part of HLX and just like me, they are also very pleased and satisfied of the products and services.\",\r\n      author: \"Mark Vincent Po\",\r\n    },\r\n    {\r\n      title: carouselTitle,\r\n      content:\r\n        \"I have been part of the HLX family from the beginning and I have to say they are the best. They education system is truly useful and practical, you will find your material whether you are beginner or advanced trader. Thanks to their strategy I understand the market more and I became a better trader overall. They forged their trading strategy into an EA software that is available to try on demo account and it is absolutely mind blowing, best ever! This company really knows what they are doing.\",\r\n      author: \"Gergo Fancsali\",\r\n    },\r\n    {\r\n      title: carouselTitle,\r\n      content:\r\n        \"As an FX trader that’s been with many companies, some good mostly bad…I’ve never been so profitable as I have with this company.  Although you hear it said many times, they are truly the “real deal”. Rest, weary traveler, you’ve finally come to an oasis for prosperity! They more than deserve their praise.  Sign on, and see for yourself!\",\r\n      author: \"Joel Kim\",\r\n    },\r\n  ];\r\n  return (\r\n    <div>\r\n      <div className=\"main-content\">\r\n        <section\r\n          className=\"home-section bg-gray-lighter bg-scroll\"\r\n          data-background=\"/assets/home/images/20210622/hlx_background.jpg?v=1\"\r\n          id=\"home\"\r\n          style={{\r\n            backgroundImage:\r\n              \"url('/assets/home/images/20210622/hlx_background.jpg?v=1')\",\r\n          }}\r\n        >\r\n          <div className=\"js-height-full container-1400\">\r\n            <div className=\"home-content\">\r\n              <div className=\"home-text\">\r\n                <h1 className=\"hs-line-8-1 no-transp mb-50 mb-xs-30 text-black\">\r\n                  A new approach to learning how to trade!\r\n                </h1>\r\n                <h2 className=\"text-fade-slider-box hs-line-14-1 mb-50 mb-xs-30 text-black\">\r\n                  <ReactTextRotator\r\n                    content={content}\r\n                    time={5000}\r\n                    startDelay={10}\r\n                  />\r\n                </h2>\r\n                <div className=\"local-scroll\">\r\n                  <div className=\"container\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-sm-12\">\r\n                        <div className=\"row grid-sm-row\">\r\n                          <div className=\"col-md-12 mt-10 text-center\">\r\n                            <Link\r\n                              to={ROUTE_REGISTER}\r\n                              activeclassname=\"active\"\r\n                              className=\"btn btn-mod btn-border btn-medium btn-round\"\r\n                            >\r\n                              Get started now!\r\n                            </Link>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"local-scroll\">\r\n              <a href=\"#membersihp\" className=\"scroll-down\">\r\n                <i\r\n                  className=\"fa fa-angle-down scroll-down-icon\"\r\n                  aria-hidden=\"true\"\r\n                ></i>\r\n                <span className=\"sr-only\">Scroll to the next section</span>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <section\r\n          className=\"page-section pt-100 pb-100 pt-xs-60 pb-xs-60 bg-white\"\r\n          id=\"membersihp\"\r\n        >\r\n          <div className=\"container-1400 relative\">\r\n            <h2 className=\"section-title font-alt mb-70 mb-sm-40 text-left m-text-center t-show-mobile\">\r\n              Membership\r\n            </h2>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-4 mb-sm-40\">\r\n                <div className=\"work-full-media mt-0 white-shadow wow fadeInDown\">\r\n                  <div className=\"alpha-box block position-relative text-center\">\r\n                    <div className=\"alpha-img-box mb-10\">\r\n                      <img\r\n                        src=\"/assets/home/images/20210314/eagle-logo-membership.jpg\"\r\n                        className=\"width-30\"\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <h4 className=\"text-normal-spacing alpha-title mb-10\">\r\n                      ALPHA GOLD\r\n                    </h4>\r\n                    <div className=\"text-normal-spacing alpha-desc mb-20\">\r\n                      Free VPS\r\n                      <br />\r\n                      Two software licenses\r\n                      <br />\r\n                      Threee Educatoinal Software\r\n                      <br />\r\n                      Basic & Advanced HLX Academy\r\n                      <br />\r\n                    </div>\r\n                    <h3 className=\"text-normal-spacing alpha-price-box mt-20 mb-20\">\r\n                      $159 every 4 weeks\r\n                    </h3>\r\n                    <div className=\"alpha-button-box mb-xs-40\">\r\n                      <div className=\"mt-20 text-normal-spacing\">\r\n                        <Link\r\n                          to={ROUTE_REGISTER}\r\n                          activeclassname=\"active\"\r\n                          className=\"btn btn-mod btn-border btn-round btn-medium\"\r\n                        >\r\n                          Get started now\r\n                        </Link>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-8 col-lg-7 col-lg-offset-1\">\r\n                <h2 className=\"section-title font-alt mb-70 mb-sm-40 text-left m-text-center t-show-desktop\">\r\n                  Membership\r\n                </h2>\r\n                <div className=\"\">\r\n                  <h4 className=\"mb-30 mb-xxs-10 m-text-center text-normal-spacing\">\r\n                    For those looking to elevate their trading experience to the\r\n                    next level:\r\n                  </h4>\r\n                  <ul className=\"text-normal-spacing list-1\">\r\n                    <li>2 Software Licenses</li>\r\n                    <li>\r\n                      Access to Higher Level Academy + Higher Level Advanced\r\n                      Academy\r\n                    </li>\r\n                    <li>\r\n                      HLX Advanced Academy is the perfect place to learn and\r\n                      build a complete understanding of the markets. Designed to\r\n                      maximize your Risk/Reward and precision on the charts. In\r\n                      our opinion, the knowledge you will gain here cannot be\r\n                      found anywhere in the world!\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <hr className=\"mt-0 mb-0\" />\r\n        <section\r\n          className=\"page-section pt-0 pb-0 banner-section bg-dark\"\r\n          data-background=\"/assets/home/images/20210314/picture-higher-level-academy.jpg\"\r\n          style={{\r\n            backgroundImage:\r\n              \"url('/assets/home/images/20210314/picture-higher-level-academy.jpg')\",\r\n          }}\r\n        >\r\n          <div className=\"container relative\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 col-lg-7\">\r\n                <div className=\"mt-80 mb-80\">\r\n                  <div className=\"banner-content\">\r\n                    <h3 className=\"banner-heading font-alt\">\r\n                      Higher Level Academy\r\n                    </h3>\r\n                    <div className=\"banner-decription text-normal-spacing\">\r\n                      Forex education like never seen before. We take you deep\r\n                      into the world of technical analysis. Showing you step by\r\n                      step how to analyze and break down the markets. Taking you\r\n                      from a complete beginner to understanding high Risk/Reward\r\n                      entries with precision. This could change your life!\r\n                    </div>\r\n                    <div className=\"local-scroll\">\r\n                      <Link\r\n                        to={ROUTE_REGISTER}\r\n                        activeclassname=\"active\"\r\n                        className=\"btn btn-mod btn-w btn-medium btn-round\"\r\n                      >\r\n                        Get started now\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-1\"></div>\r\n              <div className=\"col-md-4 col-lg-4 banner-image img-box wow fadeInDown\">\r\n                <img\r\n                  src=\"/assets/home/images/20210314/higherlevel-academy.png\"\r\n                  className=\"width-80\"\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <div className=\"divider-box\"></div>\r\n        <section\r\n          className=\"page-section pt-0 pb-0 banner-section bg-dark\"\r\n          data-background=\"/assets/home/images/20210314/picture-alpha.jpg\"\r\n          style={{\r\n            backgroundImage:\r\n              \"url('/assets/home/images/20210314/picture-alpha.jpg')\",\r\n          }}\r\n        >\r\n          <div className=\"container relative\">\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-4 wow fadeInDown\">\r\n                <div className=\"banner-image-box-1 img-box\">\r\n                  <img\r\n                    src=\"/assets/home/images/20210314/alpha.png\"\r\n                    className=\"width-80 mt-xs-80\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-8 col-lg-7 col-lg-offset-1\">\r\n                <div className=\"mt-80 mb-80\">\r\n                  <div className=\"banner-content\">\r\n                    <h3 className=\"banner-heading font-alt text-right m-text-center\">\r\n                      Alpha 2.5\r\n                    </h3>\r\n                    <div className=\"banner-decription text-normal-spacing\">\r\n                      Cutting-edge training software. Engineered for precision!\r\n                      The only software you will ever need to become a better\r\n                      trader. Imagine being able to look over the shoulder of a\r\n                      professional trader as they make real-time trades. We've\r\n                      developed a software that can be loaded on a demo account\r\n                      for you to monitor and see simulated trading in action.\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <div className=\"divider-box\"></div>\r\n        <section\r\n          className=\"page-section pt-0 pb-0 banner-section bg-white\"\r\n          data-background=\"/assets/home/images/20210410/bg1.jpg\"\r\n          style={{\r\n            backgroundImage: \"url('/assets/home/images/20210410/bg1.jpg')\",\r\n          }}\r\n        >\r\n          <div className=\"container relative\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 col-lg-7\">\r\n                <div className=\"mt-80 mb-80\">\r\n                  <div className=\"banner-content\">\r\n                    <h3 className=\"banner-heading font-alt text-black\">\r\n                      Alpha GR\r\n                    </h3>\r\n                    <div className=\"banner-decription text-normal-spacing text-black\">\r\n                      Alpha GR analyzes the market 24/5. There is no fixed\r\n                      algorithm as its strategy. It's always changing based upon\r\n                      historical patterns in the gathered data.\r\n                    </div>\r\n                    <div className=\"banner-decription text-normal-spacing text-black\">\r\n                      It teaches you how to use stop losses like a pro, how to\r\n                      use pending orders, and leverage smart hedging.\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-1\"></div>\r\n              <div className=\"col-md-4 col-lg-4 banner-image banner-image-alpha-gr img-box wow fadeInDown\">\r\n                <img\r\n                  src=\"/assets/home/images/20210410/alpha-gr.png\"\r\n                  className=\"width-80\"\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <div className=\"divider-box t-show-desktop\"></div>\r\n        <section\r\n          className=\"page-section pt-0 pb-0 banner-section bg-white\"\r\n          data-background=\"/assets/home/images/20210420/white.jpg?v=1\"\r\n          style={{\r\n            backgroundImage:\r\n              \"url('/assets/home/images/20210420/white.jpg?v=1')\",\r\n          }}\r\n        >\r\n          <div className=\"container relative\">\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-4 wow fadeInLeft\">\r\n                <div className=\"banner-image-box-1 img-box\">\r\n                  <img\r\n                    src=\"/assets/home/images/20210420/8.png\"\r\n                    className=\"width-80 mt-xs-80\"\r\n                    style={{ bottom: \"0\" }}\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-8 col-lg-7 col-lg-offset-1\">\r\n                <div className=\"mt-60 mb-60\">\r\n                  <div className=\"banner-content\">\r\n                    <h3 className=\"banner-heading font-alt text-right m-text-center text-black\">\r\n                      Alpha GO\r\n                    </h3>\r\n                    <div className=\"banner-decription text-normal-spacing text-black\">\r\n                      <p className=\"mb-20\">\r\n                        The reason it’s called Alpha GO is that you can learn\r\n                        with it while “On the GO” without needing to be around\r\n                        your VPS.\r\n                      </p>\r\n                      <p className=\"mb-20\">\r\n                        Alpha GO is an educational tool that teaches you how to\r\n                        turn a bad trade around. It only handles your manual\r\n                        trades on your demo account if they start going in the\r\n                        wrong direction based on the way you placed your trades.\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <div className=\"divider-box hidden\"></div>\r\n        <section\r\n          className=\"hidden page-section pt-0 pb-0 banner-section bg-dark\"\r\n          data-background=\"/assets/home/images/20210314/picture-live-trading.jpg\"\r\n          style={{\r\n            backgroundImage:\r\n              \"url('/assets/home/images/20210314/picture-live-trading.jpg')\",\r\n          }}\r\n        >\r\n          <div className=\"container relative\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <div className=\"mt-80 mb-80\">\r\n                  <div className=\"banner-content\">\r\n                    <h3 className=\"banner-heading font-alt text-center mb-60\">\r\n                      LIVE TRADING SESSIONS\r\n                    </h3>\r\n                    <div className=\"banner-decription text-normal-spacing text-center\">\r\n                      This is the go-to place to experience the excitement of\r\n                      the\r\n                      <br /> FX market week in week out. With in-depth market\r\n                      analysis, breakdowns &amp; discussions.\r\n                      <br />\r\n                      Giving a complete insight into what it takes to trade at a\r\n                      world-className level.\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <div className=\"divider-box\"></div>\r\n        <section className=\"page-section pt-0 pb-0 banner-section bg-dark\">\r\n          <div className=\"container relative\">\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-4 wow fadeInLeft\">\r\n                <div className=\"block mt-20 mt-xs-80 img-box text-left m-text-center\">\r\n                  <img\r\n                    src=\"/assets/home/images/20210314/hlx-application.png\"\r\n                    className=\"width-80\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-8 col-lg-7 col-lg-offset-1\">\r\n                <div className=\"mt-60 mb-60\">\r\n                  <div className=\"banner-content\">\r\n                    <h3 className=\"banner-heading font-alt text-left m-text-center\">\r\n                      HLX Trade Alerts App (coming soon!)\r\n                    </h3>\r\n                    <div className=\"banner-decription text-normal-spacing\">\r\n                      <ul className=\"mt-40 list-1 m-text-left\">\r\n                        <li>\r\n                          This is a completely independent full-on platform used\r\n                          to breakdown trades without needing your MT4!\r\n                        </li>\r\n                        <li>\r\n                          Let us scan the market EVERY SECOND for you and send\r\n                          you the most accurate trade alerts!\r\n                        </li>\r\n                        <li>You also get Live charts and Forex Calculators!</li>\r\n                        <li>\r\n                          Integrated Economic Calendar to keep you informed!\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <div className=\"divider-box\"></div>\r\n        <section\r\n          className=\"page-section pt-0 pb-0 banner-section bg-white\"\r\n          data-background=\"/assets/home/images/20210314/picture-affiliate.jpg\"\r\n          style={{\r\n            backgroundImage:\r\n              \"url('/assets/home/images/20210314/picture-affiliate.jpg')\",\r\n          }}\r\n        >\r\n          <div className=\"container relative\">\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-4 wow fadeInLeft animated\">\r\n                <div className=\"block img-box mt-50 mt-50 mt-xs-80 text-left m-text-center\">\r\n                  <img\r\n                    src=\"/assets/home/images/20210314/affiliate.png\"\r\n                    className=\"width-80\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-8 col-lg-7 col-lg-offset-1\">\r\n                <div className=\"mt-60 mb-120 mb-xs-60\">\r\n                  <div className=\"banner-content\">\r\n                    <h3 className=\"banner-heading text-black font-alt text-right m-text-center\">\r\n                      Affiliate Package\r\n                    </h3>\r\n                    <div className=\"banner-heading text-black text-normal-spacing text-left m-text-center\">\r\n                      What's inside the affiliate package?\r\n                    </div>\r\n                    <div className=\"banner-decription text-black text-normal-spacing\">\r\n                      <ul className=\"mt-40 list-1 m-text-left\">\r\n                        <li>Enhanced Backoffice!</li>\r\n                        <li>Dedicated VIP Support Team!</li>\r\n                        <li>Access to Our Rewards Plan!</li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <div className=\"divider-box\"></div>\r\n\r\n        <section\r\n          className=\"page-section bg-dark bg-dark-alfa-95\"\r\n          data-background=\"/assets/home/images/20210314/map.jpg\"\r\n          style={{\r\n            backgroundImage: \"url('/assets/home/images/20210314/map.jpg')\",\r\n            opacity: \"1\",\r\n            display: \"block\",\r\n          }}\r\n        >\r\n          <OwlCarousel\r\n            className=\"owl-theme\"\r\n            loop={true}\r\n            margin={10}\r\n            nav={true}\r\n            autoplay={true}\r\n            lazyLoad={true}\r\n            items={1}\r\n          >\r\n            {carouselItems.map((item, index) => (\r\n              <div className=\"item\" key={index}>\r\n                <div className=\"container relative\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-12 align-center\">\r\n                      <h4 className=\"small-title font-alt\">{item.title}</h4>\r\n                      <div className=\"lead\">\r\n                        <i className=\"fa fa-star\"></i>\r\n                        <i className=\"fa fa-star\"></i>\r\n                        <i className=\"fa fa-star\"></i>\r\n                        <i className=\"fa fa-star\"></i>\r\n                        <i className=\"fa fa-star\"></i>\r\n                      </div>\r\n                      <blockquote className=\"blockquote testimonial white mt-3\">\r\n                        <p>{item.content}</p>\r\n                        <footer className=\"testimonial-author blockquote-footer\">\r\n                          {item.author}\r\n                        </footer>\r\n                      </blockquote>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </OwlCarousel>\r\n        </section>\r\n\r\n        <section className=\"page-section bg-white pt-40 pb-40\">\r\n          <div className=\"container relative\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 align-center\">\r\n                <h5 className=\"text-normal-spacing mb-40 mb-xs-20\">\r\n                  We know that once you see what we have to offer and experience\r\n                  it hands-on, you are going to want to continue your growth\r\n                  with us! If for any reason you decide that it isn't for you,\r\n                  cancel anytime!\r\n                  <br /> No questions asked!\r\n                </h5>\r\n                <div className=\"divider-half-1\"></div>\r\n                <h5 className=\"text-normal-spacing mt-40 mb-10 mb-xs-20\">\r\n                  <span className=\"text-green text-underline\">\r\n                    *Upgrade Notice\r\n                  </span>\r\n                  : If membership isn't cancelled within the 7-day trial it will\r\n                  automatically go to a normal membership and begin being\r\n                  charged $159 per month.\r\n                </h5>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nfunction HomePage(props) {\r\n  const dispatch = useDispatch();\r\n  const initPage = () => {\r\n    let page_title = \"Home\";\r\n    dispatch(\r\n      UpdateAppData({\r\n        currentPageTitle: page_title,\r\n        current_route: ROUTE_ROOT,\r\n      })\r\n    );\r\n    //document.title = page_title;\r\n  };\r\n\r\n  useEffect(() => {\r\n    initPage();\r\n  });\r\n  return (\r\n    <div>\r\n      <HomeLayout>\r\n        <SubHomePage></SubHomePage>\r\n      </HomeLayout>\r\n    </div>\r\n  );\r\n}\r\nexport default HomePage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Home\\FreeBookPage\\FreeBookPage.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\layouts\\HomeLayout\\Includes\\HomeChatBox.js",["2078","2079","2080"],"import React, { useState } from \"react\";\r\nimport { apiGuestCreatTicket, apiGuestNewTicket } from \"services/loginService\";\r\nimport { isEmpty, showToast, show_loading } from \"utils/GlobalFunctions\";\r\nconst HomeChatBox = () => {\r\n  const initialPageData = {\r\n    email: \"\",\r\n    subject: \"\",\r\n    description: \"\",\r\n  };\r\n  const [pageData, setPageData] = useState(initialPageData);\r\n  const [errorField, setErrorField] = useState([]);\r\n\r\n  const validateFields = () => {\r\n    var errorList = Array();\r\n    errorList = isEmpty(pageData, \"email\", errorList);\r\n    errorList = isEmpty(pageData, \"subject\", errorList);\r\n    setErrorField([...errorList]);\r\n    return errorList.length > 0 ? false : true;\r\n  };\r\n  const onChangeFormField = (e, field_name) => {\r\n    if (errorField.includes(field_name)) {\r\n      let errors = errorField.filter((x) => x != field_name);\r\n      setErrorField([...errors]);\r\n    }\r\n    let updateData = {};\r\n    updateData[field_name] = e.target.value;\r\n    setPageData({...pageData, ...updateData });\r\n  };\r\n  const onClickSend = () => {\r\n    let is_valid = validateFields();\r\n    console.log(\"is valid\", is_valid);\r\n    if (is_valid) {\r\n      show_loading(true);\r\n      apiGuestNewTicket(pageData)\r\n        .then((api_res) => {\r\n          show_loading(false)\r\n          console.log(\"api_res\", api_res);\r\n          if (api_res.status === \"1\") {\r\n            showToast(api_res.message, \"success\");\r\n            setPageData({...initialPageData});\r\n          } else {\r\n            show_loading(false);\r\n            showToast(api_res.message, \"error\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          show_loading(false);\r\n          showToast(err, \"error\");\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"chat-box-wrapper closed\">\r\n        <div id=\"app-minimized-wrapper\">\r\n          <span  id=\"maximumBtn\" className=\"a-btn btn-u rounded-4x\">\r\n            {/* <span className=\"unread-message-badge\"></span> */}\r\n            <i className=\"fa fa-commenting-o\"></i>\r\n          </span>\r\n        </div>\r\n        <div id=\"app-wrapper\" className=\"hidden\">\r\n          <div className=\"position-right style-light\" id=\"app-inner-wrapper\">\r\n            <div className=\"wrapper wrapper--bubble wrapper--hidden wrapper--standalone wrapper--desktop wrapper--rightEdge\">\r\n              <div className=\"contact-info-container\">\r\n                <div className=\"header\">\r\n                  <div className=\"header__innerContainer\">\r\n                    <div className=\"header__content\">\r\n                      <span className=\"header__minimize\"></span>\r\n                      <span>Submit a Ticket</span>\r\n                      <button\r\n                        className=\"header__minimize minimizeBtn a-btn\"\r\n                        type=\"button\"\r\n                      >\r\n                        <svg\r\n                          className=\"minimize__icon\"\r\n                          width=\"14px\"\r\n                          height=\"14px\"\r\n                          viewBox=\"0 0 14 14\"\r\n                          version=\"1.1\"\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                          data-svgreactloader='[[\"http://www.w3.org/2000/svg\",\"xlink\",\"http://www.w3.org/1999/xlink\"]]'\r\n                          xlink=\"http://www.w3.org/1999/xlink\"\r\n                        >\r\n                          <title>Shape</title>\r\n                          <desc>Created with Sketch.</desc>\r\n                          <defs></defs>\r\n                          <g\r\n                            id=\"Page-1\"\r\n                            stroke=\"none\"\r\n                            strokeWidth=\"1\"\r\n                            fill=\"none\"\r\n                            fillRule=\"evenodd\"\r\n                          >\r\n                            <g\r\n                              className=\"xShape\"\r\n                              id=\"Artboard-Copy-3\"\r\n                              transform=\"translate(-1066.000000, -216.000000)\"\r\n                              fill=\"#FFFFFF\"\r\n                            >\r\n                              <g\r\n                                id=\"Group-2\"\r\n                                transform=\"translate(798.000000, 198.000000)\"\r\n                              >\r\n                                <polygon\r\n                                  id=\"Shape\"\r\n                                  points=\"282 19.41 280.59 18 275 23.59 269.41 18 268 19.41 273.59 25 268 30.59 269.41 32 275 26.41 280.59 32 282 30.59 276.41 25\"\r\n                                ></polygon>\r\n                              </g>\r\n                            </g>\r\n                          </g>\r\n                        </svg>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"contact-body\">\r\n                  <div className=\"contact-body--maximized\">\r\n                    <div className=\"body__innerContainer\">\r\n                      <div className=\"body__contentInnerWrapper\">\r\n                        <div className=\"body__content body__content--online\">\r\n                          <div className=\"body__content__innerContainer\">\r\n                            <div className=\"body__content__messageListWrapper\">\r\n                              <div className=\"body__content__messageList messageList\">\r\n                                <div className=\"messageBanner messageBanner--padding\">\r\n                                  <div className=\"messageBanner__innerContainer\">\r\n                                    <img\r\n                                      className=\"messageBanner__imageContent\"\r\n                                      alt=\"\"\r\n                                      src=\"/assets/home/images/higherlevelfx_logo_tm.png\"\r\n                                    />\r\n                                    <h3 className=\"messageBanner__header\">\r\n                                      Need help? You can ask us anything! <br />\r\n                                      You must be a registered member!\r\n                                    </h3>\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"messageGroup\">\r\n                                  <div className=\"form form--rounded form--unanswered chatting-box-form\">\r\n                                    <div className=\"message__innerContainer message__innerContainer--rounded\">\r\n                                      <div className=\"form-fields-wrapper\">\r\n                                        <div\r\n                                          className={`form__field formField ${\r\n                                            errorField.includes(\"email\")\r\n                                              ? \"formField--errored\"\r\n                                              : \"\"\r\n                                          }`}\r\n                                        >\r\n                                          <label className=\"formField__label\">\r\n                                            E-mail:\r\n                                            <span className=\"required\">\r\n                                              &nbsp;*\r\n                                            </span>\r\n                                          </label>\r\n                                          <input\r\n                                            type=\"email\"\r\n                                            name=\"email\"\r\n                                            required=\"\"\r\n                                            id=\"email\"\r\n                                            className={`formField__input`}\r\n                                            placeholder=\"Username or Email\"\r\n                                            value={pageData[\"email\"]}\r\n                                            onChange={(e) => {\r\n                                              onChangeFormField(e, \"email\");\r\n                                            }}\r\n                                          />\r\n                                        </div>\r\n                                        <div\r\n                                          className={`form__field formField ${\r\n                                            errorField.includes(\"subject\")\r\n                                              ? \"formField--errored\"\r\n                                              : \"\"\r\n                                          }`}\r\n                                        >\r\n                                          <label className=\"formField__label\">\r\n                                            Subject:\r\n                                            <span className=\"required\">\r\n                                              &nbsp;*\r\n                                            </span>\r\n                                          </label>\r\n                                          <input\r\n                                            type=\"text\"\r\n                                            className=\"formField__input\"\r\n                                            name=\"subject\"\r\n                                            required=\"\"\r\n                                            id=\"subject\"\r\n                                            value={pageData[\"subject\"]}\r\n                                            onChange={(e) => {\r\n                                              onChangeFormField(e, \"subject\");\r\n                                            }}\r\n                                          />\r\n                                        </div>\r\n                                        <div\r\n                                          className={`form__field formField`}\r\n                                        >\r\n                                          <label className=\"formField__label\">\r\n                                            Description\r\n                                          </label>\r\n                                          <textarea\r\n                                            className=\"formField__input\"\r\n                                            name=\"description\"\r\n                                            id=\"description\"\r\n                                            rows=\"4\"\r\n                                            value={pageData[\"description\"]}\r\n                                            onChange={(e) => {\r\n                                              onChangeFormField(\r\n                                                e,\r\n                                                \"description\"\r\n                                              );\r\n                                            }}\r\n                                            style={{ resize: \"none\" }}\r\n                                          ></textarea>\r\n                                        </div>\r\n                                      </div>\r\n                                      <button\r\n                                        id=\"submit-contact-info\"\r\n                                        className=\"message__button validate-loading-btn\"\r\n                                        type=\"button\"\r\n                                        onClick={(e) => {\r\n                                          onClickSend();\r\n                                        }}\r\n                                      >\r\n                                        <i className=\"fa fa-spin fa-spinner fa fa-white\"></i>\r\n                                        <span>Submit</span>\r\n                                      </button>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeChatBox;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\layouts\\UserLayout\\UserLayout.js",["2081","2082"],"import { ROUTE_LOGIN, ROUTE_USER_FEED } from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { empty, get_data_value, is_empty } from \"utils/GlobalFunctions\";\r\nimport UserFooter from \"./Includes/UserFooter\";\r\nimport UserHeader from \"./Includes/UserHeader\";\r\nimport UserLoader from \"./Includes/UserLoader\";\r\nimport UserSidebar from \"./Includes/UserSidebar\";\r\nimport \"./UserLayout.css\";\r\n\r\nimport { SOCKET_SERVER_URL } from \"config/CONSTANTS\";\r\nimport io from \"socket.io-client\";\r\nimport { updateSocket } from \"redux/actions/socketActions\";\r\nimport Marquee from \"react-fast-marquee\";\r\nimport ConfirmLogoutModal from \"components/ConfirmLogoutModal/ConfirmLogoutModal\";\r\n\r\nconst UserLayout = (props) => {\r\n  //console.log('props', props);\r\n  const dispatch = useDispatch();\r\n\r\n  const appDataStore = useSelector((x) => x.appDataStore);\r\n  const userDataStore = useSelector((x) => x.userDataStore);\r\n  const socketStore = useSelector((x) => x.socketStore);\r\n  //console.log(\"socketStore\", socketStore);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  ///////////////////////////////////socket part///////////////////////////////////////////\r\n  const token = get_data_value(userDataStore, \"token\");\r\n  const socketHeader = { token: token };\r\n\r\n  useEffect(() => {\r\n    if (!empty(token)) {\r\n      const socket = io(SOCKET_SERVER_URL);\r\n\r\n      socket.on(\"connnection\", () => {\r\n        console.log(\"-------------connected to server---------------\");\r\n      });\r\n      addSocketListener(socket);\r\n      getUserNotificationData(socket);\r\n      socket.on(\"disconnect\", () => {\r\n        console.log(\"---------------Socket disconnecting-------------------\");\r\n        // dispatch(\r\n        //   updateSocket({\r\n        //     socket: null,\r\n        //   })\r\n        // );\r\n      });\r\n\r\n      dispatch(\r\n        updateSocket({\r\n          socket: socket,\r\n        })\r\n      );\r\n      return () => socket.close();\r\n    } else {\r\n      return () => false;\r\n    }\r\n  }, []);\r\n\r\n  const addSocketListener = (socket) => {\r\n    socket.off(\"get_user_notification_data\");\r\n    socket.on(\"get_user_notification_data\", (data) => {\r\n      console.log(\"-------------get_user_notification_data---------\", data);\r\n      dispatch(\r\n        updateSocket({\r\n          user_notification_data: data,\r\n        })\r\n      );\r\n      dispatch(\r\n        UpdateAppData({\r\n          license_cancelled_message: data[\"license_cancelled_message\"],\r\n        })\r\n      );\r\n    });\r\n\r\n    socket.off(\"submit_feed_item\");\r\n    socket.on(\"submit_feed_item\", (data) => {\r\n      console.log('---------on submit_feed_item--------------')\r\n      socket.emit(\"get_user_notification_data\", { ...socketHeader });\r\n      if(appDataStore.current_route === ROUTE_USER_FEED) {\r\n        socket.emit(\"get_feed_list\", { ...socketHeader, last_id: 0 });\r\n      }\r\n    });\r\n  };\r\n  const getUserNotificationData = (socket) => {\r\n    socket.emit(\"get_user_notification_data\", { ...socketHeader });\r\n  };\r\n  ///////////////////////////////////end socket part///////////////////////////////////////////\r\n\r\n  const [showConfirmLogoutModal, setShowConfirmLogoutModal] = useState(false);\r\n  const askLogout = () => {\r\n    console.log(\"ask logout\");\r\n    setShowConfirmLogoutModal(true);\r\n  };\r\n\r\n  const doLogout = () => {\r\n    console.log(\"logout\");\r\n    setShowConfirmLogoutModal(false);\r\n    history.push(ROUTE_LOGIN);\r\n  };\r\n\r\n  const checkLogin = () => {\r\n    let token = get_data_value(userDataStore, \"token\");\r\n    return !is_empty(token); //if valid token then true else false\r\n  };\r\n\r\n  if (!checkLogin()) {\r\n    return <Redirect to={ROUTE_LOGIN} />;\r\n  }\r\n  return (\r\n    <div>\r\n      <div\r\n        className={`user-page ${\r\n          appDataStore.user_menu_collapsed ? \"sidebar-icon-only\" : \"\"\r\n        } ${\r\n          !empty(appDataStore.license_cancelled_message) ? \"has-top-banner\" : \"\"\r\n        }`}\r\n      >\r\n        <div className=\"top-banner-bar notify-danger\">\r\n          <div className=\"t-show-mobile\">\r\n            <Marquee gradient={false}>{appDataStore.license_cancelled_message}</Marquee>\r\n          </div>\r\n          <div className=\"text-emphasis t-show-desktop\">\r\n            {appDataStore.license_cancelled_message}\r\n          </div>\r\n        </div>\r\n\r\n        <UserLoader></UserLoader>\r\n        <div className=\"container-scroller\">\r\n          <UserSidebar askLogout={askLogout}></UserSidebar>\r\n          <div className=\"container-fluid page-body-wrapper\">\r\n            <UserHeader askLogout={askLogout}></UserHeader>\r\n            <div className=\"main-panel\">\r\n              <div className=\"content-wrapper\">\r\n                <div>{props.children}</div>\r\n              </div>\r\n              <UserFooter></UserFooter>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <ConfirmLogoutModal\r\n          onClickYes={doLogout}\r\n          visibleModal={showConfirmLogoutModal}\r\n          setVisibleModal={setShowConfirmLogoutModal}\r\n          modalClass=\"user-page confirm-modal\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default UserLayout;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\layouts\\UserLayout\\Includes\\UserHeader.js",["2083","2084","2085","2086","2087","2088","2089","2090","2091","2092"],"import {\r\n  ROUTE_LOGIN,\r\n  ROUTE_USER_LOGOUT,\r\n  ROUTE_USER_PROFILE,\r\n  ROUTE_USER_TICKET_DETAIL,\r\n} from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useHistory, withRouter } from \"react-router-dom\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport {\r\n  empty,\r\n  get_data_value,\r\n  intval,\r\n  is_empty,\r\n  showToast,\r\n  show_dialog,\r\n} from \"utils/GlobalFunctions\";\r\n\r\nconst UserHeader = (props) => {\r\n  const { askLogout } = props;\r\n  //console.log('socket',socket)\r\n  const appDataStore = useSelector((x) => x.appDataStore);\r\n  const userDataStore = useSelector((x) => x.userDataStore);\r\n\r\n  //////////////////////////socket part////////////////////////////////\r\n  const socketStore = useSelector((x) => x.socketStore);\r\n  const socket = socketStore[\"socket\"];\r\n  const user_notification_data = socketStore[\"user_notification_data\"];\r\n  useEffect(() => {\r\n    if (!empty(user_notification_data)) {\r\n      console.log(\r\n        \"------------socketStore(UserHeader page)---------------\",\r\n        user_notification_data\r\n      );\r\n      //addSocketListener();\r\n      //getFeedList();\r\n    }\r\n  }, [user_notification_data]);\r\n\r\n  const token = get_data_value(userDataStore, \"token\");\r\n  const socketHeader = { token: token };\r\n  ///////////////////////////end socket part/////////////////////////////\r\n\r\n  const dispatch = useDispatch();\r\n  const toggleUserSideBar = () => {\r\n    dispatch(\r\n      UpdateAppData({\r\n        user_menu_collapsed: appDataStore.user_menu_collapsed ? false : true,\r\n      })\r\n    );\r\n  };\r\n  const toggleMUserSideBar = () => {\r\n    console.log(\"m_user_menu_collapsed\");\r\n    dispatch(\r\n      UpdateAppData({\r\n        m_user_menu_collapsed: appDataStore.m_user_menu_collapsed\r\n          ? false\r\n          : true,\r\n      })\r\n    );\r\n  };\r\n  const history = useHistory();\r\n  const onLogout = () => {\r\n    askLogout()\r\n  };\r\n\r\n  const sendData = () => {\r\n    console.log(\"send data\");\r\n    //socket.emit(\"chat\", \"my chart messsage\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar p-0 d-flex flex-row\">\r\n        <div className=\"navbar-menu-wrapper d-flex align-items-center\">\r\n          <button\r\n            className=\"navbar-toggler navbar-toggler align-self-center\"\r\n            type=\"button\"\r\n            data-toggle=\"minimize\"\r\n            onClick={toggleUserSideBar}\r\n          >\r\n            <span className=\"ti-align-left\"></span>\r\n          </button>\r\n          <div className=\"navbar-brand-wrapper d-flex align-items-center justify-content-center\">\r\n            <span className=\"navbar-brand brand-logo\">\r\n              {appDataStore.currentPageTitle}\r\n            </span>\r\n            <span className=\"navbar-brand brand-logo-mini\">HLX</span>\r\n          </div>\r\n          <ul className=\"navbar-nav navbar-nav-right ml-auto\">\r\n            {/* <li className=\"hidden nav-item nav-search d-none d-sm-flex\">\r\n              <div className=\"nav-link d-flex justify-content-center align-items-center\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control hidden\"\r\n                  id=\"search-field\"\r\n                  placeholder=\"Search...\"\r\n                />\r\n                <i className=\"ti-search mx-0\" id=\"search-icon\"></i>\r\n              </div>\r\n            </li> */}\r\n            <li className=\"nav-item dropdown\">\r\n              <button\r\n                className=\"a-btn nav-link count-indicator dropdown-toggle d-flex justify-content-center align-items-center\"\r\n                id=\"messageDropdown\"\r\n                data-toggle=\"dropdown\"\r\n              >\r\n                <i className=\"ti-comment mx-0\"></i>\r\n                <span className=\"notification-count badge badge-pill badge-primary\">\r\n                  {!empty(user_notification_data) &&\r\n                  !empty(user_notification_data[\"unread_ticket_list\"])\r\n                    ? (user_notification_data[\"unread_ticket_list\"].length > 10 ? \"10+\" : user_notification_data[\"unread_ticket_list\"].length)\r\n                    : \"\"}\r\n                </span>\r\n              </button>\r\n              <div\r\n                className=\"dropdown-menu dropdown-menu-right navbar-dropdown preview-list\"\r\n                aria-labelledby=\"messageDropdown\"\r\n              >\r\n                <p className=\"mb-0 font-weight-normal float-left dropdown-header hidden\">\r\n                  Tickets\r\n                </p>\r\n                <div className=\"notification-list custom-scroller\">\r\n                  {!empty(user_notification_data) &&\r\n                    !empty(user_notification_data[\"unread_ticket_list\"]) &&\r\n                    user_notification_data[\"unread_ticket_list\"].map(\r\n                      (item, index) => (\r\n                        <Link\r\n                          className=\"notification-item dropdown-item preview-item\"\r\n                          to={`/user/ticket/detail/${item[\"id\"]}`}\r\n                          key={item[\"id\"]}\r\n                        >\r\n                          <div className=\"preview-item-content flex-grow\">\r\n                            <h5 className=\"notification-content text-emphasis preview-subject font-weight-normal\">\r\n                              {item[\"title\"]}\r\n                            </h5>\r\n                            <p className=\"notification-content text-emphasis font-weight-light small-text text-white-80 mb-0\">\r\n                              {item[\"msg_info\"][\"message\"]}\r\n                            </p>\r\n                          </div>\r\n                        </Link>\r\n                      )\r\n                    )}\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li className=\"nav-item nav-profile dropdown\">\r\n              <button\r\n                className=\"a-btn nav-link\"\r\n                data-toggle=\"dropdown\"\r\n                id=\"profileDropdown\"\r\n              >\r\n                <span className=\"hi-text\">Hi, {userDataStore.user_name}</span>\r\n                &nbsp; &nbsp;\r\n                <img\r\n                  src={`/assets/global/img/${\r\n                    intval(userDataStore[\"status\"]) === 1 &&\r\n                    intval(userDataStore[\"is_paid\"]) === 1 &&\r\n                    intval(userDataStore[\"is_active\"]) === 1\r\n                      ? intval(userDataStore[\"user_type\"]) === 0\r\n                        ? \"default-avatar-1.png\"\r\n                        : \"default-avatar-3.png\"\r\n                      : \"default-avatar.png\"\r\n                  }`}\r\n                  alt=\"profile\"\r\n                />\r\n              </button>\r\n              <div\r\n                className=\"dropdown-menu dropdown-menu-right navbar-dropdown\"\r\n                aria-labelledby=\"profileDropdown\"\r\n              >\r\n                <Link className=\"dropdown-item\" to={ROUTE_USER_PROFILE}>\r\n                  <i className=\"ti-user text-primary\"></i>\r\n                  Profile\r\n                </Link>\r\n                <button\r\n                  className=\"a-btn dropdown-item btn-logout\"\r\n                  to={ROUTE_USER_LOGOUT}\r\n                  title=\"logout\"\r\n                  onClick={onLogout}\r\n                >\r\n                  <i className=\"ti-new-window text-primary\"></i>\r\n                  Logout\r\n                </button>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n          <button\r\n            className=\"navbar-toggler navbar-toggler-right d-lg-none align-self-center m-btn-toggle-sidebar\"\r\n            type=\"button\"\r\n            data-toggle=\"offcanvas\"\r\n            onClick={toggleMUserSideBar}\r\n          >\r\n            <span className=\"ti-menu\"></span>\r\n          </button>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(UserHeader);\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\layouts\\UserLayout\\Includes\\UserSidebar.js",["2093","2094","2095","2096","2097"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { USER_MENU_ITEMS } from \"./UserMenuItems\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport {\r\n  USER_LEVEL_AFFILIATE,\r\n  USER_LEVEL_ALL,\r\n  USER_LEVEL_CUSTOMER,\r\n} from \"navigation/CONSTANTS\";\r\nimport { empty, get_data_value } from \"utils/GlobalFunctions\";\r\n\r\nconst UserSidebar = (props) => {\r\n  const { askLogout } = props;\r\n  const appDataStore = useSelector((x) => x.appDataStore);\r\n  const user = useSelector((x) => x.userDataStore);\r\n    //////////////////////////socket part////////////////////////////////\r\n    const socketStore = useSelector((x) => x.socketStore);\r\n    const socket = socketStore[\"socket\"];\r\n    const user_notification_data = socketStore[\"user_notification_data\"];\r\n    useEffect(() => {\r\n      if (!empty(user_notification_data)) {\r\n        console.log(\r\n          \"------------socketStore(UserSidebar page)---------------\",\r\n          user_notification_data\r\n        );\r\n        //addSocketListener();\r\n        //getFeedList();\r\n      }\r\n    }, [user_notification_data]);\r\n  \r\n    const token = get_data_value(user, \"token\");\r\n    const socketHeader = { token: token };\r\n    ///////////////////////////end socket part/////////////////////////////\r\n\r\n  let sideMenuItems = [];\r\n  // USER_MENU_ITEMS.map(function(menuItem, index){\r\n  //   if(user['user_type'] === 0){\r\n  //     if(sideMenuItems['level'] === USER_LEVEL_ALL || sideMenuItems['level'] === USER_LEVEL_CUSTOMER){\r\n  //       sideMenuItems.push(menuItem)\r\n  //     }\r\n  //   }else if(user['user_type'] === 1){\r\n  //     if(sideMenuItems['level'] === USER_LEVEL_ALL || sideMenuItems['level'] === USER_LEVEL_AFFILIATE){\r\n  //       sideMenuItems.push(menuItem)\r\n  //     }\r\n  //   }else if(user['user_type'] === 2){\r\n  //     if(sideMenuItems['level'] === USER_LEVEL_ALL || sideMenuItems['level'] === USER_LEVEL_AFFILIATE){\r\n  //       sideMenuItems.push(menuItem)\r\n  //     }\r\n  //   }\r\n  // });\r\n  for (let i = 0; i < USER_MENU_ITEMS.length; i++) {\r\n    let menuItem = USER_MENU_ITEMS[i];\r\n    if (user[\"user_type\"] === 0) {\r\n      if (\r\n        menuItem[\"level\"] === USER_LEVEL_ALL ||\r\n        menuItem[\"level\"] === USER_LEVEL_CUSTOMER\r\n      ) {\r\n        sideMenuItems.push(menuItem);\r\n      }\r\n    } else if (user[\"user_type\"] === 1) {\r\n      if (\r\n        menuItem[\"level\"] === USER_LEVEL_ALL ||\r\n        menuItem[\"level\"] === USER_LEVEL_AFFILIATE\r\n      ) {\r\n        sideMenuItems.push(menuItem);\r\n      }\r\n    } else if (user[\"user_type\"] === 2) {\r\n      if (\r\n        menuItem[\"level\"] === USER_LEVEL_ALL ||\r\n        menuItem[\"level\"] === USER_LEVEL_AFFILIATE\r\n      ) {\r\n        sideMenuItems.push(menuItem);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <nav className=\"sidebar\" id=\"sidebar\">\r\n      <div\r\n        className={`sidebar-content-wrapper sidebar-offcanvas custom-scroller ${\r\n          appDataStore.m_user_menu_collapsed ? \"\" : \"active\"\r\n        }`}\r\n      >\r\n        <ul className=\"nav\">\r\n          {sideMenuItems.map((menuItem, index) => (\r\n            <li\r\n              key={index}\r\n              className={`nav-item  ${\r\n                appDataStore.current_route === menuItem.route ? \"active\" : \"\"\r\n              }`}\r\n            >\r\n              <Link\r\n                to={menuItem.route}\r\n                activeclassname=\"active\"\r\n                className=\"nav-link\"\r\n              >\r\n                <i className={menuItem.icon}></i>\r\n                <span className=\"menu-title\">{menuItem.title}</span>\r\n                {index === 0 && (\r\n                  <span className={`badge badge-pill badge-primary`}>{!empty(user_notification_data) &&\r\n                    !empty(user_notification_data[\"unread_feed_list\"])\r\n                      ? user_notification_data[\"unread_feed_list\"].length\r\n                      : \"\"}</span>\r\n                )}\r\n              </Link>\r\n            </li>\r\n          ))}\r\n          <li className=\"nav-item\">\r\n            <div className=\"nav-link a-btn\" onClick={(e)=>{askLogout()}}>\r\n              <i className=\"mdi mdi-logout-variant\"></i>\r\n              <span className=\"menu-title\">Log out</span>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default UserSidebar;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\layouts\\UserLayout\\Includes\\UserFooter.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserDashboardPage\\UserDashboardPage.js",["2098","2099","2100"],"import {\r\n  ROUTE_LOGIN,\r\n  ROUTE_USER_DASHBOARD,\r\n  ROUTE_USER_SOFTWARE,\r\n} from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\n\r\nimport { TickerTape } from \"react-tradingview-embed\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport {\r\n    empty,\r\n  get_data_value,\r\n  jQuery,\r\n  showToast,\r\n  show_loading,\r\n} from \"utils/GlobalFunctions\";\r\nimport { apiGetUserDashboardDetail } from \"services/userDashboardService\";\r\nimport { useHistory, withRouter } from \"react-router-dom\";\r\nimport { BASE_FRONT_URL, RULE_PERCENT, SMS_FUNC } from \"config/CONSTANTS\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport UserReferralListPage from \"./inc/UserReferralListPage\";\r\n\r\nconst UserDashboardPage = (props) => {\r\n  console.log(\"---------SMS_FUNC----------\", SMS_FUNC);\r\n\r\n  const dispatch = useDispatch();\r\n  const initPage = () => {\r\n    dispatch(\r\n      UpdateAppData({\r\n        currentPageTitle: \"Dashboard\",\r\n        current_route: ROUTE_USER_DASHBOARD,\r\n        m_user_menu_collapsed: true,\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    initPage();\r\n    getData();\r\n  }, []);\r\n  const history = useHistory();\r\n  const userDataStore = useSelector((x) => x.userDataStore);\r\n  if (userDataStore[\"is_active\"] === 0) {\r\n    history.push(ROUTE_USER_SOFTWARE);\r\n  }\r\n\r\n  const defaultPageData = {\r\n    user: {},\r\n    sponsor_name: \"\",\r\n    check_in_holding_tank: false,\r\n    ref_url: \"\",\r\n    rank_info: {},\r\n    tree_info: [],\r\n    active_personal_referral_cnt: 0,\r\n    active_member_count: 0,\r\n    percent0: 0,\r\n    percent1: 0,\r\n    percent2: 0,\r\n    all_personal_referrals_in_tree: [],\r\n  };\r\n  const [pageData, setPageData] = useState(defaultPageData);\r\n  const getData = () => {\r\n    show_loading(true);\r\n    apiGetUserDashboardDetail()\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setPageData(api_res.data);\r\n          dispatch(updateUser(api_res.data[\"user\"]));\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  const onUrlCopied = () => {\r\n    jQuery(\"#referral_url\").focus();\r\n    showToast(\"Referral link copied.\", \"success\");\r\n  };\r\n\r\n  const tradingViewSymbols = [\r\n    {\r\n      description: \"EURUSD\",\r\n      proName: \"FX:EURUSD\",\r\n    },\r\n    {\r\n      description: \"USDJPY\",\r\n      proName: \"FX:USDJPY\",\r\n    },\r\n    {\r\n      description: \"AUDUSD\",\r\n      proName: \"FX:AUDUSD\",\r\n    },\r\n    {\r\n      description: \"GBPCAD\",\r\n      proName: \"FX:GBPCAD\",\r\n    },\r\n    {\r\n      description: \"GBPUSD\",\r\n      proName: \"FX:GBPUSD\",\r\n    },\r\n    {\r\n      description: \"GBPJPY\",\r\n      proName: \"FX:GBPJPY\",\r\n    },\r\n    {\r\n      description: \"NZDCAD\",\r\n      proName: \"FX:NZDCAD\",\r\n    },\r\n    {\r\n      description: \"NZDUSD\",\r\n      proName: \"FX:NZDUSD\",\r\n    },\r\n    {\r\n      description: \"USDCAD\",\r\n      proName: \"FX:USDCAD\",\r\n    },\r\n    {\r\n      description: \"XAUUSD\",\r\n      proName: \"OANDA:XAUUSD\",\r\n    },\r\n    {\r\n      description: \"AUDCAD\",\r\n      proName: \"FX:AUDCAD\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"trading-widget-block mb-4\">\r\n        <TickerTape\r\n          widgetProps={{\r\n            theme: \"dark\",\r\n            colorTheme: \"dark\",\r\n            isTransparent: true,\r\n            displayMode: \"adaptive\",\r\n            locale: \"en\",\r\n            symbols: tradingViewSymbols,\r\n          }}\r\n        ></TickerTape>\r\n      </div>\r\n\r\n      <div\r\n        className={`dashboardForAffiliate ${\r\n          pageData[\"user\"][\"user_type\"] > 0 ? \"\" : \"hidden\"\r\n        }`}\r\n      >\r\n        <div\r\n          className={`row ${\r\n            pageData[\"user\"][\"user_type\"] === 1 ? \"\" : \"hidden\"\r\n          }`}\r\n        >\r\n          <div className=\"col-12 col-sm-4 col-xl-4 grid-margin\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <div className=\"d-flex align-items-center justify-content-between\">\r\n                  <div>\r\n                    <h4>Your Rank</h4>\r\n                    <h4 className=\"text-success mt-3 text-bold\">\r\n                      {get_data_value(pageData[\"user\"], \"rank_name\")}\r\n                      &nbsp;\r\n                    </h4>\r\n                    <h6 className=\"text-muted\">&nbsp;</h6>\r\n                  </div>\r\n                  <div className=\"icon-box icon-box-bg-image-warning\">\r\n                    <i className=\"ti-announcement gradient-card-icon\"></i>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 col-sm-4 col-xl-4 grid-margin\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <div className=\"d-flex align-items-center justify-content-between\">\r\n                  <div>\r\n                    <h4>Your Sponsor</h4>\r\n                    <h4 className=\"text-success mt-3\">\r\n                      {get_data_value(pageData, \"sponsor_name\")}\r\n                    </h4>\r\n                    <h6 className=\"text-muted\">&nbsp;</h6>\r\n                  </div>\r\n                  <div className=\"icon-box icon-box-bg-image-danger\">\r\n                    <i className=\"ti-user gradient-card-icon\"></i>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 col-sm-4 col-xl-4 grid-margin\">\r\n            <div\r\n              className={`card ${\r\n                pageData[\"check_in_holding_tank\"] ? \"hidden\" : \"\"\r\n              }`}\r\n            >\r\n              <div className=\"card-body\">\r\n                <div className=\"d-flex align-items-center justify-content-between\">\r\n                  <div className=\"referral-url-box\">\r\n                    <h4>Referral Url</h4>\r\n                    <h4 className=\"text-white mt-3 position-relative\">\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Referral url\"\r\n                        className=\"form-control\"\r\n                        id=\"referral_url\"\r\n                        name=\"referral_url\"\r\n                        value={pageData[\"ref_url\"]}\r\n                        readOnly={true}\r\n                      />\r\n                      <CopyToClipboard\r\n                        text={pageData[\"ref_url\"]}\r\n                        onCopy={onUrlCopied}\r\n                      >\r\n                        <span\r\n                          className=\"btn-copy-text\"\r\n                          data-clipboard-action=\"copy\"\r\n                          data-clipboard-target=\"#referral_url\"\r\n                        >\r\n                          Copy Link\r\n                        </span>\r\n                      </CopyToClipboard>\r\n                    </h4>\r\n                  </div>\r\n\r\n                  <CopyToClipboard\r\n                    text={pageData[\"ref_url\"]}\r\n                    onCopy={onUrlCopied}\r\n                  >\r\n                    <div className=\"icon-box icon-box-bg-image-info btn-url-copy\">\r\n                      <i className=\"ti-files gradient-card-icon\"></i>\r\n                    </div>\r\n                  </CopyToClipboard>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className={`${pageData[\"check_in_holding_tank\"] ? \"\" : \"hidden\"}`}\r\n            >\r\n              <div className=\"card-body padding-0\">\r\n                <div className=\"d-flex align-items-center justify-content-between\">\r\n                  <h4 className=\"text-white mt-1 width-100 text-normal\">\r\n                    <div className=\"alert alert-warning margin-0\" role=\"alert\">\r\n                      Your sponsor hasn't placed you yet. Once your sponsor\r\n                      places you in the tree, your tree will become available.\r\n                      <br />\r\n                      NOTE: If your sponsor doesn’t place you within 10 days\r\n                      then you will automatically be placed.\r\n                    </div>\r\n                  </h4>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 col-sm-4 col-xl-4 grid-margin\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <div className=\"d-flex align-items-center justify-content-between\">\r\n                  <div>\r\n                    <h4>Active Personal Referrals (Customers Only)</h4>\r\n                    <h4 className=\"text-success mt-3 text-bold\">\r\n                      {pageData[\"active_personal_referral_cnt\"]}\r\n                      &nbsp;\r\n                    </h4>\r\n                    <h6 className=\"text-muted\">&nbsp;</h6>\r\n                  </div>\r\n                  <div className=\"icon-box icon-box-bg-image-danger\">\r\n                    <i className=\"ti-pie-chart gradient-card-icon\"></i>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 col-sm-4 col-xl-4 grid-margin\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <div className=\"d-flex align-items-center justify-content-between\">\r\n                  <div>\r\n                    <h4>Active members</h4>\r\n                    <h4 className=\"text-success mt-3 text-bold\">\r\n                      {pageData[\"active_member_count\"]}\r\n                      &nbsp;\r\n                    </h4>\r\n                    <h6 className=\"text-muted\">&nbsp;</h6>\r\n                  </div>\r\n                  <div className=\"icon-box icon-box-bg-image-danger\">\r\n                    <i className=\"ti-pie-chart gradient-card-icon\"></i>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 col-sm-4 col-xl-4 grid-margin\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <div className=\"d-flex align-items-center justify-content-between\">\r\n                  <div>\r\n                    <h4>Total Earnings</h4>\r\n                    <h4 className=\"text-success mt-3 text-bold\">\r\n                      ${pageData[\"user\"][\"balance\"]}&nbsp;\r\n                    </h4>\r\n                    <h6 className=\"text-muted\">&nbsp;</h6>\r\n                  </div>\r\n                  <div className=\"icon-box icon-box-bg-image-danger\">\r\n                    <i className=\"ti-pie-chart gradient-card-icon\"></i>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-md-12 grid-margin grid-margin-md-0 stretch-card\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <h4 className=\"card-title\">Network Summary</h4>\r\n                <div className=\"table-responsive\">\r\n                  <table className=\"table1\" style={{ minWidth: \"550px\" }}>\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"pt-1 pl-0\"></th>\r\n                        <th className=\"pt-1 text-primary\">Lane 1</th>\r\n                        <th className=\"pt-1 text-primary\">Lane 2</th>\r\n                        <th className=\"pt-1 text-primary\">Lane 3</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr>\r\n                        <td className=\"text-primary\">Affiliates</td>\r\n                        <td>\r\n                          {get_data_value(\r\n                            pageData[\"tree_info\"][0],\r\n                            \"affiliate_cnt\"\r\n                          )}\r\n                        </td>\r\n                        <td>\r\n                          {get_data_value(\r\n                            pageData[\"tree_info\"][1],\r\n                            \"affiliate_cnt\"\r\n                          )}\r\n                        </td>\r\n                        <td>\r\n                          {get_data_value(\r\n                            pageData[\"tree_info\"][2],\r\n                            \"affiliate_cnt\"\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                      <tr className=\"\">\r\n                        <td className=\"text-primary\">\r\n                          Active Personal Referrals\r\n                        </td>\r\n                        <td>\r\n                          {get_data_value(\r\n                            pageData[\"tree_info\"][0],\r\n                            \"active_personal_referral_all_cnt\"\r\n                          )}\r\n                        </td>\r\n                        <td>\r\n                          {get_data_value(\r\n                            pageData[\"tree_info\"][1],\r\n                            \"active_personal_referral_all_cnt\"\r\n                          )}\r\n                        </td>\r\n                        <td>\r\n                          {get_data_value(\r\n                            pageData[\"tree_info\"][2],\r\n                            \"active_personal_referral_all_cnt\"\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td className=\"text-primary\">Active Customers</td>\r\n                        <td>\r\n                          {get_data_value(\r\n                            pageData[\"tree_info\"][0],\r\n                            \"active_customer_cnt\"\r\n                          )}\r\n                        </td>\r\n                        <td>\r\n                          {get_data_value(\r\n                            pageData[\"tree_info\"][1],\r\n                            \"active_customer_cnt\"\r\n                          )}\r\n                        </td>\r\n                        <td>\r\n                          {get_data_value(\r\n                            pageData[\"tree_info\"][2],\r\n                            \"active_customer_cnt\"\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td className=\"text-primary\">Total Active Users</td>\r\n                        <td>\r\n                          {get_data_value(\r\n                            pageData[\"tree_info\"][0],\r\n                            \"active_member_cnt\"\r\n                          )}\r\n                        </td>\r\n                        <td>\r\n                          {get_data_value(\r\n                            pageData[\"tree_info\"][1],\r\n                            \"active_member_cnt\"\r\n                          )}\r\n                        </td>\r\n                        <td>\r\n                          {get_data_value(\r\n                            pageData[\"tree_info\"][2],\r\n                            \"active_member_cnt\"\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td className=\"text-primary\">Qualifying</td>\r\n                        <td>\r\n                          <label\r\n                            className={`badge badge-success ${\r\n                              pageData[\"percent0\"] / 100 < RULE_PERCENT\r\n                                ? \"badge-warning\"\r\n                                : \"badge-success\"\r\n                            }`}\r\n                          >\r\n                            {pageData[\"percent0\"]}%\r\n                          </label>\r\n                        </td>\r\n                        <td>\r\n                          <label\r\n                            className={`badge badge-success ${\r\n                              pageData[\"percent1\"] / 100 < RULE_PERCENT\r\n                                ? \"badge-warning\"\r\n                                : \"badge-success\"\r\n                            }`}\r\n                          >\r\n                            {pageData[\"percent1\"]}%\r\n                          </label>\r\n                        </td>\r\n                        <td>\r\n                          <label\r\n                            className={`badge badge-success ${\r\n                              pageData[\"percent2\"] / 100 < RULE_PERCENT\r\n                                ? \"badge-warning\"\r\n                                : \"badge-success\"\r\n                            }`}\r\n                          >\r\n                            {pageData[\"percent2\"]}%\r\n                          </label>\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td className=\"text-primary\">Users in holding tank:</td>\r\n                        <td>{pageData[\"holding_user_cnt\"]}</td>\r\n                        <td></td>\r\n                        <td></td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        className={`dashboardForCustomer ${\r\n          pageData[\"user\"][\"user_type\"] === 0 ? \"\" : \"hidden\"\r\n        }`}\r\n      >\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-sm-12 col-xl-12 grid-margin\">\r\n            <div\r\n              className={`card ${\r\n                pageData[\"check_in_holding_tank\"] ? \"hidden\" : \"\"\r\n              }`}\r\n            >\r\n              <div className=\"card-body\">\r\n                <div className=\"d-flex align-items-center justify-content-between\">\r\n                  <div className=\"referral-url-box\">\r\n                    <h4>Referral Url</h4>\r\n                    <h4 className=\"text-white mt-3 position-relative\">\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Referral url\"\r\n                        className=\"form-control\"\r\n                        id=\"referral_url\"\r\n                        name=\"referral_url\"\r\n                        value={pageData[\"ref_url\"]}\r\n                        readOnly={true}\r\n                      />\r\n                      <CopyToClipboard\r\n                        text={pageData[\"ref_url\"]}\r\n                        onCopy={onUrlCopied}\r\n                      >\r\n                        <span\r\n                          className=\"btn-copy-text\"\r\n                          data-clipboard-action=\"copy\"\r\n                          data-clipboard-target=\"#referral_url\"\r\n                        >\r\n                          Copy Link\r\n                        </span>\r\n                      </CopyToClipboard>\r\n                    </h4>\r\n                  </div>\r\n\r\n                  <CopyToClipboard\r\n                    text={pageData[\"ref_url\"]}\r\n                    onCopy={onUrlCopied}\r\n                  >\r\n                    <div className=\"icon-box icon-box-bg-image-info btn-url-copy\">\r\n                      <i className=\"ti-files gradient-card-icon\"></i>\r\n                    </div>\r\n                  </CopyToClipboard>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className={`${pageData[\"check_in_holding_tank\"] ? \"\" : \"hidden\"}`}\r\n            >\r\n              <div className=\"card-body padding-0\">\r\n                <div className=\"d-flex align-items-center justify-content-between\">\r\n                  <h4 className=\"text-white mt-1 width-100 text-normal\">\r\n                    <div className=\"alert alert-warning margin-0\" role=\"alert\">\r\n                      Your sponsor hasn't placed you yet. Once your sponsor\r\n                      places you in the tree, your tree will become available.\r\n                      <br />\r\n                      NOTE: If your sponsor doesn’t place you within 10 days\r\n                      then you will automatically be placed.\r\n                    </div>\r\n                  </h4>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 col-sm-4 col-xl-4 grid-margin\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <div className=\"d-flex align-items-center justify-content-between\">\r\n                  <div>\r\n                    <h4>Active Personal Referrals (Customers Only)</h4>\r\n                    <h4 className=\"text-success mt-3 text-bold\">\r\n                      {pageData[\"active_personal_referral_cnt\"]}\r\n                      &nbsp;\r\n                    </h4>\r\n                    <h6 className=\"text-muted\">&nbsp;</h6>\r\n                  </div>\r\n                  <div className=\"icon-box icon-box-bg-image-danger\">\r\n                    <i className=\"ti-pie-chart gradient-card-icon\"></i>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 col-sm-4 col-xl-4 grid-margin\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <div className=\"d-flex align-items-center justify-content-between\">\r\n                  <div>\r\n                    <h4>Total Earnings</h4>\r\n                    <h4 className=\"text-success mt-3 text-bold\">\r\n                      ${pageData[\"user\"][\"balance\"]}&nbsp;\r\n                    </h4>\r\n                    <h6 className=\"text-muted\">&nbsp;</h6>\r\n                  </div>\r\n                  <div className=\"icon-box icon-box-bg-image-danger\">\r\n                    <i className=\"ti-pie-chart gradient-card-icon\"></i>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 col-sm-4 col-xl-4 grid-margin\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <div className=\"d-flex align-items-center justify-content-between\">\r\n                  <div>\r\n                    <h4>Your Sponsor</h4>\r\n                    <h4 className=\"text-success mt-3\">\r\n                      {get_data_value(pageData, \"sponsor_name\")}\r\n                    </h4>\r\n                    <h6 className=\"text-muted\">&nbsp;</h6>\r\n                  </div>\r\n                  <div className=\"icon-box icon-box-bg-image-danger\">\r\n                    <i className=\"ti-user gradient-card-icon\"></i>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {pageData[\"user\"][\"user_type\"] === 0 && pageData[\"user\"][\"is_active\"] === 1 && !empty(pageData[\"all_personal_referrals_in_tree\"]) && (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                <UserReferralListPage pageData={pageData} />\r\n                </div>\r\n            </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(UserDashboardPage);\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserFeedPage\\UserFeedPage.js",["2101","2102","2103","2104","2105","2106"],"import { ROUTE_USER_FEED } from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateSocket } from \"redux/actions/socketActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport renderHTML from 'react-render-html';\r\nimport { apiUserGetProfileInfo } from \"services/userCommonService\";\r\nimport {\r\n  empty,\r\n  encodedStr,\r\n  get_data_value,\r\n  intval,\r\n  showToast,\r\n  show_loading,\r\n  timeConverter,\r\n} from \"utils/GlobalFunctions\";\r\n\r\nconst UserFeedPage = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  //////////////////////////socket part////////////////////////////////\r\n  const userDataStore = useSelector((x) => x.userDataStore);\r\n  const socketStore = useSelector((x) => x.socketStore);\r\n  const socket = socketStore[\"socket\"];\r\n  useEffect(() => {\r\n    if (!empty(socket)) {\r\n      console.log(\"------------socketStore---------------\", socketStore);\r\n      addSocketListener();\r\n      getFeedList();\r\n    }\r\n  }, [socket]);\r\n\r\n  const token = get_data_value(userDataStore, \"token\");\r\n  const socketHeader = { token: token };\r\n\r\n  const addSocketListener = () => {\r\n    socket.off('get_feed_list')\r\n    socket.on(\"get_feed_list\", (data) => {\r\n      console.log(\"-------------get_feed_list reply data---------\", data);\r\n      setFeedList(data);\r\n      if (!empty(data)) {\r\n        setLastPostId(intval(data[0][\"id\"]));\r\n      }\r\n    });\r\n  };\r\n  const [feedList, setFeedList] = useState([]);\r\n  const [lastPostId, setLastPostId] = useState(0);\r\n  const getFeedList = () => {\r\n    setFeedList([]);\r\n    console.log(\"-------------edmit get_feed_list ---------\");\r\n    socket.emit(\"get_feed_list\", { ...socketHeader, last_id: lastPostId });\r\n    //setLastPostId(lastPostId + 1)\r\n  };\r\n  ///////////////////////////end socket part/////////////////////////////\r\n\r\n  const initPage = () => {\r\n    dispatch(\r\n      UpdateAppData({\r\n        currentPageTitle: \"News Feed\",\r\n        current_route: ROUTE_USER_FEED,\r\n        m_user_menu_collapsed: true,\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    initPage();\r\n    getData();\r\n  }, []);\r\n  const history = useHistory();\r\n  const defaultPageData = {\r\n    user: {},\r\n  };\r\n  const [pageData, setPageData] = useState(defaultPageData);\r\n  const getData = () => {\r\n    show_loading(true);\r\n    apiUserGetProfileInfo()\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setPageData(api_res.data);\r\n          dispatch(updateUser(api_res.data[\"user\"]));\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title hidden\">News Feed</h4>\r\n              <div className=\"card-content\">\r\n                <div className=\"feed-list-container full_loaded\">\r\n                  <div className=\"feed-list\" id=\"feed-list\">\r\n                    {!empty(feedList) &&\r\n                      feedList.map((item, index) => {\r\n                        return (\r\n                          <div\r\n                            className=\"feed-item\"\r\n                            data-id={item[\"id\"]}\r\n                            key={item[\"id\"]}\r\n                          >\r\n                            <div className=\"alert alert-warning\" role=\"alert\">\r\n                              <div className=\"feed-box note mb-0 text-left\">\r\n                                <p className=\"feed-subject\">\r\n                                  {item[\"subject\"]}\r\n                                </p>\r\n                                <div className=\"feed-message word-break\">{renderHTML(item['message'])}</div>\r\n                                <p className=\"feed-date unix-timestamp\">{timeConverter(item['add_timestamp'])}</p>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                  </div>\r\n                  <div className=\"text-center ajax-placeholder\">\r\n                    <span className=\"\">No news feed found</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserFeedPage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserSoftwarePage\\UserSoftwarePage.js",["2107","2108","2109"],"import { ROUTE_USER_SOFTWARE } from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport { apiUserGetProfileInfo } from \"services/userCommonService\";\r\nimport { showToast, show_loading } from \"utils/GlobalFunctions\";\r\nimport \"./UserSoftwarePage.css\";\r\n\r\nconst currentPageTitle = \"Getting Started\";\r\nconst UserSoftwarePage = () => {\r\n  const dispatch = useDispatch();\r\n  const initPage = () => {\r\n    dispatch(\r\n      UpdateAppData({\r\n        currentPageTitle: currentPageTitle,\r\n        current_route: ROUTE_USER_SOFTWARE,\r\n        m_user_menu_collapsed: true,\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    initPage();\r\n    getData();\r\n  }, []);\r\n  const history = useHistory();\r\n  const defaultPageData = {\r\n    user: {},\r\n  };\r\n  const [pageData, setPageData] = useState(defaultPageData);\r\n  const getData = () => {\r\n    show_loading(true);\r\n    apiUserGetProfileInfo()\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setPageData(api_res.data);\r\n          dispatch(updateUser(api_res.data[\"user\"]));\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-getting-started-page\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title t-show-mobile\">{currentPageTitle}</h4>\r\n              <div className=\"card-content\">\r\n                <div className=\"block padding-bottom-5 padding-top-5\">\r\n                  <h3 className=\"text-bold text-center\">\r\n                    Ready to Reach a Higher Level?\r\n                  </h3>\r\n                  <h4 className=\"r-item text-center\">\r\n                    Please watch the following steps to get started!\r\n                  </h4>\r\n                  <h4 className=\"r-item text-center\">\r\n                    Join our Telegram Channel for Updates and Announcements:{\" \"}\r\n                    <a\r\n                      className=\"text-primary\"\r\n                      href=\"https://t.me/higherlevelfx\"\r\n                      target=\"_blank\"\r\n                      rel=\"noreferrer\"\r\n                    >\r\n                      https://t.me/higherlevelfx\r\n                    </a>\r\n                  </h4>\r\n                </div>\r\n                <div\r\n                  className=\"sub-block margin-top-0\"\r\n                  style={{ border: \"none\" }}\r\n                >\r\n                  <h4 className=\"text-bold text-underline text-uppercase\">\r\n                    WELCOME! (WATCH THIS FIRST!)\r\n                  </h4>\r\n                  <div className=\"block text-center padding-top-20\">\r\n                    <div className=\"block position-relative\">\r\n                      <iframe\r\n                        src=\"https://player.vimeo.com/video/540906064\"\r\n                        width=\"640\"\r\n                        height=\"360\"\r\n                        frameBorder=\"0\"\r\n                        allow=\"autoplay; fullscreen\"\r\n                        title=\"WELCOME! (WATCH THIS FIRST!)\"\r\n                        allowFullScreen\r\n                      ></iframe>\r\n                      <div className=\"text-center mt-1 mb-3\"></div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"sub-block\">\r\n                  <h4 className=\"text-bold text-underline text-uppercase\">\r\n                    Getting Started\r\n                  </h4>\r\n                  <div className=\"block text-center padding-top-20\">\r\n                    <div\r\n                      className=\"block position-relative\"\r\n                      style={{ marginBottom: \"20px\" }}\r\n                    >\r\n                      <iframe\r\n                        src=\"https://player.vimeo.com/video/539867350\"\r\n                        width=\"640\"\r\n                        height=\"360\"\r\n                        frameBorder=\"0\"\r\n                        allow=\"autoplay; fullscreen\"\r\n                        title=\"Getting Started\"\r\n                        allowFullScreen\r\n                      ></iframe>\r\n                      <h4>\r\n                        <b></b>\r\n                      </h4>\r\n                      <div className=\"hidden\">\r\n                        <a\r\n                          className=\"text-primary\"\r\n                          href=\"/downloads/Alpha-V2-NX.zip\"\r\n                          target=\"_blank\"\r\n                          download=\"Alpha-V2V.zip\"\r\n                        >\r\n                          (Click Here to Download)\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {/* <div className=\"sub-block\">\r\n                        <h4 className=\"text-bold text-underline text-uppercase\">Alpha 2.0 - Settings Explained</h4>\r\n                        <div className=\"block text-center padding-top-20\">\r\n                            <div className=\"block position-relative\" style={{marginBottom: \"20px\"}}>\r\n                                <iframe src=\"https://player.vimeo.com/video/471858129\" width=\"640\" height=\"360\" frameBorder=\"0\"\r\n                      allow=\"autoplay; fullscreen\"\r\n                      title=\"Rewards Video\"\r\n                      allowFullScreen></iframe>\r\n                                <h4><b></b></h4>\r\n                            </div>\r\n                        </div>\r\n                    </div> */}\r\n                <div className=\"sub-block\">\r\n                  <h4 className=\"text-bold text-underline\">\r\n                    ALPHA 2.5 EXPLAINED\r\n                  </h4>\r\n                  <div className=\"block text-center padding-top-20\">\r\n                    <div\r\n                      className=\"block position-relative\"\r\n                      style={{ marginBottom: \"20px\" }}\r\n                    >\r\n                      <iframe\r\n                        src=\"https://player.vimeo.com/video/582318051\"\r\n                        width=\"640\"\r\n                        height=\"360\"\r\n                        frameBorder=\"0\"\r\n                        allow=\"autoplay; fullscreen\"\r\n                        title=\"ALPHA 2.5 EXPLAINED\"\r\n                        allowFullScreen\r\n                      ></iframe>\r\n                      <h4>\r\n                        <b></b>\r\n                      </h4>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"sub-block\">\r\n                  <h4 className=\"text-bold text-underline\">\r\n                    ALPHA GR EXPLAINED\r\n                  </h4>\r\n                  <div className=\"block text-center padding-top-20\">\r\n                    <div\r\n                      className=\"block position-relative\"\r\n                      style={{ marginBottom: \"20px\" }}\r\n                    >\r\n                      <iframe\r\n                        src=\"https://player.vimeo.com/video/540321957\"\r\n                        width=\"640\"\r\n                        height=\"360\"\r\n                        frameBorder=\"0\"\r\n                        allow=\"autoplay; fullscreen\"\r\n                        title=\"ALPHA GR EXPLAINED\"\r\n                        allowFullScreen\r\n                      ></iframe>\r\n                      <h4>\r\n                        <b></b>\r\n                      </h4>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"sub-block\">\r\n                  <h4 className=\"text-bold text-underline\">\r\n                    ALPHA GO EXPLAINED\r\n                  </h4>\r\n                  <div className=\"block text-center padding-top-20\">\r\n                    <div\r\n                      className=\"block position-relative\"\r\n                      style={{ marginBottom: \"20px\" }}\r\n                    >\r\n                      <iframe\r\n                        src=\"https://player.vimeo.com/video/540541325\"\r\n                        width=\"640\"\r\n                        height=\"360\"\r\n                        frameBorder=\"0\"\r\n                        allow=\"autoplay; fullscreen\"\r\n                        title=\"ALPHA GO EXPLAINED\"\r\n                        allowFullScreen\r\n                      ></iframe>\r\n                      <h4>\r\n                        <b></b>\r\n                      </h4>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserSoftwarePage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\layouts\\UserLayout\\Includes\\UserMenuItems.js",["2110","2111","2112"],"import {\r\n  ROUTE_LOGIN,\r\n  ROUTE_USER_ACADEMY,\r\n  ROUTE_USER_AFFILIATE,\r\n  ROUTE_USER_CHART,\r\n  ROUTE_USER_DASHBOARD,\r\n  ROUTE_USER_FEED,\r\n  ROUTE_USER_LICENSE,\r\n  ROUTE_USER_LOGOUT,\r\n  ROUTE_USER_MARKETING,\r\n  ROUTE_USER_PAYMENT,\r\n  ROUTE_USER_PROFILE,\r\n  ROUTE_USER_SOFTWARE,\r\n  ROUTE_USER_SUPPORT,\r\n  ROUTE_USER_TEAM,\r\n  ROUTE_USER_TICKET,\r\n  ROUTE_USER_VERIFICATION,\r\n  ROUTE_USER_VPS,\r\n  ROUTE_USER_WALLET,\r\n  USER_LEVEL_AFFILIATE,\r\n  USER_LEVEL_ALL,\r\n  USER_LEVEL_CUSTOMER,\r\n} from \"navigation/CONSTANTS\";\r\n\r\n\r\nexport const USER_MENU_ITEMS = [\r\n  {\r\n    route: ROUTE_USER_FEED,\r\n    icon: \"mdi mdi-rss-box\",\r\n    title: \"What's new\",\r\n    level: USER_LEVEL_ALL,\r\n  },\r\n  {\r\n    route: ROUTE_USER_SOFTWARE,\r\n    icon: \"mdi mdi-hand-pointing-right\",\r\n    title: \"Getting Started\",\r\n    level: USER_LEVEL_ALL,\r\n  },\r\n  {\r\n    route: ROUTE_USER_DASHBOARD,\r\n    icon: \"mdi mdi-home\",\r\n    title: \"Dashboard\",\r\n    level: USER_LEVEL_ALL,\r\n  },\r\n  {\r\n    route: ROUTE_USER_VPS,\r\n    icon: \"mdi mdi-server-plus\",\r\n    title: \"Virtual Private Server\",\r\n    level: USER_LEVEL_ALL,\r\n  },\r\n  {\r\n    route: ROUTE_USER_TEAM,\r\n    icon: \"mdi mdi-sitemap\",\r\n    title: \"My Team\",\r\n    level: USER_LEVEL_AFFILIATE,\r\n  },\r\n  {\r\n    route: ROUTE_USER_LICENSE,\r\n    icon: \"mdi mdi-format-list-bulleted-type\",\r\n    title: \"Membership\",\r\n    level: USER_LEVEL_ALL,\r\n  },\r\n  {\r\n    route: ROUTE_USER_ACADEMY,\r\n    icon: \"mdi mdi-near-me\",\r\n    title: \"Higher Level Academy\",\r\n    level: USER_LEVEL_ALL,\r\n  },\r\n  {\r\n    route: ROUTE_USER_MARKETING,\r\n    icon: \"mdi mdi-monitor\",\r\n    title: \"Affiliate Only Section\",\r\n    level: USER_LEVEL_AFFILIATE,\r\n  },\r\n  // {\r\n  //   route: ROUTE_USER_CHART,\r\n  //   icon: \"mdi mdi-chart-line\",\r\n  //   title: \"Live Charts\",\r\n  //   level: USER_LEVEL_ALL,\r\n  // },\r\n  {\r\n    route: ROUTE_USER_WALLET,\r\n    icon: \"mdi mdi-wallet\",\r\n    title: \"Wallet\",\r\n    level: USER_LEVEL_ALL,\r\n  },\r\n  {\r\n    route: ROUTE_USER_AFFILIATE,\r\n    icon: \"mdi mdi-account-convert\",\r\n    title: \"Become an Affiliate\",\r\n    level: USER_LEVEL_CUSTOMER,\r\n  },\r\n  {\r\n    route: ROUTE_USER_PAYMENT,\r\n    icon: \"mdi mdi-currency-usd\",\r\n    title: \"Payments\",\r\n    level: USER_LEVEL_ALL,\r\n  },\r\n  {\r\n    route: ROUTE_USER_TICKET,\r\n    icon: \"mdi mdi-forum\",\r\n    title: \"Support Tickets\",\r\n    level: USER_LEVEL_ALL,\r\n  },\r\n  {\r\n    route: ROUTE_USER_SUPPORT,\r\n    icon: \"mdi mdi-help-circle\",\r\n    title: \"FAQ\",\r\n    level: USER_LEVEL_ALL,\r\n  },\r\n  {\r\n    route: ROUTE_USER_VERIFICATION,\r\n    icon: \"mdi mdi-lock\",\r\n    title: \"Two-Step Verification\",\r\n    level: USER_LEVEL_ALL,\r\n  },\r\n  {\r\n    route: ROUTE_USER_PROFILE,\r\n    icon: \"mdi mdi-account\",\r\n    title: \"Profile / Cancellation\",\r\n    level: USER_LEVEL_ALL,\r\n  },\r\n];\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\layouts\\HomeLayout\\Includes\\HomeFooter.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\layouts\\HomeLayout\\Includes\\HomeMenuItems.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Home\\LoginPage\\LoginPage.js",["2113","2114","2115","2116","2117","2118","2119","2120"],"import HomeLayout from \"layouts/HomeLayout/HomeLayout\";\r\nimport {\r\n  ROUTE_ADMIN_DASHBOARD,\r\n  ROUTE_FORGOT_PASSWORD,\r\n  ROUTE_FREE_BOOK,\r\n  ROUTE_LOGIN,\r\n  ROUTE_REGISTER,\r\n  ROUTE_USER_DASHBOARD,\r\n} from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport { googleKey } from \"config/CONSTANTS\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport TwoFactorCodeModal from \"components/TwoFactorCodeModal/TwoFactorCodeModal\";\r\nimport {\r\n  empty,\r\n  get_data_value,\r\n  isEmpty,\r\n  is_empty,\r\n  showToast,\r\n  show_loading,\r\n  to_array,\r\n} from \"utils/GlobalFunctions\";\r\nimport {\r\n  apiCheckTwoFactAuth,\r\n  apiLogin,\r\n  apiLoginTwoFactAuth,\r\n  apiLogout,\r\n} from \"services/loginService\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\n\r\nconst LoginPage = (props) => {\r\n  const dispatch = useDispatch();\r\n  const [showConfirmModal, setShowconfirmModal] = useState(false);\r\n  const initPage = () => {\r\n    let page_title = \"Login\";\r\n    dispatch(\r\n      UpdateAppData({\r\n        currentPageTitle: page_title,\r\n        current_route: ROUTE_LOGIN,\r\n        license_cancelled_message: \"\",\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    initPage();\r\n    doLogout()\r\n  }, []);\r\n\r\n  const showTwoStepCodeModal = () => {\r\n    setShowconfirmModal(true);\r\n  };\r\n\r\n  //////////////////////////////////////////////////////////////////\r\n  const userDataStore = useSelector((x) => x.userDataStore);\r\n  const userInfo = userDataStore;\r\n  console.log(\"userInfo\", userInfo);\r\n  const initUserData = { user_name: \"\", user_password: \"\" };\r\n  const [userData, setUserData] = useState(initUserData);\r\n  const [errorField, setErrorField] = useState([]);\r\n  const [isBusy, setIsBusy] = useState(false);\r\n\r\n  const getLoginAttemptCount = () => {\r\n    let login_attempt_count = get_data_value(userInfo, \"login_attempt_count\");\r\n    if (is_empty(login_attempt_count)) {\r\n      login_attempt_count = 0;\r\n    } else {\r\n      login_attempt_count = parseInt(login_attempt_count);\r\n    }\r\n    return login_attempt_count;\r\n  };\r\n  const checkCaptchaEnabled = () => {\r\n    let login_attempt_count = getLoginAttemptCount();\r\n    if (login_attempt_count >= 3) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n  const [recaptchaEnable, setRecaptchaEnable] = useState(checkCaptchaEnabled());\r\n  const updateLoginAttemptCount = (count) => {\r\n    if (count === null || count === undefined) {\r\n      count = getLoginAttemptCount();\r\n      count++;\r\n    }\r\n    userInfo[\"login_attempt_count\"] = count;\r\n    dispatch(updateUser({ login_attempt_count: count }));\r\n    setRecaptchaEnable(checkCaptchaEnabled());\r\n  };\r\n\r\n  const [recaptchaValid, setRecaptchaValid] = useState(false);\r\n  const reCaptchaChanged = (value) => {\r\n    console.log(\"reCaptchaChanged\", value);\r\n    setRecaptchaValid(true);\r\n  };\r\n\r\n  let captcha;\r\n  const setCaptchaRef = (ref) => {\r\n    if (ref) {\r\n      return (captcha = ref);\r\n    }\r\n  };\r\n  const resetCaptcha = () => {\r\n    // maybe set it till after is submitted\r\n    captcha.reset();\r\n  };\r\n\r\n  const validateFields = () => {\r\n    var errorList = Array();\r\n    errorList = isEmpty(userData, \"user_name\", errorList);\r\n    errorList = isEmpty(userData, \"user_password\", errorList);\r\n    setErrorField([...errorList]);\r\n    return errorList.length > 0 ? false : true;\r\n  };\r\n  const onChangeFormField = (e, field_name) => {\r\n    if (errorField.includes(field_name)) {\r\n      let errors = errorField.filter((x) => x != field_name);\r\n      setErrorField([...errors]);\r\n    }\r\n    userData[field_name] = e.target.value;\r\n    setUserData({ ...userData });\r\n  };\r\n  const submitModalData = (codeData) => {\r\n    let codeStr = to_array(codeData).join(\"\");\r\n    console.log(\"codeStr\", codeStr);\r\n    show_loading(true);\r\n    apiLoginTwoFactAuth(userData, codeStr)\r\n      .then((api_res) => {\r\n        if (api_res.status === \"1\") {\r\n          doLogin(api_res.data);\r\n        } else {\r\n          show_loading(false);\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n  const onClickLogin = () => {\r\n    let is_valid = validateFields();\r\n    console.log(\"is valid\", is_valid);\r\n    if (is_valid) {\r\n      if (recaptchaEnable) {\r\n        if (!recaptchaValid) {\r\n          showToast(\"Please confirm that you're not a robot\", \"error\");\r\n          return false;\r\n        }\r\n      }\r\n      show_loading(true);\r\n      apiLogin(userData)\r\n        .then((api_res) => {\r\n          console.log(\"api_res\", api_res);\r\n          if (api_res.status === \"1\") {\r\n            let data = api_res[\"data\"];\r\n            if (!empty(data[\"2fa_secret\"]) && data[\"2fa_secret\"] !== \"\") {\r\n              show_loading(false);\r\n              showTwoStepCodeModal();\r\n            } else {\r\n              doLogin(data);\r\n            }\r\n          } else {\r\n            show_loading(false);\r\n            showToast(api_res.message, \"error\");\r\n            updateLoginAttemptCount();\r\n            if (recaptchaEnable) {\r\n              setRecaptchaValid(false);\r\n              resetCaptcha()\r\n            }\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          show_loading(false);\r\n          showToast(err, \"error\");\r\n          if (recaptchaEnable) {\r\n            setRecaptchaValid(false);\r\n            resetCaptcha()\r\n          }\r\n        });\r\n    }\r\n  };\r\n  const doLogin = (data) => {\r\n    showToast(\"You are in!\", \"success\");\r\n    dispatch(updateUser(data));\r\n    setTimeout(() => {\r\n      show_loading(false);\r\n      if (data[\"is_admin\"] === \"1\") {\r\n        props.history.replace({ pathname: ROUTE_ADMIN_DASHBOARD });\r\n      } else {\r\n        props.history.replace({ pathname: ROUTE_USER_DASHBOARD });\r\n      }\r\n    }, 500);\r\n    updateLoginAttemptCount(0);\r\n  };\r\n  const doLogout = () => {\r\n    if(empty(userDataStore['token'])){\r\n      return false\r\n    }\r\n\r\n    apiLogout(userDataStore['token'])\r\n    .then((api_res) => {\r\n      console.log(\"api_res\", api_res)\r\n    })\r\n    .catch((err) => {\r\n       \r\n    });\r\n    dispatch(updateUser({token:\"\"}));\r\n  };\r\n  const onChangeKeyInput = (e, field_name) => {\r\n    if(field_name === 'user_password'){\r\n      if (e.key === 'Enter') {\r\n        onClickLogin()\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <HomeLayout>\r\n        <div className=\"main-content\">\r\n          <div\r\n            className=\"section page-section container has-header content-sm\"\r\n            id=\"page-section1\"\r\n          >\r\n            <div className=\"container\">\r\n              <div className=\"form-container margin-auto\">\r\n                <form className=\"login-form\" method=\"post\">\r\n                  <div className=\"logo-wrapper\">\r\n                    <img\r\n                      src=\"/assets/home/images/higherlevelfx_logo_tm.png\"\r\n                      className=\"img-responsive img-logo\"\r\n                      alt=\"\"\r\n                    />\r\n                  </div>\r\n                  <h3 className=\"box-title text-normal-spacing mt-0 mb-20\">\r\n                    Login\r\n                  </h3>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"user_name\">Username or Email:</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"user_name\"\r\n                      name=\"user_name\"\r\n                      className={`form-control ${\r\n                        errorField.includes(\"user_name\") ? \"is-invalid\" : \"\"\r\n                      }`}\r\n                      placeholder=\"Username or Email\"\r\n                      value={get_data_value(userData, \"user_name\")}\r\n                      onChange={(e) => {\r\n                        onChangeFormField(e, \"user_name\");\r\n                      }}\r\n                      onKeyDown={(e)=>{\r\n                        onChangeKeyInput(e, \"user_name\")\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"user_password\">Password:</label>\r\n                    <input\r\n                      type=\"password\"\r\n                      id=\"user_password\"\r\n                      name=\"user_password\"\r\n                      className={`form-control ${\r\n                        errorField.includes(\"user_password\") ? \"is-invalid\" : \"\"\r\n                      }`}\r\n                      placeholder=\"Password\"\r\n                      value={get_data_value(userData, \"user_password\")}\r\n                      onChange={(e) => {\r\n                        onChangeFormField(e, \"user_password\");\r\n                      }}\r\n                      onKeyDown={(e)=>{\r\n                        onChangeKeyInput(e, \"user_password\")\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    className={`form-group recaptcha-wrap ${\r\n                      recaptchaEnable ? \"\" : \"hidden\"\r\n                    }`}\r\n                  >\r\n                    <ReCAPTCHA\r\n                      ref={(r) => setCaptchaRef(r)}\r\n                      sitekey={googleKey}\r\n                      onChange={reCaptchaChanged}\r\n                    ></ReCAPTCHA>\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <div className=\"custom-checkbox\">\r\n                      <input type=\"checkbox\" id=\"agree-terms-condition\" />\r\n                      <label htmlFor=\"agree-terms-condition\">Remember me</label>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"form-group text-center padding-top-10\">\r\n                    <input type=\"hidden\" name=\"action\" value=\"submit\" />\r\n                    <button\r\n                      className=\"btn btn-green btn-login\"\r\n                      type=\"button\"\r\n                      onClick={onClickLogin}\r\n                    >\r\n                      SIGN IN\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"form-group text-center padding-top-10\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-4 register-btn-wrapper\">\r\n                        <Link\r\n                          to={ROUTE_REGISTER}\r\n                          className=\"btn-register text-desc text-normal-spacing\"\r\n                        >\r\n                          Sign Up\r\n                        </Link>\r\n                      </div>\r\n                      <div className=\"col-md-8 reset-password-btn-wrapper\">\r\n                        <Link\r\n                          to={ROUTE_FORGOT_PASSWORD}\r\n                          className=\"btn-reset-password text-desc text-normal-spacing\"\r\n                        >\r\n                          Forgot Your Password?\r\n                        </Link>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {showConfirmModal && (\r\n          <TwoFactorCodeModal\r\n            isVisible={true}\r\n            setShowconfirmModal={setShowconfirmModal}\r\n            submitModalData={submitModalData}\r\n            modalClass=\"home-page\"\r\n          />\r\n        )}\r\n      </HomeLayout>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginPage);\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Home\\RegisterPage\\RegisterPage.js",["2121","2122","2123","2124","2125","2126","2127","2128","2129"],"import HomeLayout from \"layouts/HomeLayout/HomeLayout\";\r\nimport {\r\n  ROUTE_COMPLIANCE,\r\n  ROUTE_FORGOT_PASSWORD,\r\n  ROUTE_LOGIN,\r\n  ROUTE_REGISTER,\r\n  ROUTE_TERMS_CONDITIONS,\r\n  ROUTE_TRIAL_POLICY,\r\n  ROUTE_USER_DASHBOARD,\r\n  ROUTE_WELCOME,\r\n} from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\n\r\nimport {\r\n  empty,\r\n  get_data_value,\r\n  isEmpty,\r\n  is_empty,\r\n  showToast,\r\n  show_loading,\r\n  to_array,\r\n  trim_phone,\r\n  ValidateEmail,\r\n  jQuery,\r\n} from \"utils/GlobalFunctions\";\r\nimport {\r\n  apiCheckAuthSms,\r\n  apiCheckCoupon,\r\n  apiCheckPasswordStrength,\r\n  apiCheckSponsor,\r\n  apiLogin,\r\n  apiLogout,\r\n  apiRegister,\r\n  apiSendAuthSms,\r\n} from \"services/loginService\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport { countryList } from \"utils/countryList\";\r\nimport CreditCardForm from \"components/CreditCardForm/CreditCardForm\";\r\nimport { SMS_FUNC } from \"config/CONSTANTS\";\r\nimport AuthSmsCodeModal from \"components/AuthSmsCodeModal/AuthSmsCodeModal\";\r\n\r\nconst RegisterPage = (props) => {\r\n  const query_params = new URLSearchParams(props.location.search);\r\n\r\n  const ref_id = query_params.get(\"ref\");\r\n  console.log(\"---------ref_id--------\", ref_id);\r\n  const default_sponsor_name = empty(ref_id) ? \"Admin\" : ref_id;\r\n  const [defaultSponsorName, setDefaultSponsorName] =\r\n    useState(default_sponsor_name);\r\n  const [sponsorName, setSponsorName] = useState(default_sponsor_name);\r\n\r\n  const dispatch = useDispatch();\r\n  const [showConfirmModal, setShowconfirmModal] = useState(false);\r\n  const initPage = () => {\r\n    let page_title = \"Register\";\r\n    dispatch(\r\n      UpdateAppData({\r\n        currentPageTitle: page_title,\r\n        current_route: ROUTE_REGISTER,\r\n        license_cancelled_message: \"\",\r\n      })\r\n    );\r\n    //document.title = page_title;\r\n  };\r\n\r\n  useEffect(() => {\r\n    initPage();\r\n    doLogout();\r\n  }, []);\r\n  const showTwoStepCodeModal = () => {\r\n    setShowconfirmModal(true);\r\n  };\r\n\r\n  //////////////////////////////////////////////////////////////////\r\n  const userDataStore = useSelector((x) => x.userDataStore);\r\n  let curYear = new Date().getFullYear();\r\n  const initUserData = {\r\n    user_name: \"\",\r\n    user_first_name: \"\",\r\n    user_last_name: \"\",\r\n    user_phone: \"\",\r\n    user_email: \"\",\r\n    user_confirm_email: \"\",\r\n    user_password: \"\",\r\n    user_password1: \"\",\r\n    user_type: \"0\",\r\n    billing_street: \"\",\r\n    billing_city: \"\",\r\n    billing_state: \"\",\r\n    billing_zip_code: \"\",\r\n    billing_country: \"US\",\r\n    owner: \"\",\r\n    card_number: \"\",\r\n    cvv: \"\",\r\n    exp_month: \"01\",\r\n    exp_year: curYear - 2000,\r\n    card_type: \"\",\r\n    card_is_valid: false,\r\n    agree_terms_condition: false,\r\n    watched_compliance: false,\r\n    trial_policy: false,\r\n  };\r\n  const [userData, setUserData] = useState(initUserData);\r\n  const [errorField, setErrorField] = useState([]);\r\n  //const [isBusy, setIsBusy] = useState(false);\r\n\r\n  const validateFields = () => {\r\n    console.log(\"userData\", userData);\r\n    var errorList = [];\r\n    errorList = isEmpty(userData, \"user_name\", errorList);\r\n    errorList = isEmpty(userData, \"user_first_name\", errorList);\r\n    errorList = isEmpty(userData, \"user_last_name\", errorList);\r\n    errorList = isEmpty(userData, \"user_phone\", errorList);\r\n    errorList = isEmpty(userData, \"user_email\", errorList);\r\n    errorList = isEmpty(userData, \"user_confirm_email\", errorList);\r\n    errorList = isEmpty(userData, \"user_password\", errorList);\r\n    errorList = isEmpty(userData, \"user_password1\", errorList);\r\n    errorList = isEmpty(userData, \"user_type\", errorList);\r\n    errorList = isEmpty(userData, \"billing_street\", errorList);\r\n    errorList = isEmpty(userData, \"billing_city\", errorList);\r\n    errorList = isEmpty(userData, \"billing_state\", errorList);\r\n    errorList = isEmpty(userData, \"billing_zip_code\", errorList);\r\n    errorList = isEmpty(userData, \"billing_country\", errorList);\r\n    errorList = isEmpty(userData, \"owner\", errorList);\r\n    errorList = isEmpty(userData, \"card_number\", errorList);\r\n    errorList = isEmpty(userData, \"cvv\", errorList);\r\n    errorList = isEmpty(userData, \"exp_month\", errorList);\r\n    errorList = isEmpty(userData, \"exp_year\", errorList);\r\n    errorList = isEmpty(userData, \"card_is_valid\", errorList);\r\n    errorList = isEmpty(userData, \"agree_terms_condition\", errorList);\r\n    errorList = isEmpty(userData, \"watched_compliance\", errorList);\r\n    errorList = isEmpty(userData, \"trial_policy\", errorList);\r\n\r\n    setErrorField([...errorList]);\r\n    console.log(\"errorList\", errorList);\r\n    console.log(\"ErrorField\", errorField);\r\n    console.log(\"userData\", userData);\r\n    return errorList.length > 0 || errorField.length > 0 ? false : true;\r\n  };\r\n  const onChangeFormField = (e) => {\r\n    console.log(\"-----------e--------\", e);\r\n    let field_name = e.target.name;\r\n    let field_value = e.target.value;\r\n    if (errorField.includes(field_name)) {\r\n      let errors = errorField.filter((x) => x != field_name);\r\n      setErrorField([...errors]);\r\n    }\r\n    userData[field_name] = field_value;\r\n    setUserData({ ...userData });\r\n    if (field_name === \"user_password\") {\r\n      checkPasswordStrength(field_value);\r\n    }\r\n  };\r\n  const onChangeFormCheckboxField = (e) => {\r\n    console.log(\"-----------e--------\", e);\r\n    let field_name = e.target.name;\r\n    let checked = e.target.checked;\r\n    if (errorField.includes(field_name)) {\r\n      let errors = errorField.filter((x) => x != field_name);\r\n      setErrorField([...errors]);\r\n    }\r\n    userData[field_name] = checked;\r\n    setUserData({ ...userData });\r\n  };\r\n  const onChangePhoneField = (value, country, e, formattedValue) => {\r\n    console.log(\"phone changed\", value, country, e, formattedValue);\r\n    let phone_number = trim_phone(formattedValue);\r\n    console.log(\"phone_number\", phone_number);\r\n    if (errorField.includes(\"user_phone\")) {\r\n      let errors = errorField.filter((x) => x !== \"user_phone\");\r\n      setErrorField([...errors]);\r\n    }\r\n    userData[\"user_phone\"] = phone_number;\r\n    setUserData({ ...userData });\r\n  };\r\n  const onChangeUserType = (e, user_type) => {\r\n    userData[\"user_type\"] = user_type;\r\n    setUserData({ ...userData });\r\n  };\r\n  const submitModalData = (codeData) => {\r\n    console.log(\"codeData\", codeData);\r\n    let codeStr = to_array(codeData).join(\"\");\r\n    console.log(\"codeStr\", codeStr);\r\n    show_loading(true);\r\n    apiCheckAuthSms(userData, codeStr)\r\n      .then((data) => {\r\n        console.log(\"data\", data);\r\n        show_loading(false);\r\n        if (data.status === \"1\") {\r\n          doRegister();\r\n        } else {\r\n          showToast(data.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n  const onClickRegister = () => {\r\n    let is_valid = validateFields();\r\n    console.log(\"is valid\", is_valid);\r\n    if (is_valid) {\r\n      if (sponsorChecking) {\r\n        showToast(\r\n          \"Please wait until sponsor checking has been finished\",\r\n          \"error\"\r\n        );\r\n        return false;\r\n      }\r\n      if (sponsorModified) {\r\n        showToast(\r\n          \"Please finish editing the sponsor name by clicking the check button\",\r\n          \"error\"\r\n        );\r\n        return false;\r\n      }\r\n      if (userData[\"user_email\"] !== userData[\"user_confirm_email\"]) {\r\n        showToast(\"Invalid or not matching email address\", \"error\");\r\n        return false;\r\n      }\r\n      if (!ValidateEmail(userData[\"user_confirm_email\"])) {\r\n        showToast(\"Invalid or not matching email address\", \"error\");\r\n        return false;\r\n      }\r\n      if (userData[\"user_password\"] !== userData[\"user_password1\"]) {\r\n        showToast(\"Password must match!\", \"error\");\r\n        return false;\r\n      }\r\n      if (!userData[\"agree_terms_condition\"]) {\r\n        showToast(\"Please agree to the terms and conditions\", \"error\");\r\n        return false;\r\n      }\r\n      if (!userData[\"watched_compliance\"]) {\r\n        showToast(\"Please watch the compliance first\", \"error\");\r\n        return false;\r\n      }\r\n      if (!userData[\"trial_policy\"]) {\r\n        showToast(\"Please agree to the 7-Day trial policy\", \"error\");\r\n        return false;\r\n      }\r\n      if (SMS_FUNC === \"disabled\") {\r\n        //if test mode then register directly\r\n        doRegister();\r\n      } else {\r\n        //if live mode then first verify phone number\r\n        show_loading(true);\r\n        apiSendAuthSms(userData)\r\n          .then((data) => {\r\n            console.log(\"=========data===========\", data);\r\n            show_loading(false);\r\n            if (data.status === \"1\") {\r\n              showToast(data.message, \"success\");\r\n              showTwoStepCodeModal();\r\n            } else {\r\n              showToast(data.message, \"error\");\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.log(\"=========err===========\", err);\r\n            show_loading(false);\r\n            showToast(err, \"error\");\r\n          });\r\n      }\r\n    } else {\r\n      window.scrollTo(0, 0); //\r\n    }\r\n  };\r\n  const doRegister = () => {\r\n    show_loading(true);\r\n    apiRegister({ ...userData, ref: defaultSponsorName, coupon_applied: couponApplied, coupon: couponName })\r\n      .then((data) => {\r\n        console.log(\"=========data===========\", data);\r\n        if (data.status === \"1\") {\r\n          //showToast(\"You are in\", \"success\");\r\n          dispatch(updateUser(data.data));\r\n          setTimeout(() => {\r\n            show_loading(false);\r\n            props.history.replace({ pathname: ROUTE_WELCOME });\r\n          }, 500);\r\n        } else {\r\n          show_loading(false);\r\n          showToast(data.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"=========err===========\", err);\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  const doLogout = () => {\r\n    if (empty(userDataStore[\"token\"])) {\r\n      return false;\r\n    }\r\n\r\n    apiLogout(userDataStore[\"token\"])\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n      })\r\n      .catch((err) => {});\r\n    dispatch(updateUser({ token: \"\" }));\r\n  };\r\n\r\n  const [sponsorEdiable, setSponsorEdiable] = useState(false);\r\n  const [sponsorModified, setSponsorModified] = useState(false);\r\n  const [sponsorChecking, setSponsorChecking] = useState(false);\r\n  const onClickEditSponsor = () => {\r\n    setSponsorEdiable(true);\r\n    setTimeout(function () {\r\n      jQuery(\"#sponsor-name\").focus();\r\n    }, 100);\r\n  };\r\n  const onChangeSponsorName = (e) => {\r\n    let field_value = e.target.value;\r\n    setSponsorName(field_value);\r\n    if (field_value === defaultSponsorName) {\r\n      setSponsorModified(false);\r\n    } else {\r\n      setSponsorModified(true);\r\n    }\r\n  };\r\n  const onClickCheckSponsor = () => {\r\n    if (sponsorChecking || !sponsorModified) {\r\n      return false;\r\n    }\r\n    setSponsorChecking(true);\r\n    setTimeout(function () {\r\n      doCheckSponsor();\r\n    }, 500);\r\n  };\r\n  const doCheckSponsor = () => {\r\n    apiCheckSponsor({ ref: sponsorName })\r\n      .then((data) => {\r\n        setSponsorChecking(false);\r\n        console.log(\"=========data===========\", data);\r\n        if (data.status === \"1\") {\r\n          setSponsorModified(false);\r\n          setDefaultSponsorName(data.data);\r\n          setSponsorName(data.data);\r\n          setSponsorEdiable(false);\r\n          showToast(data.message, \"success\");\r\n        } else {\r\n          setSponsorModified(false);\r\n          setSponsorName(defaultSponsorName);\r\n          setSponsorEdiable(false);\r\n          showToast(data.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"=========err===========\", err);\r\n        setSponsorChecking(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  const [passwdStrengthGood, setPasswdStrengthGood] = useState(true);\r\n  const [passwdStrengthErrMessage, setPasswdStrengthErrMessage] = useState(\"\");\r\n\r\n  const checkPasswordStrength = (password) => {\r\n    if (password === \"\") {\r\n      return false;\r\n    }\r\n    apiCheckPasswordStrength(password)\r\n      .then((data) => {\r\n        setSponsorChecking(false);\r\n        console.log(\"=========data===========\", data);\r\n        if (data.status === \"1\") {\r\n          setPasswdStrengthGood(true);\r\n        } else {\r\n          setPasswdStrengthGood(false);\r\n          setPasswdStrengthErrMessage(data.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"=========err===========\", err);\r\n        setSponsorChecking(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  const [couponName, setCouponName] = useState(\"\");\r\n  const [couponApplied, setCouponApplied] = useState(false);\r\n  const [couponAppliedTxt, setCouponAppliedTxt] = useState(\"\");\r\n  const [couponChecking, setCouponChecking] = useState(false);\r\n  const onChangeCouponName = (e) => {\r\n    let field_value = e.target.value;\r\n    setCouponName(field_value);\r\n  };\r\n  const onClickCheckCoupon = () => {\r\n    if (couponChecking) {\r\n      return false;\r\n    }\r\n    if(couponName === \"\"){\r\n      setTimeout(function () {\r\n        jQuery(\"#coupon-name\").focus();\r\n      }, 100);\r\n      return false;\r\n    }\r\n    setCouponChecking(true);\r\n    setTimeout(function () {\r\n      doCheckCoupon();\r\n    }, 500);\r\n  };\r\n  const doCheckCoupon = () => {\r\n    apiCheckCoupon({ coupon: couponName })\r\n      .then((data) => {\r\n        setCouponChecking(false);\r\n        console.log(\"=========data===========\", data);\r\n        if (data.status === \"1\") {\r\n          setCouponApplied(true);\r\n          setCouponAppliedTxt(data.message)\r\n          showToast(data.message, \"success\");\r\n        } else {\r\n          setCouponApplied(false);\r\n          showToast(data.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"=========err===========\", err);\r\n        setCouponChecking(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <HomeLayout>\r\n        <div className=\"main-content\">\r\n          <div\r\n            className=\"section page-section container has-header content-sm\"\r\n            id=\"page-section1\"\r\n          >\r\n            <div className=\"container\">\r\n              <div className=\"form-container margin-auto\">\r\n                <div className=\"reg-form\">\r\n                  <div className=\"logo-wrapper hidden\">\r\n                    <img\r\n                      src=\"/assets/home/images/higherlevelfx_logo_tm.png\"\r\n                      className=\"img-responsive img-logo\"\r\n                      alt=\"\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"user-info-block\">\r\n                        <h3 className=\"box-title text-normal-spacing mt-0 mb-20\">\r\n                          Registration:\r\n                        </h3>\r\n                        <div className=\"row\">\r\n                          <div className=\"col-md-12\">\r\n                            <div className=\"form-group\">\r\n                              <label>Your Sponsor:</label>\r\n                              <div className=\"sponsor-check-block\">\r\n                                <div className=\"sponsor-edit-block\">\r\n                                  <div>\r\n                                    <input\r\n                                      type=\"text\"\r\n                                      className=\"form-control\"\r\n                                      id=\"sponsor-name\"\r\n                                      value={sponsorName}\r\n                                      disabled={\r\n                                        !sponsorEdiable || sponsorChecking\r\n                                      }\r\n                                      onChange={(e) => {\r\n                                        onChangeSponsorName(e);\r\n                                      }}\r\n                                    />\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"sponsor-btn-block\">\r\n                                  <button\r\n                                    className={`btn btn-spiner btn-check-sponsor ${\r\n                                      sponsorModified\r\n                                        ? `btn-outline-success`\r\n                                        : `btn-outline-gray`\r\n                                    } ${sponsorChecking ? `loading` : ``}`}\r\n                                    onClick={(e) => {\r\n                                      onClickCheckSponsor();\r\n                                    }}\r\n                                  >\r\n                                    <span>Check</span>\r\n                                    <i className=\"fa fa-refresh fa-spin\"></i>\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"block margin-top-5\">\r\n                                <span className=\"text-black\">\r\n                                  Not the right Sponsor?\r\n                                </span>{\" \"}\r\n                                <span\r\n                                  className=\"cursor-pointer text-orange\"\r\n                                  onClick={(e) => {\r\n                                    onClickEditSponsor();\r\n                                  }}\r\n                                >\r\n                                  Edit <i className=\"ti-pencil-alt\"></i>\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-md-12\">\r\n                            <div className=\"form-group\">\r\n                              <label>Username:</label>\r\n                              <input\r\n                                type=\"text\"\r\n                                className={\r\n                                  \"form-control\" +\r\n                                  (errorField.includes(\"user_name\")\r\n                                    ? \" is-invalid\"\r\n                                    : \"\")\r\n                                }\r\n                                id=\"user_name\"\r\n                                name=\"user_name\"\r\n                                placeholder=\"\"\r\n                                onChange={(e) => {\r\n                                  onChangeFormField(e);\r\n                                }}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                          <div className=\"col-md-12\">\r\n                            <div className=\"form-group\">\r\n                              <label>Mobile Number:</label>\r\n                              <div className=\"phone-number-box\">\r\n                                <PhoneInput\r\n                                  country={\"us\"}\r\n                                  value={get_data_value(userData, \"user_phone\")}\r\n                                  placeholder=\"\"\r\n                                  onChange={(\r\n                                    value,\r\n                                    country,\r\n                                    e,\r\n                                    formattedValue\r\n                                  ) => {\r\n                                    onChangePhoneField(\r\n                                      value,\r\n                                      country,\r\n                                      e,\r\n                                      formattedValue\r\n                                    );\r\n                                  }}\r\n                                  inputProps={{\r\n                                    type: \"tel\",\r\n                                    className: \"form-control phone_number\",\r\n                                    id: \"phone\",\r\n                                    name: \"user_phone\",\r\n                                    placeholder: \"\",\r\n                                  }}\r\n                                />\r\n\r\n                                <input type=\"hidden\" name=\"phone_number\" />\r\n                                <input type=\"hidden\" name=\"dial_code\" />\r\n                                <button\r\n                                  className=\"a-btn btn-remove-tel\"\r\n                                  onClick={(e) => {\r\n                                    onChangePhoneField(\"\", \"us\", e, \"\");\r\n                                  }}\r\n                                >\r\n                                  <i className=\"fa fa-times\"></i>\r\n                                </button>\r\n                              </div>\r\n                              <div className=\"block margin-top-5\">\r\n                                <span className=\"text-green\">\r\n                                  You will receive a verification code by text!\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                          <div className=\"col-md-6\">\r\n                            <div className=\"form-group\">\r\n                              <label>First Name:</label>\r\n                              <input\r\n                                type=\"text\"\r\n                                className={\r\n                                  \"form-control\" +\r\n                                  (errorField.includes(\"user_first_name\")\r\n                                    ? \" is-invalid\"\r\n                                    : \"\")\r\n                                }\r\n                                id=\"user_first_name\"\r\n                                name=\"user_first_name\"\r\n                                placeholder=\"\"\r\n                                onChange={(e) => {\r\n                                  onChangeFormField(e);\r\n                                }}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-md-6\">\r\n                            <div className=\"form-group\">\r\n                              <label>Last Name:</label>\r\n                              <input\r\n                                type=\"text\"\r\n                                className={\r\n                                  \"form-control\" +\r\n                                  (errorField.includes(\"user_last_name\")\r\n                                    ? \" is-invalid\"\r\n                                    : \"\")\r\n                                }\r\n                                id=\"user_last_name\"\r\n                                name=\"user_last_name\"\r\n                                placeholder=\"\"\r\n                                onChange={(e) => {\r\n                                  onChangeFormField(e);\r\n                                }}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                          <div className=\"col-md-6\">\r\n                            <div className=\"form-group\">\r\n                              <label>Email:</label>\r\n                              <input\r\n                                type=\"email\"\r\n                                className={\r\n                                  \"form-control\" +\r\n                                  (errorField.includes(\"user_email\")\r\n                                    ? \" is-invalid\"\r\n                                    : \"\")\r\n                                }\r\n                                id=\"user_email\"\r\n                                name=\"user_email\"\r\n                                placeholder=\"\"\r\n                                onChange={(e) => {\r\n                                  onChangeFormField(e);\r\n                                }}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-md-6\">\r\n                            <div className=\"form-group\">\r\n                              <label>Confirm Email:</label>\r\n                              <input\r\n                                type=\"email\"\r\n                                className={\r\n                                  \"form-control\" +\r\n                                  (errorField.includes(\"user_confirm_email\")\r\n                                    ? \" is-invalid\"\r\n                                    : \"\")\r\n                                }\r\n                                id=\"user_confirm_email\"\r\n                                name=\"user_confirm_email\"\r\n                                placeholder=\"\"\r\n                                onChange={(e) => {\r\n                                  onChangeFormField(e);\r\n                                }}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                          <div className=\"col-md-6\">\r\n                            <div className=\"form-group\">\r\n                              <label>Password:</label>\r\n                              <input\r\n                                type=\"password\"\r\n                                className={\r\n                                  \"form-control\" +\r\n                                  (errorField.includes(\"user_password\")\r\n                                    ? \" is-invalid\"\r\n                                    : \"\")\r\n                                }\r\n                                id=\"user_password\"\r\n                                name=\"user_password\"\r\n                                placeholder=\"\"\r\n                                onChange={(e) => {\r\n                                  onChangeFormField(e);\r\n                                }}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-md-6\">\r\n                            <div className=\"form-group\">\r\n                              <label>Confirm Password:</label>\r\n                              <input\r\n                                type=\"password\"\r\n                                className={\r\n                                  \"form-control\" +\r\n                                  (errorField.includes(\"user_password1\")\r\n                                    ? \" is-invalid\"\r\n                                    : \"\")\r\n                                }\r\n                                id=\"user_password1\"\r\n                                name=\"user_password1\"\r\n                                placeholder=\"\"\r\n                                onChange={(e) => {\r\n                                  onChangeFormField(e);\r\n                                }}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div\r\n                          className={`row ${\r\n                            passwdStrengthGood ? `hidden` : ``\r\n                          }`}\r\n                        >\r\n                          <div className=\"col-md-12\">\r\n                            <div\r\n                              className=\"block\"\r\n                              style={{\r\n                                display: \"flex\",\r\n                                alignItems: \"center\",\r\n                                marginTop: \"-10px\",\r\n                                marginBottom: \"15px\",\r\n                              }}\r\n                            >\r\n                              <img\r\n                                src=\"/assets/home/images/warning.svg\"\r\n                                alt=\"warning\"\r\n                                style={{ width: \"2rem\", marginRight: \"0.6rem\" }}\r\n                              />\r\n                              <span className=\"text-danger\">\r\n                                {passwdStrengthErrMessage}\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"user-type-block\" style={{minHeight: '444px'}}>\r\n                        <h3 className=\"box-title text-normal-spacing mt-0 mb-0\">\r\n                          Choose your membership:\r\n                        </h3>\r\n                        <div className=\"row\">\r\n                          <div className=\"col-md-6\">\r\n                            <div className=\"plan-item-box\">\r\n                              <label htmlFor=\"plan_type_0\" className=\"margin-0\">\r\n                                <img\r\n                                  src=\"/assets/home/images/20210314/gold-membership.jpg\"\r\n                                  className=\"plan-thumb-img\"\r\n                                  alt=\"\"\r\n                                />\r\n                              </label>\r\n                              <div className=\"text-center margin-bottom-20\">\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  name=\"plan_type\"\r\n                                  className=\"custom-radio plan_type\"\r\n                                  id=\"plan_type_0\"\r\n                                  value=\"0\"\r\n                                  onChange={(e) => {\r\n                                    onChangeUserType(e, \"0\");\r\n                                  }}\r\n                                  checked={\r\n                                    get_data_value(\r\n                                      userData,\r\n                                      \"user_type\",\r\n                                      \"0\"\r\n                                    ) === \"0\"\r\n                                  }\r\n                                />\r\n                                <label htmlFor=\"plan_type_0\"></label>\r\n                              </div>\r\n                              <div className=\"text-center\">\r\n                                <label\r\n                                  className=\"radio-desc-wrapper\"\r\n                                  htmlFor=\"plan_type_0\"\r\n                                >\r\n                                  <p className=\"radio-desc-str\">\r\n                                    $1 for 7 days, then\r\n                                    <br />\r\n                                    $159.00 / month{\" \"}\r\n                                    <span className=\"text-green\">if not</span>\r\n                                    <br />\r\n                                    <span className=\"text-green\">\r\n                                      cancelled!\r\n                                    </span>\r\n                                  </p>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-md-6\">\r\n                            <div className=\"plan-item-box\">\r\n                              <label htmlFor=\"plan_type_1\" className=\"margin-0\">\r\n                                <img\r\n                                  src=\"/assets/home/images/20210314/affiliate.jpg\"\r\n                                  className=\"plan-thumb-img\"\r\n                                  alt=\"\"\r\n                                />\r\n                              </label>\r\n\r\n                              <div className=\"text-center margin-bottom-20\">\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  name=\"plan_type\"\r\n                                  className=\"custom-radio plan_type\"\r\n                                  id=\"plan_type_1\"\r\n                                  value=\"1\"\r\n                                  onChange={(e) => {\r\n                                    onChangeUserType(e, \"1\");\r\n                                  }}\r\n                                  checked={\r\n                                    get_data_value(\r\n                                      userData,\r\n                                      \"user_type\",\r\n                                      \"0\"\r\n                                    ) === \"1\"\r\n                                  }\r\n                                />\r\n                                <label htmlFor=\"plan_type_1\"></label>\r\n                              </div>\r\n                              <div className=\"text-center\">\r\n                                <label\r\n                                  className=\"radio-desc-wrapper\"\r\n                                  htmlFor=\"plan_type_1\"\r\n                                >\r\n                                  <p className=\"radio-desc-str\">\r\n                                    $15.00 / month\r\n                                  </p>\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"block\">\r\n                        <div className=\"form-group\">\r\n                          <label>Enter Promo Code:</label>\r\n                          <div className=\"coupon-check-block\">\r\n                            <div className=\"coupon-edit-block\">\r\n                              <div>\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  id=\"coupon-name\"\r\n                                  value={couponName}                               \r\n                                  onChange={(e) => {\r\n                                    onChangeCouponName(e);\r\n                                  }}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"coupon-btn-block\">\r\n                              <button\r\n                                className={`btn btn-spiner btn-check-coupon btn-outline-success \r\n                                ${couponChecking ? `loading` : ``}`}\r\n                                onClick={(e) => {\r\n                                  onClickCheckCoupon();\r\n                                }}\r\n                              >\r\n                                <span>Check</span>\r\n                                <i className=\"fa fa-refresh fa-spin\"></i>\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                          <div className={`block margin-top-5 ${couponApplied ? \"\" : \"hidden\"}`}>\r\n                            <span className=\"text-green\">\r\n                              {couponAppliedTxt}\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <div\r\n                        className=\"billing-info-block\"\r\n                        id=\"billing-info-block\"\r\n                      >\r\n                        <h3 className=\"box-title text-normal-spacing mt-0 mb-20\">\r\n                          Billing Info:\r\n                        </h3>\r\n                        <div className=\"row\">\r\n                          <div className=\"col-md-12\">\r\n                            <div className=\"form-group\">\r\n                              <label>Street Address:</label>\r\n                              <input\r\n                                type=\"text\"\r\n                                className={\r\n                                  \"form-control\" +\r\n                                  (errorField.includes(\"billing_street\")\r\n                                    ? \" is-invalid\"\r\n                                    : \"\")\r\n                                }\r\n                                id=\"billing_street\"\r\n                                name=\"billing_street\"\r\n                                placeholder=\"\"\r\n                                onChange={(e) => {\r\n                                  onChangeFormField(e);\r\n                                }}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                          <div className=\"col-md-6\">\r\n                            <div className=\"form-group\">\r\n                              <label>City:</label>\r\n                              <input\r\n                                type=\"text\"\r\n                                className={\r\n                                  \"form-control\" +\r\n                                  (errorField.includes(\"billing_city\")\r\n                                    ? \" is-invalid\"\r\n                                    : \"\")\r\n                                }\r\n                                id=\"billing_city\"\r\n                                name=\"billing_city\"\r\n                                placeholder=\"\"\r\n                                onChange={(e) => {\r\n                                  onChangeFormField(e);\r\n                                }}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-md-6\">\r\n                            <div className=\"form-group\">\r\n                              <label>State/Province:</label>\r\n                              <input\r\n                                type=\"text\"\r\n                                className={\r\n                                  \"form-control\" +\r\n                                  (errorField.includes(\"billing_state\")\r\n                                    ? \" is-invalid\"\r\n                                    : \"\")\r\n                                }\r\n                                id=\"billing_state\"\r\n                                name=\"billing_state\"\r\n                                placeholder=\"\"\r\n                                onChange={(e) => {\r\n                                  onChangeFormField(e);\r\n                                }}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                          <div className=\"col-md-6\">\r\n                            <div className=\"form-group\">\r\n                              <label>Zip code:</label>\r\n                              <input\r\n                                type=\"text\"\r\n                                className={\r\n                                  \"form-control\" +\r\n                                  (errorField.includes(\"billing_zip_code\")\r\n                                    ? \" is-invalid\"\r\n                                    : \"\")\r\n                                }\r\n                                id=\"billing_zip_code\"\r\n                                name=\"billing_zip_code\"\r\n                                placeholder=\"\"\r\n                                onChange={(e) => {\r\n                                  onChangeFormField(e);\r\n                                }}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-md-6\">\r\n                            <div className=\"form-group\">\r\n                              <label>Country:</label>\r\n                              <select\r\n                                id=\"billing_country\"\r\n                                name=\"billing_country\"\r\n                                className={\r\n                                  \"form-control\" +\r\n                                  (errorField.includes(\"billing_country\")\r\n                                    ? \" is-invalid\"\r\n                                    : \"\")\r\n                                }\r\n                                onChange={(e) => {\r\n                                  onChangeFormField(e);\r\n                                }}\r\n                                value={get_data_value(\r\n                                  userData,\r\n                                  \"billing_country\",\r\n                                  \"US\"\r\n                                )}\r\n                              >\r\n                                {countryList.map((countryItem, index) => (\r\n                                  <option key={index} value={countryItem.code}>\r\n                                    {countryItem.name}\r\n                                  </option>\r\n                                ))}\r\n                              </select>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"credit-card-block\" id=\"credit-card-block\">\r\n                        <h3 className=\"box-title text-normal-spacing mt-0 mb-20\">\r\n                          Card Details:\r\n                        </h3>\r\n                        <div>\r\n                          <CreditCardForm\r\n                            userData={userData}\r\n                            setUserData={setUserData}\r\n                            errorField={errorField}\r\n                            setErrorField={setErrorField}\r\n                          ></CreditCardForm>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"terms-condition-block\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-md-12\">\r\n                            <div className=\"custom-checkbox form-group padding-top-20\">\r\n                              <input\r\n                                type=\"checkbox\"\r\n                                id=\"agree-terms-condition\"\r\n                                name=\"agree_terms_condition\"\r\n                                onChange={(e) => {\r\n                                  onChangeFormCheckboxField(e);\r\n                                }}\r\n                              />\r\n                              <label htmlFor=\"agree-terms-condition\">\r\n                                &nbsp;I Agree to the{\" \"}\r\n                                <Link\r\n                                  to={ROUTE_TERMS_CONDITIONS}\r\n                                  className=\"text-green\"\r\n                                  target=\"_blank\"\r\n                                >\r\n                                  Terms and Conditions\r\n                                </Link>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                          <div className=\"col-md-12\">\r\n                            <div className=\"custom-checkbox form-group\">\r\n                              <input\r\n                                type=\"checkbox\"\r\n                                id=\"watched-compliance\"\r\n                                name=\"watched_compliance\"\r\n                                onChange={(e) => {\r\n                                  onChangeFormCheckboxField(e);\r\n                                }}\r\n                              />\r\n                              <label htmlFor=\"watched-compliance\">\r\n                                &nbsp;I watched and I understood the{\" \"}\r\n                                <Link\r\n                                  to={ROUTE_COMPLIANCE}\r\n                                  className=\"text-green\"\r\n                                  target=\"_blank\"\r\n                                >\r\n                                  Compliance\r\n                                </Link>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                          <div className=\"col-md-12\">\r\n                            <div className=\"custom-checkbox form-group\">\r\n                              <input\r\n                                type=\"checkbox\"\r\n                                id=\"trial-policy\"\r\n                                name=\"trial_policy\"\r\n                                onChange={(e) => {\r\n                                  onChangeFormCheckboxField(e);\r\n                                }}\r\n                              />\r\n                              <label htmlFor=\"trial-policy\">\r\n                                &nbsp;I read and fully understood the{\" \"}\r\n                                <Link\r\n                                  to={ROUTE_TRIAL_POLICY}\r\n                                  className=\"text-green\"\r\n                                  target=\"_blank\"\r\n                                >\r\n                                  7-Day Trial Policy\r\n                                </Link>\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"reg-button-block\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-md-12\">\r\n                            <p className=\"text-normal-spacing register-desc form-group text-center\">\r\n                              When you join Higher Level FX you have 2 ways to\r\n                              participate. Once your account has been created\r\n                              you can change the type of membership you have\r\n                              inside of your back office! Please note that the\r\n                              billing cycle for both memberships is every 30\r\n                              days.\r\n                            </p>\r\n                            <p className=\"text-normal-spacing register-desc form-group text-center\">\r\n                              This transaction may appear on the cardholder bank\r\n                              statement as “HIGHER LEVEL FX”.\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                          <div className=\"col-md-12\">\r\n                            <div className=\"form-group text-center\">\r\n                              <input\r\n                                type=\"hidden\"\r\n                                name=\"action\"\r\n                                value=\"submit\"\r\n                              />\r\n                              <button\r\n                                className=\"btn btn-green btn-login btn-register btn-login-register\"\r\n                                onClick={onClickRegister}\r\n                                id=\"confirm-update\"\r\n                              >\r\n                                Pay & Register\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {showConfirmModal && (\r\n          <AuthSmsCodeModal\r\n            isVisible={true}\r\n            setShowconfirmModal={setShowconfirmModal}\r\n            submitModalData={submitModalData}\r\n            modalClass=\"home-page\"\r\n          />\r\n        )}\r\n      </HomeLayout>\r\n    </div>\r\n  );\r\n};\r\nexport default withRouter(RegisterPage);\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Home\\ForgotPasswordPage\\ForgotPasswordPage.js",["2130","2131","2132","2133","2134","2135","2136","2137","2138","2139","2140"],"import HomeLayout from \"layouts/HomeLayout/HomeLayout\";\r\nimport {\r\n  ROUTE_FORGOT_PASSWORD,\r\n  ROUTE_FREE_BOOK,\r\n  ROUTE_LOGIN,\r\n  ROUTE_REGISTER,\r\n} from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport { googleKey } from \"config/CONSTANTS\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport TwoFactorCodeModal from \"components/TwoFactorCodeModal/TwoFactorCodeModal\";\r\nimport {\r\n  get_data_value,\r\n  isEmpty,\r\n  is_empty,\r\n  showToast,\r\n  show_loading,\r\n} from \"utils/GlobalFunctions\";\r\nimport { apiLogin, apiRequestResetPassword } from \"services/loginService\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\n\r\nconst ForgotPasswordPage = () => {\r\n  const dispatch = useDispatch();\r\n  const initPage = () => {\r\n    let page_title = \"Forgot password\";\r\n    dispatch(\r\n      UpdateAppData({\r\n        currentPageTitle: page_title,\r\n        current_route: ROUTE_FORGOT_PASSWORD,\r\n      })\r\n    );\r\n    //document.title = page_title;\r\n  };\r\n\r\n  useEffect(() => {\r\n    initPage();\r\n  });\r\n\r\n  //////////////////////////////////////////////////////////////////\r\n  const userDataStore = useSelector((x) => x.userDataStore);\r\n  const userInfo = userDataStore;\r\n  console.log(\"userInfo\", userInfo);\r\n  const initUserData = { user_name: \"\", user_password: \"\" };\r\n  const [userData, setUserData] = useState(initUserData);\r\n  const [errorField, setErrorField] = useState([]);\r\n  const [isBusy, setIsBusy] = useState(false);\r\n\r\n  const checkCaptchaEnabled = () => {\r\n    return true;\r\n  };\r\n  const [recaptchaEnable, setRecaptchaEnable] = useState(checkCaptchaEnabled());\r\n  const [recaptchaValid, setRecaptchaValid] = useState(false);\r\n  const reCaptchaChanged = (value) => {\r\n    console.log(\"reCaptchaChanged\", value);\r\n    setRecaptchaValid(true);\r\n  };\r\n\r\n  let captcha;\r\n  const setCaptchaRef = (ref) => {\r\n    if (ref) {\r\n      return (captcha = ref);\r\n    }\r\n  };\r\n  const resetCaptcha = () => {\r\n    // maybe set it till after is submitted\r\n    captcha.reset();\r\n  };\r\n\r\n  const validateFields = () => {\r\n    var errorList = Array();\r\n    errorList = isEmpty(userData, \"user_email\", errorList);\r\n    errorList = isEmpty(userData, \"user_password\", errorList);\r\n    setErrorField([...errorList]);\r\n    return errorList.length > 0 ? false : true;\r\n  };\r\n  const onChangeFormField = (e, field_name) => {\r\n    if (errorField.includes(field_name)) {\r\n      let errors = errorField.filter((x) => x != field_name);\r\n      setErrorField([...errors]);\r\n    }\r\n    userData[field_name] = e.target.value;\r\n    setUserData({ ...userData });\r\n  };\r\n\r\n  const onClickResetPassword = () => {\r\n    let is_valid = validateFields();\r\n    console.log(\"is valid\", is_valid);\r\n    if (is_valid) {\r\n      if (recaptchaEnable) {\r\n        if (!recaptchaValid) {\r\n          showToast(\"Please confirm that you're not a robot\", \"error\");\r\n          return false;\r\n        }\r\n      }\r\n      show_loading(true);\r\n      apiRequestResetPassword(userData)\r\n        .then((api_res) => {\r\n          console.log(\"api_res\", api_res);\r\n          if (api_res.status === \"1\") {\r\n            //let data = api_res[\"data\"];\r\n            show_loading(false)\r\n            showToast(api_res.message, 'success');\r\n          } else {\r\n            show_loading(false);\r\n            showToast(api_res.message, \"error\");\r\n          }\r\n          if (recaptchaEnable) {\r\n            setRecaptchaValid(false);\r\n            resetCaptcha();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          show_loading(false);\r\n          showToast(err, \"error\");\r\n          setRecaptchaValid(false);\r\n          resetCaptcha();\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <HomeLayout>\r\n        <div className=\"main-content\">\r\n          <div\r\n            className=\"section page-section container has-header content-sm\"\r\n            id=\"page-section1\"\r\n          >\r\n            <div className=\"container\">\r\n              <div className=\"form-container margin-auto\">\r\n                <form className=\"login-form reset-password-form\" method=\"post\">\r\n                  <div className=\"logo-wrapper\">\r\n                    <img\r\n                      src=\"/assets/home/images/higherlevelfx_logo_tm.png\"\r\n                      className=\"img-responsive img-logo\"\r\n                      alt=\"\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group text-center\">\r\n                    <div className=\"margin-bottom-20 font-normal\">\r\n                      Enter the email address for your account and a new\r\n                      password below.\r\n                      <br />\r\n                      You will receive a confirmation email, please click the\r\n                      link in the email to activate your new password.\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    className=\"block\"\r\n                    style={{ maxWidth: \"400px\", margin: \"auto\" }}\r\n                  >\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"user_email\">Email:</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"user_email\"\r\n                        name=\"user_email\"\r\n                        className={`form-control ${\r\n                          errorField.includes(\"user_email\") ? \"is-invalid\" : \"\"\r\n                        }`}\r\n                        placeholder=\"\"\r\n                        value={get_data_value(userData, \"user_email\")}\r\n                        onChange={(e) => {\r\n                          onChangeFormField(e, \"user_email\");\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"user_password\">New Password:</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"user_password\"\r\n                        name=\"user_password\"\r\n                        className={`form-control ${\r\n                          errorField.includes(\"user_password\")\r\n                            ? \"is-invalid\"\r\n                            : \"\"\r\n                        }`}\r\n                        placeholder=\"\"\r\n                        value={get_data_value(userData, \"user_password\")}\r\n                        onChange={(e) => {\r\n                          onChangeFormField(e, \"user_password\");\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group recaptcha-wrap\">\r\n                      <ReCAPTCHA\r\n                        ref={(r) => setCaptchaRef(r)}\r\n                        sitekey={googleKey}\r\n                        onChange={reCaptchaChanged}\r\n                      ></ReCAPTCHA>\r\n                    </div>\r\n\r\n                    <div className=\"form-group text-center padding-top-10\">\r\n                      <input type=\"hidden\" name=\"action\" value=\"submit\" />\r\n                      <button\r\n                        className=\"btn btn-green btn-login\"\r\n                        type=\"button\"\r\n                        onClick={onClickResetPassword}\r\n                      >\r\n                        Reset Password\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"form-group text-center padding-top-10\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-6 register-btn-wrapper\">\r\n                          <Link\r\n                            to={ROUTE_LOGIN}\r\n                            className=\"btn-register text-desc text-normal-spacing\"\r\n                          >\r\n                            Login\r\n                          </Link>\r\n                        </div>\r\n                        <div className=\"col-md-6 reset-password-btn-wrapper\">\r\n                          <Link\r\n                            to={ROUTE_REGISTER}\r\n                            className=\"btn-reset-password text-desc text-normal-spacing\"\r\n                          >\r\n                            Sign up\r\n                          </Link>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </HomeLayout>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(ForgotPasswordPage);","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\components\\TwoFactorCodeModal\\TwoFactorCodeModal.js",["2141","2142","2143"],"import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { empty, isEmpty, jQuery, showToast } from \"utils/GlobalFunctions\";\r\n\r\nfunction TwoFactorCodeModal(props) {\r\n  const { isVisible, setShowconfirmModal, submitModalData, modalClass, onCancelModal } = props;\r\n  useEffect(() => {\r\n    if (isVisible !== undefined) {\r\n      setShow(isVisible);\r\n      if (isVisible) {\r\n        setTimeout(function () {\r\n          jQuery(\".verification-code-item-0\").focus();\r\n        }, 300);\r\n      }\r\n    }\r\n  }, [isVisible]);\r\n  const [show, setShow] = useState(false);\r\n  const [codeData, setCodeData] = useState([]);\r\n  const [errorField, setErrorField] = useState([]);\r\n  const validateFields = () => {\r\n    var errorList = Array();\r\n    for (var i = 0; i < 6; i++) {\r\n      errorList = isEmpty(codeData, i, errorList);\r\n    }\r\n    setErrorField([...errorList]);\r\n    return errorList.length > 0 ? false : true;\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    setShowconfirmModal(false);\r\n    if(!empty(onCancelModal)){\r\n      onCancelModal()\r\n    }\r\n  };\r\n\r\n  const rows = [0, 1, 2, 3, 4, 5].map((val, index) => {\r\n    return (\r\n      <input\r\n        key={index}\r\n        className={`verification-code-item no-spin verification-code-item-${index}`}\r\n        type=\"number\"\r\n        maxLength=\"1\"\r\n        size=\"1\"\r\n        min=\"0\"\r\n        max=\"9\"\r\n        pattern=\"[0-9]{1}\"\r\n        onChange={(e) => {\r\n          onChangeCodeItemField(e, index);\r\n        }}\r\n        onKeyPress={(e) => {\r\n          onKeyPressed(e);\r\n        }}\r\n      />\r\n    );\r\n  });\r\n\r\n  const onChangeCodeItemField = (e, field_index) => {\r\n    let val = e.target.value;\r\n    let code = \"\";\r\n    if(val.length > 0) {\r\n        code = val.substr(val.length - 1); \r\n    }\r\n    codeData[field_index] = code;\r\n    setCodeData({ ...codeData });\r\n  };\r\n\r\n  const submitVerificationCode = () => {\r\n    let is_valid = validateFields();\r\n    console.log(\"is valid\", is_valid);\r\n    if (is_valid) {\r\n        submitModalData(codeData);\r\n    }else {\r\n        showToast(\"Please input 2-step verification code correctly\", \"error\");\r\n    }\r\n  };\r\n\r\n  const onKeyPressed = (e) => {\r\n    if(e.key === 'Enter'){\r\n      console.log('enter press here!');\r\n      submitVerificationCode()\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        centered\r\n        dialogClassName={modalClass}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Google 2-Step Verification</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"block\">\r\n            <p className=\"text-normal margin-bottom-20 text-gray modal-header-desc\">\r\n              Enter the 6-digit code generated by your authenticator app.\r\n            </p>\r\n          </div>\r\n          <div className=\"block margin-bottom-20 text-center\">\r\n            <div className=\"sms-verification-box six-digits-box\">\r\n              <div id=\"dialog\">\r\n                <div id=\"form\" className=\"verification-form\">\r\n                  {rows}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"block\">\r\n            <p className=\"margin-bottom-10 modal-footer-desc\">\r\n              If you have trouble signing in, please contact our support!\r\n            </p>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n        <button\r\n            type=\"button\"\r\n            className=\"btn btn-light btn-cancel-2fa mr-1\"\r\n            data-dismiss=\"modal\"\r\n            onClick={handleClose}\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn-complete-2fa btn btn-green btn-primary\"\r\n            onClick={submitVerificationCode}\r\n          >\r\n            Continue\r\n          </button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TwoFactorCodeModal;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\loginService.js",["2144","2145","2146"],"import { empty } from \"utils/GlobalFunctions\";\r\nimport { axiosDelete, axiosGet, axiosPost, axiosPut } from \"./ajaxServices\";\r\nimport { urlCheckAuthSms, urlCheckCoupon, urlCheckPasswordStrength, urlCheckSponsor, urlCheckTwoFactAuth, urlConfirmPassword, urlGuestNewTicket, urlLogin, urlLoginTwoFactAuth, urlLogout, urlRegister, urlRequestResetPassword, urlSendAuthSms } from \"./CONSTANTS\";\r\n\r\nexport function apiLogin(userData) {\r\n    const url = urlLogin;\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n    var formData = new FormData();\r\n    formData.append(\"user_name\", userData.user_name);\r\n    formData.append(\"user_password\", userData.user_password); \r\n  \r\n    return new Promise((resolve, reject) => {\r\n      axiosPost(url, formData, config)\r\n      .then(function (response) {\r\n        resolve(response);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n    });   \r\n}\r\n\r\nexport function apiRegister(params) {\r\n  const url = urlRegister;\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  var formData = new FormData();\r\n  formData.append(\"user_name\", params.user_name);\r\n  formData.append(\"user_first_name\", params.user_first_name);\r\n  formData.append(\"user_last_name\", params.user_last_name);\r\n  formData.append(\"user_email\", params.user_email);\r\n  formData.append(\"user_password\", params.user_password);\r\n  formData.append(\"user_phone\", params.user_phone);\r\n  formData.append(\"user_type\", params.user_type);\r\n  formData.append(\"billing_city\", params.billing_city);\r\n  formData.append(\"billing_country\", params.billing_country);\r\n  formData.append(\"billing_state\", params.billing_state);\r\n  formData.append(\"billing_street\", params.billing_street);\r\n  formData.append(\"billing_zip_code\", params.billing_zip_code);\r\n  formData.append(\"card_number\", params.card_number);\r\n  formData.append(\"cvv\", params.cvv);\r\n  formData.append(\"exp_month\", params.exp_month);\r\n  formData.append(\"exp_year\", params.exp_year);\r\n  formData.append(\"owner\", params.owner);\r\n  formData.append(\"ref\", empty(params.ref) ? \"\" : params.ref);\r\n  formData.append(\"coupon_applied\", !empty(params.coupon_applied) ? '1' : '0');\r\n  formData.append(\"coupon\", params.coupon);\r\n\r\n  return new Promise((resolve, reject) => {\r\n    axiosPost(url, formData, config)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n}\r\n\r\nexport function apiSendAuthSms(params) {\r\n  const url = urlSendAuthSms;\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  var formData = new FormData();\r\n  formData.append(\"user_phone\", params.user_phone);\r\n  return new Promise((resolve, reject) => {\r\n    axiosPost(url, formData, config)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n}\r\n\r\nexport function apiCheckAuthSms(params, code) {\r\n  const url = urlCheckAuthSms;\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  var formData = new FormData();\r\n  formData.append(\"user_phone\", params.user_phone);\r\n  formData.append(\"code\", code);\r\n  return new Promise((resolve, reject) => {\r\n    axiosPost(url, formData, config)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n}\r\n\r\nexport function apiLoginTwoFactAuth(userData, codeStr) {\r\n  const url = urlLoginTwoFactAuth;\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  var formData = new FormData();\r\n  formData.append(\"user_name\", userData.user_name);\r\n  formData.append(\"user_password\", userData.user_password); \r\n  formData.append(\"code\", codeStr);\r\n  return new Promise((resolve, reject) => {\r\n    axiosPost(url, formData, config)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n}\r\n\r\nexport function apiRequestResetPassword(userData) {\r\n  const url = urlRequestResetPassword;\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  var formData = new FormData();\r\n  formData.append(\"user_email\", userData.user_email);\r\n  formData.append(\"user_password\", userData.user_password); \r\n\r\n  return new Promise((resolve, reject) => {\r\n    axiosPost(url, formData, config)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n}\r\nexport function apiConfirmPassword(get_params) {\r\n  const url = urlConfirmPassword;\r\n  return new Promise((resolve, reject) => {\r\n    axiosGet(url, get_params, \"\")\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n}\r\n\r\nexport function apiLogout(token) {\r\n  const url = urlLogout;\r\n  const get_params = {token:token}\r\n  return new Promise((resolve, reject) => {\r\n    axiosGet(url, get_params, \"\")\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n}\r\n\r\nexport function apiGuestNewTicket(params) {\r\n  const url = urlGuestNewTicket;\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  var formData = new FormData();\r\n  formData.append(\"email\", params.email);\r\n  formData.append(\"title\", params.subject);\r\n  formData.append(\"description\", params.description);\r\n\r\n  return new Promise((resolve, reject) => {\r\n    axiosPost(url, formData, config)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n}\r\n\r\nexport function apiCheckSponsor(params) {\r\n  const url = urlCheckSponsor;\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  var formData = new FormData();\r\n  formData.append(\"ref\", empty(params.ref) ? \"\" : params.ref);\r\n\r\n  return new Promise((resolve, reject) => {\r\n    axiosPost(url, formData, config)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n}\r\n\r\nexport function apiCheckPasswordStrength(password) {\r\n  const url = urlCheckPasswordStrength;\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  var formData = new FormData();\r\n  formData.append(\"password\", password);\r\n\r\n  return new Promise((resolve, reject) => {\r\n    axiosPost(url, formData, config)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n}\r\n\r\nexport function apiCheckCoupon(params) {\r\n  const url = urlCheckCoupon;\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  var formData = new FormData();\r\n  formData.append(\"coupon\", empty(params.coupon) ? \"\" : params.coupon);\r\n\r\n  return new Promise((resolve, reject) => {\r\n    axiosPost(url, formData, config)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n}","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\utils\\countryList.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\components\\CreditCardForm\\CreditCardForm.js",["2147","2148","2149"],"import React, { useState } from \"react\";\r\nimport { Number, Cvc, Expiration } from \"react-credit-card-primitives\";\r\nimport { isEmpty } from \"utils/GlobalFunctions\";\r\nconst CreditCardForm = (props) => {\r\n  const { userData, setUserData, errorField, setErrorField } = props;\r\n\r\n  \r\n\r\n  let curYear = new Date().getFullYear();\r\n\r\n  const onChangeCreditCardForm = (value, valid, field_name) => {\r\n    console.log('card is valid',field_name, value, valid);\r\n    if (value === \"\") {\r\n      valid = false;\r\n    }\r\n    if (valid) {\r\n      if (errorField.includes(field_name)) {\r\n        let errors = errorField.filter((x) => x !== field_name);\r\n        setErrorField([...errors]);\r\n      }\r\n    } else {\r\n      if (!errorField.includes(field_name)) {\r\n        setErrorField([...errorField, field_name]);\r\n      }\r\n    }\r\n    console.log(\"cardData\", userData);\r\n    let newData = {};\r\n    if(!valid) {\r\n      value = \"\";\r\n    }\r\n    newData[field_name] = value;\r\n    setUserData({ ...userData, ...newData});\r\n  };\r\n\r\n  const years = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map((val, index) => {\r\n    return (\r\n      <option key={index} value={val + curYear - 2000}>\r\n        {val + curYear}\r\n      </option>\r\n    );\r\n  });\r\n  return (\r\n    <div className=\"creditCardForm\">\r\n      <div className=\"payment\">\r\n        <form>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <div className=\"form-group card-number\" id=\"card-number-field\">\r\n                <label htmlFor=\"cardNumber\">Card Number</label>\r\n                <Number\r\n                  onChange={({ value, valid }) =>\r\n                    onChangeCreditCardForm(value, valid, \"card_number\")\r\n                  }\r\n                  cardTypes={[]}\r\n                  render={({ getInputProps, valid }) => (\r\n                    <input\r\n                      {...getInputProps()}\r\n                      className={\r\n                        \"form-control\" +\r\n                        (errorField.includes(\"card_number\")\r\n                          ? \" is-invalid\"\r\n                          : \"\")\r\n                      }\r\n                      id=\"cardNumber\"\r\n                      placeholder=\"\"\r\n                    />\r\n                  )}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <div className=\"form-group owner\">\r\n                <label htmlFor=\"owner\">Name On Card</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className={\r\n                    \"form-control\" +\r\n                    (errorField.includes(\"owner\")\r\n                      ? \" is-invalid\"\r\n                      : \"\")\r\n                  }\r\n                  id=\"owner\"\r\n                  onChange={(e) => {\r\n                    onChangeCreditCardForm(e.target.value, true, \"owner\");\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <div className=\"form-group CVV\">\r\n                <label htmlFor=\"cvv\">CVV</label>\r\n                <Cvc\r\n                  onChange={({ value, valid }) =>\r\n                    onChangeCreditCardForm(value, valid, \"cvv\")\r\n                  }\r\n                  render={({ getInputProps, valid }) => (\r\n                    <input\r\n                      {...getInputProps()}\r\n                      className={\r\n                        \"form-control\" +\r\n                        (errorField.includes(\"cvv\") ? \" is-invalid\" : \"\")\r\n                      }\r\n                      id=\"cvv\"\r\n                      placeholder=\"\"\r\n                    />\r\n                  )}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 exp-date-block\">\r\n              <div className=\"block\">\r\n                <div className=\"form-group\" id=\"expiration-date\">\r\n                  <label>Expiration Date</label>\r\n                  <div className=\"block\">\r\n                    <select\r\n                      id=\"expiration-month\"\r\n                      className=\"form-control\"\r\n                      onChange={(e) => {\r\n                        onChangeCreditCardForm(\r\n                          e.target.value,\r\n                          true,\r\n                          \"exp_month\"\r\n                        );\r\n                      }}\r\n                    >\r\n                      <option value=\"01\">January</option>\r\n                      <option value=\"02\">February </option>\r\n                      <option value=\"03\">March</option>\r\n                      <option value=\"04\">April</option>\r\n                      <option value=\"05\">May</option>\r\n                      <option value=\"06\">June</option>\r\n                      <option value=\"07\">July</option>\r\n                      <option value=\"08\">August</option>\r\n                      <option value=\"09\">September</option>\r\n                      <option value=\"10\">October</option>\r\n                      <option value=\"11\">November</option>\r\n                      <option value=\"12\">December</option>\r\n                    </select>\r\n                    <select\r\n                      id=\"expiration-year\"\r\n                      className=\"form-control\"\r\n                      onChange={(e) => {\r\n                        onChangeCreditCardForm(\r\n                          e.target.value,\r\n                          true,\r\n                          \"exp_year\"\r\n                        );\r\n                      }}\r\n                    >\r\n                      {years}\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                <div className=\"clearfix\"></div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6 credit-card-img-block\">\r\n              <div className=\"form-group\" id=\"credit_cards\">\r\n                <label className=\"t-show-desktop\">&nbsp;</label>\r\n                <div className=\"credit-card-img-list block m-text-left text-right\">\r\n                  <img\r\n                    src=\"/assets/global/plugins/credit-card-validation-form/assets/images/discover.jpg\"\r\n                    alt=\"\"\r\n                    id=\"discover\"\r\n                  />\r\n                  <img\r\n                    src=\"/assets/global/plugins/credit-card-validation-form/assets/images/visa.jpg\"\r\n                    alt=\"\"\r\n                    id=\"visa\"\r\n                  />\r\n                  <img\r\n                    src=\"/assets/global/plugins/credit-card-validation-form/assets/images/mastercard.jpg\"\r\n                    alt=\"\"\r\n                    id=\"mastercard\"\r\n                    className=\"\"\r\n                  />\r\n                  <img\r\n                    src=\"/assets/global/plugins/credit-card-validation-form/assets/images/amex.jpg\"\r\n                    alt=\"\"\r\n                    id=\"amex\"\r\n                    className=\"\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreditCardForm;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Home\\RewardsPlanPage\\RewardsPlanPage.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Home\\AboutUsPage\\AboutUsPage.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Home\\SupportPage\\SupportPage.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Home\\UserAgreementPage\\UserAgreementPage.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Home\\TermsConditionsPage\\TermsConditionsPage.js",["2150"],"import HomeLayout from \"layouts/HomeLayout/HomeLayout\";\r\nimport { ROUTE_FREE_BOOK, ROUTE_TERMS_CONDITIONS } from \"navigation/CONSTANTS\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\n\r\nconst TermsConditionsPage = () => {\r\n  const dispatch = useDispatch();\r\n  const initPage = () => {\r\n    let page_title = \"Terms and Conditions\";\r\n    dispatch(\r\n      UpdateAppData({\r\n        currentPageTitle: page_title,\r\n        current_route: ROUTE_TERMS_CONDITIONS,\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    initPage();\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <HomeLayout>\r\n        <div className=\"main-content\">\r\n          <div\r\n            className=\"section page-section container has-header content-sm\"\r\n            id=\"page-section1\"\r\n          >\r\n            <div className=\"container d-padding-top-20\">\r\n              <div className=\"row d-margin-top-20\">\r\n                <div className=\"col-md-12 md-margin-bottom-30\">\r\n                  <h4 className=\"text-normal-spacing d-margin-bottom-40\">\r\n                    Terms and Conditions\r\n                  </h4>\r\n                  <p className=\"desc-v1-1\">\r\n                    These Terms and Conditions, in their present form and as\r\n                    amended at the discretion of Higher Level FX™, are\r\n                    incorporated into the Higher Level FX™ Business Affiliate\r\n                    User Agreement. These are the terms and conditions of the\r\n                    Business Affiliate's contract with Higher Level FX™. It is\r\n                    the responsibility of each Business Affiliate to read,\r\n                    understand, adhere to, and ensure that they are aware of and\r\n                    operating under the most current version of these Terms and\r\n                    Conditions. You must also comply with the description of the\r\n                    Rewards Plan and honor all applicable laws in the country in\r\n                    which you operate your Higher Level FX™ business. The words\r\n                    \"company\" and “Higher Level FX\", when used in these\r\n                    documents, refer to Higher Level FX™, and the term \"BA\"\r\n                    means “Business Affiliate\". A Business Affiliate is an\r\n                    independent contractor, not an employee of the company.\r\n                    <br />\r\n                    The purpose of the Business Affiliate Agreement is: to deﬁne\r\n                    the relationship between the company and the BA; to set\r\n                    standards of acceptable business behavior; to assist BA in\r\n                    building and protecting their business.\r\n                    <br />\r\n                    <b>Changes</b>\r\n                    <br />\r\n                    The Company may from time to time amend the terms and\r\n                    conditions of the BA User Agreement, Terms and Conditions,\r\n                    Rewards Plan and Software Price List. Amendments shall be\r\n                    effective upon notiﬁcation of the changes in ofﬁcial Higher\r\n                    Level FX™ publications, website(s), and/or electronic\r\n                    notiﬁcations distributed to all active BA’s.\r\n                    <br />\r\n                    <b>\r\n                      Consequences of Delays, Closures and Platform Set Up\r\n                      Mistakes\r\n                    </b>\r\n                    <br />\r\n                    The company shall not be responsible for delays and failures\r\n                    in performing its obligations due to circumstances beyond\r\n                    its reasonable control, such as strikes, labor difﬁculties,\r\n                    riots, war, ﬁre, death, curtailment or interruption of a\r\n                    source of supply, government decrees or orders, cyber\r\n                    hacking, currency exchange issues, ﬁat currency trading\r\n                    platform temporary shutdowns and/or closures, the\r\n                    consequences of an BA clicking the YES/ON button on the\r\n                    trading platforms for withdrawing ﬁat currencies, and any\r\n                    other trading platform set up mistakes made by the BA in\r\n                    direct conﬂict with company trainings and guidelines, etc.\r\n                    <br />\r\n                    <b>Provisions Severable</b>\r\n                    <br />\r\n                    If any provision of the Business Affiliate User Agreement as\r\n                    it currently exists or as may be amended is found to be\r\n                    invalid, illegal, or unenforceable for any reason, only the\r\n                    invalid provision will be severed from the Business\r\n                    Affiliate User Agreement; the remaining terms and provisions\r\n                    shall remain in full force and effect and shall be construed\r\n                    as if such invalid, illegal, or unenforceable provision\r\n                    never comprised a part of the Business Affiliate User\r\n                    Agreement.\r\n                    <br />\r\n                    <b>Titles Not Substantive</b>\r\n                    <br />\r\n                    The titles and headings to these Terms and Conditions are\r\n                    for reference purposes only and do not constitute, and shall\r\n                    not be construed as, substantive terms of the Business\r\n                    Affiliate User Agreement.\r\n                    <br />\r\n                    <b>HigherLevel FX products</b>\r\n                    <br />\r\n                    By purchasing or owning an active HigherLevel FX software\r\n                    license you agree to ALL the following: You fully understand\r\n                    that this is an educational tool which must be used on a\r\n                    demo account and no real money is to be involved what so\r\n                    ever. You fully agree that you will ONLY turn on our\r\n                    software or any of our educational products when you wish to\r\n                    educate yourself so you can examine the trades it took and\r\n                    study them. You must NEVER treat any educational tools from\r\n                    HigherLevel FX as an auto trader for personal or financial\r\n                    gain. Your goals must be education only!\r\n                    <br />\r\n                    <b>Waiver</b>\r\n                    <br />\r\n                    The company never forfeits its right to require BA\r\n                    compliance with the Business Affiliate User Agreement or\r\n                    with applicable laws and regulations governing business\r\n                    conduct. Only in rare circumstances will a policy be waived,\r\n                    and the Compliance Ofﬁcer or an ofﬁcer of the company will\r\n                    convey such waivers in writing. The waiver will apply only\r\n                    to that speciﬁc case.\r\n                    <br />\r\n                    <b>Becoming a BA</b>\r\n                    <br />\r\n                    The requirements to become a BA: Be at least the age of\r\n                    majority in your country of residence; reside in a\r\n                    geographic area where Higher Level FX™ has been approved for\r\n                    business; fully read and accept the company's Terms and\r\n                    Conditions, Full Rewards Plan, Income Disclaimers, Business\r\n                    Affiliate Agreement, Terms of Use, Privacy Policy and Refund\r\n                    Policy; as an independent contractor, assume all appropriate\r\n                    responsibilities for accounting for income tax, insurances\r\n                    and expenses to support your business. The company reserves\r\n                    the right to accept or reject any application for any\r\n                    reason.\r\n                    <br />\r\n                    <b>Username Identiﬁcation and BA Number</b>\r\n                    <br />\r\n                    When the company receives and accepts a new BA account\r\n                    registration, the company will assign a unique BA number to\r\n                    that\r\n                    <br />\r\n                    Business Affiliate. BA must use their BA number whenever\r\n                    they communicate with a company representative regarding\r\n                    business matters.\r\n                    <br />\r\n                    <b>BA Beneﬁts</b>\r\n                    <br />\r\n                    Once the company accepts aBusiness Affiliate Application and\r\n                    Agreement, the beneﬁts of the Rewards Plan and the Business\r\n                    Affiliate Agreement are available to the new BA.\r\n                    <br />\r\n                    These beneﬁts include the right to purchase company software\r\n                    products and services; participate in the company Rewards\r\n                    Plan (receive bonuses and commissions, if eligible); sponsor\r\n                    other individuals as Customers or BA’s into the company\r\n                    business and thereby build a Downline Organization and\r\n                    progress through the company Rewards Plan; receive company\r\n                    literature and other company communications; participate in\r\n                    company-sponsored support, service, training, motivational,\r\n                    and recognition functions upon payment of appropriate\r\n                    charges, if applicable; participate in promotional and\r\n                    incentive contests and programs sponsored by Higher Level\r\n                    FX™ for its BA's; BA may retail Higher Level FX™ software\r\n                    products or services and proﬁt from these sales. Operating\r\n                    as a Business Affiliate Actions of Household Members or\r\n                    Afﬁliated Individuals - If any member of a BA's immediate\r\n                    household engages in any activity, which, if performed by\r\n                    the BA would violate any provision of the Business Affiliate\r\n                    User Agreement, such activity will be deemed a violation by\r\n                    the BA.\r\n                    <br />\r\n                    A BA must adhere to the terms of the company Rewards Plan as\r\n                    set forth in ofﬁcial company literature or ofﬁcial company\r\n                    website(s). BA shall not offer the company opportunity\r\n                    through or in combination with, any other opportunity or\r\n                    unapproved method of marketing (unless approved by the\r\n                    company Corporate or Compliance Department). BA shall not\r\n                    require or encourage other current or prospective Customers\r\n                    or BA’s to participate in the company in any manner that\r\n                    varies from the program as set forth in ofﬁcial company\r\n                    literature. BA shall not require or encourage other current\r\n                    or prospective Customers or BA’s to execute any agreement or\r\n                    contract other than ofﬁcial ofﬂine or online company\r\n                    agreements and contracts in order to become an BA.\r\n                    Similarly, BA shall not require or encourage other current\r\n                    or prospective Customers or BA’s to make any purchase from,\r\n                    or payment to, any individual or other entity to participate\r\n                    in the company Rewards Plan, other than those purchases or\r\n                    payments identiﬁed as recommended or required in ofﬁcial\r\n                    company literature or ofﬁcial company websites(s).\r\n                    <br />\r\n                    <b>Advertising In general</b>\r\n                    <br />\r\n                    BA’s must avoid all discourteous, deceptive, misleading,\r\n                    illegal, unethical, or immoral conduct or practices in their\r\n                    marketing and promotion of Higher Level FX™, the company\r\n                    opportunity, the Rewards Plan, and company software\r\n                    products. No BA may produce unauthorized sales, marketing,\r\n                    and support materials to market or promote the company, the\r\n                    company opportunity, the Rewards Plan, company's products,\r\n                    or their company businesses (unless approved by company\r\n                    Corporate or Compliance Department in writing).\r\n                    <br />\r\n                    All BA’s may only use sales aids and support materials\r\n                    produced or currently approved by the company. Sales,\r\n                    marketing and support materials include, but are not limited\r\n                    to, training and recruiting information, brochures, ﬂyers,\r\n                    pamphlets, posters, postcards, letters, classNameiﬁed\r\n                    advertisements, etc. promoting the company's software\r\n                    products and services, as well as e-mail messages, voicemail\r\n                    message recordings, and Internet Websites used to publicize\r\n                    the company, its software products, services, or Rewards\r\n                    Plan. If BA does use his/her own materials or marketing\r\n                    methods, the BA must contact the company compliance\r\n                    department for pre-approval. Otherwise, the use of such\r\n                    information is unauthorized.\r\n                    <br />\r\n                    <b>Media Inquiries</b>\r\n                    <br />\r\n                    BA must refer all media inquiries regarding Higher Level FX™\r\n                    to the Higher Level FX™ Compliance Department. This will\r\n                    ensure that accurate and consistent information reaches the\r\n                    general public.\r\n                    <br />\r\n                    <b>Trademarks and Copyrights</b>\r\n                    <br />\r\n                    A BA may not use the Higher Level FX™ trademark or trade\r\n                    name or corporate logo to promote their independent\r\n                    business. Rather, they must use the “Business Affiliate\"\r\n                    logo to promote their business. A reproducible copy of the\r\n                    logo can be obtained from Higher Level FX™. However, this\r\n                    logo may only be used on personal stationery and speciﬁcally\r\n                    approved literature but not on clothing, signage, or motor\r\n                    vehicles (unless pre-approved by company Compliance\r\n                    Department). BA may describe themselves as a “Higher Level\r\n                    FX™ Business Affiliate\" in the business pages of ofﬂine and\r\n                    online telephone directories. BA should not answer the\r\n                    telephone in any manner that might indicate or suggest that\r\n                    the caller has reached a Higher Level FX™ corporate ofﬁce.\r\n                    BA may not record or reproduce materials from any company\r\n                    corporate function, event, speech, etc. (unless pre-approved\r\n                    by company Compliance Department). BA may not record,\r\n                    reproduce, or copy any presentation or speech by any company\r\n                    spokesperson, representative, speaker, ofﬁcer, director, or\r\n                    other BA. BA may not reproduce or copy any recording of a\r\n                    company-produced media presentation including audiotapes,\r\n                    videotapes, CDs, etc. BA may not publish, or cause to be\r\n                    published, in any written or electronic media, the name,\r\n                    photograph or likeness, copyrighted materials, or property\r\n                    of individual Business Affiliates with the company without\r\n                    express written authorization from the individual and/or\r\n                    company. Business Affiliates may not publish, or cause to be\r\n                    published, in any written form or electronic media, the\r\n                    copyrighted materials or property of the company, without\r\n                    express written authorization from the company.\r\n                    <br />\r\n                    <b>Use of Business Affiliate's Name, Likeness, and Image</b>\r\n                    <br />\r\n                    Business Affiliate's consent to the company's use of their\r\n                    name, testimonial (or other statements about the company,\r\n                    its products or opportunity in printed or recorded form,\r\n                    including translations, paraphrases, and electronic\r\n                    reproductions of the same), and image or likeness (as\r\n                    produced or recorded in photographic, digital, electronic,\r\n                    video or ﬁlm media) in connection with advertising,\r\n                    promoting and publicizing Higher Level FX™ opportunity or\r\n                    products, or any company related or sponsored events.\r\n                    <br />\r\n                    <b>Trading Proﬁt Claims</b>\r\n                    <br />\r\n                    BA must not make claims that Higher Level FX's software will\r\n                    produce any guaranteed proﬁts of any kind. There are many\r\n                    variables which affect the performance of the software such\r\n                    as market conditions, ﬁat currency volatility, day and time\r\n                    of the trade, just to mention of few variables. Thus there\r\n                    is no way to predict trading software results. You can only\r\n                    mention performance characteristics as contained in ofﬁcial\r\n                    Higher Level FX literature.\r\n                    <br />\r\n                    <b>Income Claims</b>\r\n                    <br />\r\n                    BA's may not make income projections or claims or disclose\r\n                    their Higher Level FX income (including the showing of\r\n                    checks, copies of checks, bank statements, or trading\r\n                    results) when presenting or discussing the Higher Level FX\r\n                    opportunity or Rewards Plan, except as set forth in ofﬁcial\r\n                    Higher Level FX literature.\r\n                    <br />\r\n                    <b>Unauthorized Recruiting</b>\r\n                    <br />\r\n                    As an independent contractor, BA's may participate in other\r\n                    direct selling or network marketing or multi-level marketing\r\n                    ventures (collectively, \"multi-level marketing\"), and BA's\r\n                    may engage in selling activities related to non Higher Level\r\n                    FX products and services if they desire to do so. Although a\r\n                    BA may elect to participate in another multi-level marketing\r\n                    opportunity, they are prohibited from unauthorized\r\n                    recruiting activities, which include the following:\r\n                    recruiting or enrolling Higher Level FX customers or BA's\r\n                    for other multi-level marketing business ventures, either\r\n                    directly or through a third party. This includes, but is not\r\n                    limited to, presenting or assisting in the presentation of\r\n                    other multi-level marketing business ventures to any Higher\r\n                    Level FX customer or BA, or implicitly or explicitly\r\n                    encouraging any Higher Level FX customer or BA to join other\r\n                    business ventures. It is a violation of this policy to\r\n                    recruit or enroll a Higher Level FX customer or BA for\r\n                    another multi-level marketing business, even if the BA does\r\n                    not know that the prospect is also a Higher Level FX\r\n                    customer or BA; producing any literature, recording, or\r\n                    promotional material of any nature for another multi-level\r\n                    marketing business which is used by the BA or any third\r\n                    person to recruit Higher Level FX customers or BA for that\r\n                    business venture; selling, offering to sell, or promoting\r\n                    any competing products or services to Higher Level FX\r\n                    customers or BA. The only exception to this rule is that\r\n                    direct customer and personal enrollees of the BA can be\r\n                    exposed to a product or service (ﬁrst level, personally\r\n                    sponsored only). Higher Level FX may cancel the BA's\r\n                    agreement for violations to this provision. In addition,\r\n                    when a BA participates in other multi-level marketing\r\n                    ventures, the BA may not participate in any Higher Level FX\r\n                    leadership meetings, conferences, qualiﬁcation seminars, and\r\n                    the like.\r\n                    <br />\r\n                    <b>Post-cancellation Solicitation Prohibited</b>\r\n                    <br />\r\n                    A former BA shall not directly or through a third party\r\n                    solicit any BA or customer to enroll in any direct sales,\r\n                    network marketing, or multi-level marketing program or\r\n                    opportunity for a period of one (1) year after the\r\n                    cancellation of an individual or entity's BA User Agreement.\r\n                    This provision shall survive the expiration of the BA\r\n                    obligations to Higher Level FX, pursuant to the BA User\r\n                    Agreement.\r\n                    <br />\r\n                    <b>Downline Genealogy Reports</b>\r\n                    <br />\r\n                    The Higher Level FX Downline Genealogy Reports are\r\n                    conﬁdential and contain proprietary business trade secrets.\r\n                    A BA may not use the reports for any purpose other than for\r\n                    developing their Higher Level FX business. During any term\r\n                    of the BA User Agreement and for a period of ﬁve (5) years\r\n                    after the termination or expiration of the BA User Agreement\r\n                    between Business Affiliate and Higher Level FX, for any\r\n                    reason whatsoever, a BA shall not, on his/her own behalf or\r\n                    on behalf of any other person, partnership, association,\r\n                    corporation, or other entity: disclose any information\r\n                    contained in the reports to any third party; use the reports\r\n                    to compete with Higher Level FX or recruit or solicit any BA\r\n                    or customer listed on the reports to participate in other\r\n                    multilevel marketing ventures. This provision shall survive\r\n                    the termination or expiration of this Agreement.\r\n                    <br />\r\n                    <b>Corporation, Partnerships, and Trusts</b>\r\n                    <br />\r\n                    A corporation, partnership, or trust (collectively referred\r\n                    to in this section as an \"Entity\") may apply to be a BA by\r\n                    submitting its Articles of Incorporation, Partnership\r\n                    Agreement, or trust documents (these documents are\r\n                    collectively referred to as the \"Entity Documents\") to\r\n                    Higher Level FX along with a properly completed Corporation,\r\n                    Partnership DBA Registration Form. A BA may change its\r\n                    status under the same sponsor from an individual to a\r\n                    partnership, corporation, or trust, or from one type of\r\n                    entity to another. To do so, the BA must provide the entity\r\n                    documents and a properly completed BA Agreement and the\r\n                    appropriate registration form. The Corporation, Partnership\r\n                    DBA Registration Form must be signed by all of the\r\n                    directors, shareholders, partners, trustees, or other\r\n                    individuals having an ownership interest in the business.\r\n                    Members of the entity are jointly and severally liable for\r\n                    any indebtedness or other obligations to Higher Level FX. As\r\n                    set forth herein, individual may participate directly or\r\n                    indirectly in more than one BA but must be enrolled by the\r\n                    same sponsor. It is the responsibility of those persons\r\n                    involved in the Entity to conform to the laws of the country\r\n                    and state in which their Entity is formed. Higher Level FX\r\n                    reserves the right to approve or disapprove any Business\r\n                    Affiliate Application and Agreement submitted by an Entity.\r\n                    For the purpose of recognition and rewards, Higher Level FX\r\n                    will only recognize a maximum of two persons in the Entity.\r\n                    The Entity must nominate each year, at it’s Business\r\n                    Affiliate renewal time, the two nominees who may be the\r\n                    recipients of any recognition, rewards, trips, and the like\r\n                    which the entity becomes entitled to participate in.\r\n                    <br />\r\n                    <b>Deceptive Practices</b>\r\n                    <br />\r\n                    BA must fairly and truthfully explain the Higher Level FX\r\n                    products, opportunity, Rewards Plan, and Terms and\r\n                    Conditions to prospective BA's. This includes: being honest\r\n                    and thorough in presenting material from the Higher Level FX\r\n                    Rewards Plan to all potential BA's; making clear that income\r\n                    from the Higher Level FX Rewards Plan is based on software\r\n                    sales and not merely on sponsoring other BA's; BA shall not\r\n                    make trading proﬁt claims; making estimates of proﬁt that\r\n                    are based on reasonable predictions for what an average BA\r\n                    would achieve in normal circumstances; representing that\r\n                    past earnings in a given set of circumstances do not\r\n                    necessarily reﬂect future earnings; not misrepresenting the\r\n                    amount of expenditure that an average BA might incur in\r\n                    carrying on the business; not misrepresenting the amount of\r\n                    time an average BA would have to devote to the business to\r\n                    achieve the proﬁt estimated, and not stating that proﬁts or\r\n                    earnings are guaranteed for any individual BA; never stating\r\n                    or inferring that you will build a downline organization for\r\n                    anyone else; never stating that proﬁts or earnings are\r\n                    guaranteed for an individual BA; and never stating that any\r\n                    consumer, business, or government agency has approved or\r\n                    endorsed the Higher Level FX products or its Rewards Plan.\r\n                    <br />\r\n                    <b>Independent Contractor Status</b>\r\n                    <br />\r\n                    BA's are independent contractors and are not purchasers of a\r\n                    franchise or business opportunity. The agreement between\r\n                    Higher Level FX and it’s BA does not create an\r\n                    employer/employee relationship, agency, partnership, or\r\n                    joint venture between the Company and the BA. All BA's are\r\n                    responsible for paying their own income and employment\r\n                    taxes. BA will not be treated as employees for any purpose\r\n                    including, but not limited to, workers compensation,\r\n                    superannuation, or insurance. Each BA is encouraged to\r\n                    establish his/her own goals, hours, and methods of sale, so\r\n                    long as he/she complies with applicable laws and the terms\r\n                    and conditions of the BA User Agreement.\r\n                    <br />\r\n                    <b>International</b>\r\n                    <br />\r\n                    BA may sell and promote Higher Level FX's software products,\r\n                    opportunity, and services or recruit or enroll any potential\r\n                    BA or customer only in countries in which Higher Level FX is\r\n                    approved for business, as announced in ofﬁcial Higher Level\r\n                    FX communications. If a BA desires to conduct business in an\r\n                    authorized country other than the one in which they are a\r\n                    BA, they must comply with all the applicable laws and\r\n                    regulations for that country. Adherence to Laws and\r\n                    Ordinances - You must obey all laws that apply to your\r\n                    business in all jurisdictions and countries you are\r\n                    conducting Higher Level FX business.\r\n                    <br />\r\n                    <b>One BA per Account</b>\r\n                    <br />\r\n                    A BA may operate, receive compensation from, or have an\r\n                    ownership interest, legal or equitable, as a sole\r\n                    proprietorship, partner, shareholder, trustee, or\r\n                    beneﬁciary, in only one BA account. However, notwithstanding\r\n                    this rule, your spouse and their children who are of legal\r\n                    age may become a BA and operate their individual BA's as\r\n                    long as your spouse and family member's BA accounts are\r\n                    placed below one of your BA accounts and not in a cross line\r\n                    sales organization. The BA accounts must be a bona ﬁde BA\r\n                    that is operated by the person listed on the agreement and\r\n                    not by the owner of the ﬁrst BA. BA shall not use business\r\n                    entities, trusts, or other devices to avoid this policy. An\r\n                    exception to this policy will be considered on a\r\n                    case-by-case basis if two BA marry or in cases of a BA\r\n                    receiving an interest in another BA account through\r\n                    inheritance from an immediate family member. Requests for\r\n                    exceptions to this policy must be submitted in writing to\r\n                    the Compliance Department.\r\n                    <br />\r\n                    <b>Sale, Transfer, or Assignment of BA</b>\r\n                    <br />\r\n                    A BA may not sell, transfer, or assign their BA rights to\r\n                    any person or entity without Higher Level FX's express\r\n                    written approval. To obtain approval, you must: be a BA in\r\n                    good standing as determined by Higher Level FX in its sole\r\n                    discretion; before any transfer will be approved by Higher\r\n                    Level FX, any debt obligations the selling BA has with\r\n                    Higher Level FX must be satisﬁed; the transferring BA must\r\n                    be in good standing and not in violation of any of the terms\r\n                    of the BA User Agreement or these Terms and Conditions, to\r\n                    transfer their BA; the combining of BA is not permitted.\r\n                    Higher Level FX will not approve the transfer of a BA to any\r\n                    individual or Entity that is a current BA or who has an\r\n                    ownership interest in any BA. Similarly, Higher Level FX\r\n                    will not approve the transfer of a BA to any individual or\r\n                    Entity that has previously had any ownership interest in or\r\n                    operated, a BA; no individual Business Centers may be\r\n                    transferred separately from the BA. If a BA wishes to\r\n                    transfer their BA account, all Business Centers must be\r\n                    included in the transfer; the transferring BA must notify\r\n                    the Higher Level FX Compliance Department of their intent to\r\n                    transfer the BA account by completing and submitting a\r\n                    signed Transfer of BA and BA Application Form. No changes in\r\n                    the line of sponsorship can result from the transfer of a\r\n                    BA; the transferee must be eligible to become a BA and be\r\n                    acceptable to Higher Level FX in every respect.\r\n                    <br />\r\n                    <b>Separation of an BA</b>\r\n                    <br />\r\n                    If BA's wish to dissolve their jointly held BA, they must do\r\n                    so in such a way as to not disturb the income or interests\r\n                    of their Upline and Downline Organizations. BA should\r\n                    consider the following when deciding whether or not to\r\n                    dissolve a jointly held BA: if a jointly owned BA is\r\n                    dissolved, any one of the joint owners may operate the BA,\r\n                    but the other joint owners must relinquish their rights to,\r\n                    and interests in, the BA; Higher Level FX cannot divide a\r\n                    Downline Organization, nor can it split commission or bonus\r\n                    checks between the joint owners; if a jointly owned BA is\r\n                    dissolved, the individual(s) who relinquished ownership in\r\n                    the original BA may apply as new BA under any sponsor but\r\n                    may not purchase or join an existing BA.\r\n                    <br />\r\n                    <b>Succession</b>\r\n                    <br />\r\n                    If a BA dies or becomes incapacitated, their rights to\r\n                    commissions, bonuses, and Downline Organization, together\r\n                    with all BA responsibilities, will pass to his/her\r\n                    successor(s). Upon death or incapacitation, the successor(s)\r\n                    must present the Higher Level FX Compliance Department with\r\n                    proof of death or incapacitation, along with proof of\r\n                    successions, such as a Grant of Probate or an Enduring Power\r\n                    of Attorney, and a properly completed BA Application and\r\n                    Agreement. You may inherit and retain another BA even though\r\n                    you currently own or operate a BA.\r\n                    <br />\r\n                    <b>7-Day Trial</b>\r\n                    <br />\r\n                    If membership isn't cancelled within the 7-day trial it will\r\n                    automatically go to a normal membership and begin being\r\n                    charged $159 per month. Affiliate accounts are not eligible\r\n                    for trial.\r\n                    <br />\r\n                    <b>Taxes</b>\r\n                    <br />\r\n                    BA must comply with all relevant taxation legislation. BA\r\n                    should seek professional advice from their own accountant or\r\n                    tax advisor as to how to keep proper business records and\r\n                    account for tax aspects of their independent business. BA's\r\n                    Higher Level FX income may be subject to income tax and so\r\n                    must be properly accounted for in annual income tax returns.\r\n                    BA's conducting their Higher Level FX business in a\r\n                    businesslike manner may also be entitled to deduct certain\r\n                    expenses incurred in earning their Higher Level FX income.\r\n                    Such expenses should be properly recorded and evidenced by\r\n                    receipts.\r\n                    <br />\r\n                    <b>Telephone and Email Solicitation</b>\r\n                    <br />\r\n                    The use of any automated telephone solicitation equipment in\r\n                    connection with the marketing or promotion of Higher Level\r\n                    FX, its products, or the Higher Level FX opportunity is\r\n                    strictly prohibited. The use of telemarketing operations to\r\n                    sell software products or services over the telephone, or to\r\n                    recruit BA's is strictly prohibited.\r\n                    <br />\r\n                    BA's are also forbidden from sending unsolicited e-mail\r\n                    messages or \"spamming\" to sell products or to recruit other\r\n                    BA’s. All BA’s should also make themselves familiar with\r\n                    relevant privacy legislation.\r\n                    <br />\r\n                    <b>Territories</b>\r\n                    <br />\r\n                    There are no exclusive territories for marketing Higher\r\n                    Level FX software products or services, nor shall any BA\r\n                    imply or state that he/she has an exclusive territory to\r\n                    market Higher Level FX products or services.\r\n                    <br />\r\n                    <b>Compensation Plan</b>\r\n                    <br />\r\n                    BEING A CUSTOMER: You will get $15 EVERY MONTH for each\r\n                    customer referral that signs up (recurring as long as they\r\n                    stay active). If you sign up 3 other paying customers you\r\n                    will get your products for free as long as you keep at least\r\n                    3 other paying customers under you. After your first 3\r\n                    customer referrals instead of paying you $45 per month, we\r\n                    are going to give you access to all customer products for\r\n                    free (a $159 value). From then on your software is free as\r\n                    long as they stay active and for every additional customer\r\n                    referral you will get $15 per month. ALSO you will receive\r\n                    $15 for each additional customer you personally sign up\r\n                    after your first 3. If one of those customers decides to\r\n                    upgrade to an affiliate then they no longer count towards\r\n                    your 3. If a person signs up as an affiliate they do not\r\n                    earn you the $15 per month and do not count towards your 3.\r\n                    If one of your 3 personal referrals signs up 3 paying\r\n                    customers then they no longer count towards your 3. You must\r\n                    have 3 paying customers who are not eligible for free\r\n                    products and who are not affiliates. UPGRADING TO AN\r\n                    AFFILIATE: To upgrade it is $15 per month and you are not\r\n                    required to keep your product subscription. You will however\r\n                    lose the free product access even if you had 3 customers\r\n                    under you. You will have full access to our compensation\r\n                    plan and be able to build your tree as an affiliate. Any\r\n                    customers you had signed up before becoming an affiliate\r\n                    will carry over into your tree. THE 66% RULE: Affiliates who\r\n                    meet the 66% rule, meaning that EACH of their legs has at\r\n                    least 66% of customers and at most 33% of customers who are\r\n                    affiliates OR \"Affiliate ONLY\", will get paid based on the\r\n                    highest possible rank they have achieved. People who DO NOT\r\n                    meet the 66% rule, will get paid based on the highest rank\r\n                    level where all requirements are fulfilled. Here is how you\r\n                    get paid if any of your lanes are under 66%: You have 500\r\n                    affiliates and 100 customers on your first lane. Therefore\r\n                    your percentage ratio is 16.6% which is under 66%. In this\r\n                    case, your 100 customers will be your 66% and the rest will\r\n                    be filled with affiliates. You will be ranked based off 150\r\n                    people in this lane (100 customers + 50 affiliates). THE 10\r\n                    DAY HOLDING TANK: - When you enroll a new member, they will\r\n                    be placed in your 10-day holding tank. - At this point, you\r\n                    can then choose where to place them into your tree. - If you\r\n                    do not place someone into your tree within 10 days, they\r\n                    will automatically be placed at the next available slot\r\n                    (going from left to right). RESIDUALS FROM YOUR TREE: - We\r\n                    payout a weekly residual income every Friday once you\r\n                    achieve a rank. - As long as you maintain your rank each\r\n                    week, you will get paid for that rank. - You always get paid\r\n                    based on the rank you had in the previous week. - You must\r\n                    earn a rank before Friday in order to get paid the following\r\n                    week. To be eligible for any ranks you must always have 1\r\n                    personal referral on each lane.\r\n                    <br />\r\n                    <b>Trade Shows and Expositions</b>\r\n                    <br />\r\n                    BA may display and/or sell Higher Level FX products at trade\r\n                    shows and expositions, but may not display or sell Higher\r\n                    Level FX products at swap meets, garage sales, ﬂea markets,\r\n                    or farmers' markets as these events are not conducive to the\r\n                    image Higher Level FX wishes to portray. Higher Level FX\r\n                    cannot supply inventory on consignment to BA operating\r\n                    stands at such events. All literature displayed at the event\r\n                    must be ofﬁcial Higher Level FX literature and must clearly\r\n                    identify the individual(s) as Business Affiliates.\r\n                    <br />\r\n                    <b>Transfer of Sponsorship Conﬂicting Enrollments</b>\r\n                    <br />\r\n                    Every prospective BA has the ultimate right to choose\r\n                    his/her own sponsor. As a general rule, the ﬁrst BA who does\r\n                    meaningful work with a prospective BA is considered to have\r\n                    a ﬁrst claim to sponsorship. Basic tenets of common sense\r\n                    and consideration should govern any dispute that may arise.\r\n                    In the event that a prospective BA or any BA on behalf of a\r\n                    prospective BA, submit more than one BA Application and\r\n                    Agreement to Higher Level FX, listing a different sponsor on\r\n                    each, the company will only consider valid the ﬁrst BA\r\n                    Application and Agreement that it receives, accepts, and\r\n                    processes. If there is any question concerning the\r\n                    sponsorship of an BA, the ﬁnal decision will be made by\r\n                    Higher Level FX.\r\n                    <br />\r\n                    <b>Change of Sponsorship and Cross-line recruiting</b>\r\n                    <br />\r\n                    Higher Level FX will not permit any change in the line of\r\n                    sponsorship except in the following circumstances: where a\r\n                    BA has been fraudulently or unethically induced into\r\n                    joining. If you terminate your BA in writing you may rejoin\r\n                    under the Sponsor of your choice after a period of four (4)\r\n                    months; following termination of your BA, you may\r\n                    participate as a customer during the four (4) month period.\r\n                    In the event you terminate your BA, you forfeit all rights,\r\n                    bonuses, and commissions under your previous line of\r\n                    sponsoring. You may not avoid compliance with this policy\r\n                    through the use of DBAs, assumed names, corporations,\r\n                    partnerships, trusts, spouse names, fictitious ID numbers,\r\n                    etc. If you have been \"inactive\" (i.e., no purchases or\r\n                    sales of Higher Level FX products or participation in any\r\n                    other form as an BA) for a period of four (4) successive\r\n                    months, you may terminate your BA in writing and rejoin\r\n                    immediately under the sponsor of your choice. Cross-line\r\n                    raiding is strictly prohibited. \"Cross-line raiding\" is\r\n                    deﬁned as the enrollment or attempted enrollment of an\r\n                    individual or Entity that already has a current BA User\r\n                    Agreement with Higher Level FX, or who has had such\r\n                    agreement within the preceding six (6) calendar months\r\n                    within a different line of sponsorship. The use of trade\r\n                    names, DBAs, assumed names, corporations, partnerships,\r\n                    trusts, spouse names, ﬁctitious ID numbers or any other\r\n                    vehicle to circumvent this policy is prohibited. BA may not\r\n                    demean, discredit, or invalidate other BA in an attempt to\r\n                    entice another Business Affiliate to become part of the ﬁrst\r\n                    BA's downline organization.\r\n                    <br />\r\n                    <b>\r\n                      Responsibilities of Business Affiliates and Sponsors\r\n                      Ongoing Supervision, Training, and Sales\r\n                    </b>\r\n                    <br />\r\n                    Any BA who sponsors another BA into Higher Level FX must\r\n                    train the new BA in product knowledge, effective sales\r\n                    techniques, the Rewards Plan, and the Terms and Conditions.\r\n                    BA must also supervise and monitor BA in their downline\r\n                    organization to ensure they conduct business professionally\r\n                    and ethically, promote sales properly, and provide quality\r\n                    customer service. As a BA progresses through the various\r\n                    levels of leadership, his/her responsibilities to train and\r\n                    motivate downline BA will increase.\r\n                    <br />\r\n                    <b>Non-Disparagement</b>\r\n                    <br />\r\n                    In setting the proper example for their downline, BA must\r\n                    not disparage other BA, Higher Level FX's Products, the\r\n                    Rewards Plan, or the company's employees. Such disparagement\r\n                    constitutes a material breach of these Terms and Conditions.\r\n                    Holding Applications or Orders - All BA must forward to\r\n                    Higher Level FX any forms and applications they receive from\r\n                    other BA or applicant BA, or customers or applicant\r\n                    customers, on the next business day after which the forms or\r\n                    applications are signed.\r\n                    <br />\r\n                    <b>Reporting Policy Violations</b>\r\n                    <br />\r\n                    BA should report any observed violations of a policy\r\n                    violation to the Higher Level FX Compliance Department.\r\n                    <br />\r\n                    <b>Bonuses and Commissions Bonus and Commission Cycles</b>\r\n                    <br />\r\n                    Higher Level FX pays commissions on a daily, weekly and\r\n                    monthly cycles to the BA's account located in the BA Back\r\n                    Ofﬁce. A BA must review their commissions and report any\r\n                    errors or discrepancies to Higher Level FX within ten (10)\r\n                    days from the date of the commission payment. Errors or\r\n                    discrepancies which are not brought to Higher Level FX's\r\n                    attention within the 10 day period will be deemed waived by\r\n                    the BA.\r\n                    <br />\r\n                    <b>Adjustment of Bonuses and Commissions</b>\r\n                    <br />\r\n                    BA's earn commissions and bonuses based on software product\r\n                    sales to end consumers. Accordingly, Higher Level FX will\r\n                    adjust commissions and bonuses earned from any sale when the\r\n                    BA or any other end consumer returns the sold software\r\n                    product for a refund. Higher Level FX will deduct the sales\r\n                    volume attributable to the returned product from the upline\r\n                    BA's group volume within the ﬁrst two (2) weeks after the\r\n                    refund is given.\r\n                    <br />\r\n                    <b>Loss of Rights to Commissions</b>\r\n                    <br />\r\n                    You must be an active BA and in compliance with the terms of\r\n                    the Business Affiliate User Agreement to qualify for\r\n                    commissions and bonuses.\r\n                    <br />\r\n                    <b>Unclaimed Commissions</b>\r\n                    <br />\r\n                    BA’s who provide Higher Level FX with incomplete or invalid\r\n                    bank account information will have their commission and\r\n                    bonus retained as a credit. Any unclaimed credit will be\r\n                    held in trust for 12 months, during which time Higher Level\r\n                    FX may periodically notify the BA in writing of their credit\r\n                    balance.\r\n                    <br />\r\n                    <b>\r\n                      Dispute Resolution and Disciplinary Proceedings between\r\n                      Business Affiliates Grievances and Complaints\r\n                    </b>\r\n                    <br />\r\n                    When a Business Affiliate has a grievance or complaint with\r\n                    another Business Affiliate regarding any practice or conduct\r\n                    in relationship to their respective Higher Level FX\r\n                    businesses, the complaining Business Affiliate should ﬁrst\r\n                    discuss the problem with the other Business Affiliate. If\r\n                    this does not resolve the problem, the complaining Business\r\n                    Affiliate should report the problem to their upline to\r\n                    resolve the issue at a local level. If the matter cannot be\r\n                    resolved, it must be reported in writing to the Higher Level\r\n                    FX Compliance Department. The Compliance Department will\r\n                    review the complaint and make a ﬁnal decision. The complaint\r\n                    should identify speciﬁc instances of alleged improper\r\n                    conduct and, to the extent possible, identify the relevant\r\n                    dates on which the event(s) complained of took place, the\r\n                    location(s) where they occurred, and all persons who have\r\n                    ﬁrsthand knowledge of the improper conduct.\r\n                    <br />\r\n                    <b>Compliance Department Review</b>\r\n                    <br />\r\n                    Upon receipt of a written complaint, the Higher Level FX\r\n                    Compliance Department will investigate the matter, review\r\n                    the applicable policies, and render a decision on how the\r\n                    dispute shall be resolved. The Compliance Department may\r\n                    also issue disciplinary sanctions consistent with the\r\n                    provisions of this Agreement Disputes between Higher Level\r\n                    FX and Business Affiliates.\r\n                    <br />\r\n                    <b>Mediation and arbitration</b>\r\n                    <br />\r\n                    All unresolved disputes and claims relating to Higher Level\r\n                    FX, its Rewards Plan, its products, the rights and\r\n                    obligations of its BA and Higher Level FX, or any other\r\n                    claim or cause of action relating to product purchase(s) or\r\n                    performance, either of a BA or of Higher Level FX under the\r\n                    Business Affiliate User Agreement, shall ﬁrst be put before\r\n                    a mediator acceptable to both parties for resolution. Each\r\n                    party shall bear its own costs in the mediation. Should\r\n                    mediation fail to resolve the dispute then it shall be put\r\n                    before arbitration at a location determined by Higher Level\r\n                    FX. Each party to the arbitration shall be responsible for\r\n                    their own costs, including travel expenses, legal and ﬁling\r\n                    fees. This agreement to mediate and, failing mediation,\r\n                    arbitrate will survive any cancellation or expiration of the\r\n                    Business Affiliate User Agreement. Nothing in these Terms\r\n                    and Conditions shall prevent Higher Level FX from applying\r\n                    to and obtaining from any court having jurisdiction a writ\r\n                    of attachment, temporary injunction, preliminary injunction,\r\n                    permanent injunction, or other available relief to safeguard\r\n                    and protect Higher Level FX's interest prior to, during, or\r\n                    following the ﬁling of any arbitration or another\r\n                    proceeding, or pending the rendering of a decision or award\r\n                    in connection with any arbitration or other proceeding. The\r\n                    existence of any BA claim or cause of action against Higher\r\n                    Level FX does not preclude Higher Level FX from enforcing\r\n                    the BA's covenants and agreements contained in the Business\r\n                    Affiliate User Agreement.\r\n                    <br />\r\n                    <b>Disciplinary Actions</b>\r\n                    <br />\r\n                    Violation of any of the terms and conditions of the Business\r\n                    Affiliate User Agreement, or any illegal, fraudulent,\r\n                    deceptive, or unethical business conduct by a BA, may\r\n                    result, at Higher Level FX's discretion, in one or more of\r\n                    the following sanctions: a written warning, clarifying the\r\n                    meaning and application of a speciﬁc policy or procedure,\r\n                    and advising that a continued breach will result in further\r\n                    sanctions; probation, which may include requiring a BA to\r\n                    take remedial action and will include follow-up monitoring\r\n                    by Higher Level FX to ensure compliance with the Agreement;\r\n                    withdrawal or denial of an award or recognition, or\r\n                    restricting participation in Higher Level FX sponsored\r\n                    events for a speciﬁed period of time or until the BA\r\n                    satisﬁes certain speciﬁed conditions; suspension of certain\r\n                    privileges of BA, including but not limited to placing a\r\n                    software product order, participating in Higher Level FX\r\n                    programs, progressing in the Rewards Plan, or participating\r\n                    as a sponsor, for a speciﬁed period of time or until the BA\r\n                    satisﬁes certain speciﬁed conditions; withholding\r\n                    commissions or bonuses for a speciﬁed period of time or\r\n                    until the BA satisﬁes certain speciﬁed conditions; imposing\r\n                    fair and reasonable ﬁnes or other penalties in proportion to\r\n                    actual damages incurred by Higher Level FX and as permitted\r\n                    by law; and/or terminating an BA.\r\n                    <br />\r\n                    <b>Business Affiliate Services Changes to the BA</b>\r\n                    <br />\r\n                    Each BA must immediately notify Higher Level FX of all\r\n                    changes to the information contained in the Business\r\n                    Affiliate Application and Agreement. BA may modify their\r\n                    existing Business Affiliate User Agreement by submitting a\r\n                    written request, a properly executed Business Affiliate User\r\n                    Agreement, and appropriate supporting documentation. Certain\r\n                    changes can be made by the BA in the BA's Back Ofﬁce.\r\n                    <br />\r\n                    <b>Addition of Co-applicants</b>\r\n                    <br />\r\n                    When adding a co-applicant to an existing BA, Higher Level\r\n                    FX requires both a written request and a properly completed\r\n                    Business Affiliate User Agreement containing the applicant's\r\n                    and co-applicant’s signatures. The modiﬁcations permitted\r\n                    within the scope of this paragraph do not include a change\r\n                    of sponsorship.\r\n                    <br />\r\n                    <b>Commission Statements/tax Invoices</b>\r\n                    <br />\r\n                    Commission Statements/Tax Invoices are provided for all\r\n                    active BA's receiving a commission in your BA Back Ofﬁce.\r\n                    <br />\r\n                    <b>Errors or Questions</b>\r\n                    <br />\r\n                    In the event a BA has questions about or believes that any\r\n                    errors have been made regarding commissions, bonuses,\r\n                    Downline genealogy reports, orders, or charges, the BA must\r\n                    notify Higher Level FX within thirty (30) days of the date\r\n                    of the purported error or incident in question. Higher Level\r\n                    FX will not be responsible for any error, omission, or\r\n                    problem not reported within ten (10) days.\r\n                    <br />\r\n                    <b>Resolving Problems</b>\r\n                    <br />\r\n                    If you have any questions regarding shipments, orders,\r\n                    commissions and bonuses, or the Rewards Plan, please message\r\n                    Higher Level FX Support in your BA Back Ofﬁce.\r\n                    <br />\r\n                    <b>Inactivity and Cancellation Policies</b>\r\n                    <br />\r\n                    BA’s who do not meet the active status requirements speciﬁed\r\n                    in the Higher Level FX Rewards Plan may not receive a\r\n                    commission and may lose accumulated sales volume for the\r\n                    sales generated through their downline organization.\r\n                    <br />\r\n                    <b>Involuntary Cancellation</b>\r\n                    <br />\r\n                    A BA's violation of any of the terms of the Business\r\n                    Affiliate User Agreement, including any amendments which may\r\n                    be made by Higher Level FX in its sole discretion from time\r\n                    to time, constitutes a material breach of the Business\r\n                    Affiliate User Agreement and may result, at Higher Level\r\n                    FX's option, in any of the disciplinary actions listed\r\n                    herein, including cancellation of their BA. Involuntary\r\n                    cancellation of a BA will result in the BA's loss of all\r\n                    rights to his/her downline organization and any bonuses and\r\n                    commissions generated thereby. A BA whose agreement is\r\n                    involuntarily canceled shall receive commissions and bonuses\r\n                    only for the last full calendar week prior to termination.\r\n                    When a BA is involuntarily canceled, the BA will be notiﬁed\r\n                    by certiﬁed mail at the address on ﬁle with the company or\r\n                    email on ﬁle. Cancellation is effective on the date on which\r\n                    written notice is mailed via certiﬁed mail, return receipt\r\n                    requested, to the Business Affiliate's last known address or\r\n                    when the BA receives actual notice of cancellation,\r\n                    whichever occurs ﬁrst or the date and time the email was\r\n                    sent. In the event of such involuntary cancellation, the\r\n                    Business Affiliate must immediately cease to represent\r\n                    themself as a BA. The BA may appeal the termination to the\r\n                    Higher Level FX Compliance Department. The BA's appeal must\r\n                    be in writing and must be received by the company within\r\n                    ﬁfteen (15) calendar days of the date of Higher Level FX ’s\r\n                    cancellation letter. If Higher Level FX does not receive the\r\n                    appeal within the ﬁfteen day period, the cancellation will\r\n                    be ﬁnal. The BA must submit all supporting documentation\r\n                    with his/her appeal correspondence. The written appeal will\r\n                    be reviewed by the Compliance Department. If the BA ﬁles a\r\n                    timely appeal of termination, the Compliance Department will\r\n                    review and reconsider the termination, consider any other\r\n                    appropriate action, and notify the BA in writing of it’s\r\n                    decision. This decision of the Compliance Department will be\r\n                    ﬁnal. A BA whose Business Affiliate User Agreement is\r\n                    involuntarily canceled may re-apply to become a BA twelve\r\n                    (12) calendar months from the date of cancellation. Any such\r\n                    BA wishing to re-apply must submit a letter to the Higher\r\n                    Level FX Compliance Department setting forth the reasons why\r\n                    he/she believes Higher Level FX should allow him or her to\r\n                    operate a BA. It is within Higher Level FX's sole discretion\r\n                    whether to permit such an individual to again operate a\r\n                    Higher Level FX business.\r\n                    <br />\r\n                    <b>Written Cancellation</b>\r\n                    <br />\r\n                    A BA may cancel his/her Agreement with Higher Level FX at\r\n                    any time and for any reason by providing written notice or\r\n                    email to Higher Level FX indicating his/her intent to\r\n                    discontinue his/her BA status. The written notice or email\r\n                    must include the BA's signature, printed name, address, and\r\n                    appropriate identiﬁcation number.\r\n                    <br />\r\n                    <b>Effect of Cancellation</b>\r\n                    <br />\r\n                    Following a BA's voluntary or involuntary cancellation, such\r\n                    former BA shall have no right, title, claim, or interest to\r\n                    the downline organization which they operated or any bonus\r\n                    and/or commission from the sales generated by the\r\n                    organization. Following a BA's voluntary or involuntary\r\n                    cancellation, the former BA shall not hold himself or\r\n                    herself out as a Business Affiliate, shall not have the\r\n                    right to sell Higher Level FX software products or services,\r\n                    must remove any Higher Level FX sign from public view, and\r\n                    must discontinue using any other materials bearing any\r\n                    Higher Level FX logo, trademark, or service mark. A BA who\r\n                    is voluntarily canceled will receive commissions and bonuses\r\n                    only for the last full calendar week prior to his/her\r\n                    cancellation. A BA whose Agreement is involuntarily canceled\r\n                    will receive commissions and bonuses only for the last full\r\n                    calendar week prior to cancellation unless monies were\r\n                    withheld by the company during an investigation period. If\r\n                    an investigation of the BA's conduct results in his/ her\r\n                    involuntary cancellation, he/she shall not be entitled to\r\n                    recover withheld commissions and bonuses.\r\n                    <br />\r\n                    <b>Definitions</b>\r\n                    <br />\r\n                    <b>Active BA</b> - A BA who is trading ﬁat currency using\r\n                    Higher Level FX's software on a daily basis as set forth in\r\n                    the Higher Level FX Rewards Plan.\r\n                    <br />\r\n                    <b>BA</b> - An individual who has executed a Business\r\n                    Affiliate User Application and Agreement which has been\r\n                    accepted by Higher Level FX. BA's are required to meet\r\n                    certain qualiﬁcations and are responsible for the training,\r\n                    motivation, support, and development of the BA's in their\r\n                    respective downline organizations. BA is entitled to\r\n                    purchase Higher Level FX software products at BA prices,\r\n                    enroll customers and new BA's, and take part in all Higher\r\n                    Level FX BA programs.\r\n                    <br />\r\n                    <b>BA User Agreement</b> - The term Business Affiliate User\r\n                    Agreement, as used in the Terms and Conditions, refers to\r\n                    the Business Affiliate Application and Agreement, Higher\r\n                    Level FX's Terms and Conditions, and the Rewards Plan.\r\n                    <br />\r\n                    <b>Cancellation</b> - Termination of an individual's BA.\r\n                    <br />\r\n                    <b>Voluntary Cancellation</b> - The termination of a BA\r\n                    instituted by the BA who elects to discontinue his/her\r\n                    afﬁliation with Higher Level FX for any reason.\r\n                    <br />\r\n                    <b>Downline Organization</b> - A BA's downline organization\r\n                    consists of all BA’s and customers below him/her.\r\n                    <br />\r\n                    <b>Genealogy Report</b> - A report generated by Higher Level\r\n                    FX that provides critical data relating to the identities of\r\n                    BA and sales information of each BA's downline organization.\r\n                    This report contains proprietary trade secret information.\r\n                    <br />\r\n                    <b>Immediate Household</b> - A BA, his or her spouse or\r\n                    de-facto, and dependents.\r\n                    <br />\r\n                    <b>Level</b> - The layers of downline BA's in a particular\r\n                    BA's downline organization. This term refers to the\r\n                    relationship of a BA relative to a particular upline BA,\r\n                    determined by the number of BA between them who are related\r\n                    by sponsorship.\r\n                    <br />\r\n                    <b>Ofﬁcial Higher Level FX Material</b> - Literature, audio\r\n                    or videotapes, and other materials developed, printed,\r\n                    published, or distributed by Higher Level FX.\r\n                    <br />\r\n                    <b>Sponsor</b> - A BA who enrolls a new BA or customer and\r\n                    is listed as the sponsor on the Business Affiliate User\r\n                    Application and Agreement. As the term implies, the sponsor\r\n                    has a responsibility to assist those he/she brings into the\r\n                    business.\r\n                    <br />\r\n                    <b>Upline</b> - The term refers to the BA or BA's above a\r\n                    particular BA in a sponsorship line to the company.\r\n                    Conversely stated, it is the line of sponsors that links any\r\n                    particular BA to the Company.\r\n                    <br />\r\n                  </p>\r\n                  <p className=\"desc-v1-1\"></p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </HomeLayout>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TermsConditionsPage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Home\\PrivacyPolicyPage\\PrivacyPolicyPage.js",["2151"],"import HomeLayout from \"layouts/HomeLayout/HomeLayout\";\r\nimport { ROUTE_FREE_BOOK, ROUTE_PRIVACY_POLICY } from \"navigation/CONSTANTS\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\n\r\nconst PrivacyPolicyPage = () => {\r\n  const dispatch = useDispatch();\r\n  const initPage = () => {\r\n    let page_title = \"Privacy Policy\";\r\n    dispatch(\r\n      UpdateAppData({\r\n        currentPageTitle: page_title,\r\n        current_route: ROUTE_PRIVACY_POLICY,\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    initPage();\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <HomeLayout>\r\n        <div className=\"main-content\">\r\n          <div\r\n            className=\"section page-section container has-header content-sm\"\r\n            id=\"page-section1\"\r\n          >\r\n            <div className=\"container d-padding-top-20\">\r\n              <div className=\"row d-margin-top-20\">\r\n                <div className=\"col-md-12 md-margin-bottom-30\">\r\n                  <h4 className=\"text-normal-spacing d-margin-bottom-30\">\r\n                    PRIVACY NOTICE (HLX Trader App)\r\n                  </h4>\r\n                  <p className=\"desc-v1-1\">Last updated August 22, 2021</p>\r\n                  <p className=\"desc-v1-1\">\r\n                    Thank you for choosing to be part of our community at HL4X\r\n                    International LLC, doing business as Higher Level FX\r\n                    (\"Higher Level FX,\" \"we,\" \"us,\" or \"our\"). We are committed\r\n                    to protecting your personal information and your right to\r\n                    privacy. If you have any questions or concerns about this\r\n                    privacy notice or our practices with regard to your personal\r\n                    information, please contact us at higherlevelfx@gmail.com.\r\n                  </p>\r\n                  <div className=\"desc-v1-1\">\r\n                    This privacy notice describes how we might use your\r\n                    information if you:\r\n                    <ul>\r\n                      <li>\r\n                        Download and use our mobile application — HLX Trader\r\n                      </li>\r\n                      <li>\r\n                        Engage with us in other related ways ― including any\r\n                        sales, marketing, or events\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <div className=\"desc-v1-1\">\r\n                    In this privacy notice, if we refer to:\r\n                    <ul>\r\n                      <li>\r\n                        \"App,\" we are referring to any application of ours that\r\n                        references or links to this policy, including any listed\r\n                        above\r\n                      </li>\r\n                      <li>\r\n                        \"Services,\" we are referring to our App, and other\r\n                        related services, including any sales, marketing, or\r\n                        events\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <p className=\"desc-v1-1\">\r\n                    The purpose of this privacy notice is to explain to you in\r\n                    the clearest way possible what information we collect, how\r\n                    we use it, and what rights you have in relation to it. If\r\n                    there are any terms in this privacy notice that you do not\r\n                    agree with, please discontinue use of our Services\r\n                    immediately.\r\n                    <br />\r\n                    Please read this privacy notice carefully, as it will help\r\n                    you understand what we do with the information that we\r\n                    collect.\r\n                  </p>\r\n                  <div className=\"desc-v1-1\">\r\n                    TABLE OF CONTENTS\r\n                    <br />\r\n                    <div>\r\n                      1. WHAT INFORMATION DO WE COLLECT?\r\n                      <br />\r\n                      2. HOW DO WE USE YOUR INFORMATION?\r\n                      <br />\r\n                      3. WILL YOUR INFORMATION BE SHARED WITH ANYONE?\r\n                      <br />\r\n                      4. WHO WILL YOUR INFORMATION BE SHARED WITH?\r\n                      <br />\r\n                      5. IS YOUR INFORMATION TRANSFERRED INTERNATIONALLY?\r\n                      <br />\r\n                      6. HOW LONG DO WE KEEP YOUR INFORMATION?\r\n                      <br />\r\n                      7. HOW DO WE KEEP YOUR INFORMATION SAFE?\r\n                      <br />\r\n                      8. WHAT ARE YOUR PRIVACY RIGHTS?\r\n                      <br />\r\n                      9. CONTROLS FOR DO-NOT-TRACK FEATURES\r\n                      <br />\r\n                      10. DO CALIFORNIA RESIDENTS HAVE SPECIFIC PRIVACY RIGHTS?\r\n                      <br />\r\n                      11. DO WE MAKE UPDATES TO THIS NOTICE?\r\n                      <br />\r\n                      12. HOW CAN YOU CONTACT US ABOUT THIS NOTICE?\r\n                      <br />\r\n                      13. HOW CAN YOU REVIEW, UPDATE OR DELETE THE DATA WE\r\n                      COLLECT FROM YOU?\r\n                      <br />\r\n                    </div>\r\n                    <br />\r\n                  </div>\r\n                  <p className=\"desc-v1-1\">\r\n                    1. WHAT INFORMATION DO WE COLLECT? <br />\r\n                    Personal information you disclose to us\r\n                    <br />\r\n                    We collect personal information that you voluntarily provide\r\n                    to us when you register on the App, express an interest in\r\n                    obtaining information about us or our products and Services,\r\n                    when you participate in activities on the App or otherwise\r\n                    when you contact us.\r\n                    <br />\r\n                    The personal information that we collect depends on the\r\n                    context of your interactions with us and the App, the\r\n                    choices you make and the products and features you use. The\r\n                    personal information we collect may include the following:\r\n                    <br />\r\n                    All personal information that you provide to us must be\r\n                    true, complete and accurate, and you must notify us of any\r\n                    changes to such personal information.\r\n                    <br />\r\n                    Information collected through our App\r\n                    <br />\r\n                    If you use our App, we also collect the following\r\n                    information:\r\n                    <br />\r\n                    Push Notifications. We may request to send you push\r\n                    notifications regarding your account or certain features of\r\n                    the App. If you wish to opt-out from receiving these types\r\n                    of communications, you may turn them off in your device's\r\n                    settings.\r\n                    <br />\r\n                    This information is primarily needed to maintain the\r\n                    security and operation of our App, for troubleshooting and\r\n                    for our internal analytics and reporting purposes.\r\n                    <br />\r\n                    Information collected from other sources\r\n                    <br />\r\n                    In order to enhance our ability to provide relevant\r\n                    marketing, offers and services to you and update our\r\n                    records, we may obtain information about you from other\r\n                    sources, such as public databases, joint marketing partners,\r\n                    affiliate programs, data providers, as well as from other\r\n                    third parties. This information includes mailing addresses,\r\n                    job titles, email addresses, phone numbers, intent data (or\r\n                    user behavior data), Internet Protocol (IP) addresses,\r\n                    social media profiles, social media URLs and custom\r\n                    profiles, for purposes of targeted advertising and event\r\n                    promotion.\r\n                    <br />\r\n                  </p>\r\n                  <p className=\"desc-v1-1\">\r\n                    2. HOW DO WE USE YOUR INFORMATION?\r\n                    <br />\r\n                    We use personal information collected via our App for a\r\n                    variety of business purposes described below. We process\r\n                    your personal information for these purposes in reliance on\r\n                    our legitimate business interests, in order to enter into or\r\n                    perform a contract with you, with your consent, and/or for\r\n                    compliance with our legal obligations. We indicate the\r\n                    specific processing grounds we rely on next to each purpose\r\n                    listed below.\r\n                    <br />\r\n                  </p>\r\n                  <div className=\"desc-v1-1\">\r\n                    We use the information we collect or receive:\r\n                    <br />\r\n                    <ul>\r\n                      <li>\r\n                        To facilitate account creation and logon process. If you\r\n                        choose to link your account with us to a third-party\r\n                        account (such as your Google or Facebook account), we\r\n                        use the information you allowed us to collect from those\r\n                        third parties to facilitate account creation and logon\r\n                        process for the performance of the contract.\r\n                      </li>\r\n                      <li>\r\n                        Request feedback. We may use your information to request\r\n                        feedback and to contact you about your use of our App.\r\n                      </li>\r\n                      <li>\r\n                        To enable user-to-user communications. We may use your\r\n                        information in order to enable user-to-user\r\n                        communications with each user's consent.\r\n                      </li>\r\n                      <li>\r\n                        To manage user accounts. We may use your information for\r\n                        the purposes of managing our account and keeping it in\r\n                        working order.\r\n                      </li>\r\n                      <li>\r\n                        To send administrative information to you. We may use\r\n                        your personal information to send you product, service\r\n                        and new feature information and/or information about\r\n                        changes to our terms, conditions, and policies.\r\n                      </li>\r\n                      <li>\r\n                        To protect our Services. We may use your information as\r\n                        part of our efforts to keep our App safe and secure (for\r\n                        example, for fraud monitoring and prevention).\r\n                      </li>\r\n                      <li>\r\n                        To enforce our terms, conditions and policies for\r\n                        business purposes, to comply with legal and regulatory\r\n                        requirements or in connection with our contract.\r\n                      </li>\r\n                      <li>\r\n                        To respond to legal requests and prevent harm. If we\r\n                        receive a subpoena or other legal request, we may need\r\n                        to inspect the data we hold to determine how to respond.\r\n                      </li>\r\n                      <li>\r\n                        Administer prize draws and competitions. We may use your\r\n                        information to administer prize draws and competitions\r\n                        when you elect to participate in our competitions.\r\n                      </li>\r\n                      <li>\r\n                        To deliver and facilitate delivery of services to the\r\n                        user. We may use your information to provide you with\r\n                        the requested service.\r\n                      </li>\r\n                      <li>\r\n                        To respond to user inquiries/offer support to users. We\r\n                        may use your information to respond to your inquiries\r\n                        and solve any potential issues you might have with the\r\n                        use of our Services.\r\n                      </li>\r\n                      <li>\r\n                        To send you marketing and promotional communications. We\r\n                        and/or our third-party marketing partners may use the\r\n                        personal information you send to us for our marketing\r\n                        purposes, if this is in accordance with your marketing\r\n                        preferences. For example, when expressing an interest in\r\n                        obtaining information about us or our App, subscribing\r\n                        to marketing or otherwise contacting us, we will collect\r\n                        personal information from you. You can opt-out of our\r\n                        marketing emails at any time (see the \"WHAT ARE YOUR\r\n                        PRIVACY RIGHTS?\" below).\r\n                      </li>\r\n                      <li>\r\n                        Deliver targeted advertising to you. We may use your\r\n                        information to develop and display personalized content\r\n                        and advertising (and work with third parties who do so)\r\n                        tailored to your interests and/or location and to\r\n                        measure its effectiveness.\r\n                      </li>\r\n                      <li>\r\n                        For other business purposes. We may use your information\r\n                        for other business purposes, such as data analysis,\r\n                        identifying usage trends, determining the effectiveness\r\n                        of our promotional campaigns and to evaluate and improve\r\n                        our App, products, marketing and your experience. We may\r\n                        use and store this information in aggregated and\r\n                        anonymized form so that it is not associated with\r\n                        individual end users and does not include personal\r\n                        information. We will not use identifiable personal\r\n                        information without your consent.\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n\r\n                  <div className=\"desc-v1-1\">\r\n                    3. WILL YOUR INFORMATION BE SHARED WITH ANYONE?\r\n                    <br />\r\n                    We may process or share your data that we hold based on the\r\n                    following legal basis:\r\n                    <ul>\r\n                      <li>\r\n                        Consent: We may process your data if you have given us\r\n                        specific consent to use your personal information for a\r\n                        specific purpose.\r\n                      </li>\r\n                      <li>\r\n                        Legitimate Interests: We may process your data when it\r\n                        is reasonably necessary to achieve our legitimate\r\n                        business interests.\r\n                      </li>\r\n                      <li>\r\n                        Performance of a Contract: Where we have entered into a\r\n                        contract with you, we may process your personal\r\n                        information to fulfill the terms of our contract.\r\n                      </li>\r\n                      <li>\r\n                        Legal Obligations: We may disclose your information\r\n                        where we are legally required to do so in order to\r\n                        comply with applicable law, governmental requests, a\r\n                        judicial proceeding, court order, or legal process, such\r\n                        as in response to a court order or a subpoena (including\r\n                        in response to public authorities to meet national\r\n                        security or law enforcement requirements).\r\n                      </li>\r\n                      <li>\r\n                        Vital Interests: We may disclose your information where\r\n                        we believe it is necessary to investigate, prevent, or\r\n                        take action regarding potential violations of our\r\n                        policies, suspected fraud, situations involving\r\n                        potential threats to the safety of any person and\r\n                        illegal activities, or as evidence in litigation in\r\n                        which we are involved.\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <div className=\"desc-v1-1\">\r\n                    More specifically, we may need to process your data or share\r\n                    your personal information in the following situations:\r\n                    <br />\r\n                    <ul>\r\n                      <li>\r\n                        Business Transfers. We may share or transfer your\r\n                        information in connection with, or during negotiations\r\n                        of, any merger, sale of company assets, financing, or\r\n                        acquisition of all or a portion of our business to\r\n                        another company.\r\n                      </li>\r\n                      <li>\r\n                        Vendors, Consultants and Other Third-Party Service\r\n                        Providers. We may share your data with third-party\r\n                        vendors, service providers, contractors or agents who\r\n                        perform services for us or on our behalf and require\r\n                        access to such information to do that work. Examples\r\n                        include: payment processing, data analysis, email\r\n                        delivery, hosting services, customer service and\r\n                        marketing efforts. We may allow selected third parties\r\n                        to use tracking technology on the App, which will enable\r\n                        them to collect data on our behalf about how you\r\n                        interact with our App over time. This information may be\r\n                        used to, among other things, analyze and track data,\r\n                        determine the popularity of certain content, pages or\r\n                        features, and better understand online activity. Unless\r\n                        described in this notice, we do not share, sell, rent or\r\n                        trade any of your information with third parties for\r\n                        their promotional purposes. We have contracts in place\r\n                        with our data processors, which are designed to help\r\n                        safeguard your personal information. This means that\r\n                        they cannot do anything with your personal information\r\n                        unless we have instructed them to do it. They will also\r\n                        not share your personal information with any\r\n                        organization apart from us. They also commit to protect\r\n                        the data they hold on our behalf and to retain it for\r\n                        the period we instruct.\r\n                      </li>\r\n                      <li>\r\n                        Business Partners. We may share your information with\r\n                        our business partners to offer you certain products,\r\n                        services or promotions.\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <div className=\"desc-v1-1\">\r\n                    4. WHO WILL YOUR INFORMATION BE SHARED WITH?\r\n                    <br />\r\n                    We only share and disclose your information with the\r\n                    following categories of third parties. If we have processed\r\n                    your data based on your consent and you wish to revoke your\r\n                    consent, please contact us using the contact details\r\n                    provided in the section below titled \"HOW CAN YOU CONTACT US\r\n                    ABOUT THIS NOTICE?\".\r\n                    <ul>\r\n                      <li>Sales & Marketing Tools</li>\r\n                      <li>Testing Tools</li>\r\n                      <li>\r\n                        User Account Registration & Authentication Services\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n\r\n                  <div className=\"desc-v1-1\">\r\n                    5. IS YOUR INFORMATION TRANSFERRED INTERNATIONALLY?\r\n                    <br />\r\n                    Our servers are in the cloud. If you are accessing our App\r\n                    from outside, please be aware that your information may be\r\n                    transferred to, stored, and processed by us in our\r\n                    facilities and by those third parties with whom we may share\r\n                    your personal information (see \"WILL YOUR INFORMATION BE\r\n                    SHARED WITH ANYONE?\" above), in and other countries.\r\n                    <br />\r\n                    If you are a resident in the European Economic Area (EEA) or\r\n                    United Kingdom (UK), then these countries may not\r\n                    necessarily have data protection laws or other similar laws\r\n                    as comprehensive as those in your country. We will however\r\n                    take all necessary measures to protect your personal\r\n                    information in accordance with this privacy notice and\r\n                    applicable law.\r\n                    <br />\r\n                    <br />\r\n                  </div>\r\n                  <div className=\"desc-v1-1\">\r\n                    6. HOW LONG DO WE KEEP YOUR INFORMATION?\r\n                    <br />\r\n                    We will only keep your personal information for as long as\r\n                    it is necessary for the purposes set out in this privacy\r\n                    notice, unless a longer retention period is required or\r\n                    permitted by law (such as tax, accounting or other legal\r\n                    requirements). No purpose in this notice will require us\r\n                    keeping your personal information for longer than sixty (60)\r\n                    months past the termination of the user's account.\r\n                    <br />\r\n                    When we have no ongoing legitimate business need to process\r\n                    your personal information, we will either delete or\r\n                    anonymize such information, or, if this is not possible (for\r\n                    example, because your personal information has been stored\r\n                    in backup archives), then we will securely store your\r\n                    personal information and isolate it from any further\r\n                    processing until deletion is possible.\r\n                    <br />\r\n                    <br />\r\n                  </div>\r\n                  <div className=\"desc-v1-1\">\r\n                    7. HOW DO WE KEEP YOUR INFORMATION SAFE?\r\n                    <br />\r\n                    We have implemented appropriate technical and organizational\r\n                    security measures designed to protect the security of any\r\n                    personal information we process. However, despite our\r\n                    safeguards and efforts to secure your information, no\r\n                    electronic transmission over the Internet or information\r\n                    storage technology can be guaranteed to be 100% secure, so\r\n                    we cannot promise or guarantee that hackers, cybercriminals,\r\n                    or other unauthorized third parties will not be able to\r\n                    defeat our security, and improperly collect, access, steal,\r\n                    or modify your information. Although we will do our best to\r\n                    protect your personal information, transmission of personal\r\n                    information to and from our App is at your own risk. You\r\n                    should only access the App within a secure environment.\r\n                    <br />\r\n                    <br />\r\n                  </div>\r\n                  <div className=\"desc-v1-1\">\r\n                    8. WHAT ARE YOUR PRIVACY RIGHTS?\r\n                    <br />\r\n                    In some regions (like the EEA and UK), you have certain\r\n                    rights under applicable data protection laws. These may\r\n                    include the right (i) to request access and obtain a copy of\r\n                    your personal information, (ii) to request rectification or\r\n                    erasure; (iii) to restrict the processing of your personal\r\n                    information; and (iv) if applicable, to data portability. In\r\n                    certain circumstances, you may also have the right to object\r\n                    to the processing of your personal information. To make such\r\n                    a request, please use the contact details provided below. We\r\n                    will consider and act upon any request in accordance with\r\n                    applicable data protection laws.\r\n                    <br />\r\n                    If we are relying on your consent to process your personal\r\n                    information, you have the right to withdraw your consent at\r\n                    any time. Please note however that this will not affect the\r\n                    lawfulness of the processing before its withdrawal, nor will\r\n                    it affect the processing of your personal information\r\n                    conducted in reliance on lawful processing grounds other\r\n                    than consent.\r\n                    <br />\r\n                    If you are a resident in the EEA or UK and you believe we\r\n                    are unlawfully processing your personal information, you\r\n                    also have the right to complain to your local data\r\n                    protection supervisory authority. You can find their contact\r\n                    details here:{\" \"}\r\n                    <a href=\"https://ec.europa.eu/justice/data-protection/bodies/authorities/index_en.html\">\r\n                      https://ec.europa.eu/justice/data-protection/bodies/authorities/index_en.html\r\n                    </a>{\" \"}\r\n                    .<br />\r\n                    If you are a resident in Switzerland, the contact details\r\n                    for the data protection authorities are available here:{\" \"}\r\n                    <a href=\"https://www.edoeb.admin.ch/edoeb/en/home.html\">\r\n                      https://www.edoeb.admin.ch/edoeb/en/home.html\r\n                    </a>\r\n                    .<br />\r\n                    If you have questions or comments about your privacy rights,\r\n                    you may email us at admin@higherlevelfx.com.\r\n                    <br />\r\n                    Account Information\r\n                    <br />\r\n                    If you would at any time like to review or change the\r\n                    information in your account or terminate your account, you\r\n                    can:\r\n                    <br />\r\n                    <ul>\r\n                      <li>\r\n                        Log in to your account settings and update your user\r\n                        account.\r\n                      </li>\r\n                    </ul>\r\n                    Upon your request to terminate your account, we will\r\n                    deactivate or delete your account and information from our\r\n                    active databases. However, we may retain some information in\r\n                    our files to prevent fraud, troubleshoot problems, assist\r\n                    with any investigations, enforce our Terms of Use and/or\r\n                    comply with applicable legal requirements.\r\n                    <br />\r\n                    Opting out of email marketing: You can unsubscribe from our\r\n                    marketing email list at any time by clicking on the\r\n                    unsubscribe link in the emails that we send or by contacting\r\n                    us using the details provided below. You will then be\r\n                    removed from the marketing email list — however, we may\r\n                    still communicate with you, for example to send you\r\n                    service-related emails that are necessary for the\r\n                    administration and use of your account, to respond to\r\n                    service requests, or for other non-marketing purposes. To\r\n                    otherwise opt-out, you may:\r\n                    <br />\r\n                    <ul>\r\n                      <li>\r\n                        Access your account settings and update your\r\n                        preferences.\r\n                        <br />\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <div className=\"desc-v1-1\">\r\n                    9. CONTROLS FOR DO-NOT-TRACK FEATURES\r\n                    <br />\r\n                    Most web browsers and some mobile operating systems and\r\n                    mobile applications include a Do-Not-Track (\"DNT\") feature\r\n                    or setting you can activate to signal your privacy\r\n                    preference not to have data about your online browsing\r\n                    activities monitored and collected. At this stage no uniform\r\n                    technology standard for recognizing and implementing DNT\r\n                    signals has been finalized. As such, we do not currently\r\n                    respond to DNT browser signals or any other mechanism that\r\n                    automatically communicates your choice not to be tracked\r\n                    online. If a standard for online tracking is adopted that we\r\n                    must follow in the future, we will inform you about that\r\n                    practice in a revised version of this privacy notice.\r\n                    <br />\r\n                    <br />\r\n                  </div>\r\n                  <div className=\"desc-v1-1\">\r\n                    10. DO CALIFORNIA RESIDENTS HAVE SPECIFIC PRIVACY RIGHTS?\r\n                    <br />\r\n                    California Civil Code Section 1798.83, also known as the\r\n                    \"Shine The Light\" law, permits our users who are California\r\n                    residents to request and obtain from us, once a year and\r\n                    free of charge, information about categories of personal\r\n                    information (if any) we disclosed to third parties for\r\n                    direct marketing purposes and the names and addresses of all\r\n                    third parties with which we shared personal information in\r\n                    the immediately preceding calendar year. If you are a\r\n                    California resident and would like to make such a request,\r\n                    please submit your request in writing to us using the\r\n                    contact information provided below.\r\n                    <br />\r\n                    If you are under 18 years of age, reside in California, and\r\n                    have a registered account with the App, you have the right\r\n                    to request removal of unwanted data that you publicly post\r\n                    on the App. To request removal of such data, please contact\r\n                    us using the contact information provided below, and include\r\n                    the email address associated with your account and a\r\n                    statement that you reside in California. We will make sure\r\n                    the data is not publicly displayed on the App, but please be\r\n                    aware that the data may not be completely or comprehensively\r\n                    removed from all our systems (e.g. backups, etc.).\r\n                    <br />\r\n                    CCPA Privacy Notice\r\n                    <br />\r\n                    The California Code of Regulations defines a \"resident\" as:\r\n                    <br />\r\n                    (1) every individual who is in the State of California for\r\n                    other than a temporary or transitory purpose and\r\n                    <br />\r\n                    (2) every individual who is domiciled in the State of\r\n                    California who is outside the State of California for a\r\n                    temporary or transitory purpose\r\n                    <br />\r\n                    All other individuals are defined as \"non-residents.\"\r\n                    <br />\r\n                    If this definition of \"resident\" applies to you, we must\r\n                    adhere to certain rights and obligations regarding your\r\n                    personal information.\r\n                    <br />\r\n                    We may also collect other personal information outside of\r\n                    these categories instances where you interact with us\r\n                    in-person, online, or by phone or mail in the context of:\r\n                    <br />\r\n                    <ul>\r\n                      <li>\r\n                        Receiving help through our customer support channels;\r\n                      </li>\r\n                      <li>\r\n                        Participation in customer surveys or contests; and\r\n                      </li>\r\n                      <li>\r\n                        Facilitation in the delivery of our Services and to\r\n                        respond to your inquiries.\r\n                      </li>\r\n                    </ul>\r\n                    How do we use and share your personal information?\r\n                    <br />\r\n                    More information about our data collection and sharing\r\n                    practices can be found in this privacy notice.\r\n                    <br />\r\n                    You may contact us or by referring to the contact details at\r\n                    the bottom of this document.\r\n                    <br />\r\n                    If you are using an authorized agent to exercise your right\r\n                    to opt-out we may deny a request if the authorized agent\r\n                    does not submit proof that they have been validly authorized\r\n                    to act on your behalf.\r\n                    <br />\r\n                    Will your information be shared with anyone else?\r\n                    <br />\r\n                    We may disclose your personal information with our service\r\n                    providers pursuant to a written contract between us and each\r\n                    service provider. Each service provider is a for-profit\r\n                    entity that processes the information on our behalf.\r\n                    <br />\r\n                    We may use your personal information for our own business\r\n                    purposes, such as for undertaking internal research for\r\n                    technological development and demonstration. This is not\r\n                    considered to be \"selling\" of your personal data.\r\n                    <br />\r\n                    HL4X International LLC has disclosed the following\r\n                    categories of personal information to third parties for a\r\n                    business or commercial purpose in the preceding twelve (12)\r\n                    months:\r\n                    <br />\r\n                    <ul>\r\n                      <li>\r\n                        Category B. Personal information, as defined in the\r\n                        California Customer Records law, such as your name,\r\n                        contact information, education, employment, employment\r\n                        history and financial information.\r\n                      </li>\r\n                    </ul>\r\n                    The categories of third parties to whom we disclosed\r\n                    personal information for a business or commercial purpose\r\n                    can be found under \"WHO WILL YOUR INFORMATION BE SHARED\r\n                    WITH?\".\r\n                    <br />\r\n                    HL4X International LLC has not sold any personal information\r\n                    to third parties for a business or commercial purpose in the\r\n                    preceding twelve (12) months. HL4X International LLC will\r\n                    not sell personal information in the future belonging to\r\n                    website visitors, users and other consumers.\r\n                    <br />\r\n                    Your rights with respect to your personal data\r\n                    <br />\r\n                    Right to request deletion of the data - Request to delete\r\n                    <br />\r\n                    You can ask for the deletion of your personal information.\r\n                    If you ask us to delete your personal information, we will\r\n                    respect your request and delete your personal information,\r\n                    subject to certain exceptions provided by law, such as (but\r\n                    not limited to) the exercise by another consumer of his or\r\n                    her right to free speech, our compliance requirements\r\n                    resulting from a legal obligation or any processing that may\r\n                    be required to protect against illegal activities.\r\n                    <br />\r\n                    Right to be informed - Request to know\r\n                    <br />\r\n                    Depending on the circumstances, you have a right to know:\r\n                    <br />\r\n                    <ul>\r\n                      <li>\r\n                        whether we collect and use your personal information;\r\n                      </li>\r\n                      <li>\r\n                        the categories of personal information that we collect;\r\n                      </li>\r\n                      <li>\r\n                        the purposes for which the collected personal\r\n                        information is used; whether we sell your personal\r\n                        information to third parties;\r\n                      </li>\r\n                      <li>\r\n                        the categories of personal information that we sold or\r\n                        disclosed for a business purpose;\r\n                      </li>\r\n                      <li>\r\n                        the categories of third parties to whom the personal\r\n                        information was sold or disclosed for a business\r\n                        purpose; and\r\n                      </li>\r\n                      <li>\r\n                        the business or commercial purpose for collecting or\r\n                        selling personal information.\r\n                      </li>\r\n                    </ul>\r\n                    In accordance with applicable law, we are not obligated to\r\n                    provide or delete consumer information that is de-identified\r\n                    in response to a consumer request or to re-identify\r\n                    individual data to verify a consumer request.\r\n                    <br />\r\n                    Right to Non-Discrimination for the Exercise of a Consumer’s\r\n                    Privacy Rights\r\n                    <br />\r\n                    We will not discriminate against you if you exercise your\r\n                    privacy rights.\r\n                    <br />\r\n                    Verification process\r\n                    <br />\r\n                    Upon receiving your request, we will need to verify your\r\n                    identity to determine you are the same person about whom we\r\n                    have the information in our system. These verification\r\n                    efforts require us to ask you to provide information so that\r\n                    we can match it with information you have previously\r\n                    provided us. For instance, depending on the type of request\r\n                    you submit, we may ask you to provide certain information so\r\n                    that we can match the information you provide with the\r\n                    information we already have on file, or we may contact you\r\n                    through a communication method (e.g. phone or email) that\r\n                    you have previously provided to us. We may also use other\r\n                    verification methods as the circumstances dictate.\r\n                    <br />\r\n                    We will only use personal information provided in your\r\n                    request to verify your identity or authority to make the\r\n                    request. To the extent possible, we will avoid requesting\r\n                    additional information from you for the purposes of\r\n                    verification. If, however, we cannot verify your identity\r\n                    from the information already maintained by us, we may\r\n                    request that you provide additional information for the\r\n                    purposes of verifying your identity, and for security or\r\n                    fraud-prevention purposes. We will delete such additionally\r\n                    provided information as soon as we finish verifying you.\r\n                    <br />\r\n                    Other privacy rights\r\n                    <br />\r\n                    <ul>\r\n                      <li>\r\n                        you may object to the processing of your personal data\r\n                      </li>\r\n                      <li>\r\n                        you may request correction of your personal data if it\r\n                        is incorrect or no longer relevant, or ask to restrict\r\n                        the processing of the data\r\n                      </li>\r\n                      <li>\r\n                        you can designate an authorized agent to make a request\r\n                        under the CCPA on your behalf. We may deny a request\r\n                        from an authorized agent that does not submit proof that\r\n                        they have been validly authorized to act on your behalf\r\n                        in accordance with the CCPA.\r\n                      </li>\r\n                      <li>\r\n                        you may request to opt-out from future selling of your\r\n                        personal information to third parties. Upon receiving a\r\n                        request to opt-out, we will act upon the request as soon\r\n                        as feasibly possible, but no later than 15 days from the\r\n                        date of the request submission.\r\n                      </li>\r\n                    </ul>\r\n                    To exercise these rights, you can contact us or by referring\r\n                    to the contact details at the bottom of this document. If\r\n                    you have a complaint about how we handle your data, we would\r\n                    like to hear from you.\r\n                    <br />\r\n                    <br />\r\n                  </div>\r\n                  <div className=\"desc-v1-1\">\r\n                    11. DO WE MAKE UPDATES TO THIS NOTICE?\r\n                    <br />\r\n                    We may update this privacy notice from time to time. The\r\n                    updated version will be indicated by an updated \"Revised\"\r\n                    date and the updated version will be effective as soon as it\r\n                    is accessible. If we make material changes to this privacy\r\n                    notice, we may notify you either by prominently posting a\r\n                    notice of such changes or by directly sending you a\r\n                    notification. We encourage you to review this privacy notice\r\n                    frequently to be informed of how we are protecting your\r\n                    information.\r\n                    <br />\r\n                    <br />\r\n                  </div>\r\n                  <div className=\"desc-v1-1\">\r\n                    12. HOW CAN YOU CONTACT US ABOUT THIS NOTICE?\r\n                    <br />\r\n                    If you have questions or comments about this notice, you may\r\n                    email us at admin@higherlevelfx.com or by post to:\r\n                    <br />\r\n                    <br />\r\n                    HL4X International LLC\r\n                    <br />\r\n                    Brown Hill\r\n                    <br />\r\n                    St John's Parish, Nevis, W.I\r\n                    <br />\r\n                    KN0802\r\n                    <br />\r\n                    Saint Kitts and Nevis\r\n                    <br />\r\n                  </div>\r\n                  <p className=\"desc-v1-1\">&nbsp;</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"container d-padding-top-20\">\r\n              <div className=\"row d-margin-top-20\">\r\n                <div className=\"col-md-12 md-margin-bottom-30\">\r\n                  <h4 className=\"text-normal-spacing d-margin-bottom-30\">\r\n                    Privacy Policy (Website)\r\n                  </h4>\r\n                  <p className=\"desc-v1-1\">Effective March 02, 2020</p>\r\n                  <p className=\"desc-v1-1\">\r\n                    HL4X International LLC (“Company”, “We”, or “Us”) recognizes\r\n                    and values the importance of privacy. We want you as a\r\n                    visitor to our website (“Website”) to feel confident using\r\n                    our products and services, and this privacy policy notice\r\n                    (“Notice”) is to help you better understand how we collect,\r\n                    use, and disclose your information.\r\n                  </p>\r\n                  <div className=\"desc-v1-1\">\r\n                    This Policy describes the following:\r\n                    <ul>\r\n                      <li>\r\n                        What information we collect and how it is collected\r\n                      </li>\r\n                      <li>How we use your information</li>\r\n                      <li>With whom we may share your information with</li>\r\n                      <li>Your rights and choices</li>\r\n                      <li>Security and storage of the information</li>\r\n                      <li>Third party websites</li>\r\n                      <li>Transfer of your information</li>\r\n                      <li>Do Not Track</li>\r\n                      <li>Children and privacy</li>\r\n                      <li>Contact information and changes to this notice</li>\r\n                    </ul>\r\n                  </div>\r\n                  <div className=\"desc-v1-1\">\r\n                    INFORMATION WE COLLECT\r\n                    <br />\r\n                    We collect information about you directly from you and\r\n                    automatically through your use of our Website. We may\r\n                    combine information automatically collected with other\r\n                    information that we have collected about you including from\r\n                    publicly available sources. How we collect and process this\r\n                    information is as follows:\r\n                    <ul>\r\n                      <li>\r\n                        When you register an account with us, you provide us\r\n                        with personally identifiable information like name,\r\n                        email address, phone number, username, and password,\r\n                        etc. Moreover, you have the ability to add information\r\n                        to your profile after registration.\r\n                      </li>\r\n                      <li>\r\n                        If you buy something through our Website, we may collect\r\n                        information on this transaction, such as payment\r\n                        information, purchase activity, and shipping/contact\r\n                        details.\r\n                      </li>\r\n                      <li>\r\n                        Occasionally, you may voluntarily provide information to\r\n                        us to complete surveys and questionnaires or to\r\n                        participate in user polls. We use this information to\r\n                        improve our products and services and to ensure that\r\n                        we’re providing accurate disclosures. We may also use\r\n                        your information to provide you newsletters and other\r\n                        marketing information that coincides with your\r\n                        preferences. You may customize your marketing\r\n                        preferences, or let us know if you do not wish to\r\n                        receive any promotional materials, by adjusting your\r\n                        Subscriptions & Email options on the Site.\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <p className=\"desc-v1-1\">\r\n                    From time to time, we may collect personal information about\r\n                    you from third party sources which we will use for our\r\n                    business purposes (for example, in order to better serve you\r\n                    with content or promotions). However, we will only use this\r\n                    information where these third parties either have your\r\n                    consent or are otherwise legally permitted or required to\r\n                    disclose your personal information to us.\r\n                  </p>\r\n                  <p className=\"desc-v1-1\">\r\n                    B. Information Collected Automatically\r\n                  </p>\r\n                  <p className=\"desc-v1-1\">\r\n                    When you visit our Website, We may collect certain user\r\n                    information automatically from your device. In some\r\n                    territories, including California and countries in the\r\n                    European Economic Area, this information may be considered\r\n                    personal data or personally identifiable information under\r\n                    applicable data protection laws.\r\n                  </p>\r\n                  <p className=\"desc-v1-1\">\r\n                    More broadly speaking, the user information We collect\r\n                    automatically may include information like your IP address,\r\n                    device type, unique device identification numbers,\r\n                    browser-type, broad geographic location (e.g. country or\r\n                    city-level location), and other technical information. We\r\n                    may also collect user information about how your device has\r\n                    interacted with our Website, including the pages accessed\r\n                    and links clicked.\r\n                  </p>\r\n                  <div className=\"desc-v1-1\">\r\n                    Like many websites, We use cookies, web beacons, and other\r\n                    technologies to receive and store certain types of\r\n                    information when you interact with us through your device.\r\n                    Using these technologies helps us customize your experience\r\n                    with our Website, improve your experience, and tailor\r\n                    marketing messages. Specific types of information we may\r\n                    automatically collect includes:\r\n                    <br />\r\n                    <ul>\r\n                      <li>\r\n                        Log & Device data. Information about your interactions\r\n                        with our Website, which may include log data like your\r\n                        web address you came from or are going to, your device\r\n                        model, operating system, browser type, unique device\r\n                        identifier, Internet Protocol (“IP”) address, mobile\r\n                        network carrier, and time zone or location. Whether We\r\n                        collect some or all of this information often depends on\r\n                        what type of device you’re using and its settings.\r\n                      </li>\r\n                      <li>\r\n                        Cookie data. Depending on how you’re accessing our\r\n                        Website, We may use “Cookies” (a small text file sent by\r\n                        your computer each time you visit our Website or similar\r\n                        technologies to record log data. When We use Cookies, we\r\n                        may use ‘session’ cookies (that last until you close\r\n                        your browser) or ‘persistent’ cookies (that last until\r\n                        you or your browser deletes them). For example, we may\r\n                        use Cookies to keep you logged into the Website. Some of\r\n                        the Cookies We use are associated with your registered\r\n                        account (including personal information about you, such\r\n                        as the email address you gave us), and other Cookies are\r\n                        not.\r\n                      </li>\r\n                      <li>\r\n                        Other Web Site Analytics Services. We also may use\r\n                        third-party service providers to provide certain\r\n                        analytics and Viewer interactions services in connection\r\n                        with our operation of our Website, including the\r\n                        collection and tracking of certain data and information\r\n                        regarding the characteristics and activities of visitors\r\n                        to the Website.\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <p className=\"desc-v1-1\">\r\n                    Collecting this information automatically enables us to\r\n                    better understand the visitors who come to our Website,\r\n                    where they come from, and what content on our Website is of\r\n                    interest to them. We use this information for our business\r\n                    purposes, including internal analytics purposes and to\r\n                    improve the quality and relevance of our Website to our\r\n                    visitors.\r\n                  </p>\r\n                  <p className=\"desc-v1-1\">\r\n                    Please note that nothing in this Notice addresses, or should\r\n                    be read to limit or restrict, how we collect, use or process\r\n                    anonymous, de-identified, or aggregate information.\r\n                  </p>\r\n                  <p className=\"desc-v1-1\">HOW WE USE YOUR INFORMATION</p>\r\n                  <div className=\"desc-v1-1\">\r\n                    We may use information that we collect about you, including\r\n                    personal information, to: <br />\r\n                    <ul>\r\n                      <li>\r\n                        Provide the Features of the Website and Products &\r\n                        Services You Request. We will use your information to\r\n                        provide our Website to you; including managing your\r\n                        account; responding to your inquiries; and for other\r\n                        customer service and support purposes. We use the\r\n                        payment information you provide to us in order to alert\r\n                        you of past, current, and upcoming charges, to allow us\r\n                        to present the billing history to you on your billing\r\n                        page in the Website, and to perform internal financial\r\n                        processes, such as looking at the status of a credit\r\n                        card charge. In the event of a credit card dispute, we\r\n                        also share account information with your bank to verify\r\n                        the legitimacy of a charge.\r\n                      </li>\r\n                      <li>\r\n                        To Communicate Our Products, Services, Events, and/for\r\n                        Other Promotional Purposes. If you have an account with\r\n                        us (or have placed an order with us), we may use the\r\n                        contact details you provided to send you marketing\r\n                        communications, where permitted by applicable law. We\r\n                        may use the information that you provide to us to\r\n                        personalize communications and advertisements regarding\r\n                        our products and services that may be of interest to\r\n                        you.\r\n                      </li>\r\n                      <li>\r\n                        To Operate, Improve and Maintain our Business, Products,\r\n                        and Services. We use the personal data you provide to us\r\n                        to operate our business. For example, when you make a\r\n                        purchase, we use that information for accounting,\r\n                        audits, and other internal functions. We may use\r\n                        personal data about how you use our products and\r\n                        services to enhance your user experience and to help us\r\n                        diagnose technical and service problems and administer\r\n                        our Website.\r\n                      </li>\r\n                      <li>\r\n                        Legal Compliance. We may use your information to comply\r\n                        with applicable legal or regulatory obligations,\r\n                        including complying with requests from law enforcement\r\n                        or other governmental authorities, or in legal\r\n                        proceedings involving [Company].\r\n                      </li>\r\n                      <li>\r\n                        Other. We also may use your information to manage our\r\n                        business or perform functions as otherwise described to\r\n                        you at the time of collection subject to your consent.\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <p className=\"desc-v1-1\">\r\n                    WITH WHOM WE MAY SHARE YOUR INFORMATION WITH:\r\n                  </p>\r\n                  <p className=\"desc-v1-1\">\r\n                    We do not sell your information to any third parties or\r\n                    disclose it in exchange for money or other valuable\r\n                    consideration. We do not share your personal information\r\n                    with others except as indicated within this Notice, or when\r\n                    we inform you and give you an opportunity to opt-out of\r\n                    having your personal information shared.\r\n                  </p>\r\n                  <div className=\"desc-v1-1\">\r\n                    We may share information we collect about you, including\r\n                    personal information, in the following ways:\r\n                    <br />\r\n                    <ul>\r\n                      <li>\r\n                        With third-party service providers, agents, contractors,\r\n                        or government entities.\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <p className=\"desc-v1-1\">\r\n                    We use other companies, agents, or contractors (“Service\r\n                    Providers”) to perform services on our behalf or to assist\r\n                    us with providing services to you.\r\n                  </p>\r\n                  <p className=\"desc-v1-1\">\r\n                    We may engage Service Providers to process credit card\r\n                    transactions or other payment methods. We may also engage\r\n                    Service Providers to provide services such as monitoring and\r\n                    developing this Website and our Products/Services; aiding in\r\n                    communications, infrastructure, and IT services; customer\r\n                    service; and analyzing and enhancing data. These Service\r\n                    Providers may have access to your personal or other\r\n                    information in order to provide these functions. In\r\n                    addition, some of the above-listed types of information that\r\n                    we request may be collected by third party providers on our\r\n                    behalf.\r\n                  </p>\r\n                  <p className=\"desc-v1-1\">\r\n                    We may share information with Service Providers and\r\n                    government entities for legal, security, and safety\r\n                    purposes. This includes sharing information in order to\r\n                    enforce policies or contracts, address security breaches,\r\n                    and assist in the investigation of fraud, security issues,\r\n                    or other concerns.\r\n                  </p>\r\n                  <p className=\"desc-v1-1\">\r\n                    We require Service Providers to agree to take reasonable\r\n                    steps to keep the personal information that we provide to\r\n                    them securely. We do not authorize them to use or disclose\r\n                    your personal information except in connection with\r\n                    providing their services.\r\n                  </p>\r\n                  <p className=\"desc-v1-1\">YOUR RIGHTS AND CHOICES</p>\r\n                  <p className=\"desc-v1-1\">\r\n                    In certain circumstances, local data protection laws (such\r\n                    as the Global Data Protection Regulation or California\r\n                    Consumer Privacy Act) may give you rights with respect to\r\n                    personal information if you are located in or are a resident\r\n                    of that country, state, or territory (including if you are\r\n                    located in the EU/EEA).\r\n                  </p>\r\n                  <p className=\"desc-v1-1\">\r\n                    IMPORTANT: WE ARE ONLY REQUIRED TO HONOR RIGHTS TO THE\r\n                    EXTENT THAT THESE RIGHTS HAVE BEEN GRANTED TO YOU AND APPLY\r\n                    TO YOU UNDER APPLICABLE DATA PROTECTION LAWS. PLEASE CONSULT\r\n                    YOUR LOCAL DATA PROTECTION LAWS TO DETERMINE WHAT RIGHTS MAY\r\n                    BE AVAILABLE TO YOU AND WHEN ACCESS TO THESE RIGHTS ARE\r\n                    LIMITED.\r\n                  </p>\r\n                  <p className=\"desc-v1-1\">\r\n                    A. What Rights May Be Available to You\r\n                  </p>\r\n                  <div className=\"desc-v1-1\">\r\n                    These rights differ based upon local data protection laws in\r\n                    your country, state, or territory, but these rights may\r\n                    include one or more of the following:\r\n                    <br />\r\n                    <ul>\r\n                      <li>\r\n                        Access to Personal Information. You may have the right\r\n                        to obtain confirmation from us that we process your\r\n                        personal information and, if so, you may have the right\r\n                        to request access to your personal information.\r\n                      </li>\r\n                      <li>\r\n                        Rectification. You may have the right to request that we\r\n                        rectify inaccurate personal information concerning you\r\n                        and, depending on the purposes of the processing, you\r\n                        may have the right to have incomplete personal\r\n                        information completed.\r\n                      </li>\r\n                      <li>\r\n                        Erasure/Deletion. You may have the right to require us\r\n                        to erase some or all of the personal information\r\n                        concerning you.\r\n                      </li>\r\n                      <li>\r\n                        Restriction of Processing. You may have the right to\r\n                        require us to restrict the further processing your\r\n                        personal information. In such cases, the respective\r\n                        information will be marked as restricted, and may only\r\n                        be processed by us for certain purposes.\r\n                      </li>\r\n                      <li>\r\n                        Object. You may have the right to object, on grounds\r\n                        relating to your particular situation, to the processing\r\n                        of your personal information by us, and we may be\r\n                        required to no longer process some or all of your\r\n                        personal information.\r\n                      </li>\r\n                      <li>\r\n                        Data Portability. You may have the right to receive a\r\n                        copy of your personal information which you have\r\n                        provided to us, in a structured, commonly used, and\r\n                        machine-readable format, and you may have the right to\r\n                        transmit that personal information to another entity\r\n                        without hindrance from us.\r\n                      </li>\r\n                      <li>\r\n                        Withdraw Consent. You may have the right to withdraw\r\n                        consent you have provided to us where we rely solely on\r\n                        your consent to process your personal information. You\r\n                        can always provide your consent to us again at a later\r\n                        time.\r\n                      </li>\r\n                      <li>\r\n                        Right to Complain. You may have the right to lodge a\r\n                        complaint to an applicable supervisory authority or\r\n                        other regulators if you are not satisfied with our\r\n                        responses to your requests or how we manage your\r\n                        personal information. For example, if you are located in\r\n                        the EU/EEA, a list of and more information about the\r\n                        EU/EEA Data Protection Authorities can be found here:{\" \"}\r\n                        <br />\r\n                        <a href=\"http://ec.europa.eu/justice/data-protection/bodies/authorities/index_en.htm\">\r\n                          http://ec.europa.eu/justice/data-protection/bodies/authorities/index_en.htm.\r\n                        </a>\r\n                        We encourage you to first or also reach out to us at\r\n                        info@higherlevelfx.com, so we have an opportunity to\r\n                        address your concerns directly.\r\n                      </li>\r\n                      <li>\r\n                        California Resident. If you are a California resident,\r\n                        California Civil Code Section 1798.83 may permit you the\r\n                        right to request information regarding the disclosure of\r\n                        personal information about you by us to third parties\r\n                        for the third parties’ direct marketing purposes.\r\n                        Moreover, California residents are also directed to the\r\n                        section titled “Do Not Track” herein.\r\n                      </li>\r\n                      <li>\r\n                        Nevada Resident. If you are a Nevada resident, Nevada\r\n                        residents may also have certain rights regarding the\r\n                        sale of personal information. Nevada residents may\r\n                        opt-out of the future sale of their information to a\r\n                        third party so that they may license or sell information\r\n                        by emailing us at info@higherlevelfx.com\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <p className=\"desc-v1-1\">\r\n                    SECURITY AND STORAGE OF INFORMATION\r\n                  </p>\r\n                  <p className=\"desc-v1-1\">\r\n                    We take the security of your personal data very seriously.\r\n                    We work hard to protect the personal data that you provide\r\n                    from loss, misuse, and unauthorized access, or disclosure.\r\n                    Given the nature of communications and information\r\n                    processing technology, there is no guarantee that personal\r\n                    data will be absolutely safe from access, alteration, or\r\n                    destruction by a breach of any of our physical, technical,\r\n                    and managerial safeguards.\r\n                  </p>\r\n                  <p className=\"desc-v1-1\">\r\n                    You should take steps to protect against unauthorized access\r\n                    to your device and account by, among other things, choosing\r\n                    a unique and complex password that nobody else knows or can\r\n                    easily guess and keeping your log-in and password private.\r\n                    We are not responsible for any lost, stolen, or compromised\r\n                    passwords or for any activity on your account via\r\n                    unauthorized password activity.\r\n                  </p>\r\n                  <p className=\"desc-v1-1\">\r\n                    We retain the personal data we collect for so long as is\r\n                    reasonably necessary to fulfill the purposes for which the\r\n                    data was collected, to perform our contractual and legal\r\n                    obligations, and for any applicable statute of limitations\r\n                    periods for the purposes of bringing and defending claims.\r\n                  </p>\r\n                  <p className=\"desc-v1-1\">THIRD-PARTY WEBSITES</p>\r\n                  <p className=\"desc-v1-1\">\r\n                    Our Website may contain links to third-party websites and\r\n                    applications. Any access to and use of such linked websites\r\n                    and applications is not governed by this Notice but instead\r\n                    is governed by the privacy policies of those third parties.\r\n                    We do not endorse these parties, their content, or any\r\n                    products and services they offer, and we do not endorse\r\n                    these parties, their content, or any products and services\r\n                    they offer, and we are not responsible for the information\r\n                    practices of such third-party websites or applications.\r\n                  </p>\r\n                  <p className=\"desc-v1-1\">TRANSFER OF YOUR INFORMATION</p>\r\n                  <p className=\"desc-v1-1\">\r\n                    This Website is based in the United States. Your information\r\n                    may be processed, transferred to, and maintained on servers,\r\n                    and databases located within the U.S. and elsewhere where\r\n                    the privacy laws may not be as protective as your\r\n                    jurisdiction. We reserve the right to transfer your\r\n                    information to and from any state, province, country, or\r\n                    other governmental jurisdiction. Your consent to this Notice\r\n                    followed by your submission or our collection of such\r\n                    information represents your agreement to any such transfer.\r\n                  </p>\r\n                  <p className=\"desc-v1-1\">DO NOT TRACK</p>\r\n                  <p className=\"desc-v1-1\">\r\n                    Web browsers can transmit “Do Not Track” signals or other\r\n                    mechanisms that provide consumers the ability to exercise\r\n                    choice regarding the collection of personal information\r\n                    about an individual’s online activities over time and across\r\n                    third-party websites or online services. Currently, no\r\n                    universally accepted standard exists for how to interpret\r\n                    such signals, although work to create consensus is ongoing.\r\n                    Therefore, we do not currently respond to or take any action\r\n                    with respect to the web browser Do Not Track.\r\n                  </p>\r\n                  <p className=\"desc-v1-1\">CHILDREN AND PRIVACY</p>\r\n                  <p className=\"desc-v1-1\">\r\n                    HL4X International LLC is not directed to children under\r\n                    eighteen (18) years of age and we do not knowingly collect\r\n                    personal information from children under 18. If we discover\r\n                    that a child under 18 has provided us with personal\r\n                    information, we will promptly delete such personal\r\n                    information from our systems. You may learn more about\r\n                    protecting children’s privacy online by visiting:\r\n                    <br />\r\n                    <a href=\"https://www.ftc.gov/tips-advice/business-center/privacy-and-security/children%27s-privacy\">\r\n                      https://www.ftc.gov/tips-advice/business-center/privacy-and-security/children%27s-privacy\r\n                    </a>\r\n                  </p>\r\n                  <p className=\"desc-v1-1\">\r\n                    CONTACT INFORMATION & CHANGES TO THIS NOTICE\r\n                  </p>\r\n                  <p className=\"desc-v1-1\">\r\n                    If you have any questions or comments about this notice, our\r\n                    Privacy Statement, the ways in which we collect and use your\r\n                    personal information, your choices and rights regarding such\r\n                    use, or wish to exercise your rights under California law,\r\n                    please do not hesitate to contact us at\r\n                    info@higherlevelfx.com\r\n                  </p>\r\n                  <p className=\"desc-v1-1\">\r\n                    This Notice is current as of the Effective Date set forth\r\n                    above. We reserve the right to amend this Notice at our\r\n                    discretion and at any time and will notify you of such\r\n                    amendment(s) on our homepage. Please note that if you\r\n                    continue to visit and use this Website after those changes\r\n                    are in effect, you agree to the revised Notice.\r\n                  </p>\r\n                  <p className=\"desc-v1-1\"></p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </HomeLayout>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrivacyPolicyPage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Home\\RiskWarningPage\\RiskWarningPage.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Home\\AffiliateAgreementPage\\AffiliateAgreementPage.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Home\\IncomeDisclaimerPage\\IncomeDisclaimerPage.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Home\\TrialPolicyPage\\TrialPolicyPage.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Home\\CompliancePage\\CompliancePage.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserVpsPage\\UserVpsPage.js",["2152","2153","2154"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport { APP_NAME } from \"config/CONSTANTS\";\r\nimport { ROUTE_USER_VPS } from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport {\r\n  apiUserCheckHasActiveLicense,\r\n  apiUserCheckHlxPassword,\r\n} from \"services/userCommonService\";\r\nimport {\r\n  apiUserGetVpsConsoleUrl,\r\n  apiUserGetVpsPassword,\r\n} from \"services/userVpsService\";\r\nimport {\r\n  get_data_value,\r\n  is_empty,\r\n  showToast,\r\n  show_loading,\r\n} from \"utils/GlobalFunctions\";\r\nimport ConfirmPasswordModal from \"./inc/ConfirmPasswordModal\";\r\nimport VpsInfoModal from \"./inc/VpsInfoModal\";\r\n\r\n\r\nconst currentPageTitle = \"Virtual Private Server\";\r\nconst UserVpsPage = () => {\r\n  const dispatch = useDispatch();\r\n  const initPage = () => {\r\n    dispatch(\r\n      UpdateAppData({\r\n        currentPageTitle: currentPageTitle,\r\n        current_route: ROUTE_USER_VPS,\r\n        m_user_menu_collapsed: true,\r\n      })\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    initPage();\r\n    getData();\r\n  }, []);\r\n\r\n  const defaultPageData = {\r\n    user: {},\r\n    vps_username: \"\",\r\n    vps_password: \"azzazza\",\r\n  };\r\n  const [pageData, setPageData] = useState(defaultPageData);\r\n\r\n  const [visibleModal, setVisibleModal] = useState(false);\r\n  const [visibleVpsInfoModal, setVisibleVpsInfoModal] = useState(false);\r\n\r\n  const getData = () => {\r\n    show_loading(true);\r\n    apiUserCheckHasActiveLicense()\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setPageData(api_res.data);\r\n          dispatch(updateUser(api_res.data[\"user\"]));\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  const onClickReval = () => {\r\n    const vps_password = get_data_value(pageData, \"vps_password\");\r\n    //console.log('vps_password', vps_password)\r\n    if (vps_password === \"\") {\r\n      setVisibleModal(true);\r\n    } else {\r\n      setVisibleVpsInfoModal(true);\r\n    }\r\n  };\r\n\r\n  const onClickVpsConsole = () => {\r\n    show_loading(true);\r\n    apiUserGetVpsConsoleUrl()\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          let redirect_url = api_res.data[\"redirect_url\"];\r\n          if (!is_empty(redirect_url)) {\r\n            window.open(redirect_url);\r\n          } else {\r\n            showToast(\"Invalid request\", \"error\");\r\n          }\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  const submitPassword = (modalData) => {\r\n    console.log(\"modalData\", modalData);\r\n    //let user_password = get_data_value(modalData, 'user_password')\r\n    show_loading(true);\r\n    apiUserGetVpsPassword(modalData)\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setPageData(api_res.data);\r\n          dispatch(updateUser(api_res.data[\"user\"]));\r\n          setVisibleModal(false);\r\n          setVisibleVpsInfoModal(true);\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-vps-page\">\r\n      <div\r\n        className={`row ${\r\n          get_data_value(pageData[\"user\"], \"license_status\") === 0\r\n            ? \"\"\r\n            : \"hidden\"\r\n        }`}\r\n      >\r\n        <div className=\"col-md-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title t-show-mobile\">{currentPageTitle}</h4>\r\n              <div className=\"card-content\">\r\n                <div className=\"r-block padding-top-20\">\r\n                  <h4>\r\n                    Welcome to your Virtual Private Server Management Area!\r\n                  </h4>\r\n                  <br />\r\n                  <p className=\"text-normal\">\r\n                    You need to be an active customer to access our tools and\r\n                    software\r\n                  </p>\r\n                  <br />\r\n                  <p className=\"text-normal\">\r\n                    Please purchase your membership under the \"Membership\"\r\n                    section to receive your own secured Virtual Private Server.\r\n                  </p>\r\n                  <br />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        className={`row ${\r\n          get_data_value(pageData[\"user\"], \"license_status\") === 1\r\n            ? \"\"\r\n            : \"hidden\"\r\n        }`}\r\n      >\r\n        <div className=\"col-md-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title t-show-mobile\">{currentPageTitle}</h4>\r\n              <div className=\"card-content\">\r\n                <div className=\"alert alert-warning mb-5 hidden\" role=\"alert\">\r\n                  <div className=\"note mb-0 text-left\">\r\n                    <p>Deal HLX Member!</p>\r\n                    <p>\r\n                      This new VPS feature is currently in beta, therefore it\r\n                      comes for free with your membership! If you experience any\r\n                      issues, just send us a support ticket and we will take\r\n                      care of it for you!\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"block text-center padding-top-20\">\r\n                  <div className=\"block position-relative\">\r\n                    <iframe\r\n                      src=\"https://player.vimeo.com/video/544336994\"\r\n                      width=\"640\"\r\n                      height=\"360\"\r\n                      title=\"Video\"\r\n                      frameBorder=\"0\"\r\n                      allow=\"autoplay; fullscreen\"\r\n                      allowFullScreen\r\n                    ></iframe>\r\n                    <div className=\"text-center mt-1 mb-3\"></div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"r-block padding-top-20\">\r\n                  <h4>\r\n                    Welcome to your Virtual Private Server Management Area!\r\n                  </h4>\r\n                  <br />\r\n                  <p className=\"text-normal\">\r\n                    This is the area where you can access all of our available\r\n                    tools and software.\r\n                  </p>\r\n                  <br />\r\n                  <p className=\"text-normal\">\r\n                    If you just recently purchased your membership, please wait\r\n                    about 10-15 minutes until your VPS is being created. All you\r\n                    need to do is just click the link below and you will be\r\n                    taken to your own web based VPS.\r\n                  </p>\r\n                  <br />\r\n                  <p className=\"text-normal\">\r\n                    Please note that you must allow pop-ups to access your VPS!\r\n                    Your session is fully safe and secure.\r\n                  </p>\r\n                  <br />\r\n                  <p className=\"text-normal\">\r\n                    Your username is: Administrator\r\n                    <br />\r\n                  </p>\r\n                  <p className=\"text-normal\">\r\n                    Your password is: &nbsp;{\" \"}\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn-show-vps-password btn btn-sm btn-success\"\r\n                      onClick={onClickReval}\r\n                    >\r\n                      Reveal\r\n                    </button>\r\n                  </p>\r\n                  <br />\r\n                </div>\r\n\r\n                <div className=\"r-block mt-4 mb-4\">\r\n                  <h4 className=\"text-normal inline-block mr-4\">\r\n                    Access your VPS Here:\r\n                  </h4>\r\n                  <div className=\"vps-btn-wrapper-1\">\r\n                    <button\r\n                      className=\"glow-on-hover btn-redirect-console\"\r\n                      type=\"button\"\r\n                      onClick={onClickVpsConsole}\r\n                    >\r\n                      Access Your VPS!\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ConfirmPasswordModal\r\n        modalTitle={APP_NAME}\r\n        isVisible={visibleModal}\r\n        setVisibleModal={setVisibleModal}\r\n        submitModalData={submitPassword}\r\n        modalClass=\"user-page confirm-password-modal\"\r\n      ></ConfirmPasswordModal>\r\n\r\n      <VpsInfoModal\r\n        modalTitle={APP_NAME}\r\n        isVisible={visibleVpsInfoModal}\r\n        setVisibleModal={setVisibleVpsInfoModal}\r\n        modalData={pageData}\r\n        modalClass=\"user-page vps=info-modal\"\r\n      ></VpsInfoModal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserVpsPage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\components\\ConfirmModal\\ConfirmModal.js",["2155","2156","2157","2158"],"import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  empty,\r\n  isEmpty,\r\n  is_empty,\r\n  jQuery,\r\n  showToast,\r\n} from \"utils/GlobalFunctions\";\r\nimport { APP_NAME } from \"config/CONSTANTS\";\r\n\r\nfunction ConfirmLogoutModal(props) {\r\n  const {\r\n    title,\r\n    content,\r\n    onClickYes,\r\n    textBtnYes,\r\n    hideBtnYes,\r\n    onClickNo,\r\n    textBtnNo,\r\n    hideBtnNo,\r\n    visibleModal,\r\n    setVisibleModal,\r\n    modalClass,\r\n  } = props;\r\n  useEffect(() => {\r\n    if (visibleModal !== undefined) {\r\n      setShow(visibleModal);\r\n    }\r\n  }, [visibleModal]);\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    setVisibleModal(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        dialogClassName={modalClass}\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{is_empty(title) ? APP_NAME : title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"text-center modal-content-body\">\r\n            <div className=\"text-normal\">{content}</div>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n        <button\r\n            type=\"button\"\r\n            className={`btn btn-primary mr-1 ${hideBtnYes ? \"hidden\" : \"\"}`}\r\n            onClick={(e) => {\r\n              !empty(onClickYes) ? onClickYes() : handleClose();\r\n            }}\r\n          >\r\n            {is_empty(textBtnYes) ? \"Yes\" : textBtnYes}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className={`btn btn-light ${hideBtnNo ? \"hidden\" : \"\"}`}\r\n            data-dismiss=\"modal\"\r\n            onClick={(e) => {\r\n              !empty(onClickNo) ? onClickNo() : handleClose();\r\n            }}\r\n          >\r\n            {is_empty(textBtnNo) ? \"No\" : textBtnNo}\r\n          </button>\r\n          \r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ConfirmLogoutModal;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserTeamPage\\UserTeamPage.js",["2159","2160","2161","2162","2163","2164","2165","2166"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport { ROUTE_USER_DASHBOARD, ROUTE_USER_TEAM } from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport { apiGetUserAcademyPageDetail } from \"services/userAcademyService\";\r\nimport {\r\n  apiGetUserTankList,\r\n  apiGetUserTeamPageDetail,\r\n  apiUserAssignChildUser,\r\n  apiUserGetTreeUpLevelUser,\r\n} from \"services/userTeamService\";\r\nimport {\r\n  empty,\r\n  get_data_value,\r\n  intval,\r\n  showToast,\r\n  show_loading,\r\n} from \"utils/GlobalFunctions\";\r\nimport Select from \"react-select\";\r\nimport { BASE_FRONT_URL } from \"config/CONSTANTS\";\r\nimport UserTankUserListModal from \"./inc/UserTankUserListModal\";\r\n\r\nconst currentPageTitle = \"My Team\";\r\nconst UserTeamPage = (props) => {\r\n  const dispatch = useDispatch();\r\n  const initPage = () => {\r\n    dispatch(\r\n      UpdateAppData({\r\n        currentPageTitle: currentPageTitle,\r\n        current_route: ROUTE_USER_TEAM,\r\n        m_user_menu_collapsed: true,\r\n      })\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    initPage();\r\n    getData();\r\n  }, [props]);\r\n  const history = useHistory();\r\n  const defaultPageData = {\r\n    user: {},\r\n    user_tree: [],\r\n    check_in_holding_tank: \"\",\r\n    all_users_in_tree: \"\",\r\n  };\r\n  const [pageData, setPageData] = useState(defaultPageData);\r\n  const getData = () => {\r\n    show_loading(true);\r\n    const rootUserId = getRootUserId();\r\n    setSelectedUserID(rootUserId);\r\n    apiGetUserTeamPageDetail(rootUserId)\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setPageData(api_res.data);\r\n          dispatch(updateUser(api_res.data[\"user\"]));\r\n          if (api_res.data[\"user\"][\"user_type\"] === 0) {\r\n            showToast(\"Sorry, only affiliate can access this page\", \"error\");\r\n            history.push(ROUTE_USER_DASHBOARD);\r\n            return false;\r\n          }\r\n          if (api_res.data[\"check_in_holding_tank\"] === \"1\") {\r\n            showToast(\r\n              \"Your sponsor hasn't placed you yet. Once your sponsor places you in the tree, your tree will become available.<br/> NOTE: If your sponsor doesn’t place you within 10 days then you will automatically be placed.\",\r\n              \"error\"\r\n            );\r\n            history.push(ROUTE_USER_DASHBOARD);\r\n            return false;\r\n          }\r\n          updateUserSelectList(api_res.data[\"all_users_in_tree\"]);\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  const getRootUserId = () => {\r\n    let rootUseId = 0;\r\n    try {\r\n      if (!empty(props.match.params.userid)) {\r\n        rootUseId = props.match.params.userid;\r\n      }\r\n    } catch (e) {}\r\n    return rootUseId;\r\n  };\r\n\r\n  /////////////////////////////////////////////// select box///////////////////////////////////////////\r\n  const colorStyles = {\r\n    control: (styles) => ({\r\n      ...styles,\r\n      backgroundColor: \"white\",\r\n      color: \"black\",\r\n    }),\r\n    option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n      return {\r\n        ...styles,\r\n        backgroundColor: \"white\",\r\n        color: \"black\",\r\n        cursor: isDisabled ? \"not-allowed\" : \"default\",\r\n\r\n        \":active\": {\r\n          ...styles[\":active\"],\r\n          backgroundColor: \"#f16857\",\r\n          color: \"white\",\r\n        },\r\n        \":hover\": {\r\n          ...styles[\":active\"],\r\n          backgroundColor: \"#f16857\",\r\n          color: \"white\",\r\n        },\r\n      };\r\n    },\r\n    input: (styles) => ({\r\n      ...styles,\r\n      backgroundColor: \"white\",\r\n      color: \"black\",\r\n    }),\r\n    placeholder: (styles) => ({\r\n      ...styles,\r\n      backgroundColor: \"white\",\r\n      color: \"black\",\r\n    }),\r\n  };\r\n  var userList = [];\r\n  var defaultUserList = [{ value: 0, label: \"Search for User...\" }];\r\n  const updateUserSelectList = (all_users_in_tree) => {\r\n    userList = defaultUserList;\r\n    for (var key in all_users_in_tree) {\r\n      var item = all_users_in_tree[key];\r\n      var option_item = { value: item[\"id\"], label: item[\"user_name\"] };\r\n      userList.push(option_item);\r\n    }\r\n    setSelectUserList(userList);\r\n  };\r\n\r\n  const [selectUserList, setSelectUserList] = useState(userList);\r\n  const [selectedUserID, setSelectedUserID] = useState(0);\r\n\r\n  function onUserChange(val) {\r\n    console.log(\"Selected: \", val);\r\n    //setSelectedUserID(get_data_value(val, \"value\", 0));\r\n    let child_user_id = get_data_value(val, \"value\", 0);\r\n    history.push(\"/user/team/detail/\" + child_user_id);\r\n  }\r\n  ///////////////////////////////////////////////end select box///////////////////////////////////////////\r\n\r\n  const goDownLine = (item) => {\r\n    console.log(\"item\", item);\r\n    const child_user_id = item[\"user_info\"][\"id\"];\r\n    history.push(\"/user/team/detail/\" + child_user_id);\r\n  };\r\n  const backToTop = () => {\r\n    history.push(ROUTE_USER_TEAM);\r\n  };\r\n  const backToUp = () => {\r\n    console.log('selectedUserID',selectedUserID)\r\n    if(empty(selectedUserID)){\r\n      return false;\r\n    }\r\n    show_loading(true);\r\n    apiUserGetTreeUpLevelUser(selectedUserID)\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          dispatch(updateUser(api_res.data[\"user\"]));\r\n          let up_user = api_res.data['up_user'];\r\n          if(up_user['id']===pageData['user']['id']) {\r\n            history.push(ROUTE_USER_TEAM);\r\n          }else{\r\n            history.push(\"/user/team/detail/\" + up_user['id']);\r\n          }\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  const [tankUserList, setTankUserList] = useState([]);\r\n  const [showTankModal, setShowTankModal] = useState(false);\r\n\r\n  const [selected_parent_user_id, set_selected_parent_user_id] = useState(0);\r\n  const [selected_tree_position, set_selected_tree_position] = useState(0);\r\n\r\n  const showTankUserList = (user_id, parent_user_id, position) => {\r\n    console.log(\r\n      \"user_id,parent_user_id,position\",\r\n      user_id,\r\n      parent_user_id,\r\n      position\r\n    );\r\n    user_id = intval(user_id);\r\n    parent_user_id = intval(parent_user_id);\r\n    if (user_id === 0 && parent_user_id > 0) {\r\n      set_selected_parent_user_id(parent_user_id);\r\n      set_selected_tree_position(position);\r\n\r\n      show_loading(true);\r\n      apiGetUserTankList(pageData[\"user\"][\"id\"])\r\n        .then((api_res) => {\r\n          console.log(\"api_res showTankList\", api_res);\r\n          show_loading(false);\r\n          if (api_res.status === \"1\") {\r\n            setTankUserList(api_res.data[\"tank_user_list\"]);\r\n            dispatch(updateUser(api_res.data[\"user\"]));\r\n            setShowTankModal(true);\r\n          } else {\r\n            showToast(api_res.message, \"error\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          show_loading(false);\r\n          showToast(err, \"error\");\r\n        });\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const submitTankUserData = (selected_user_id) => {\r\n    let post_param = {\r\n      parent_id: selected_parent_user_id,\r\n      position: selected_tree_position,\r\n      user_id: selected_user_id,\r\n    };\r\n    show_loading(true);\r\n    apiUserAssignChildUser(post_param)\r\n      .then((api_res) => {\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          dispatch(updateUser(api_res.data[\"user\"]));\r\n          setShowTankModal(false);\r\n          showToast(\"Member placed successfully.\", \"success\");\r\n          getData();\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  const generate_user_subtree_view = (child_list, parent_user_id) => {\r\n    const user_subtree_view = child_list.map((item, index) => {\r\n      return (\r\n        <div\r\n          className={`main-tree-box main-tree-box-${intval(item[\"level\"])}`}\r\n          data-level={`${intval(item[\"level\"])}`}\r\n          data-index={`${index}`}\r\n          key={`${item[\"level\"] + \"-\" + index}`}\r\n        >\r\n          <div\r\n            className={`tree-user-info-box ${\r\n              !empty(item[\"child_list\"]) ? \"\" : \" last-tree-user\"\r\n            }`}\r\n          >\r\n            <div\r\n              className={`user-info-wrapper text-center ${\r\n                intval(item[\"user_info\"][\"id\"]) > 0 ? \"\" : \"empty-user-wrapper\"\r\n              }`}\r\n              data-level={`${intval(item[\"level\"])}`}\r\n              data-user-id={`${intval(item[\"user_info\"][\"id\"])}`}\r\n              data-parent-user-id={`${parent_user_id}`}\r\n              onClick={(e) => {\r\n                showTankUserList(\r\n                  item[\"user_info\"][\"id\"],\r\n                  parent_user_id,\r\n                  index\r\n                );\r\n              }}\r\n            >\r\n              <div className=\"user-avatar-wrapper\">\r\n                <div className=\"user-avatar-box\">\r\n                  <img src={`${item[\"user_info\"][\"user_image\"]}`} alt=\"\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"user-name-wrapper\">\r\n                <div className=\"user-name-box text-emphasis\">\r\n                  {item[\"user_info\"][\"user_name\"]}\r\n                </div>\r\n              </div>\r\n              <button\r\n                className={`btn-show-more-wrapper text-white ${\r\n                  intval(item[\"level\"]) > 0 &&\r\n                  item[\"user_info\"][\"has_downline\"] == \"1\"\r\n                    ? \"\"\r\n                    : \"hidden\"\r\n                }`}\r\n                title=\"View Downline\"\r\n                onClick={(e) => {\r\n                  goDownLine(item);\r\n                }}\r\n              >\r\n                <i className=\"fa fa-plus\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          {!empty(item[\"child_list\"]) && (\r\n            <div\r\n              className=\"tree-child-container\"\r\n              data-level={`${intval(item[\"level\"])}`}\r\n              data-parent-user-id={`${item[\"user_info\"][\"id\"]}`}\r\n            >\r\n              {generate_user_subtree_view(\r\n                item[\"child_list\"],\r\n                item[\"user_info\"][\"id\"]\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      );\r\n    });\r\n    return user_subtree_view;\r\n  };\r\n\r\n  const user_tree_view = pageData[\"user_tree\"].map((item, index) => {\r\n    return (\r\n      <div\r\n        className={`main-tree-box main-tree-box-${intval(item[\"level\"])}`}\r\n        style={{ width: \"900px\" }}\r\n        data-level={`${intval(item[\"level\"])}`}\r\n        data-index={`${index}`}\r\n        key={`${item[\"level\"] + \"-\" + index}`}\r\n      >\r\n        <div\r\n          className={`tree-user-info-box ${\r\n            !empty(item[\"child_list\"]) ? \"\" : \" last-tree-user\"\r\n          }`}\r\n        >\r\n          <div\r\n            className={`user-info-wrapper text-center ${\r\n              intval(item[\"user_info\"][\"id\"]) > 0 ? \"\" : \"empty-user-wrapper\"\r\n            }`}\r\n            data-level={`${intval(item[\"level\"])}`}\r\n            data-user-id={`${intval(item[\"user_info\"][\"id\"])}`}\r\n          >\r\n            <div className=\"user-avatar-wrapper\">\r\n              <div className=\"user-avatar-box\">\r\n                <img src={`${item[\"user_info\"][\"user_image\"]}`} alt=\"\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"user-name-wrapper\">\r\n              <div className=\"user-name-box text-emphasis\">\r\n                {item[\"user_info\"][\"user_name\"]}\r\n              </div>\r\n            </div>\r\n            <button\r\n              className={`btn-show-more-wrapper text-white ${\r\n                intval(item[\"level\"]) > 0 &&\r\n                item[\"user_info\"][\"has_downline\"] == \"1\"\r\n                  ? \"\"\r\n                  : \"hidden\"\r\n              }`}\r\n              title=\"View Downline\"\r\n              onClick={(e) => {\r\n                goDownLine(item);\r\n              }}\r\n            >\r\n              <i className=\"fa fa-plus\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {!empty(item[\"child_list\"]) && (\r\n          <div\r\n            className=\"tree-child-container\"\r\n            data-level={`${intval(item[\"level\"])}`}\r\n            data-parent-user-id={`${item[\"user_info\"][\"id\"]}`}\r\n          >\r\n            {generate_user_subtree_view(\r\n              item[\"child_list\"],\r\n              item[\"user_info\"][\"id\"]\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  });\r\n\r\n  console.log('selectedUserID', selectedUserID)\r\n\r\n  return (\r\n    <div className=\"user-team-page\">\r\n      <div className={`row`}>\r\n        <div className=\"col-md-12 grid-margin\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title t-show-mobile\">{currentPageTitle}</h4>\r\n              <div className=\"card-content\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6 text-left m-text-center\">\r\n                    <div\r\n                      className=\"form-group form-search is-empty\"\r\n                      style={{\r\n                        position: \"relative\",\r\n                        maxWidth: \"360px\",\r\n                        paddingRight: \"50px\",\r\n                      }}\r\n                    >\r\n                      {selectedUserID == 0 && (\r\n                        <Select\r\n                          className=\"select2-box basic-single\"\r\n                          classNamePrefix=\"select\"\r\n                          defaultValue={defaultUserList[0]}\r\n                          isDisabled={false}\r\n                          isLoading={false}\r\n                          isClearable={true}\r\n                          isSearchable={true}\r\n                          name=\"color\"\r\n                          options={selectUserList}\r\n                          styles={colorStyles}\r\n                          onChange={onUserChange}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-6 text-right m-text-center\">\r\n                    <img\r\n                      className=\"avatar-list-heading\"\r\n                      src=\"/assets/global/img/avatar-heading-1.jpg\"\r\n                      alt=\"\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                {selectedUserID != 0 && (\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-12 margin-top-20 text-center\">\r\n                      <button\r\n                        className=\"btn btn-primary btn-back-top mr-2\"\r\n                        onClick={(e) => {\r\n                          backToTop();\r\n                        }}\r\n                      >\r\n                        Back to top\r\n                      </button>\r\n                      <button\r\n                            className=\"btn btn-primary btn-back-up\"\r\n                            onClick={(e) => {\r\n                              backToUp();\r\n                            }}\r\n                          >\r\n                            Back up one level\r\n                          </button>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"mlm-tree-box\">{user_tree_view}</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={`row`}></div>\r\n      <UserTankUserListModal\r\n        modalTitle={`Users in your holding tank`}\r\n        isVisible={showTankModal}\r\n        setVisibleModal={setShowTankModal}\r\n        modalData={tankUserList}\r\n        submitModalData={submitTankUserData}\r\n        modalClass=\"user-page tank-user-modal\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserTeamPage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserLicensePage\\UserLicensePage.js",["2167","2168","2169"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport { APP_NAME, BASE_FRONT_URL } from \"config/CONSTANTS\";\r\nimport { ROUTE_USER_LICENSE } from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport { apiGetUserLicensePageDetail, apiUserUpdateLicenseInfo } from \"services/userLicenseService\";\r\nimport { get_data_value, showToast, show_loading } from \"utils/GlobalFunctions\";\r\nimport LicenseInfoModal from \"./inc/LicenseInfoModal\";\r\nimport UserLicenseIntroPage from \"./inc/UserLicenseIntroPage\";\r\n\r\nconst currentPageTitle = \"License Management\";\r\nconst UserLicensePage = () => {\r\n  const dispatch = useDispatch();\r\n  const initPage = () => {\r\n    dispatch(\r\n      UpdateAppData({\r\n        currentPageTitle: currentPageTitle,\r\n        current_route: ROUTE_USER_LICENSE,\r\n        m_user_menu_collapsed: true,\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    initPage();\r\n    getData();\r\n  }, []);\r\n  //const history = useHistory();\r\n  const defaultPageData = {\r\n    user: {},\r\n    license_list: [],\r\n    enabled_membership: \"\",\r\n    is_active_customer: \"\",\r\n  };\r\n  const [pageData, setPageData] = useState(defaultPageData);\r\n  const getData = () => {\r\n    show_loading(true);\r\n    apiGetUserLicensePageDetail()\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setPageData(api_res.data);\r\n          dispatch(updateUser(api_res.data[\"user\"]));\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  const [showLicenseInfoModal, setShowLicenseInfoModal] = useState(false);\r\n  const [selectedLicense, setSelectedLicense] = useState({});\r\n  const onEditLicense = (license_item) => {\r\n    console.log(\"license item\", license_item);\r\n    setSelectedLicense(license_item);\r\n    setShowLicenseInfoModal(true);\r\n  };\r\n\r\n  const submitLicenseInfo = (info) => {\r\n    console.log(\"updated info\", info);\r\n\r\n    show_loading(true);\r\n    apiUserUpdateLicenseInfo(info)\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          getData()\r\n          setShowLicenseInfoModal(false);\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n    \r\n  };\r\n\r\n  return (\r\n    <div className=\"user-license-page\">\r\n      <div\r\n        className={`${\r\n          get_data_value(pageData, \"is_active_customer\") === 0 ? \"\" : \"hidden\"\r\n        }`}\r\n      >\r\n        <UserLicenseIntroPage\r\n          currentPageTitle={currentPageTitle}\r\n          pageData={pageData}\r\n        />\r\n      </div>\r\n\r\n      <div\r\n        className={`${\r\n          get_data_value(pageData, \"is_active_customer\") === 1 ? \"\" : \"hidden\"\r\n        }`}\r\n      >\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <h4 className=\"card-title t-show-mobile\">{currentPageTitle}</h4>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"table-responsive\">\r\n                      <div className=\"material-datatables\">\r\n                        <table\r\n                          id=\"datatables\"\r\n                          className=\"table table-bordered\"\r\n                          cellSpacing=\"0\"\r\n                          width=\"100%\"\r\n                          style={{ width: \"100%\" }}\r\n                        >\r\n                          <thead>\r\n                            <tr>\r\n                              <th className=\"hidden\">ID</th>\r\n                              <th>Broker Number</th>\r\n                              <th style={{ textAlign: \"center\" }}>Edit</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {pageData[\"license_list\"].map((item, index) => (\r\n                              <tr key={index}>\r\n                                <td className=\"hidden\">{item[\"id\"]}</td>\r\n                                <td\r\n                                  className=\"license-number\"\r\n                                  data-id={item[\"id\"]}\r\n                                >\r\n                                  {item[\"license_number\"]}\r\n                                </td>\r\n                                <td className=\"td-actions text-center\">\r\n                                  <div className=\"\">\r\n                                    <button\r\n                                      className=\"btn btn-info ajax-edit-btn\"\r\n                                      onClick={(e) => {\r\n                                        onEditLicense(item);\r\n                                      }}\r\n                                    >\r\n                                      <i className=\"fa fa-pencil\"></i>\r\n                                    </button>\r\n                                  </div>\r\n                                </td>\r\n                              </tr>\r\n                            ))}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"available-product-list pt-4 pl-4\">\r\n                      <h4>Available Products:</h4>\r\n                      <ul>\r\n                        <li className=\"text-warning\">\r\n                          Alpha GI 2.0 (Ends soon!){\" \"}\r\n                          <a\r\n                            className=\"text-primary\"\r\n                            href={`${BASE_FRONT_URL}/downloads/Alpha-V2-NX.zip`}\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"\r\n                            download=\"Alpha-V2V.zip\"\r\n                          >\r\n                            (Click Here to Download)\r\n                          </a>\r\n                        </li>\r\n                        <li className=\"text-success\">\r\n                          Alpha GI 2.5 (\r\n                          <span className=\"text-success\">\r\n                            Available on Cloud\r\n                          </span>\r\n                          )\r\n                        </li>\r\n                        <li className=\"text-success\">\r\n                          Alpha GR (\r\n                          <span className=\"text-success\">\r\n                            Available on Cloud\r\n                          </span>\r\n                          )\r\n                        </li>\r\n                        <li className=\"text-success\">\r\n                          Alpha GO (\r\n                          <span className=\"text-success\">\r\n                            Available on Cloud\r\n                          </span>\r\n                          )\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <LicenseInfoModal\r\n        modalTitle={`Edit Broker Number`}\r\n        isVisible={showLicenseInfoModal}\r\n        setVisibleModal={setShowLicenseInfoModal}\r\n        modalInitialData={selectedLicense}\r\n        submitModalData={submitLicenseInfo}\r\n        modalClass=\"user-page license-info-modal\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserLicensePage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserAcademyPage\\UserAcademyPage.js",["2170","2171","2172","2173","2174"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport { ROUTE_USER_ACADEMY, ROUTE_USER_ACADEMY_ADVANCED, ROUTE_USER_ACADEMY_BASIC, ROUTE_USER_DASHBOARD, ROUTE_USER_LICENSE } from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport { apiGetUserAcademyPageDetail } from \"services/userAcademyService\";\r\nimport { get_data_value, showToast, show_loading } from \"utils/GlobalFunctions\";\r\n\r\nconst currentPageTitle = \"Higher Level Academy\";\r\nconst UserAcademyPage = (props) => {\r\n  const dispatch = useDispatch();\r\n  const initPage = () => {\r\n    dispatch(\r\n      UpdateAppData({\r\n        currentPageTitle: currentPageTitle,\r\n        current_route: ROUTE_USER_ACADEMY,\r\n        m_user_menu_collapsed: true,\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    initPage();\r\n    getData();\r\n  }, []);\r\n  const history = useHistory();\r\n  const defaultPageData = {\r\n    user: {},\r\n    user_is_active: \"\",\r\n    user_is_trial: \"\",\r\n  };\r\n  const [pageData, setPageData] = useState(defaultPageData);\r\n  const getData = () => {\r\n    show_loading(true);\r\n    apiGetUserAcademyPageDetail()\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          if(api_res.data['user_is_active']!==1) {\r\n            showToast(\"To access this feature, you need to have an active membership!\", \"error\")\r\n            history.push(ROUTE_USER_DASHBOARD);\r\n            //props.history.replace({ pathname: ROUTE_USER_DASHBOARD });\r\n            return false\r\n          }\r\n          setPageData(api_res.data);\r\n          dispatch(updateUser(api_res.data[\"user\"]));\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  const gotoAcademyPro = () => {\r\n    if(pageData['user_is_active'] === 1){\r\n      if(pageData['user_is_trial'] !== 1) {\r\n        history.push(ROUTE_USER_ACADEMY_BASIC + \"/pro\");\r\n      }else{\r\n        showToast(\"Not available during free-trial\", \"error\")\r\n        //history.push(ROUTE_USER_ACADEMY_BASIC + \"/pro\");\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"user-academy-page\">\r\n      <div className={`row`}>\r\n        <div className=\"col-md-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title hidden t-show-mobile\">\r\n                {currentPageTitle}\r\n              </h4>\r\n              <div className=\"card-content pt-4 pb-4 text-center custom-bg\">\r\n                <div className=\"block padding-20\">\r\n                  <h3>Welcome to the HLA Training Program!</h3>\r\n                </div>\r\n                <div className=\"block padding-20\">\r\n                  <h3>\r\n                    <em>Please choose from the following options:</em>\r\n                  </h3>\r\n                </div>\r\n                <div className=\"block button-list padding-10\">\r\n                  <div className=\"button-item\">\r\n                    <Link\r\n                      to={ROUTE_USER_ACADEMY_BASIC + \"/trial\"}\r\n                      className=\"custom-animated-button animated-button1\"\r\n                    >\r\n                      <span></span>\r\n                      <span></span>\r\n                      <span></span>\r\n                      <span></span>\r\n                      Basics:\r\n                      <br />\r\n                      Getting Started\r\n                    </Link>\r\n                  </div>\r\n                  <div className=\"button-item\">\r\n                    <div\r\n                      className=\"a-btn custom-animated-button animated-button6\"\r\n                      onClick={(e)=>{gotoAcademyPro()}}\r\n                    >\r\n                      <span></span>\r\n                      <span></span>\r\n                      <span></span>\r\n                      <span></span>\r\n                      Advanced:\r\n                      <br />\r\n                      Become a Pro!\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserAcademyPage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserMarketingPage\\UserMarketingPage.js",["2175","2176","2177","2178","2179"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport { RULE_PERCENT } from \"config/CONSTANTS\";\r\nimport { ROUTE_USER_ACADEMY, ROUTE_USER_DASHBOARD, ROUTE_USER_MARKETING } from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport { apiGetUserMarketingPageDetail } from \"services/userMarketingService\";\r\nimport {\r\n  empty,\r\n  get_data_value,\r\n  intval,\r\n  is_empty,\r\n  showToast,\r\n  show_loading,\r\n} from \"utils/GlobalFunctions\";\r\nimport UserActiveListPage from \"./inc/UserActiveListPage\";\r\n\r\nconst currentPageTitle = \"Affiliate Only Section\";\r\nconst UserMarketingPage = () => {\r\n  const dispatch = useDispatch();\r\n  const initPage = () => {\r\n    dispatch(\r\n      UpdateAppData({\r\n        currentPageTitle: currentPageTitle,\r\n        current_route: ROUTE_USER_MARKETING,\r\n        m_user_menu_collapsed: true,\r\n      })\r\n    );\r\n  };\r\n  const history = useHistory()\r\n  useEffect(() => {\r\n    initPage();\r\n    getData();\r\n  }, []);\r\n  //const history = useHistory();\r\n  const defaultPageData = {\r\n    user: {},\r\n    all_users_in_tree: [],\r\n    missing_rank_list: {},\r\n    missing_rank_message: \"\",\r\n    next_rank_info: {},\r\n    rank_info: {},\r\n    rank_rule_list: {},\r\n    tree_info: [],\r\n    user_base_tree: [],\r\n    destination_personal_referrals: 0,\r\n    personal_referrals: 0,\r\n    error_msg_arr: [],\r\n    error_msg: \"\",\r\n  };\r\n  const [pageData, setPageData] = useState(defaultPageData);\r\n  const getData = () => {\r\n    show_loading(true);\r\n    apiGetUserMarketingPageDetail()\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setPageData(api_res.data);\r\n          dispatch(updateUser(api_res.data[\"user\"]));\r\n          if(api_res.data['user']['user_type']!==1){\r\n            showToast(\"Only affiliate can access this page\", \"error\");\r\n            history.push(ROUTE_USER_DASHBOARD);\r\n          }\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-marketing-page\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12 grid-margin\">\r\n          <div className=\"card text-left\">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title t-show-mobile\">{currentPageTitle}</h4>\r\n              <div className=\"card-content affiliate-only-screen\">\r\n                <div className=\"block padding-bottom-5 padding-top-5\">\r\n                  <h4 className=\"text-normal mb-3\">\r\n                    Your current rank:{\" \"}\r\n                    <span className=\"text-success\">\r\n                      {get_data_value(pageData[\"rank_info\"], \"rank_name\", \" \")}\r\n                    </span>\r\n                  </h4>\r\n                  <h4 className=\"text-normal mb-3\">\r\n                    Your next rank:{\" \"}\r\n                    <span className=\"text-warning\">\r\n                      {get_data_value(\r\n                        pageData[\"next_rank_info\"],\r\n                        \"rank_name\",\r\n                        \" \"\r\n                      )}\r\n                    </span>\r\n                  </h4>\r\n                </div>\r\n                <div className=\"divider-1 mb-4\"></div>\r\n                <h4 className=\"text-normal mb-4\">Requirements:</h4>\r\n                <h4 className=\"text-normal personal-referrals mb-4\">\r\n                  Personal Referrals:{\" \"}\r\n                  <span\r\n                    className={`current-value ${\r\n                      empty(pageData[\"error_msg\"])\r\n                        ? \"text-success\"\r\n                        : \"text-danger\"\r\n                    }`}\r\n                  >\r\n                    {pageData[\"personal_referrals\"]}\r\n                  </span>\r\n                  <span className=\"text-success\"> / </span>\r\n                  <span className=\"destination-value text-success\">\r\n                    {pageData[\"destination_personal_referrals\"]}\r\n                  </span>\r\n                  <span\r\n                    className={`pl-3 text-danger ${\r\n                      empty(pageData[\"error_msg\"]) ? \"hidden\" : \"\"\r\n                    }`}\r\n                  >\r\n                    {pageData[\"error_msg\"]}\r\n                  </span>\r\n                  <span className=\"pl-3\">\r\n                    <i\r\n                      className={`text-bold ${\r\n                        empty(pageData[\"error_msg\"])\r\n                          ? \"text-success\"\r\n                          : \"text-danger\"\r\n                      } ${\r\n                        empty(pageData[\"error_msg\"]) ? \"ti-check\" : \"ti-close\"\r\n                      }`}\r\n                    ></i>\r\n                  </span>\r\n                </h4>\r\n\r\n                <h4\r\n                  className={`text-normal personal-referrals mb-4 ${\r\n                    intval(pageData[\"next_rank_info\"][\"rank_no\"]) < 8\r\n                      ? \"\"\r\n                      : \"hidden\"\r\n                  }`}\r\n                >\r\n                  Additional Requirements:{\" \"}\r\n                  <span className=\"destination-value text-success\">\r\n                    {get_data_value(pageData[\"next_rank_info\"], \"description\")}\r\n                  </span>\r\n                  <span\r\n                    className={`pl-3 text-danger ${\r\n                      empty(pageData[\"missing_rank_message\"]) ? \"hidden\" : \"\"\r\n                    }`}\r\n                  >{`(You need ${pageData[\"missing_rank_message\"]})`}</span>\r\n                  <span className=\"pl-3\">\r\n                    <i\r\n                      className={`text-bold ${\r\n                        empty(pageData[\"missing_rank_message\"])\r\n                          ? \"text-success\"\r\n                          : \"text-danger\"\r\n                      } ${\r\n                        empty(pageData[\"missing_rank_message\"])\r\n                          ? \"ti-check\"\r\n                          : \"ti-close\"\r\n                      }`}\r\n                    ></i>\r\n                  </span>\r\n                </h4>\r\n                <h4\r\n                  className={`text-normal personal-referrals mb-4 ${\r\n                    intval(pageData[\"next_rank_info\"][\"rank_no\"]) < 8\r\n                      ? \"hidden\"\r\n                      : \"\"\r\n                  }`}\r\n                >\r\n                  Additional Requirements:{\" \"}\r\n                  <span className=\"destination-value text-success\">None</span>\r\n                </h4>\r\n\r\n                <div className=\"lane-box\">\r\n                  {pageData[\"tree_info\"].map((item, index) => (\r\n                    <div className=\"row\" key={index}>\r\n                      <div className=\"col-md-3\">\r\n                        <h4 className=\"text-normal lane-max mb-3\">\r\n                          Lane{index + 1}:{\" \"}\r\n                          <span\r\n                            className={`current-value ${\r\n                              intval(\r\n                                pageData[\"tree_info\"][index][\r\n                                  \"active_member_cnt\"\r\n                                ]\r\n                              ) >= pageData[\"next_rank_info\"][\"line_max\"][index]\r\n                                ? \"text-success\"\r\n                                : \"text-danger\"\r\n                            }`}\r\n                          >\r\n                            {pageData[\"tree_info\"][index][\"active_member_cnt\"]}\r\n                          </span>\r\n                          <span className=\"text-success\"> / </span>\r\n                          <span className=\"destination-value text-success\">\r\n                            {pageData[\"next_rank_info\"][\"line_max\"][index]}\r\n                          </span>\r\n                          <span className=\"pl-3\">\r\n                            <i\r\n                              className={`text-bold ${\r\n                                intval(\r\n                                  pageData[\"tree_info\"][index][\r\n                                    \"active_member_cnt\"\r\n                                  ]\r\n                                ) >=\r\n                                pageData[\"next_rank_info\"][\"line_max\"][index]\r\n                                  ? \"text-success ti-check\"\r\n                                  : \"text-danger ti-close\"\r\n                              }`}\r\n                            ></i>\r\n                          </span>\r\n                        </h4>\r\n                      </div>\r\n                      <div className=\"col-md-9\">\r\n                        <h4 className=\"text-normal lane-qualifying mb-3\">\r\n                          Qualifying:{\" \"}\r\n                          <span\r\n                            className={`current-value ${\r\n                              item[\"percent\"] >= 100 * RULE_PERCENT\r\n                                ? \"text-success\"\r\n                                : \"text-danger\"\r\n                            }`}\r\n                          >\r\n                            {item[\"percent\"]}%\r\n                          </span>\r\n                          <span className=\"text-success\"> / </span>\r\n                          <span className=\"destination-value text-success\">\r\n                            {RULE_PERCENT * 100}%\r\n                          </span>\r\n                          <span className=\"pl-3\">\r\n                            <i\r\n                              className={`text-bold ${\r\n                                item[\"percent\"] >= 100 * RULE_PERCENT\r\n                                  ? \"text-success ti-check\"\r\n                                  : \"text-danger ti-close\"\r\n                              }`}\r\n                            ></i>\r\n                          </span>\r\n                        </h4>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={`block ${\r\n          empty(get_data_value(pageData, \"all_users_in_tree\")) ? \"hidden\" : \"\"\r\n        }`}\r\n      >\r\n        <UserActiveListPage pageData={pageData} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserMarketingPage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserChartPage\\UserChartPage.js",["2180","2181","2182","2183","2184","2185"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport { ROUTE_USER_ACADEMY, ROUTE_USER_CHART } from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { AdvancedChart } from \"react-tradingview-embed\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport { apiUserGetProfileInfo } from \"services/userCommonService\";\r\nimport { showToast, show_loading } from \"utils/GlobalFunctions\";\r\n\r\nconst currentPageTitle = \"Live Charts\";\r\nconst UserChartPage = () => {\r\n  const dispatch = useDispatch();\r\n  const initPage = () => {\r\n    dispatch(\r\n      UpdateAppData({\r\n        currentPageTitle: currentPageTitle,\r\n        current_route: ROUTE_USER_CHART,\r\n        m_user_menu_collapsed: true,\r\n      })\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    initPage();\r\n    getData();\r\n  }, []);\r\n  const history = useHistory();\r\n  const defaultPageData = {\r\n    user: {},\r\n  };\r\n  const [pageData, setPageData] = useState(defaultPageData);\r\n  const getData = () => {\r\n    show_loading(true);\r\n    apiUserGetProfileInfo()\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setPageData(api_res.data);\r\n          dispatch(updateUser(api_res.data[\"user\"]));\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-chart-page\">\r\n      <div className={`row`}>\r\n        <div className=\"col-md-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title hidden t-show-mobile\">\r\n                {currentPageTitle}\r\n              </h4>\r\n              <div className=\"block\">\r\n                <div className=\"trading-widget-block mb-3\">\r\n                  <AdvancedChart\r\n                    widgetProps={{\r\n                      width: \"100%\",\r\n                      height: \"650\",\r\n                      symbol: \"FX:EURUSD\",\r\n                      interval: \"1\",\r\n                      timezone: \"Etc/UTC\",\r\n                      theme: \"dark\",\r\n                      style: \"9\",\r\n                      locale: \"en\",\r\n                      toolbar_bg: \"#f1f3f6\",\r\n                      enable_publishing: false,\r\n                      withdateranges: true,\r\n                      range: \"all\",\r\n                      hide_side_toolbar: false,\r\n                      allow_symbol_change: true,\r\n                      details: true,\r\n                      hotlist: true,\r\n                      calendar: true,\r\n                      news: [\"stocktwits\", \"headlines\"],\r\n                      studies: [\r\n                        //\"BB@tv-basicstudies\",\r\n                        //\"MACD@tv-basicstudies\",\r\n                        //\"MF@tv-basicstudies\"\r\n                      ],\r\n                    }}\r\n                  ></AdvancedChart>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserChartPage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserWalletPage\\UserWalletPage.js",["2186","2187","2188","2189","2190","2191"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport { ROUTE_USER_ACADEMY, ROUTE_USER_WALLET } from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport { apiGetUserMarketingPageDetail } from \"services/userMarketingService\";\r\nimport {\r\n  apiGetUserWalletPageDetail,\r\n  apiUserRequestWithdrawal,\r\n} from \"services/userWalletService\";\r\nimport { get_data_value, showToast, show_loading } from \"utils/GlobalFunctions\";\r\nimport UserDataTable from \"./inc/UserDataTable\";\r\nimport UserPayoutListTable from \"./inc/UserPayoutListTable\";\r\nimport UserWithdrawalListTable from \"./inc/UserWithdrawalListTable\";\r\nimport WithdrawalRequestModal from \"./inc/WithdrawalRequestModal\";\r\nimport \"./UserWalletPage.css\";\r\n\r\nconst currentPageTitle = \"Wallet\";\r\nconst UserWalletPage = () => {\r\n  const dispatch = useDispatch();\r\n  const initPage = () => {\r\n    dispatch(\r\n      UpdateAppData({\r\n        currentPageTitle: currentPageTitle,\r\n        current_route: ROUTE_USER_WALLET,\r\n        m_user_menu_collapsed: true,\r\n      })\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    initPage();\r\n    getData();\r\n  }, []);\r\n  //const history = useHistory();\r\n  const defaultPageData = {\r\n    user: {},\r\n    payout_list: [],\r\n    withdraw_list: [],\r\n  };\r\n  const [pageData, setPageData] = useState(defaultPageData);\r\n  const getData = () => {\r\n    show_loading(true);\r\n    apiGetUserWalletPageDetail()\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setPageData(api_res.data);\r\n          dispatch(updateUser(api_res.data[\"user\"]));\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  const [showWithdrawalModal, setShowWithdrawalModal] = useState(false);\r\n\r\n  const onClickWithdrawRequest = () => {\r\n    setShowWithdrawalModal(true);\r\n  };\r\n  const submitWithdrawalRequest = (params) => {\r\n    console.log(\"params\", params);\r\n    show_loading(true);\r\n    apiUserRequestWithdrawal(params)\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setShowWithdrawalModal(false);\r\n          getData();\r\n          showToast(\r\n            \"Payout requested successfully.<br/>Please wait for approval!\",\r\n            \"success\"\r\n          );\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-wallet-page\">\r\n      <div className={`row`}>\r\n        <div className=\"col-md-12 grid-margin\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title t-show-mobile\">Wallet</h4>\r\n              <div className=\"card-content\">\r\n                <h3 className=\"card-title mb-0\">\r\n                  <span className=\"text-success text-bold\">\r\n                    ${get_data_value(pageData[\"user\"], \"balance\")}\r\n                  </span>\r\n                  <span className=\"balance-label\">Available Funds</span>\r\n                </h3>\r\n                <div className=\"action-btn-group mt-4\">\r\n                  <button\r\n                    className=\"btn btn-primary btn-request-payout mr-2\"\r\n                    onClick={(e) => {\r\n                      onClickWithdrawRequest();\r\n                    }}\r\n                  >\r\n                    Request Withdrawal\r\n                  </button>\r\n                  <img\r\n                    src=\"/assets/global/img/paypal.png\"\r\n                    className=\"img-responsive paypal-logo\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={`row`}>\r\n        <div className=\"col-lg-6 grid-margin stretch-card\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title\">Weekly Residuals</h4>\r\n              <div className=\"card-content\">\r\n                <div className=\"datatable-wrapper\">\r\n                  <UserPayoutListTable initialTableData={pageData['payout_list']} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-6 grid-margin stretch-card\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title\">Withdraw History</h4>\r\n              <div className=\"card-content\">\r\n                <div className=\"datatable-wrapper\">\r\n                  <UserWithdrawalListTable initialTableData={pageData['withdraw_list']} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <WithdrawalRequestModal\r\n        modalTitle={`Confirm Withdrawal Request`}\r\n        isVisible={showWithdrawalModal}\r\n        setVisibleModal={setShowWithdrawalModal}\r\n        pageData={pageData}\r\n        submitModalData={submitWithdrawalRequest}\r\n        modalClass=\"user-page confirm-withdrawal-request-modal\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserWalletPage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserAffiliateIntroPage\\UserAffiliateIntroPage.js",["2192","2193","2194","2195"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport { AFFILIATE_COMMISSION } from \"config/CONSTANTS\";\r\nimport { ROUTE_REWARDS_PLAN, ROUTE_USER_AFFILIATE, ROUTE_USER_PAY_AFFILIATE } from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport { apiUserGetProfileInfo } from \"services/userCommonService\";\r\nimport { priceFormat, showToast, show_loading } from \"utils/GlobalFunctions\";\r\nimport \"./UserAffiliateIntroPage.css\";\r\n\r\nconst currentPageTitle = \"Become an Affiliate\";\r\nconst UserAffiliateIntroPage = () => {\r\n  const dispatch = useDispatch();\r\n  const initPage = () => {\r\n    dispatch(\r\n      UpdateAppData({\r\n        currentPageTitle: currentPageTitle,\r\n        current_route: ROUTE_USER_AFFILIATE,\r\n        m_user_menu_collapsed: true,\r\n      })\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    initPage();\r\n    getData();\r\n  }, []);\r\n  const history = useHistory();\r\n  const defaultPageData = {\r\n    user: {},\r\n  };\r\n  const [pageData, setPageData] = useState(defaultPageData);\r\n  const getData = () => {\r\n    show_loading(true);\r\n    apiUserGetProfileInfo()\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setPageData(api_res.data);\r\n          dispatch(updateUser(api_res.data[\"user\"]));\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-affiliate-intro-page\">\r\n      <div className=\"row\">\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card\">\r\n            <div className=\"card-body\">\r\n                <h4 className=\"card-title t-show-mobile\">{currentPageTitle}</h4>\r\n                <div className=\"card-content\">\r\n                    <div className=\"affiliate-intro-box\">\r\n                        <div className=\"affiliate-intro-left mb-4 text-center\">\r\n                            <div className=\"affiliate-img-box\">\r\n                                <img src=\"/assets/home/images/20210314/affiliate.png\" alt=\"\" />\r\n                            </div>\r\n                            <div className=\"affiliate-price-box\">\r\n                                <h4>${priceFormat(AFFILIATE_COMMISSION)} / Month</h4>\r\n                            </div>\r\n                            <Link to={ROUTE_USER_PAY_AFFILIATE} className=\"btn btn-success btn-round\">BUY NOW</Link>\r\n                        </div>\r\n                        <div className=\"affiliate-intro-right\">\r\n                            <div className=\"affiliate-title\">\r\n                                <p>What is the Affiliate Package?</p>\r\n                                <p>Become an active affiliate to gain access to the following:</p>\r\n                            </div>\r\n                            <div style={{paddingLeft: \"20px\", paddingBottom: \"30px\"}}>\r\n                                <p className=\"affiliate-desc with-checkbox\">\r\n                                    <span className=\"img-checkbox text-primary text-bold\"><i className=\"fa fa-check\"></i></span>\r\n                                    Dedicated Support Team!\r\n                                </p>\r\n                                <p className=\"affiliate-desc with-checkbox\">\r\n                                    <span className=\"img-checkbox text-primary text-bold\"><i className=\"fa fa-check\"></i></span>\r\n                                    Access to an advanced back office!\r\n                                </p>\r\n                                <p className=\"affiliate-desc with-checkbox\">\r\n                                    <span className=\"img-checkbox text-primary text-bold\"><i className=\"fa fa-check\"></i></span>\r\n                                    Access to Specialized Training from Top-Earning Affiliates, including personal brand growth and Direct Sales Training with updated training released regularly for affiliates!\r\n                                </p>\r\n                               \r\n                                <p className=\"affiliate-desc with-checkbox\">\r\n                                    <span className=\"img-checkbox text-primary text-bold\"><i className=\"fa fa-check\"></i></span>\r\n                                    Access to our rewards plan!\r\n                                </p>\r\n                                <div className=\"affiliate-desc\" style={{marginTop: \"30px\"}}>\r\n                                    See more about our rewards plan for active affiliates <Link className=\"text-primary\" to={ROUTE_REWARDS_PLAN} target=\"_blank\">HERE</Link>.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserAffiliateIntroPage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserTicketPage\\UserTicketPage.js",["2196","2197"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport { ROUTE_USER_TICKET, ROUTE_USER_TICKET_ADD } from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport { apiGetUserTicketListPageDetail } from \"services/userTicketService\";\r\nimport { empty, showToast, show_loading } from \"utils/GlobalFunctions\";\r\nimport UserTicketListTable from \"./inc/UserTicketListTable\";\r\n\r\nconst currentPageTitle = \"Support Tickets\";\r\nconst UserTicketPage = () => {\r\n  const dispatch = useDispatch();\r\n  const initPage = () => {\r\n    dispatch(\r\n      UpdateAppData({\r\n        currentPageTitle: currentPageTitle,\r\n        current_route: ROUTE_USER_TICKET,\r\n        m_user_menu_collapsed: true,\r\n      })\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    initPage();\r\n    getData();\r\n  }, []);\r\n  const history = useHistory();\r\n  const defaultPageData = {\r\n    user: {},\r\n    ticket_list: [],\r\n  };\r\n  const [pageData, setPageData] = useState(defaultPageData);\r\n  const getData = () => {\r\n    show_loading(true);\r\n    apiGetUserTicketListPageDetail()\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setPageData(api_res.data);\r\n          dispatch(updateUser(api_res.data[\"user\"]));\r\n          if(empty(api_res.data[\"ticket_list\"])) {\r\n            history.push(ROUTE_USER_TICKET_ADD);\r\n          }\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`user-ticket-list-page ${\r\n        empty(pageData[\"ticket_list\"]) ? \"hidden\" : \"\"\r\n      }`}\r\n    >\r\n      <div className={`row`}>\r\n        <div className=\"col-lg-12 grid-margin stretch-card\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title t-show-mobile\">{currentPageTitle}</h4>\r\n              <div className=\"card-content\">\r\n                <h4 className=\"card-title pull-left\">\r\n                  <Link to={ROUTE_USER_TICKET_ADD} className=\"btn btn-primary\">\r\n                    New Ticket\r\n                  </Link>\r\n                </h4>\r\n                <div className=\"clearfix\"></div>\r\n                <div className=\"datatable-wrapper no-border\">\r\n                  <UserTicketListTable\r\n                    initialTableData={pageData[\"ticket_list\"]}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserTicketPage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserSupportPage\\UserSupportPage.js",["2198","2199","2200","2201"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport {\r\n  ROUTE_REWARDS_PLAN,\r\n  ROUTE_USER_SOFTWARE,\r\n  ROUTE_USER_SUPPORT,\r\n  ROUTE_USER_TICKET,\r\n} from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport { apiUserGetProfileInfo } from \"services/userCommonService\";\r\nimport { showToast, show_loading } from \"utils/GlobalFunctions\";\r\n\r\nconst currentPageTitle = \"FAQ\";\r\nconst UserSupportPage = () => {\r\n  const dispatch = useDispatch();\r\n  const initPage = () => {\r\n    dispatch(\r\n      UpdateAppData({\r\n        currentPageTitle: currentPageTitle,\r\n        current_route: ROUTE_USER_SUPPORT,\r\n        m_user_menu_collapsed: true,\r\n      })\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    initPage();\r\n    getData();\r\n  }, []);\r\n  const history = useHistory();\r\n  const defaultPageData = {\r\n    user: {},\r\n  };\r\n  const [pageData, setPageData] = useState(defaultPageData);\r\n  const getData = () => {\r\n    show_loading(true);\r\n    apiUserGetProfileInfo()\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setPageData(api_res.data);\r\n          dispatch(updateUser(api_res.data[\"user\"]));\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-support-page\">\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title t-show-mobile\">{currentPageTitle}</h4>\r\n              <p className=\"card-description hidden\"></p>\r\n              <div className=\"block\">\r\n                <div className=\"accordion\" id=\"accordion\" role=\"tablist\">\r\n                  <div className=\"card\">\r\n                    <div className=\"card-header\" role=\"tab\" id=\"heading-1\">\r\n                      <h6 className=\"mb-0\">\r\n                        <a\r\n                          data-toggle=\"collapse\"\r\n                          href=\"#collapse-1\"\r\n                          aria-expanded=\"true\"\r\n                          aria-controls=\"collapse-1\"\r\n                        >\r\n                          How do I change my credit card information?\r\n                        </a>\r\n                      </h6>\r\n                    </div>\r\n                    <div\r\n                      id=\"collapse-1\"\r\n                      className=\"collapse show\"\r\n                      role=\"tabpanel\"\r\n                      aria-labelledby=\"heading-1\"\r\n                      data-parent=\"#accordion\"\r\n                    >\r\n                      <div className=\"card-body\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-12\">\r\n                            <p className=\"\">1- Click on “Profile”</p>\r\n                            <p className=\"\">\r\n                              2- In the “Credit Card” section put your Card\r\n                              details in\r\n                            </p>\r\n                            <p className=\"\">3- Click on “Update” </p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-header\" role=\"tab\" id=\"heading-2\">\r\n                      <h6 className=\"mb-0\">\r\n                        <a\r\n                          className=\"collapsed\"\r\n                          data-toggle=\"collapse\"\r\n                          href=\"#collapse-2\"\r\n                          aria-expanded=\"false\"\r\n                          aria-controls=\"collapse-2\"\r\n                        >\r\n                          How do I cancel my account (all my subscriptions)?\r\n                        </a>\r\n                      </h6>\r\n                    </div>\r\n                    <div\r\n                      id=\"collapse-2\"\r\n                      className=\"collapse\"\r\n                      role=\"tabpanel\"\r\n                      aria-labelledby=\"heading-2\"\r\n                      data-parent=\"#accordion\"\r\n                    >\r\n                      <div className=\"card-body\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-12\">\r\n                            <p>1- Click on “profile”</p>\r\n                            <p>\r\n                              2- You can find the “Cancellation” section under\r\n                              user information\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-header\" role=\"tab\" id=\"heading-3\">\r\n                      <h6 className=\"mb-0\">\r\n                        <a\r\n                          className=\"collapsed\"\r\n                          data-toggle=\"collapse\"\r\n                          href=\"#collapse-3\"\r\n                          aria-expanded=\"false\"\r\n                          aria-controls=\"collapse-3\"\r\n                        >\r\n                          How do I update my broker account number of my\r\n                          license?\r\n                        </a>\r\n                      </h6>\r\n                    </div>\r\n                    <div\r\n                      id=\"collapse-3\"\r\n                      className=\"collapse\"\r\n                      role=\"tabpanel\"\r\n                      aria-labelledby=\"heading-3\"\r\n                      data-parent=\"#accordion\"\r\n                    >\r\n                      <div className=\"card-body\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-12\">\r\n                            <p>1- Click on “Membership”</p>\r\n                            <p>\r\n                              2- Click on the small “pen” at your current\r\n                              license\r\n                            </p>\r\n                            <p>3- Put your new account number in</p>\r\n                            <p>4- Press “Update”</p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-header\" role=\"tab\" id=\"heading-4\">\r\n                      <h6 className=\"mb-0\">\r\n                        <a\r\n                          className=\"collapsed\"\r\n                          data-toggle=\"collapse\"\r\n                          href=\"#collapse-4\"\r\n                          aria-expanded=\"false\"\r\n                          aria-controls=\"collapse-4\"\r\n                        >\r\n                          How much does Higher Level FX cost?\r\n                        </a>\r\n                      </h6>\r\n                    </div>\r\n                    <div\r\n                      id=\"collapse-4\"\r\n                      className=\"collapse\"\r\n                      role=\"tabpanel\"\r\n                      aria-labelledby=\"heading-4\"\r\n                      data-parent=\"#accordion\"\r\n                    >\r\n                      <div className=\"card-body\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-12\">\r\n                            <p>Customer - Fixed price of $159 per month.</p>\r\n                            <p>\r\n                              Affiliate - An affiliate pays $15 per month on top\r\n                              of their software license. An affiliate receives\r\n                              additional services and benefits.\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-header\" role=\"tab\" id=\"heading-5\">\r\n                      <h6 className=\"mb-0\">\r\n                        <a\r\n                          className=\"collapsed\"\r\n                          data-toggle=\"collapse\"\r\n                          href=\"#collapse-5\"\r\n                          aria-expanded=\"false\"\r\n                          aria-controls=\"collapse-5\"\r\n                        >\r\n                          How do I set up the software?\r\n                        </a>\r\n                      </h6>\r\n                    </div>\r\n                    <div\r\n                      id=\"collapse-5\"\r\n                      className=\"collapse\"\r\n                      role=\"tabpanel\"\r\n                      aria-labelledby=\"heading-5\"\r\n                      data-parent=\"#accordion\"\r\n                    >\r\n                      <div className=\"card-body\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-12\">\r\n                            <p>\r\n                              For explanation{\" \"}\r\n                              <Link\r\n                                to={ROUTE_USER_SOFTWARE}\r\n                                className=\"text-primary\"\r\n                              >\r\n                                CLICK HERE\r\n                              </Link>\r\n                              .\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card\">\r\n                    <div className=\"card-header\" role=\"tab\" id=\"heading-6\">\r\n                      <h6 className=\"mb-0\">\r\n                        <a\r\n                          className=\"collapsed\"\r\n                          data-toggle=\"collapse\"\r\n                          href=\"#collapse-6\"\r\n                          aria-expanded=\"false\"\r\n                          aria-controls=\"collapse-6\"\r\n                        >\r\n                          What does the software settings mean?\r\n                        </a>\r\n                      </h6>\r\n                    </div>\r\n                    <div\r\n                      id=\"collapse-6\"\r\n                      className=\"collapse\"\r\n                      role=\"tabpanel\"\r\n                      aria-labelledby=\"heading-6\"\r\n                      data-parent=\"#accordion\"\r\n                    >\r\n                      <div className=\"card-body\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-12\">\r\n                            <p>\r\n                              For explanation{\" \"}\r\n                              <Link\r\n                                to={ROUTE_USER_SOFTWARE}\r\n                                className=\"text-primary\"\r\n                              >\r\n                                CLICK HERE\r\n                              </Link>\r\n                              .\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-header\" role=\"tab\" id=\"heading-7\">\r\n                      <h6 className=\"mb-0\">\r\n                        <a\r\n                          className=\"collapsed\"\r\n                          data-toggle=\"collapse\"\r\n                          href=\"#collapse-7\"\r\n                          aria-expanded=\"false\"\r\n                          aria-controls=\"collapse-7\"\r\n                        >\r\n                          Can you tell me about your rewards plan?\r\n                        </a>\r\n                      </h6>\r\n                    </div>\r\n                    <div\r\n                      id=\"collapse-7\"\r\n                      className=\"collapse\"\r\n                      role=\"tabpanel\"\r\n                      aria-labelledby=\"heading-7\"\r\n                      data-parent=\"#accordion\"\r\n                    >\r\n                      <div className=\"card-body\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-12\">\r\n                            <p>\r\n                              Sure! For a detailed explanation{\" \"}\r\n                              <Link\r\n                                to={ROUTE_REWARDS_PLAN}\r\n                                className=\"text-primary\"\r\n                                target=\"_blank\"\r\n                              >\r\n                                CLICK HERE\r\n                              </Link>\r\n                              .\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card\">\r\n                    <div className=\"card-header\" role=\"tab\" id=\"heading-9\">\r\n                      <h6 className=\"mb-0\">\r\n                        <a\r\n                          className=\"collapsed\"\r\n                          data-toggle=\"collapse\"\r\n                          href=\"#collapse-9\"\r\n                          aria-expanded=\"false\"\r\n                          aria-controls=\"collapse-9\"\r\n                        >\r\n                          Why do I need a VPS to run the software?\r\n                        </a>\r\n                      </h6>\r\n                    </div>\r\n                    <div\r\n                      id=\"collapse-9\"\r\n                      className=\"collapse\"\r\n                      role=\"tabpanel\"\r\n                      aria-labelledby=\"heading-9\"\r\n                      data-parent=\"#accordion\"\r\n                    >\r\n                      <div className=\"card-body\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-12\">\r\n                            <p>\r\n                              The Forex market runs 24 hours a day when the\r\n                              market is open. Unless you can have a computer\r\n                              that is constantly on and constantly connected,\r\n                              your trades won't be monitored. A VPS (Virtual\r\n                              Private Server) is a remote desktop on a server\r\n                              that's always on, 24/7.\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-header\" role=\"tab\" id=\"heading-10\">\r\n                      <h6 className=\"mb-0\">\r\n                        <a\r\n                          className=\"collapsed\"\r\n                          data-toggle=\"collapse\"\r\n                          href=\"#collapse-10\"\r\n                          aria-expanded=\"false\"\r\n                          aria-controls=\"collapse-10\"\r\n                        >\r\n                          How do I cancel my affiliate package?\r\n                        </a>\r\n                      </h6>\r\n                    </div>\r\n                    <div\r\n                      id=\"collapse-10\"\r\n                      className=\"collapse\"\r\n                      role=\"tabpanel\"\r\n                      aria-labelledby=\"heading-10\"\r\n                      data-parent=\"#accordion\"\r\n                    >\r\n                      <div className=\"card-body\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-12\">\r\n                            <p>1- Click on “profile”</p>\r\n                            <p>2- Click on “Cancel Affiliate” </p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card\">\r\n                    <div className=\"card-header\" role=\"tab\" id=\"heading-12\">\r\n                      <h6 className=\"mb-0\">\r\n                        <a\r\n                          className=\"collapsed\"\r\n                          data-toggle=\"collapse\"\r\n                          href=\"#collapse-12\"\r\n                          aria-expanded=\"false\"\r\n                          aria-controls=\"collapse-12\"\r\n                        >\r\n                          Can I cancel at any time?\r\n                        </a>\r\n                      </h6>\r\n                    </div>\r\n                    <div\r\n                      id=\"collapse-12\"\r\n                      className=\"collapse\"\r\n                      role=\"tabpanel\"\r\n                      aria-labelledby=\"heading-12\"\r\n                      data-parent=\"#accordion\"\r\n                    >\r\n                      <div className=\"card-body\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-12\">\r\n                            <p>Absolutely!</p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card mt-3\">\r\n                    <div className=\"mt-4\"></div>\r\n                    <div className=\"card-body\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                          <div className=\"r-block\">\r\n                            <p>\r\n                              For any other questions or inquiries, please send\r\n                              us a support ticket! (\r\n                              <Link\r\n                                to={ROUTE_USER_TICKET}\r\n                                className=\"text-primary\"\r\n                              >\r\n                                Click Here\r\n                              </Link>\r\n                              )\r\n                            </p>\r\n                            <p className=\"hidden\">\r\n                              For business inquiries only:\r\n                              admin@higherlevelfx.com\r\n                            </p>\r\n                            <p className=\"padding-top-10\">\r\n                              Please allow up to 48 hours for a reply. Rest\r\n                              assured, we will get back to you as soon as\r\n                              possible!\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserSupportPage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserVerificationPage\\UserVerificationPage.js",["2202","2203","2204"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport TwoFactorCodeModal from \"components/TwoFactorCodeModal/TwoFactorCodeModal\";\r\nimport { ROUTE_USER_VERIFICATION } from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport {\r\n  apiGetUserVerificationPageDetail,\r\n  apiUserConfirmVerificationCode,\r\n  apiUserDisableVerification,\r\n  apiUserSendTwoFactVerificationEmail,\r\n} from \"services/userVerificationService\";\r\nimport {\r\n  empty,\r\n  get_data_value,\r\n  showToast,\r\n  show_loading,\r\n  to_array,\r\n} from \"utils/GlobalFunctions\";\r\nimport TwoFactQRCodeModal from \"./inc/TwoFactQRCodeModal\";\r\nimport \"./UserVerificationPage.css\";\r\n\r\nconst currentPageTitle = \"Two-Step Verification\";\r\nconst UserVerificationPage = (props) => {\r\n  const dispatch = useDispatch();\r\n  const initPage = () => {\r\n    dispatch(\r\n      UpdateAppData({\r\n        currentPageTitle: currentPageTitle,\r\n        current_route: ROUTE_USER_VERIFICATION,\r\n        m_user_menu_collapsed: true,\r\n      })\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    initPage();\r\n    getData();\r\n    //checkVerificationCode();\r\n  }, []);\r\n  const defaultPageData = {\r\n    user: {},\r\n    two_fact_secret: \"\",\r\n    two_fact_qr_code_url: \"\",\r\n  };\r\n  const [pageData, setPageData] = useState(defaultPageData);\r\n  const getData = () => {\r\n    show_loading(true);\r\n    apiGetUserVerificationPageDetail()\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setPageData(api_res.data);\r\n          dispatch(updateUser(api_res.data[\"user\"]));\r\n          checkVerificationCode();\r\n          if (api_res.data[\"user\"][\"2fa_status\"] === 1) {\r\n            setShowTwoFactQRCodeModal(true);\r\n          }\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  const checkVerificationCode = () => {\r\n    let code = \"\";\r\n    try {\r\n      if (!empty(props.match.params.code)) {\r\n        code = props.match.params.code;\r\n      }\r\n    } catch (e) {}\r\n    if (code === \"\") {\r\n      return false;\r\n    }\r\n    let get_params = {\r\n      code: code,\r\n    };\r\n    console.log(get_params);\r\n    //return false;\r\n    show_loading(true);\r\n    apiUserConfirmVerificationCode(get_params)\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        if (api_res.status === \"1\") {\r\n          showToast(api_res.message, \"success\");\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n        show_loading(false);\r\n        props.history.replace({ pathname: ROUTE_USER_VERIFICATION });\r\n      })\r\n      .catch((err) => {\r\n        showToast(err, \"error\");\r\n        props.history.replace({ pathname: ROUTE_USER_VERIFICATION });\r\n      });\r\n  };\r\n\r\n  const [confirmModalContent, setConfirmModalContent] = useState(\r\n    <div className=\"alert alert-warning mt-0 mb-0\" role=\"alert\">\r\n      <div className=\"note mb-0 text-center\">\r\n        <p>\r\n          To confirm you're trying to enable 2-step verification, we need to\r\n          send you an email.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n\r\n  const sendVerificationEmail = () => {\r\n    show_loading(true);\r\n    apiUserSendTwoFactVerificationEmail()\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setShowConfirmModal(false);\r\n          showToast(\r\n            \"Confirmation email has been sent!\",\r\n            \"success\"\r\n          );\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  const [showTwoFactQRCodeModal, setShowTwoFactQRCodeModal] = useState(false);\r\n\r\n  const completeTwoFactVerification = () => {\r\n    getData();\r\n  };\r\n\r\n  /////////////////////////////////code for disable 2fa////////////////////////////////////////////////\r\n  const [showVerificationCodeModal, setShowVerificationCodeModal] =\r\n    useState(false);\r\n\r\n  const showTwoFactVerificationDlg = () => {\r\n    setShowVerificationCodeModal(true);\r\n  };\r\n  const cancelTwoStepVerification = () => {\r\n    setShowVerificationCodeModal(false);\r\n  };\r\n  const submitVerificationCodeData = (codeData) => {\r\n    let codeStr = to_array(codeData).join(\"\");\r\n    console.log(\"codeStr\", codeStr);\r\n    show_loading(true);\r\n    let params = {\r\n      otp: codeStr,\r\n    };\r\n    apiUserDisableVerification(params)\r\n      .then((api_res) => {\r\n        if (api_res.status === \"1\") {\r\n          showToast(api_res.message, \"success\");\r\n          setShowVerificationCodeModal(false);\r\n          getData();\r\n        } else {\r\n          show_loading(false);\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-verification-page\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title t-show-mobile\">{currentPageTitle}</h4>\r\n              <div className=\"card-content\">\r\n                <div className=\"d-padding-20\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-7\">\r\n                      <div\r\n                        className={`block-has-verification ${\r\n                          get_data_value(pageData[\"user\"], \"2fa_secret\") !== \"\"\r\n                            ? \"\"\r\n                            : \"hidden\"\r\n                        }`}\r\n                      >\r\n                        <div className=\"block-verification\">\r\n                          <span className=\"text-success text-bold\">\r\n                            Great news!\r\n                          </span>{\" \"}\r\n                          You're all set!\r\n                        </div>\r\n                        <div className=\"block-verification\">\r\n                          <p className=\"text-normal\">\r\n                            Your Two-Step Authentication is active!\r\n                          </p>\r\n                        </div>\r\n                        <div className=\"block m-text-center mt-3 mb-4\">\r\n                          <button\r\n                            className=\"glow-on-hover btn-enable-2fact-auth mr-4\"\r\n                            type=\"button\"\r\n                            style={{ width: \"180px\" }}\r\n                            onClick={(e) => {\r\n                              setShowConfirmModal(true);\r\n                            }}\r\n                          >\r\n                            New Device?\r\n                          </button>\r\n                          <button\r\n                            className=\"glow-on-hover btn-enable-2fact-auth\"\r\n                            type=\"button\"\r\n                            style={{ width: \"180px\" }}\r\n                            onClick={(e) => {\r\n                              showTwoFactVerificationDlg();\r\n                            }}\r\n                          >\r\n                            Disable 2FA\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                      <div\r\n                        className={`block-has-no-verification ${\r\n                          get_data_value(pageData[\"user\"], \"2fa_secret\") === \"\"\r\n                            ? \"\"\r\n                            : \"hidden\"\r\n                        }`}\r\n                      >\r\n                        <div className=\"block-verification\">\r\n                          <p className=\"text-normal font-size-normal text-bold\">\r\n                            &#183; Add an extra layer of security\r\n                          </p>\r\n                          <p className=\"text-normal\">\r\n                            Protect your account with an extra unique code sent\r\n                            to your mobile device\r\n                          </p>\r\n                        </div>\r\n                        <div className=\"block-verification\">\r\n                          <p className=\"text-normal font-size-normal text-bold\">\r\n                            &#183; Keep the bad guys out\r\n                          </p>\r\n                          <p className=\"text-normal\">\r\n                            Even if someone gets your password, it won't be\r\n                            enough to sign in\r\n                          </p>\r\n                        </div>\r\n                        <div className=\"block-verification\">\r\n                          <p className=\"text-normal font-size-normal text-bold\">\r\n                            &#183; Keep your Virtual Cloud safe!\r\n                          </p>\r\n                          <p className=\"text-normal\">\r\n                            2-step verification gives your account the HIGHEST\r\n                            level of protection\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-5\">\r\n                      <div className=\"img-wrapper text-center\">\r\n                        <img\r\n                          className=\"img-responsive\"\r\n                          style={{ width: \"180px\" }}\r\n                          src=\"/assets/user/images/2fa.jpg\"\r\n                          alt=\"\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    className={`enable-2fa-block ${\r\n                      get_data_value(pageData[\"user\"], \"2fa_secret\", \"aaaa\") ===\r\n                      \"\"\r\n                        ? \"\"\r\n                        : \"hidden\"\r\n                    }`}\r\n                  >\r\n                    <div className=\"block text-center mt-5\">\r\n                      <button\r\n                        className=\"glow-on-hover btn-enable-2fact-auth\"\r\n                        type=\"button\"\r\n                        style={{ width: \"180px\" }}\r\n                        onClick={(e) => {\r\n                          setShowConfirmModal(true);\r\n                        }}\r\n                      >\r\n                        Enable Now!\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ConfirmModal\r\n        title=\"Confirm it's really you!\"\r\n        content={confirmModalContent}\r\n        textBtnYes=\"Send\"\r\n        textBtnNo=\"Cancel\"\r\n        onClickYes={sendVerificationEmail}\r\n        visibleModal={showConfirmModal}\r\n        setVisibleModal={setShowConfirmModal}\r\n        modalClass=\"user-page confirm-modal\"\r\n      />\r\n\r\n      <TwoFactQRCodeModal\r\n        pageData={pageData}\r\n        isVisible={showTwoFactQRCodeModal}\r\n        setVisibleModal={setShowTwoFactQRCodeModal}\r\n        submitModalData={completeTwoFactVerification}\r\n        modalClass=\"user-page two-fact-qrcode-modal\"\r\n      />\r\n\r\n      <TwoFactorCodeModal\r\n        isVisible={showVerificationCodeModal}\r\n        setShowconfirmModal={setShowVerificationCodeModal}\r\n        submitModalData={submitVerificationCodeData}\r\n        onCancelModal={cancelTwoStepVerification}\r\n        modalClass=\"user-page two-fact-verification-code-dlg\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserVerificationPage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserProfilePage\\UserProfilePage.js",["2205","2206","2207","2208","2209","2210"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport CreditCardForm from \"components/CreditCardForm/CreditCardForm\";\r\nimport { ROUTE_USER_PROFILE } from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport {\r\n  apiGetUserProfilePageDetail,\r\n  apiUserCancelAffiliate,\r\n  apiUserCancelMembership,\r\n  apiUserRemoveCardInfo,\r\n  apiUserUpdateCardInfo,\r\n  apiUserUpdateProfile,\r\n} from \"services/userProfileService\";\r\nimport {\r\n  empty,\r\n  get_data_value,\r\n  isEmpty,\r\n  showToast,\r\n  show_loading,\r\n} from \"utils/GlobalFunctions\";\r\n\r\nconst currentPageTitle = \"Profile Management\";\r\nconst UserProfilePage = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  //////////////////////////socket part////////////////////////////////\r\n  const userDataStore = useSelector((x) => x.userDataStore);\r\n  const socketStore = useSelector((x) => x.socketStore);\r\n  const socket = socketStore[\"socket\"];\r\n  useEffect(() => {\r\n    if (!empty(socket)) {\r\n      console.log(\"------------socketStore---------------\", socketStore);\r\n    }\r\n  }, [socket]);\r\n\r\n  const token = get_data_value(userDataStore, \"token\");\r\n  const socketHeader = { token: token };\r\n\r\n  ///////////////////////////end socket part/////////////////////////////\r\n\r\n  const initPage = () => {\r\n    dispatch(\r\n      UpdateAppData({\r\n        currentPageTitle: currentPageTitle,\r\n        current_route: ROUTE_USER_PROFILE,\r\n        m_user_menu_collapsed: true,\r\n      })\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    initPage();\r\n    getData();\r\n  }, []);\r\n\r\n  const defaultPageData = {\r\n    user: {},\r\n    enabled_membership: \"\",\r\n    is_active_customer: \"\",\r\n  };\r\n  const [pageData, setPageData] = useState(defaultPageData);\r\n  const getData = () => {\r\n    show_loading(true);\r\n    apiGetUserProfilePageDetail()\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setPageData(api_res.data);\r\n          dispatch(updateUser(api_res.data[\"user\"]));\r\n          setUserData({\r\n            ...api_res.data[\"user\"],\r\n            ...initCardData,\r\n            user_password: \"\",\r\n          });\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  // const userDataStore = useSelector((x) => x.userDataStore);\r\n  // const userInfo = userDataStore;\r\n  // console.log(\"userInfo\", userInfo);\r\n  let curYear = new Date().getFullYear();\r\n  const initCardData = {\r\n    owner: \"\",\r\n    card_number: \"\",\r\n    cvv: \"\",\r\n    exp_month: \"01\",\r\n    exp_year: curYear - 2000,\r\n    card_type: \"\",\r\n  };\r\n  const [cardData, setCardData] = useState(initCardData);\r\n  const [userData, setUserData] = useState({\r\n    ...pageData[\"user\"],\r\n    ...initCardData,\r\n    user_password: \"\",\r\n  });\r\n  const [errorField, setErrorField] = useState([]);\r\n\r\n  const validateFields = () => {\r\n    var errorList = Array();\r\n    errorList = isEmpty(userData, \"user_email\", errorList);\r\n\r\n    setErrorField([...errorList]);\r\n    return errorList.length > 0 ? false : true;\r\n  };\r\n\r\n  const onChangeFormField = (e, field_name) => {\r\n    if (errorField.includes(field_name)) {\r\n      let errors = errorField.filter((x) => x != field_name);\r\n      setErrorField([...errors]);\r\n    }\r\n    let updateData = { ...userData };\r\n    updateData[field_name] = e.target.value;\r\n    setUserData({ ...updateData });\r\n  };\r\n\r\n  const onClickProfileUpdate = () => {\r\n    let is_valid = validateFields();\r\n    console.log(\"is valid\", is_valid);\r\n    if (is_valid) {\r\n      show_loading(true);\r\n      apiUserUpdateProfile(userData)\r\n        .then((api_res) => {\r\n          console.log(\"api_res\", api_res);\r\n          show_loading(false);\r\n          if (api_res.status === \"1\") {\r\n            dispatch(updateUser(api_res.data[\"user\"]));\r\n            showToast(\"Profile has been updated successfully\", \"success\");\r\n            getData();\r\n          } else {\r\n            showToast(api_res.message, \"error\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          show_loading(false);\r\n          showToast(err, \"error\");\r\n        });\r\n    }\r\n  };\r\n\r\n  const validateCardFields = () => {\r\n    var errorList = Array();\r\n    errorList = isEmpty(cardData, \"owner\", errorList);\r\n    errorList = isEmpty(cardData, \"card_number\", errorList);\r\n    errorList = isEmpty(cardData, \"cvv\", errorList);\r\n    setErrorField([...errorList]);\r\n    return errorList.length > 0 ? false : true;\r\n  };\r\n\r\n  const setCreditCardData = (creditCardData) => {\r\n    let updateData = {\r\n      owner: creditCardData[\"owner\"],\r\n      card_number: creditCardData[\"card_number\"],\r\n      cvv: creditCardData[\"cvv\"],\r\n      exp_month: creditCardData[\"exp_month\"],\r\n      exp_year: creditCardData[\"exp_year\"],\r\n      card_type: creditCardData[\"card_type\"],\r\n    };\r\n    setCardData({ ...cardData, ...updateData });\r\n  };\r\n\r\n  const onClickUpdateCardInfo = () => {\r\n    let is_valid = validateCardFields();\r\n    console.log(\"is valid\", is_valid);\r\n    if (is_valid) {\r\n      show_loading(true);\r\n      apiUserUpdateCardInfo(cardData)\r\n        .then((api_res) => {\r\n          console.log(\"api_res\", api_res);\r\n          show_loading(false);\r\n          if (api_res.status === \"1\") {\r\n            dispatch(updateUser(api_res.data[\"user\"]));\r\n            showToast(\"Credit card has been updated successfully\", \"success\");\r\n            //setCreditCardData(initCardData)\r\n            getData()\r\n          } else {\r\n            showToast(api_res.message, \"error\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          show_loading(false);\r\n          showToast(err, \"error\");\r\n        });\r\n    }\r\n  };\r\n  const onClickRemoveCardInfo = () => {\r\n    show_loading(true);\r\n    apiUserRemoveCardInfo()\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          dispatch(updateUser(api_res.data[\"user\"]));\r\n          setPageData({ ...pageData, user: api_res.data[\"user\"] });\r\n          showToast(\"Forget card successfully\", \"success\");\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  const [confirmModalTitle, setConfirmModalTitle] = useState(\r\n    \"Are you sure to delete this record?\"\r\n  );\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n  const [currentConfirmAction, setCurrentConfirmAction] = useState(\"\");\r\n\r\n  const onCancelMembership = () => {\r\n    setConfirmModalTitle(\"Are you sure to cancel your membership?\");\r\n    setShowConfirmModal(true);\r\n    setCurrentConfirmAction(\"cancelMembership\");\r\n  };\r\n  const onCancelAffiliate = () => {\r\n    setConfirmModalTitle(\"Are you sure to cancel affiliate?\");\r\n    setShowConfirmModal(true);\r\n    setCurrentConfirmAction(\"cancelAffiliate\");\r\n  };\r\n  const onCloseAccount = () => {\r\n    setConfirmModalTitle(\"Are you sure to close your account?\");\r\n    setShowConfirmModal(true);\r\n    setCurrentConfirmAction(\"closeAccount\");\r\n  };\r\n  const doConfirmedAction = () => {\r\n    if (currentConfirmAction === \"cancelMembership\") {\r\n      cancelMembership();\r\n    } else if (currentConfirmAction === \"cancelAffiliate\") {\r\n      cancelAffiliate();\r\n    }\r\n  };\r\n  const cancelMembership = () => {\r\n    show_loading(true);\r\n    apiUserCancelMembership()\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          dispatch(updateUser(api_res.data[\"user\"]));\r\n          showToast(\"Subscription has been cancelled successfully\", \"success\");\r\n          getData();\r\n          setShowConfirmModal(false);\r\n          console.log(\"emit get_user_notification_data\")\r\n          socket.emit(\"get_user_notification_data\", { ...socketHeader });\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n  const cancelAffiliate = () => {\r\n    show_loading(true);\r\n    apiUserCancelAffiliate()\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          dispatch(updateUser(api_res.data[\"user\"]));\r\n          showToast(\"Affiliate has been cancelled successfully\", \"success\");\r\n          getData();\r\n          setShowConfirmModal(false);\r\n          socket.emit(\"get_user_notification_data\", { ...socketHeader });\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-profile-page\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 grid-margin stretch-card\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title\">Profile</h4>\r\n              <p className=\"card-description\"></p>\r\n              <div className=\"forms-sample\">\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"user_name\">Username</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Input your name\"\r\n                    className={`form-control user_name`}\r\n                    id=\"user_name\"\r\n                    name=\"user_name\"\r\n                    defaultValue={get_data_value(userData, \"user_name\")}\r\n                    readOnly\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"user_first_name\">First Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Input your first name\"\r\n                    className={`form-control user_first_name ${\r\n                      errorField.includes(\"user_first_name\") ? \"is-invalid\" : \"\"\r\n                    }`}\r\n                    id=\"user_first_name\"\r\n                    name=\"user_first_name\"\r\n                    defaultValue={get_data_value(userData, \"user_first_name\")}\r\n                    readOnly={!empty(get_data_value(pageData[\"user\"], \"user_first_name\"))}\r\n                    onChange={(e) => {\r\n                      onChangeFormField(e, \"user_first_name\");\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"user_last_name\">Last Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Input your last name\"\r\n                    className={`form-control user_last_name ${\r\n                      errorField.includes(\"user_last_name\") ? \"is-invalid\" : \"\"\r\n                    }`}\r\n                    id=\"user_last_name\"\r\n                    name=\"user_last_name\"\r\n                    defaultValue={get_data_value(userData, \"user_last_name\")}\r\n                    readOnly={!empty(get_data_value(pageData[\"user\"], \"user_last_name\"))}\r\n                    onChange={(e) => {\r\n                      onChangeFormField(e, \"user_last_name\");\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"user_email\">Email Address</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    placeholder=\"Input your email\"\r\n                    className={`form-control user_email ${\r\n                      errorField.includes(\"user_email\") ? \"is-invalid\" : \"\"\r\n                    }`}\r\n                    id=\"user_email\"\r\n                    name=\"user_email\"\r\n                    defaultValue={get_data_value(userData, \"user_email\")}\r\n                    onChange={(e) => {\r\n                      onChangeFormField(e, \"user_email\");\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"user_password\">Password</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Input password\"\r\n                    className={`form-control user_password ${\r\n                      errorField.includes(\"user_password\") ? \"is-invalid\" : \"\"\r\n                    }`}\r\n                    id=\"user_password\"\r\n                    name=\"user_password\"\r\n                    onChange={(e) => {\r\n                      onChangeFormField(e, \"user_password\");\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <div className=\"button-group\" style={{ textAlign: \"right\" }}>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"mb-2 btn btn-md btn-primary\"\r\n                      onClick={(e) => {\r\n                        onClickProfileUpdate();\r\n                      }}\r\n                    >\r\n                      Update\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <h4\r\n                  className={`card-title ${\r\n                    pageData[\"enabled_membership\"] === 1 ||\r\n                    get_data_value(pageData[\"user\"], \"user_type\") === 1\r\n                      ? \"\"\r\n                      : \"hidden\"\r\n                  }`}\r\n                >\r\n                  {`Cancellation${\r\n                    pageData[\"enabled_membership\"] === 1 &&\r\n                    get_data_value(pageData[\"user\"], \"user_type\") === 1\r\n                      ? \"s\"\r\n                      : \"\"\r\n                  }`}\r\n                  :\r\n                </h4>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n                    <div className=\"form-group\">\r\n                      <div\r\n                        className=\"button-group\"\r\n                        style={{ textAlign: \"center\", float: \"right\" }}\r\n                      >\r\n                        <button\r\n                          type=\"button\"\r\n                          className={`mb-2 btn btn-md btn-danger mr-2 ${\r\n                            pageData[\"enabled_membership\"] === 1 ? \"\" : \"hidden\"\r\n                          }`}\r\n                          id=\"btn-cancel-subscription\"\r\n                          onClick={(e) => {\r\n                            onCancelMembership();\r\n                          }}\r\n                        >\r\n                          Cancel Membership\r\n                        </button>\r\n                        <button\r\n                          type=\"button\"\r\n                          className={`mb-2 btn btn-md btn-warning mr-2 ${\r\n                            get_data_value(pageData[\"user\"], \"user_type\") === 1\r\n                              ? \"\"\r\n                              : \"hidden\"\r\n                          }`}\r\n                          id=\"btn-cancel-affiliate\"\r\n                          onClick={(e) => {\r\n                            onCancelAffiliate();\r\n                          }}\r\n                        >\r\n                          Cancel Affiliate\r\n                        </button>\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"hidden mb-2 btn btn-md btn-danger mr-2\"\r\n                          id=\"btn-close-account\"\r\n                          onClick={(e) => {\r\n                            onCloseAccount();\r\n                          }}\r\n                        >\r\n                          Close Account\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-6 grid-margin stretch-card\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title\">Credit Card</h4>\r\n              <p className=\"card-description\"></p>\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  Card on File: &nbsp;\r\n                  {empty(pageData[\"user\"][\"card_last_4\"]) && <span>NONE</span>}\r\n                  {!empty(pageData[\"user\"][\"card_last_4\"]) && (\r\n                    <span className=\"card-encrypted-number\">{`************${pageData[\"user\"][\"card_last_4\"]}`}</span>\r\n                  )}\r\n                </label>\r\n              </div>\r\n              <div>\r\n                <CreditCardForm\r\n                  userData={cardData}\r\n                  setUserData={setCreditCardData}\r\n                  errorField={errorField}\r\n                  setErrorField={setErrorField}\r\n                ></CreditCardForm>\r\n              </div>\r\n              <div className=\"form-group text-right\" id=\"pay-now\">\r\n                {!empty(pageData[\"user\"][\"card_last_4\"]) && (\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary mr-2\"\r\n                    id=\"remove-card\"\r\n                    onClick={(e) => {\r\n                      onClickRemoveCardInfo();\r\n                    }}\r\n                  >\r\n                    Forget Card\r\n                  </button>\r\n                )}\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary\"\r\n                  id=\"confirm-update\"\r\n                  onClick={(e) => {\r\n                    onClickUpdateCardInfo();\r\n                  }}\r\n                >\r\n                  Update\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <ConfirmModal\r\n        content={confirmModalTitle}\r\n        onClickYes={doConfirmedAction}\r\n        visibleModal={showConfirmModal}\r\n        setVisibleModal={setShowConfirmModal}\r\n        modalClass=\"user-page confirm-modal\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProfilePage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Home\\WelcomePage\\WelcomePage.js",["2211","2212"],"import HomeLayout from \"layouts/HomeLayout/HomeLayout\";\r\nimport {\r\n  ROUTE_COMPLIANCE,\r\n  ROUTE_LOGIN,\r\n  ROUTE_USER_WALLET,\r\n  ROUTE_WELCOME,\r\n} from \"navigation/CONSTANTS\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\n\r\nconst WelcomePage = () => {\r\n  const dispatch = useDispatch();\r\n  const initPage = () => {\r\n    let page_title = \"Congratulations! You're in!\";\r\n    dispatch(\r\n      UpdateAppData({\r\n        currentPageTitle: page_title,\r\n        current_route: ROUTE_WELCOME,\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    initPage();\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <HomeLayout>\r\n        <div className=\"main-content\">\r\n          <div\r\n            className=\"section page-section container has-header content-sm pb-40\"\r\n            id=\"page-section1\"\r\n          >\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-12 margin-bottom-30\">\r\n                  <div className=\"reg-form margin-bottom-40\">\r\n                    <div className=\"logo-wrapper\">\r\n                      <img\r\n                        src=\"/assets/home/images/higherlevelfx_logo_tm.png\"\r\n                        className=\"img-responsive img-logo\"\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <h2 className=\"text-center text-bold mt-20 mb-20\">\r\n                    Congratulations! You're in! <br />\r\n                    <span style={{ fontSize: \"0.9em\" }}>Start HERE:</span>\r\n                  </h2>\r\n                  <div\r\n                    className=\"intro-video-box text-center\"\r\n                    style={{ position: \"relative\", zIndex: 1 }}\r\n                  >\r\n                    <iframe\r\n                      src=\"https://player.vimeo.com/video/566885272\"\r\n                      className=\"vimeo-iframe\"\r\n                      frameBorder=\"0\"\r\n                      allow=\"autoplay; fullscreen\"\r\n                      allowFullScreen\r\n                      title=\"video\"\r\n                    ></iframe>\r\n                  </div>\r\n                  <div className=\"text-center text-bold mt-20 mb-20\">\r\n                    <a\r\n                      href=\"https://www.facebook.com/groups/thefreedomsocietygroup\"\r\n                      className=\"btn-join-fb btn btn-lg btn-green\"\r\n                      rel=\"noreferrer\"\r\n                      target=\"_blank\"\r\n                    >\r\n                      JOIN THE FB COMMUNITY!\r\n                    </a>\r\n                  </div>\r\n                  <p className=\"desc-v1 text-center mt-10 mb-10\">\r\n                    ... Or if you have already joined, click{\" \"}\r\n                    <Link className=\"text-green\" to={ROUTE_LOGIN}>\r\n                      here\r\n                    </Link>{\" \"}\r\n                    to login to your account.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </HomeLayout>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WelcomePage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\components\\AuthSmsCodeModal\\AuthSmsCodeModal.js",["2213","2214","2215"],"import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { isEmpty, jQuery, showToast } from \"utils/GlobalFunctions\";\r\n\r\nfunction AuthSmsCodeModal(props) {\r\n  const { isVisible, setShowconfirmModal, submitModalData, modalClass } = props;\r\n  useEffect(() => {\r\n    if (isVisible !== undefined) {\r\n      setShow(isVisible);\r\n      if (isVisible) {\r\n        setTimeout(function () {\r\n          jQuery(\".verification-code-item-0\").focus();\r\n        }, 300);\r\n      }\r\n    }\r\n  }, [isVisible]);\r\n  const [show, setShow] = useState(false);\r\n  const [codeData, setCodeData] = useState([]);\r\n  const [errorField, setErrorField] = useState([]);\r\n  const validateFields = () => {\r\n    var errorList = Array();\r\n    for (var i = 0; i < 4; i++) {\r\n      errorList = isEmpty(codeData, i, errorList);\r\n    }\r\n    setErrorField([...errorList]);\r\n    return errorList.length > 0 ? false : true;\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    setShowconfirmModal(false);\r\n  };\r\n\r\n  const rows = [0, 1, 2, 3].map((val, index) => {\r\n    return (\r\n      <input\r\n        key={index}\r\n        className={`verification-code-item no-spin verification-code-item-${index}`}\r\n        type=\"number\"\r\n        maxLength=\"1\"\r\n        size=\"1\"\r\n        min=\"0\"\r\n        max=\"9\"\r\n        pattern=\"[0-9]{1}\"\r\n        onChange={(e) => {\r\n          onChangeCodeItemField(e, index);\r\n        }}\r\n      />\r\n    );\r\n  });\r\n\r\n  const onChangeCodeItemField = (e, field_index) => {\r\n    let val = e.target.value;\r\n    let code = \"\";\r\n    if(val.length > 0) {\r\n        code = val.substr(val.length - 1); \r\n    }\r\n    codeData[field_index] = code;\r\n    setCodeData([...codeData]);\r\n  };\r\n\r\n  const submitVerificationCode = () => {\r\n    let is_valid = validateFields();\r\n    console.log(\"is valid\", is_valid);\r\n    if (is_valid) {\r\n        submitModalData(codeData);\r\n    }else {\r\n        showToast(\"Please input verification code correctly\", \"error\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        centered\r\n        dialogClassName={modalClass}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Sms Verification</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"block text-center\">\r\n            <h4 class=\"sms-dlg-title\">Enter the 4-digit code we sent you</h4>\r\n            <p className=\"text-normal margin-bottom-20 text-gray hidden\">\r\n              We sent it to +1234567890\r\n            </p>\r\n          </div>\r\n          <div className=\"block margin-bottom-20 text-center\">\r\n            <div className=\"sms-verification-box four-digits-box\">\r\n              <div id=\"dialog\">\r\n                <div id=\"form\" className=\"verification-form\">\r\n                  {rows}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn-send-auth-code btn btn-green mr-1\"\r\n            onClick={submitVerificationCode}\r\n          >\r\n            Done\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-light btn-cancel-2fa\"\r\n            data-dismiss=\"modal\"\r\n            onClick={handleClose}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AuthSmsCodeModal;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Home\\ConfirmPasswordPage\\ConfirmPasswordPage.js",["2216","2217","2218","2219","2220","2221","2222","2223","2224","2225","2226","2227","2228","2229"],"import HomeLayout from \"layouts/HomeLayout/HomeLayout\";\r\nimport {\r\n  ROUTE_CONFIRM_PASSWORD,\r\n  ROUTE_FORGOT_PASSWORD,\r\n  ROUTE_FREE_BOOK,\r\n  ROUTE_LOGIN,\r\n  ROUTE_REGISTER,\r\n} from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport { googleKey } from \"config/CONSTANTS\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport {\r\n  get_data_value,\r\n  isEmpty,\r\n  is_empty,\r\n  showToast,\r\n  show_loading,\r\n} from \"utils/GlobalFunctions\";\r\nimport {\r\n  apiConfirmPassword,\r\n  apiLogin,\r\n  apiRequestResetPassword,\r\n} from \"services/loginService\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\n\r\nconst ConfirmPasswordPage = (props) => {\r\n  const dispatch = useDispatch();\r\n  const initPage = () => {\r\n    let page_title = \"Confirm password\";\r\n    dispatch(\r\n      UpdateAppData({\r\n        currentPageTitle: page_title,\r\n        current_route: ROUTE_CONFIRM_PASSWORD,\r\n      })\r\n    );\r\n    //document.title = page_title;\r\n  };\r\n\r\n  const onClickConfirmPassword = () => {\r\n    let code = \"\";\r\n    try{\r\n      if(!is_empty(props.match.params.code)){\r\n        code = props.match.params.code\r\n      }\r\n    }catch(e){\r\n      showToast(\"Invalid request\", \"error\");\r\n      setTimeout(() => {\r\n        show_loading(false);\r\n        props.history.replace({ pathname: ROUTE_LOGIN });\r\n      }, 500);\r\n    }\r\n    \r\n    if(code === \"\"){\r\n      return false\r\n    }\r\n    let get_params = {\r\n      code: code\r\n    };\r\n    console.log(get_params);\r\n    //return false;\r\n    show_loading(true);\r\n    apiConfirmPassword(get_params)\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        if (api_res.status === \"1\") {\r\n          showToast(api_res.message, \"success\");\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        showToast(err, \"error\");\r\n      });\r\n\r\n    setTimeout(() => {\r\n      show_loading(false);\r\n      props.history.replace({ pathname: ROUTE_LOGIN });\r\n    }, 500);\r\n  };\r\n\r\n  useEffect(() => {\r\n    initPage();\r\n    onClickConfirmPassword();\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <HomeLayout>\r\n        <div className=\"main-content\">\r\n          <div\r\n            className=\"section page-section container has-header content-sm\"\r\n            id=\"page-section1\"\r\n          >\r\n            <div className=\"container\">\r\n              <div className=\"form-container margin-auto\" style={{minHeight: \"80vh\"}}></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </HomeLayout>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(ConfirmPasswordPage);\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\utils\\common.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\userDashboardService.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\layouts\\UserLayout\\Includes\\UserLoader.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\userCommonService.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\userVpsService.js",["2230","2231"],"import { axiosGet, axiosPost } from \"./ajaxServices\";\r\nimport { urlUserCheckHasActiveLicense, urlUserCheckHlxPassword, urlUserGetVpsConsoleUrl, urlUserGetVpsPassword } from \"./CONSTANTS\";\r\n\r\n export const apiUserGetVpsPassword = (userData) => {\r\n  const url = urlUserGetVpsPassword;\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  var formData = new FormData();\r\n  formData.append(\"user_password\", userData.user_password); \r\n\r\n  return new Promise((resolve, reject) => {\r\n    axiosPost(url, formData, config)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n};\r\n\r\nexport const apiUserGetVpsConsoleUrl = () => {\r\n  const url = urlUserGetVpsConsoleUrl;\r\n  return new Promise((resolve, reject) => {\r\n    axiosGet(url, {}, \"\")\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n};\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\userLicenseService.js",["2232"],"import { APP_NAME, SYSTEM_ERROR } from \"config/CONSTANTS\";\r\nimport { axiosGet, axiosPost } from \"./ajaxServices\";\r\nimport {urlUserGetLicensePageDetail, urlUserUpdateLicenseInfo} from \"./CONSTANTS\";\r\n\r\nexport const apiGetUserLicensePageDetail = () => {\r\n  const url = urlUserGetLicensePageDetail;\r\n  return new Promise((resolve, reject) => {\r\n    axiosGet(url, {}, SYSTEM_ERROR)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n};\r\n\r\nexport const apiUserUpdateLicenseInfo = (params) => {\r\n  const url = urlUserUpdateLicenseInfo;\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  var formData = new FormData();\r\n  formData.append(\"id\", params.id); \r\n  formData.append(\"user_id\", params.user_id); \r\n  formData.append(\"license_number\", params.license_number); \r\n  \r\n  return new Promise((resolve, reject) => {\r\n    axiosPost(url, formData, config)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n};","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserVpsPage\\inc\\VpsInfoModal.js",["2233","2234","2235","2236","2237"],"import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  get_data_value,\r\n  isEmpty,\r\n  jQuery,\r\n  showToast,\r\n} from \"utils/GlobalFunctions\";\r\nimport { APP_NAME } from \"config/CONSTANTS\";\r\n\r\nfunction VpsInfoModal(props) {\r\n  const { isVisible, setVisibleModal, modalData, modalClass, modalTitle } = props;\r\n  useEffect(() => {\r\n    if (isVisible !== undefined) {\r\n      setShow(isVisible);\r\n    }\r\n  }, [isVisible]);\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    setVisibleModal(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        centered\r\n        dialogClassName={modalClass}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{modalTitle}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"block margin-bottom-20 text-center\">\r\n            <div className=\"modal-box\">\r\n              <div id=\"dialog\">\r\n                <div class=\"text-normal text-left\">\r\n                  <p class=\"text-normal\">\r\n                    You will use this password every time you login to your VPS,\r\n                  </p>\r\n                  <p class=\"text-normal\">\r\n                    Please write it down and keep it in a safe place.\r\n                  </p>\r\n                  <p class=\"text-normal margin-top-10\">\r\n                    PASSWORD: <span class=\"vps-password\">{get_data_value(modalData, 'vps_password')}</span>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-md btn-close-dlg btn-light margin-right-0\"\r\n            data-dismiss=\"modal\"\r\n            onClick={handleClose}\r\n          >\r\n            Close\r\n          </button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default VpsInfoModal;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserLicensePage\\inc\\UserLicenseIntroPage.js",["2238","2239","2240","2241","2242","2243","2244"],"import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  get_data_value,\r\n  isEmpty,\r\n  jQuery,\r\n  showToast,\r\n} from \"utils/GlobalFunctions\";\r\nimport { APP_NAME, LICENSE_PRICE, LICENSE_TRIAL_PRICE } from \"config/CONSTANTS\";\r\nimport {\r\n  ROUTE_USER_DASHBOARD,\r\n  ROUTE_USER_PAY_LICENSE,\r\n} from \"navigation/CONSTANTS\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction UserLicenseIntroPage(props) {\r\n  const { currentPageTitle, pageData } = props;\r\n\r\n  const history = useHistory();\r\n  const goPayLicensePage = () => {\r\n    console.log(\"pageData\", pageData);\r\n    if (get_data_value(pageData, \"is_active_customer\") === 0) {\r\n      history.push(ROUTE_USER_PAY_LICENSE);\r\n    } else {\r\n      showToast(\"Invalid request\", \"error\");\r\n      history.push(ROUTE_USER_DASHBOARD);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={`row`}>\r\n        <div className=\"col-md-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title t-show-mobile\">{currentPageTitle}</h4>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                  <div className=\"form-horizontal\">\r\n                    <div className=\"card-content\">\r\n                      <div className=\"row d-margin-top-20\">\r\n                        <div className=\"col-md-12\">\r\n                          <h4 className=\"test-normal\">\r\n                            You need to become a member to access all of our\r\n                            products.\r\n                          </h4>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                          <div className=\"block mt-4\">\r\n                            <h4>Here is what you get:</h4>\r\n                            <div className=\"pl-3\">\r\n                              <ul>\r\n                                <li>Two software licenses</li>\r\n                                <li>advanced HLX Academy</li>\r\n                              </ul>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                          <div className=\"img-wrapper mt-4 text-center\">\r\n                            <img\r\n                              className=\"img-responsive\"\r\n                              style={{ maxWidth: \"120px\" }}\r\n                              src=\"/assets/home/images/20210314/alpha-gold.png\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"membership-desc text-center mt-4\">\r\n                            <span\r\n                              className={`text-underline ${\r\n                                pageData[\"user\"][\"trial_used\"] === 0\r\n                                  ? \"\"\r\n                                  : \"hidden\"\r\n                              }`}\r\n                            >\r\n                              ${LICENSE_TRIAL_PRICE} for 7 days, then $\r\n                              {LICENSE_PRICE} / month if not cancelled!\r\n                            </span>\r\n                            <span\r\n                              className={`text-underline ${\r\n                                pageData[\"user\"][\"trial_used\"] === 0\r\n                                  ? \"\"\r\n                                  : \"hidden\"\r\n                              }`}\r\n                            >\r\n                              ${LICENSE_PRICE} / month\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"block mt-4\">\r\n            <div className=\"text-center\">\r\n              <span\r\n                className={`text-normal ${\r\n                  pageData[\"user\"][\"trial_used\"] === 0 ? \"\" : \"hidden\"\r\n                }`}\r\n              >\r\n                Upgrade Notice: If membership isn't cancelled within the 7-days\r\n                trial it will automatically go to a normal membership and begin\r\n                being charged ${LICENSE_PRICE} per month.\r\n              </span>\r\n            </div>\r\n            <div className=\"mt-4 text-center\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-md btn-success add-license-number\"\r\n                style={{ width: \"120px\" }}\r\n                onClick={(e) => {\r\n                  goPayLicensePage();\r\n                }}\r\n              >\r\n                Buy Now\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserLicenseIntroPage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserLicensePage\\inc\\LicenseInfoModal.js",["2245","2246","2247","2248","2249"],"import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { get_data_value, isEmpty, jQuery, showToast } from \"utils/GlobalFunctions\";\r\nimport { APP_NAME } from \"config/CONSTANTS\";\r\n\r\nfunction LicenseInfoModal(props) {\r\n  const { isVisible, setVisibleModal, submitModalData, modalInitialData, modalClass, modalTitle } = props;\r\n  useEffect(() => {\r\n    if (isVisible !== undefined) {\r\n      setShow(isVisible);\r\n      setModalData(modalInitialData)\r\n    }\r\n  }, [isVisible, modalInitialData]);\r\n  const [show, setShow] = useState(false);\r\n  const defaultModalData = modalInitialData;\r\n  const [modalData, setModalData] = useState(defaultModalData);\r\n  const [errorField, setErrorField] = useState([]);\r\n  \r\n  const validateFields = () => {\r\n    // console.log('modalData', modalData)\r\n    // var errorList = Array();\r\n    // errorList = isEmpty(modalData, \"license_number\", errorList);\r\n    // setErrorField([...errorList]);\r\n    // return errorList.length > 0 ? false : true;\r\n    return true\r\n  };\r\n\r\n  const onChangeFormField = (e, field_name) => {\r\n    // if (errorField.includes(field_name)) {\r\n    //   let errors = errorField.filter((x) => x != field_name);\r\n    //   setErrorField([...errors]);\r\n    // }\r\n    modalData[field_name] = e.target.value;\r\n    setModalData({ ...modalInitialData, ...modalData });\r\n  };\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    setVisibleModal(false);\r\n  };\r\n\r\n  const onSubmitModalData = () => {\r\n    let is_valid = validateFields();\r\n    console.log(\"is valid\", is_valid);\r\n    if (is_valid) {\r\n      submitModalData(modalData);\r\n    } else {\r\n      showToast(\"License number is empty\", \"error\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        centered\r\n        dialogClassName={modalClass}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{modalTitle}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"block margin-bottom-20 text-center\">\r\n            <div className=\"modal-box\">\r\n              <div id=\"dialog\">\r\n                <div className=\"text-normal text-left\">\r\n                  <label className=\"text-normal\">\r\n                  Broker Number\r\n                  </label>\r\n                  <div>\r\n                    <input\r\n                      type=\"text\"\r\n                      className={`form-control ${\r\n                        errorField.includes(\"license_number\") ? \"is-invalid\" : \"\"\r\n                      }`}\r\n                      placeholder=\"Broker Number\"\r\n                      value={get_data_value(modalData, \"license_number\")}\r\n                      onChange={(e) => {\r\n                        onChangeFormField(e, \"license_number\");\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-md btn-close-dlg btn-light margin-right-10\"\r\n            data-dismiss=\"modal\"\r\n            onClick={handleClose}\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-md btn-primary\"\r\n            onClick={onSubmitModalData}\r\n          >\r\n            Submit\r\n          </button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LicenseInfoModal;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\userAcademyService.js",["2250","2251"],"import { APP_NAME, SYSTEM_ERROR } from \"config/CONSTANTS\";\r\nimport { axiosGet, axiosPost } from \"./ajaxServices\";\r\nimport {urlUserGetAcademyData, urlUserGetAcademyPageDetail} from \"./CONSTANTS\";\r\n\r\nexport const apiGetUserAcademyPageDetail = () => {\r\n  const url = urlUserGetAcademyPageDetail;\r\n  return new Promise((resolve, reject) => {\r\n    axiosGet(url, {}, SYSTEM_ERROR)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n};\r\n\r\nexport const apiGetUserAcademyData = (type) => {\r\n  const url = urlUserGetAcademyData;\r\n  return new Promise((resolve, reject) => {\r\n    let get_param = {\r\n      type:type\r\n    }\r\n    axiosGet(url, get_param, SYSTEM_ERROR)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n};","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserAcademyPage\\inc\\UserBasicAcademyPage.js",["2252","2253","2254"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport { ROUTE_USER_ACADEMY, ROUTE_USER_DASHBOARD } from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport { apiGetUserAcademyData } from \"services/userAcademyService\";\r\nimport {\r\n  get_data_value,\r\n  isEmpty,\r\n  is_empty,\r\n  showToast,\r\n  show_loading,\r\n} from \"utils/GlobalFunctions\";\r\n\r\nconst currentPageTitle = \"Higher Level Academy\";\r\nconst UserBasicAcademyPage = (props) => {\r\n  const dispatch = useDispatch();\r\n  const initPage = () => {\r\n    dispatch(\r\n      UpdateAppData({\r\n        currentPageTitle: currentPageTitle,\r\n        current_route: ROUTE_USER_ACADEMY,\r\n        m_user_menu_collapsed: true,\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    initPage();\r\n    getData();\r\n  }, []);\r\n  const history = useHistory();\r\n  const defaultPageData = {\r\n    user: {},\r\n    user_is_active: \"\",\r\n    academy_data: null,\r\n  };\r\n  const [pageData, setPageData] = useState(defaultPageData);\r\n\r\n  const getData = () => {\r\n    console.log('props',props)\r\n    let type = props.match.params.type\r\n    if(is_empty(type)){\r\n      type = \"trial\"\r\n    }\r\n    show_loading(true);\r\n    apiGetUserAcademyData(type)\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          if (api_res.data[\"user_is_active\"] !== 1) {\r\n            showToast(\"To access this feature, you need to have an active membership!\", \"error\");\r\n            history.push(ROUTE_USER_DASHBOARD);\r\n            //props.history.replace({ pathname: ROUTE_USER_DASHBOARD });\r\n            return false;\r\n          }\r\n          setPageData(api_res.data);\r\n          dispatch(updateUser(api_res.data[\"user\"]));\r\n          console.log(\"pageData\", pageData);\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  const [currentLesson, setCurrentLesson] = useState(null);\r\n\r\n  const onClickLesson = (item) => {\r\n    console.log(\"onclick lesson item\", item);\r\n    setCurrentLesson(item);\r\n    setTimeout(function(){\r\n      window.scrollTo(0, 0);\r\n    }, 100)\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-basic-academy-page\">\r\n      <div className={`row`}>\r\n        <div className=\"col-md-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title hidden t-show-mobile\">\r\n                {currentPageTitle}\r\n              </h4>\r\n              <div className=\"card-content\">\r\n                <div className=\"block padding-10 pb-4\">\r\n                  <div className=\"parse-title\">\r\n                    <span className=\"parse-img-responsive text-primary\">\r\n                      <i className=\"fa fa-angle-double-left\"></i>\r\n                    </span>{\" \"}\r\n                    &nbsp;{\" \"}\r\n                    <span className=\"\">\r\n                      <Link to={ROUTE_USER_ACADEMY} className=\"text-primary\">\r\n                        Back to main menu\r\n                      </Link>\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n\r\n                <div\r\n                  className={`block text-center padding-top-20 ${\r\n                    is_empty(currentLesson) ? \"hidden\" : \"\"\r\n                  }`}\r\n                >\r\n                  <div className=\"block\">\r\n                    <iframe\r\n                      src={get_data_value(currentLesson, \"url\")}\r\n                      width=\"640\"\r\n                      height=\"360\"\r\n                      frameBorder=\"0\"\r\n                      allow=\"autoplay; fullscreen\"\r\n                      allowFullScreen\r\n                      title=\"Video\"\r\n                    ></iframe>\r\n                    <h4 style={{ marginTop: \"0.5rem\", marginBottom: \"1rem\" }}>\r\n                      <b>\r\n                        {get_data_value(currentLesson, \"subtitle\")}: &nbsp;\r\n                        {get_data_value(currentLesson, \"subject\")}\r\n                      </b>\r\n                    </h4>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"parse-list\">\r\n                  {!is_empty(pageData[\"academy_data\"]) &&\r\n                    Object.keys(pageData[\"academy_data\"]).map(\r\n                      (key_name, list_index) => (\r\n                        <div className=\"parse-box\" key={list_index}>\r\n                          <div className=\"parse-title\">\r\n                            <span className=\"parse-img-responsive\">\r\n                              <i className=\"fa fa-chevron-circle-up\"></i>\r\n                            </span>{\" \"}\r\n                            &nbsp;{\" \"}\r\n                            <span className=\"\">\r\n                              {pageData[\"academy_data\"][key_name][0][\"title\"]}:\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"item-list-box\">\r\n                            {pageData[\"academy_data\"][key_name].map(\r\n                              (item, index) => (\r\n                                <div\r\n                                  className={`parse-item ${get_data_value(currentLesson, \"id\") === item[\"id\"] ? \"active\" : \"\"}`}\r\n                                  key={item[\"id\"]}\r\n                                >\r\n                                  <b>{item[\"subtitle\"]}:</b>{\" \"}\r\n                                  <button\r\n                                    type=\"button\"\r\n                                    className={`a-btn text-primary`}\r\n                                    onClick={(e) => {\r\n                                      onClickLesson(item);\r\n                                    }}\r\n                                  >\r\n                                    {item[\"subject\"]}\r\n                                  </button>\r\n                                </div>\r\n                              )\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      )\r\n                    )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserBasicAcademyPage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserAcademyPage\\inc\\UserAdvancedAcademyPage.js",["2255","2256","2257","2258","2259","2260"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport { ROUTE_USER_ACADEMY } from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\n\r\nconst currentPageTitle = \"Higher Level Academy\";\r\nconst UserAdvancedAcademyPage = () => {\r\n  const dispatch = useDispatch();\r\n  const initPage = () => {\r\n    dispatch(\r\n      UpdateAppData({\r\n        currentPageTitle: currentPageTitle,\r\n        current_route: ROUTE_USER_ACADEMY,\r\n        m_user_menu_collapsed: true,\r\n      })\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    initPage();\r\n  });\r\n\r\n  const [visibleModal, setVisibleModal] = useState(false);\r\n\r\n  const showConfirm = () => {\r\n    setVisibleModal(true);\r\n  };\r\n\r\n  const [hasActiveLicense, setHasActiveLicense] = useState(false);\r\n\r\n  return (\r\n    <div className=\"user-advanced-academy-page\">\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserAdvancedAcademyPage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserVpsPage\\inc\\ConfirmPasswordModal.js",["2261","2262","2263","2264","2265"],"import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { get_data_value, isEmpty, jQuery, showToast } from \"utils/GlobalFunctions\";\r\nimport { APP_NAME } from \"config/CONSTANTS\";\r\n\r\nfunction ConfirmPasswordModal(props) {\r\n  const { isVisible, setVisibleModal, submitModalData, modalClass, modalTitle } = props;\r\n  useEffect(() => {\r\n    if (isVisible !== undefined) {\r\n      setShow(isVisible);\r\n    }\r\n  }, [isVisible]);\r\n  const [show, setShow] = useState(false);\r\n  const defaultModalData = {user_password:\"\"};\r\n  const [modalData, setModalData] = useState(defaultModalData);\r\n  const [errorField, setErrorField] = useState([]);\r\n  \r\n  const validateFields = () => {\r\n    var errorList = Array();\r\n    errorList = isEmpty(modalData, \"user_password\", errorList);\r\n    setErrorField([...errorList]);\r\n    return errorList.length > 0 ? false : true;\r\n  };\r\n\r\n  const onChangeFormField = (e, field_name) => {\r\n    if (errorField.includes(field_name)) {\r\n      let errors = errorField.filter((x) => x != field_name);\r\n      setErrorField([...errors]);\r\n    }\r\n    modalData[field_name] = e.target.value;\r\n    setModalData({ ...modalData });\r\n  };\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    setVisibleModal(false);\r\n  };\r\n\r\n  const submitPassword = () => {\r\n    let is_valid = validateFields();\r\n    console.log(\"is valid\", is_valid);\r\n    if (is_valid) {\r\n      submitModalData(modalData);\r\n    } else {\r\n      showToast(\"Password is empty\", \"error\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        centered\r\n        dialogClassName={modalClass}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{modalTitle}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"block margin-bottom-20 text-center\">\r\n            <div className=\"modal-box\">\r\n              <div id=\"dialog\">\r\n                <div className=\"text-normal text-left\">\r\n                  <h4 className=\"text-normal\">Enter your password</h4>\r\n                  <p className=\"text-normal\">\r\n                    Enter your HLX Password here to reveal your VPS Password for\r\n                    Login:\r\n                  </p>\r\n                  <div>\r\n                    <input\r\n                      type=\"password\"\r\n                      className={`form-control input-hlx-password ${\r\n                        errorField.includes(\"user_password\") ? \"is-invalid\" : \"\"\r\n                      }`}\r\n                      placeholder=\"Password\"\r\n                      value={get_data_value(modalData, \"user_password\")}\r\n                      onChange={(e) => {\r\n                        onChangeFormField(e, \"user_password\");\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-md btn-close-dlg btn-light margin-right-10\"\r\n            data-dismiss=\"modal\"\r\n            onClick={handleClose}\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-md btn-submit-hlx-password btn-primary\"\r\n            onClick={submitPassword}\r\n          >\r\n            Submit\r\n          </button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ConfirmPasswordModal;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\userMarketingService.js",["2266","2267"],"import { APP_NAME, SYSTEM_ERROR } from \"config/CONSTANTS\";\r\nimport { axiosGet, axiosPost } from \"./ajaxServices\";\r\nimport {urlUserGetMarketingPageDetail, urlUserGetMarketingRankDetail} from \"./CONSTANTS\";\r\n\r\nexport const apiGetUserMarketingPageDetail = () => {\r\n  const url = urlUserGetMarketingPageDetail;\r\n  return new Promise((resolve, reject) => {\r\n    axiosGet(url, {}, SYSTEM_ERROR)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n};\r\n\r\nexport const apiGetUserMarketingRankDetail = (user_id) => {\r\n  const url = urlUserGetMarketingRankDetail;\r\n  return new Promise((resolve, reject) => {\r\n    axiosGet(url, {user_id:user_id}, SYSTEM_ERROR)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n};","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserMarketingPage\\inc\\UserActiveListPage.js",["2268","2269","2270","2271","2272","2273","2274","2275","2276","2277","2278","2279","2280","2281","2282","2283","2284","2285","2286","2287"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport { RULE_PERCENT } from \"config/CONSTANTS\";\r\nimport {\r\n  ROUTE_USER_ACADEMY,\r\n  ROUTE_USER_MARKETING,\r\n  ROUTE_USER_TICKET_DETAIL,\r\n} from \"navigation/CONSTANTS\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect, useCallback, useMemo } from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport {\r\n  apiGetUserMarketingPageDetail,\r\n  apiGetUserMarketingRankDetail,\r\n} from \"services/userMarketingService\";\r\nimport Select from \"react-select\";\r\n// import \"react-select-2/dist/css/react-select-2.css\";\r\n\r\nimport {\r\n  empty,\r\n  get_data_value,\r\n  intval,\r\n  is_empty,\r\n  showToast,\r\n  show_loading,\r\n} from \"utils/GlobalFunctions\";\r\nimport UserRankDetailModal from \"./UserRankDetailModal\";\r\nimport { urlUserGetTreeUserList } from \"services/CONSTANTS\";\r\n\r\nconst currentPageTitle = \"Affiliate Only Section\";\r\nconst UserActiveListPage = (props) => {\r\n  const { pageData } = props;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    updateUserSelectList();\r\n  }, [pageData]);\r\n  var userList = [];\r\n  var defaultUserList = [{ value: 0, label: \"All\" }];\r\n  const [currentSelectValue, setCurrentSelectValue] = useState(defaultUserList[0]);\r\n\r\n  const updateUserSelectList = () => {\r\n    userList = defaultUserList;\r\n    for (var key in pageData[\"all_users_in_tree\"]) {\r\n      var item = pageData[\"all_users_in_tree\"][key];\r\n      var option_item = { value: item[\"id\"], label: item[\"user_name\"] };\r\n      userList.push(option_item);\r\n    }\r\n    console.log('userList', userList)\r\n    setSelectUserList(userList);\r\n  };\r\n  const [selectUserList, setSelectUserList] = useState(userList);\r\n  const [selectedUserID, setSelectedUserID] = useState(0);\r\n\r\n  function onUserChange(val) {\r\n    console.log(\"Selected: \", val);\r\n    setCurrentSelectValue(val)\r\n    let newSearchVal = get_data_value(val, \"value\")\r\n    let newSearchText = get_data_value(val, \"label\")\r\n    if(newSearchVal === 0) {\r\n      newSearchText = \"\"\r\n    }\r\n    setFilterText(newSearchText)\r\n    \r\n    setUserType(\"\")\r\n    fetchDataList(currentPage, perPage, newSearchText, currentSortField, currentSortDirection, \"\");\r\n  }\r\n\r\n  const defaultUserRankDetail = {\r\n    user: {},\r\n    all_users_in_tree: [],\r\n    missing_rank_list: {},\r\n    missing_rank_message: \"\",\r\n    next_rank_info: {},\r\n    rank_info: {},\r\n    rank_rule_list: {},\r\n    tree_info: [],\r\n    user_base_tree: [],\r\n    destination_personal_referrals: 0,\r\n    personal_referrals: 0,\r\n    error_msg_arr: [],\r\n    error_msg: \"\",\r\n  };\r\n  const [selectedUserItem, setSelectedUserItem] = useState({});\r\n  const [selectedUserRankDetail, setSelectedUserRankDetail] = useState(\r\n    defaultUserRankDetail\r\n  );\r\n  const [showRankModal, setShowRankModal] = useState(false);\r\n\r\n  const onClickUserRank = (item) => {\r\n    console.log(\"item\", item);\r\n\r\n    setSelectedUserItem(item);\r\n    var user_id = item[\"id\"];\r\n    show_loading(true);\r\n    apiGetUserMarketingRankDetail(user_id)\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setSelectedUserRankDetail(api_res.data);\r\n          setShowRankModal(true);\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  const [data, setData] = useState([]);\r\n  const [totalRows, setTotalRows] = useState(0);\r\n  const [perPage, setPerPage] = useState(5);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  // const [deleted, setDeleted] = useState([]);\r\n  const [currentSortField, setCurrentSortField] = useState(\"add_timestamp\");\r\n  const [currentSortDirection, setCurrentSortDirection] = useState(\"asc\");\r\n  const [userType, setUserType] = useState(\"\");\r\n\r\n  const [filterText, setFilterText] = useState(\"\");\r\n\r\n  const fetchDataList = async (\r\n    page,\r\n    size = perPage,\r\n    searchText = filterText,\r\n    sortColumn = currentSortField,\r\n    sortDirection = currentSortDirection,\r\n    userKind = userType\r\n  ) => {\r\n    show_loading(true);\r\n\r\n    const response = await axios.get(\r\n      `${urlUserGetTreeUserList}?page=${page}&per_page=${size}&keyword1=${searchText}&sort_column=${sortColumn}&sort_direction=${sortDirection}&user_kind=${userKind}`\r\n    );\r\n\r\n    setData(response.data.data);\r\n    setTotalRows(response.data.total);\r\n    show_loading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(!empty(pageData['user'])){\r\n      fetchDataList(1);\r\n    }\r\n  }, [pageData]);\r\n\r\n  //const history = useHistory();\r\n  const removeItem = (array, item) => {\r\n    const newArray = array.slice();\r\n    newArray.splice(\r\n      newArray.findIndex((a) => a === item),\r\n      1\r\n    );\r\n\r\n    return newArray;\r\n  };\r\n\r\n  const handleDelete = useCallback(\r\n    (row) => async () => {},\r\n    [currentPage, perPage, totalRows]\r\n  );\r\n  const handlePageChange = (page) => {\r\n    fetchDataList(page);\r\n    setCurrentPage(page);\r\n  };\r\n  const handlePerRowsChange = async (newPerPage, page) => {\r\n    fetchDataList(page, newPerPage);\r\n    setPerPage(newPerPage);\r\n  };\r\n  const handleSearchChange = (newSearchText) => {\r\n    fetchDataList(currentPage, perPage, newSearchText);\r\n    setFilterText(newSearchText);\r\n  };\r\n  const onSort = (column, sortDirection, event) => {\r\n    console.log(\r\n      \"--------column, sortDirection, event--------\",\r\n      column,\r\n      sortDirection,\r\n      event\r\n    );\r\n    let sortColumn = column[\"selector\"];\r\n    setCurrentSortField(sortColumn);\r\n    setCurrentSortDirection(sortDirection);\r\n    fetchDataList(currentPage, perPage, filterText, sortColumn, sortDirection);\r\n  };\r\n\r\n  const handleChangeUserKind = (userKind) => {\r\n    setUserType(userKind);\r\n    setFilterText(\"\")\r\n    setCurrentSelectValue(defaultUserList[0])\r\n    fetchDataList(\r\n      currentPage,\r\n      perPage,\r\n      \"\",\r\n      currentSortField,\r\n      currentSortDirection,\r\n      userKind\r\n    );\r\n  };\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        name: \"USERNAME\",\r\n        selector: \"user_name\",\r\n        sortable: false,\r\n      },\r\n      {\r\n        name: \"STATUS\",\r\n        selector: \"status\",\r\n        sortable: false,\r\n        cell: (row) => (\r\n          <span\r\n            className={`text-bold ${row[\"status_class\"]}`}\r\n            data-user-type={row[\"user_type\"]}\r\n          >\r\n            {row[\"status\"]}\r\n          </span>\r\n        ),\r\n      },\r\n      {\r\n        name: \"LANE\",\r\n        selector: \"lane_number\",\r\n        sortable: false,\r\n      },\r\n      {\r\n        name: \"RANK\",\r\n        selector: \"user_name\",\r\n        sortable: false,\r\n        cell: (row) => (\r\n          <>\r\n            <button\r\n              className={`a-btn btn-view-user-rank-info btn-user-rank1 badge badge-sm badge-success badge-rounded text-center ${\r\n                intval(row[\"user_type\"]) === 1 ? \"\" : \"hidden\"\r\n              }`}\r\n              style={{\r\n                paddingLeft: \"1rem\",\r\n                paddingRight: \"1rem\",\r\n              }}\r\n              onClick={(e) => {\r\n                onClickUserRank(row);\r\n              }}\r\n            >\r\n              {get_data_value(row[\"rank_info\"], \"rank_name\", \"NO RANK\")}\r\n            </button>\r\n            <span\r\n              className={`text-bold text-success ${\r\n                intval(row[\"user_type\"]) === 1 ? \"hidden\" : \"\"\r\n              }`}\r\n            >\r\n              NONE\r\n            </span>\r\n          </>\r\n        ),\r\n      },\r\n      {\r\n        name: \"GO TO\",\r\n        selector: \"id\",\r\n        sortable: false,\r\n        cell: (row) => (\r\n          <Link\r\n            className=\"a-btn badge badge-sm badge-success badge-rounded text-center\"\r\n            to={`/user/team/detail/${row[\"id\"]}`}\r\n            style={{ minWidth: \"50px\" }}\r\n          >\r\n            GO\r\n          </Link>\r\n        ),\r\n      },\r\n    ],\r\n    [handleDelete]\r\n  );\r\n  const [resetPaginationToggle, setResetPaginationToggle] = useState(false);\r\n  // const filteredItems = data.filter(\r\n  //   (item) =>\r\n  //     JSON.stringify(item).toLowerCase().indexOf(filterText.toLowerCase()) !==\r\n  //     -1\r\n  // );\r\n\r\n  const colorStyles = {\r\n    control: (styles) => ({\r\n      ...styles,\r\n      backgroundColor: \"white\",\r\n      color: \"black\",\r\n    }),\r\n    option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n      return {\r\n        ...styles,\r\n        backgroundColor: \"white\",\r\n        color: \"black\",\r\n        cursor: isDisabled ? \"not-allowed\" : \"default\",\r\n\r\n        \":active\": {\r\n          ...styles[\":active\"],\r\n          backgroundColor: \"#f16857\",\r\n          color: \"white\",\r\n        },\r\n        \":hover\": {\r\n          ...styles[\":active\"],\r\n          backgroundColor: \"#f16857\",\r\n          color: \"white\",\r\n        },\r\n      };\r\n    },\r\n    input: (styles) => ({\r\n      ...styles,\r\n      backgroundColor: \"white\",\r\n      color: \"black\",\r\n    }),\r\n    placeholder: (styles) => ({\r\n      ...styles,\r\n      backgroundColor: \"white\",\r\n      color: \"black\",\r\n    }),\r\n  };\r\n\r\n  const subHeaderComponent = useMemo(() => {\r\n    const handleClear = () => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        handleSearchChange(\"\");\r\n      }\r\n    };\r\n\r\n    const onChangeUserType = (type) => {\r\n      handleChangeUserKind(type);\r\n    };\r\n\r\n    return (\r\n      <div className=\"datatable-subheader\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <form className=\"navbar-form margin-0\" role=\"search\">\r\n              <div\r\n                className=\"form-group form-search is-empty\"\r\n                style={{\r\n                  position: \"relative\",\r\n                  maxWidth: \"360px\",\r\n                  paddingRight: \"50px\",\r\n                }}\r\n              >\r\n                <Select\r\n                  className=\"select2-box basic-single\"\r\n                  classNamePrefix=\"select\"\r\n                  value={currentSelectValue}\r\n                  isDisabled={false}\r\n                  isLoading={false}\r\n                  isClearable={true}\r\n                  isSearchable={true}\r\n                  name=\"color\"\r\n                  options={selectUserList}\r\n                  styles={colorStyles}\r\n                  onChange={onUserChange}\r\n                />\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div className=\"col-md-8\">\r\n            <div className=\"btn-toolbar\">\r\n              <div className=\"btn-group\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-primary\"\r\n                  onClick={(e) => onChangeUserType(\"\")}\r\n                >\r\n                  All\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-danger\"\r\n                  onClick={(e) => onChangeUserType(\"affliate\")}\r\n                >\r\n                  Affiliate\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-success\"\r\n                  onClick={(e) => onChangeUserType(\"active_customer\")}\r\n                >\r\n                  Active Customer\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-info\"\r\n                  onClick={(e) => onChangeUserType(\"both\")}\r\n                >\r\n                  Both\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-secondary\"\r\n                  onClick={(e) => onChangeUserType(\"personal_referral\")}\r\n                >\r\n                  My Personals\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-warning\"\r\n                  onClick={(e) => onChangeUserType(\"free_tier\")}\r\n                >\r\n                  Free Tier\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-light\"\r\n                  onClick={(e) => onChangeUserType(\"inactive_customer\")}\r\n                >\r\n                  Inactive Customer\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className=\"datatable-filter-box hidden\">\r\n              <input\r\n                id=\"search\"\r\n                type=\"text\"\r\n                placeholder=\"Search...\"\r\n                value={filterText}\r\n                className=\"form-control input-search\"\r\n                onChange={(e) => handleSearchChange(e.target.value)}\r\n              />\r\n              <button className=\"a-btn btn-clear-search\" onClick={handleClear}>\r\n                x\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }, [filterText, resetPaginationToggle, selectUserList]);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <div className=\"card-content affiliate-only-screen\">\r\n              <div className=\"block padding-bottom-5 padding-top-5\">\r\n                <h4 className=\"text-normal mb-3\">Active users in your tree:</h4>\r\n              </div>\r\n              <div className=\"divider-1 mb-4\"></div>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                  <div className=\"datatable-wrapper\">\r\n                    <DataTable\r\n                      theme=\"dark\"\r\n                      noHeader={true}\r\n                      columns={columns}\r\n                      data={data}\r\n                      defaultSortField={currentSortField}\r\n                      defaultSortAsc={currentSortDirection === \"asc\"}\r\n                      onSort={onSort}\r\n                      sortServer={true}\r\n                      subHeader\r\n                      subHeaderComponent={subHeaderComponent}\r\n                      pagination\r\n                      paginationServer\r\n                      paginationTotalRows={totalRows}\r\n                      paginationDefaultPage={currentPage}\r\n                      onChangeRowsPerPage={handlePerRowsChange}\r\n                      onChangePage={handlePageChange}\r\n                      paginationPerPage={perPage}\r\n                      paginationRowsPerPageOptions={[5, 10, 25, 50, 100]}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <UserRankDetailModal\r\n        modalTitle={get_data_value(selectedUserItem, \"user_name\")}\r\n        isVisible={showRankModal}\r\n        setVisibleModal={setShowRankModal}\r\n        modalInitialData={selectedUserRankDetail}\r\n        submitModalData=\"\"\r\n        modalClass=\"user-page marketing-user-rank-modal\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserActiveListPage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserMarketingPage\\inc\\UserRankDetailModal.js",["2288","2289","2290","2291","2292","2293","2294","2295"],"import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  empty,\r\n  get_data_value,\r\n  intval,\r\n  isEmpty,\r\n  jQuery,\r\n  showToast,\r\n} from \"utils/GlobalFunctions\";\r\nimport { APP_NAME, RULE_PERCENT } from \"config/CONSTANTS\";\r\n\r\nfunction UserRankDetailModal(props) {\r\n  const {\r\n    isVisible,\r\n    setVisibleModal,\r\n    submitModalData,\r\n    modalInitialData,\r\n    modalClass,\r\n    modalTitle,\r\n  } = props;\r\n  useEffect(() => {\r\n    if (isVisible !== undefined) {\r\n      setShow(isVisible);\r\n      setPageData(modalInitialData);\r\n    }\r\n  }, [isVisible, modalInitialData]);\r\n  const [show, setShow] = useState(false);\r\n  const defaultModalData = modalInitialData;\r\n  const [pageData, setPageData] = useState(defaultModalData);\r\n  const [errorField, setErrorField] = useState([]);\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    setVisibleModal(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        centered\r\n        dialogClassName={modalClass}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{modalTitle}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"block text-center\">\r\n            <div className=\"modal-box\">\r\n              <div id=\"dialog\">\r\n                <div className=\"text-normal text-left\">\r\n                  <div className=\"card text-left\">\r\n                    <div className=\"card-body\">\r\n                      <h4 className=\"card-title t-show-mobile\"> </h4>\r\n                      <div className=\"card-content affiliate-only-screen\">\r\n                        <div className=\"block padding-bottom-5 padding-top-5\">\r\n                          <h4 className=\"text-normal mb-3\">\r\n                            User's current rank:{\" \"}\r\n                            <span className=\"text-success\">\r\n                              {get_data_value(\r\n                                pageData[\"rank_info\"],\r\n                                \"rank_name\",\r\n                                \" \"\r\n                              )}\r\n                            </span>\r\n                          </h4>\r\n                          <h4 className=\"text-normal mb-3\">\r\n                            User's next rank:{\" \"}\r\n                            <span className=\"text-warning\">\r\n                              {get_data_value(\r\n                                pageData[\"next_rank_info\"],\r\n                                \"rank_name\",\r\n                                \" \"\r\n                              )}\r\n                            </span>\r\n                          </h4>\r\n                        </div>\r\n                        <div className=\"divider-1 mb-4\"></div>\r\n                        <h4 className=\"text-normal mb-4\">Requirements:</h4>\r\n                        <h4 className=\"text-normal personal-referrals mb-4\">\r\n                          Personal Referrals:{\" \"}\r\n                          <span\r\n                            className={`current-value ${\r\n                              empty(pageData[\"error_msg\"])\r\n                                ? \"text-success\"\r\n                                : \"text-danger\"\r\n                            }`}\r\n                          >\r\n                            {pageData[\"personal_referrals\"]}\r\n                          </span>\r\n                          <span className=\"text-success\"> / </span>\r\n                          <span className=\"destination-value text-success\">\r\n                            {pageData[\"destination_personal_referrals\"]}\r\n                          </span>\r\n                          <span\r\n                            className={`pl-3 text-danger ${\r\n                              empty(pageData[\"error_msg\"]) ? \"hidden\" : \"\"\r\n                            }`}\r\n                          >\r\n                            {pageData[\"error_msg\"]}\r\n                          </span>\r\n                          <span className=\"pl-3\">\r\n                            <i\r\n                              className={`text-bold ${\r\n                                empty(pageData[\"error_msg\"])\r\n                                  ? \"text-success\"\r\n                                  : \"text-danger\"\r\n                              } ${\r\n                                empty(pageData[\"error_msg\"])\r\n                                  ? \"ti-check\"\r\n                                  : \"ti-close\"\r\n                              }`}\r\n                            ></i>\r\n                          </span>\r\n                        </h4>\r\n\r\n                        <h4\r\n                          className={`text-normal personal-referrals mb-4 ${\r\n                            intval(get_data_value(pageData[\"next_rank_info\"], \"rank_no\")) < 8\r\n                              ? \"\"\r\n                              : \"hidden\"\r\n                          }`}\r\n                        >\r\n                          Additional Requirements:{\" \"}\r\n                          <span className=\"destination-value text-success\">\r\n                            {get_data_value(\r\n                              pageData[\"next_rank_info\"],\r\n                              \"description\"\r\n                            )}\r\n                          </span>\r\n                          <span\r\n                            className={`pl-3 text-danger ${\r\n                              empty(pageData[\"missing_rank_message\"])\r\n                                ? \"hidden\"\r\n                                : \"\"\r\n                            }`}\r\n                          >{`(You need ${pageData[\"missing_rank_message\"]})`}</span>\r\n                          <span className=\"pl-3\">\r\n                            <i\r\n                              className={`text-bold ${\r\n                                empty(pageData[\"missing_rank_message\"])\r\n                                  ? \"text-success\"\r\n                                  : \"text-danger\"\r\n                              } ${\r\n                                empty(pageData[\"missing_rank_message\"])\r\n                                  ? \"ti-check\"\r\n                                  : \"ti-close\"\r\n                              }`}\r\n                            ></i>\r\n                          </span>\r\n                        </h4>\r\n                        <h4\r\n                          className={`text-normal personal-referrals mb-4 ${\r\n                            intval(get_data_value(pageData[\"next_rank_info\"], \"rank_no\")) < 8\r\n                              ? \"hidden\"\r\n                              : \"\"\r\n                          }`}\r\n                        >\r\n                          Additional Requirements:{\" \"}\r\n                          <span className=\"destination-value text-success\">\r\n                            None\r\n                          </span>\r\n                        </h4>\r\n\r\n                        <div className=\"lane-box\">\r\n                          {pageData[\"tree_info\"].map((item, index) => (\r\n                            <div className=\"row\" key={index}>\r\n                              <div className=\"col-md-3\">\r\n                                <h4 className=\"text-normal lane-max mb-3\">\r\n                                  Lane{index + 1}:{\" \"}\r\n                                  <span\r\n                                    className={`current-value ${\r\n                                      intval(\r\n                                        pageData[\"tree_info\"][index][\r\n                                          \"active_member_cnt\"\r\n                                        ]\r\n                                      ) >=\r\n                                      pageData[\"next_rank_info\"][\"line_max\"][\r\n                                        index\r\n                                      ]\r\n                                        ? \"text-success\"\r\n                                        : \"text-danger\"\r\n                                    }`}\r\n                                  >\r\n                                    {\r\n                                      pageData[\"tree_info\"][index][\r\n                                        \"active_member_cnt\"\r\n                                      ]\r\n                                    }\r\n                                  </span>\r\n                                  <span className=\"text-success\"> / </span>\r\n                                  <span className=\"destination-value text-success\">\r\n                                    {\r\n                                      pageData[\"next_rank_info\"][\"line_max\"][\r\n                                        index\r\n                                      ]\r\n                                    }\r\n                                  </span>\r\n                                  <span className=\"pl-3\">\r\n                                    <i\r\n                                      className={`text-bold ${\r\n                                        intval(\r\n                                          pageData[\"tree_info\"][index][\r\n                                            \"active_member_cnt\"\r\n                                          ]\r\n                                        ) >=\r\n                                        pageData[\"next_rank_info\"][\"line_max\"][\r\n                                          index\r\n                                        ]\r\n                                          ? \"text-success ti-check\"\r\n                                          : \"text-danger ti-close\"\r\n                                      }`}\r\n                                    ></i>\r\n                                  </span>\r\n                                </h4>\r\n                              </div>\r\n                              <div className=\"col-md-9\">\r\n                                <h4 className=\"text-normal lane-qualifying mb-3\">\r\n                                  Qualifying:{\" \"}\r\n                                  <span\r\n                                    className={`current-value ${\r\n                                      item[\"percent\"] >= 100 * RULE_PERCENT\r\n                                        ? \"text-success\"\r\n                                        : \"text-danger\"\r\n                                    }`}\r\n                                  >\r\n                                    {item[\"percent\"]}%\r\n                                  </span>\r\n                                  <span className=\"text-success\"> / </span>\r\n                                  <span className=\"destination-value text-success\">\r\n                                    {RULE_PERCENT * 100}%\r\n                                  </span>\r\n                                  <span className=\"pl-3\">\r\n                                    <i\r\n                                      className={`text-bold ${\r\n                                        item[\"percent\"] >= 100 * RULE_PERCENT\r\n                                          ? \"text-success ti-check\"\r\n                                          : \"text-danger ti-close\"\r\n                                      }`}\r\n                                    ></i>\r\n                                  </span>\r\n                                </h4>\r\n                              </div>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-md btn-close-dlg btn-light\"\r\n            data-dismiss=\"modal\"\r\n            onClick={handleClose}\r\n          >\r\n            Close\r\n          </button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserRankDetailModal;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\userWalletService.js",["2296"],"import { APP_NAME, SYSTEM_ERROR } from \"config/CONSTANTS\";\r\nimport { axiosGet, axiosPost } from \"./ajaxServices\";\r\nimport {urlUserDeletePayoutRow, urlUserDeleteWithdrawalRow, urlUserGetWalletPageDetail, urlUserRequestWithdrawal} from \"./CONSTANTS\";\r\n\r\nexport const apiGetUserWalletPageDetail = () => {\r\n  const url = urlUserGetWalletPageDetail;\r\n  return new Promise((resolve, reject) => {\r\n    axiosGet(url, {}, SYSTEM_ERROR)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n};\r\n \r\nexport const apiUserRequestWithdrawal = (params) => {\r\n  const url = urlUserRequestWithdrawal;\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  var formData = new FormData();\r\n  formData.append(\"payout_amount\", params.payout_amount); \r\n  formData.append(\"paypal_address\", params.paypal_address); \r\n  return new Promise((resolve, reject) => {\r\n    axiosPost(url, formData, config)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n};\r\n\r\nexport const apiDeleteUserPayoutRow = (params) => {\r\n  const url = urlUserDeletePayoutRow;\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  var formData = new FormData();\r\n  formData.append(\"id\", params.id); \r\n  return new Promise((resolve, reject) => {\r\n    axiosPost(url, formData, config)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n};\r\n\r\nexport const apiDeleteUserWithdrawalRow = (params) => {\r\n  const url = urlUserDeleteWithdrawalRow;\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  var formData = new FormData();\r\n  formData.append(\"id\", params.id); \r\n  return new Promise((resolve, reject) => {\r\n    axiosPost(url, formData, config)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n};\r\n\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserWalletPage\\inc\\WithdrawalRequestModal.js",["2297","2298","2299","2300","2301","2302","2303","2304"],"import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  empty,\r\n  get_data_value,\r\n  intval,\r\n  isEmpty,\r\n  jQuery,\r\n  showToast,\r\n} from \"utils/GlobalFunctions\";\r\nimport { APP_NAME } from \"config/CONSTANTS\";\r\n\r\nfunction WithdrawalRequestModal(props) {\r\n  const {\r\n    isVisible,\r\n    setVisibleModal,\r\n    pageData,\r\n    submitModalData,\r\n    modalClass,\r\n    modalTitle,\r\n  } = props;\r\n  useEffect(() => {\r\n    if (isVisible !== undefined) {\r\n      setShow(isVisible);\r\n      setModalPageData(pageData);\r\n      setModalData({...defaultModalData, payout_amount:get_data_value(pageData['user'],'balance')})\r\n    }    \r\n  }, [isVisible, pageData]);\r\n  const [show, setShow] = useState(false);\r\n  const defaultModalData = {\r\n    payout_amount: \"\",\r\n    paypal_address: \"\",\r\n    paypal_address_c: \"\",\r\n  };\r\n  const [modalPageData, setModalPageData] = useState({});\r\n  const [modalData, setModalData] = useState(defaultModalData);\r\n  const [errorField, setErrorField] = useState([]);\r\n\r\n  const validateFields = () => {\r\n    var errorList = Array();\r\n    errorList = isEmpty(modalData, \"payout_amount\", errorList);\r\n    errorList = isEmpty(modalData, \"paypal_address\", errorList);\r\n    errorList = isEmpty(modalData, \"paypal_address_c\", errorList);\r\n    setErrorField([...errorList]);\r\n    return errorList.length > 0 ? false : true;\r\n  };\r\n\r\n  const onChangeFormField = (e, field_name) => {\r\n    if (errorField.includes(field_name)) {\r\n      let errors = errorField.filter((x) => x != field_name);\r\n      setErrorField([...errors]);\r\n    }\r\n    modalData[field_name] = e.target.value;\r\n    setModalData({ ...modalData });\r\n  };\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    setVisibleModal(false);\r\n  };\r\n\r\n  const onClickWithdrawalRequest = () => {\r\n    let is_valid = validateFields();\r\n    console.log(\"is valid\", is_valid);\r\n    if (is_valid) {\r\n      if(parseFloat(modalData['payout_amount']) < 50){\r\n        setErrorField([\"payout_amount\"]);\r\n        showToast(\"Minimum withdrawal amount is $50.\", \"error\")\r\n        return false;\r\n      }\r\n      if(parseFloat(modalData['payout_amount']) > parseFloat(get_data_value(modalPageData['user'], 'balance'))){\r\n        setErrorField([\"payout_amount\"]);\r\n        showToast(\"The requested amount is more than your available funds.\", \"error\")\r\n        return false;\r\n      }\r\n      if(modalData['paypal_address'] !== modalData['paypal_address_c']){\r\n        setErrorField([\"paypal_address\", \"paypal_address_c\"]);\r\n        showToast(\"Incorrect Paypal address.\", \"error\")\r\n        return false\r\n      }\r\n      submitModalData(modalData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        centered\r\n        dialogClassName={modalClass}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{modalTitle}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"block text-center\">\r\n            <div className=\"modal-box\">\r\n              <div id=\"dialog\">\r\n                <div className=\"text-normal text-left\">\r\n                  <div className=\"payout-dlg text-left\">\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"\">Withdrawal Amount</label>\r\n                      <input\r\n                        type=\"number\"\r\n                        name=\"payout_amount\"\r\n                        className={`form-control payout-amount ${\r\n                          errorField.includes(\"payout_amount\")\r\n                            ? \"is-invalid\"\r\n                            : \"\"\r\n                        }`}\r\n                        min=\"0\"\r\n                        step=\"0.01\"\r\n                        defaultValue={get_data_value(modalPageData['user'], \"balance\")}\r\n                        onChange={(e) => {\r\n                          onChangeFormField(e, \"payout_amount\");\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"\">Your PayPal Email</label>\r\n                      <input\r\n                        type=\"search\"\r\n                        autoComplete=\"off\"\r\n                        placeholder=\"Your paypal email\"\r\n                        name=\"paypal_address\"\r\n                        className={`form-control paypal_address ${\r\n                          errorField.includes(\"paypal_address\")\r\n                            ? \"is-invalid\"\r\n                            : \"\"\r\n                        }`}\r\n                        onChange={(e) => {\r\n                          onChangeFormField(e, \"paypal_address\");\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"\">Confirm Your PayPal Email</label>\r\n                      <input\r\n                        type=\"search\"\r\n                        autoComplete=\"off\"\r\n                        placeholder=\"Confirm your paypal email\"\r\n                        name=\"paypal_address_c\"\r\n                        className={`form-control paypal_address_c ${\r\n                          errorField.includes(\"paypal_address_c\")\r\n                            ? \"is-invalid\"\r\n                            : \"\"\r\n                        }`}\r\n                        onChange={(e) => {\r\n                          onChangeFormField(e, \"paypal_address_c\");\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className=\"alert alert-warning mb-1\" role=\"alert\">\r\n                      <div className=\"note mb-0 text-left\">\r\n                        <p style={{ color: \"#f5c672\" }}>\r\n                          Please make sure you provide us with the correct\r\n                          PayPal email address so your funds can arrive as soon\r\n                          as possible.\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-md btn-close-dlg btn-light margin-right-10\"\r\n            data-dismiss=\"modal\"\r\n            onClick={handleClose}\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-md btn-submit-hlx-withdrawal-request btn-primary\"\r\n            onClick={onClickWithdrawalRequest}\r\n          >\r\n            Submit\r\n          </button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default WithdrawalRequestModal;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserWalletPage\\inc\\UserWithdrawalListTable.js",["2305","2306","2307","2308","2309","2310","2311","2312","2313","2314","2315","2316","2317","2318","2319","2320"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport { RULE_PERCENT } from \"config/CONSTANTS\";\r\nimport { ROUTE_USER_ACADEMY, ROUTE_USER_MARKETING } from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useMemo, useState } from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport {\r\n  apiGetUserMarketingPageDetail,\r\n  apiGetUserMarketingRankDetail,\r\n} from \"services/userMarketingService\";\r\nimport {\r\n  apiDeleteUserPayoutRow,\r\n  apiDeleteUserWithdrawalRow,\r\n} from \"services/userWalletService\";\r\n\r\nimport {\r\n  empty,\r\n  get_data_value,\r\n  intval,\r\n  is_empty,\r\n  jQuery,\r\n  showToast,\r\n  show_loading,\r\n  toLocalDatetime,\r\n} from \"utils/GlobalFunctions\";\r\n\r\nconst UserWithdrawalListTable = (props) => {\r\n  const { initialTableData } = props;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    setTableData(initialTableData);\r\n  }, [initialTableData]);\r\n  //const history = useHistory();\r\n  const [tableData, setTableData] = useState(initialTableData);\r\n  const [confirmModalTitle, setConfirmModalTitle] = useState(\r\n    \"Are you sure to delete this record?\"\r\n  );\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n  const [currentRow, setCurrentRow] = useState({});\r\n\r\n  const onClickDeleteRow = (row) => {\r\n    console.log(\"row\", row);\r\n    setCurrentRow(row);\r\n    setShowConfirmModal(true);\r\n  };\r\n  const deleteRow = () => {\r\n    console.log(\"selected row\", currentRow);\r\n    show_loading(true);\r\n    apiDeleteUserWithdrawalRow(currentRow)\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setShowConfirmModal(false);\r\n          setTableData(api_res.data[\"withdraw_list\"]);\r\n          showToast(\r\n            \"Withdrawal request has been deleted successfully\",\r\n            \"success\"\r\n          );\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      name: \"ID\",\r\n      selector: \"id\",\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Amount\",\r\n      selector: \"amount\",\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status_str\",\r\n      sortable: true,\r\n      cell: (row) => (\r\n        <>\r\n          <span\r\n            className={`badge badge-sm ${\r\n              row.status === 0\r\n                ? \"badge-primary\"\r\n                : row.status === 1\r\n                ? \"badge-success\"\r\n                : row.status === 2\r\n                ? \"badge-danger\"\r\n                : row.status === 3\r\n                ? \"badge-success\"\r\n                : \"badge-warning\"\r\n            }`}\r\n          >\r\n            {row.status_str}\r\n          </span>\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      name: \"Processing Time\",\r\n      selector: \"processing_time\",\r\n      sortable: true,\r\n      cell: (row) =>\r\n        row.processing_time > 0 ? (\r\n          <>\r\n            <span className=\"hidden\">{row.processing_time}</span>\r\n            {toLocalDatetime(row.processing_time)}\r\n          </>\r\n        ) : null,\r\n    },\r\n    {\r\n      name: \"Created At\",\r\n      selector: \"add_timestamp\",\r\n      sortable: true,\r\n      hide: \"md\",\r\n      cell: (row) =>\r\n        row.add_timestamp > 0 ? (\r\n          <>\r\n            <span className=\"hidden\">{row.add_timestamp}</span>\r\n            {toLocalDatetime(row.add_timestamp)}\r\n          </>\r\n        ) : null,\r\n    },\r\n    {\r\n      name: \"Action\",\r\n      button: true,\r\n      cell: (row) => (\r\n        <>\r\n          <button\r\n            className=\"btn btn-xs btn-danger\"\r\n            onClick={() => onClickDeleteRow(row)}\r\n          >\r\n            <i className=\"fa fa-times\"></i>\r\n          </button>\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const [filterText, setFilterText] = useState(\"\");\r\n  const [resetPaginationToggle, setResetPaginationToggle] = useState(false);\r\n\r\n  const filteredItems = tableData.filter(\r\n    (item) =>\r\n      JSON.stringify(item).toLowerCase().indexOf(filterText.toLowerCase()) !==\r\n      -1\r\n  );\r\n\r\n  const subHeaderComponent = useMemo(() => {\r\n    const handleClear = () => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText(\"\");\r\n      }\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <input\r\n          id=\"search\"\r\n          type=\"text\"\r\n          placeholder=\"Search...\"\r\n          value={filterText}\r\n          className=\"form-control input-search\"\r\n          onChange={(e) => setFilterText(e.target.value)}\r\n        />\r\n        <button className=\"a-btn btn-clear-search\" onClick={handleClear}>\r\n          x\r\n        </button>\r\n      </>\r\n    );\r\n  }, [filterText, resetPaginationToggle]);\r\n\r\n  return (\r\n    <>\r\n      <DataTable\r\n        theme=\"dark\"\r\n        noHeader={true}\r\n        columns={columns}\r\n        data={filteredItems}\r\n        defaultSortField=\"id\"\r\n        defaultSortAsc={true}\r\n        pagination\r\n        subHeader\r\n        subHeaderComponent={subHeaderComponent}\r\n        paginationRowsPerPageOptions={[5,10,25,50,100]}\r\n      />\r\n      <ConfirmModal\r\n        content={confirmModalTitle}\r\n        onClickYes={deleteRow}\r\n        visibleModal={showConfirmModal}\r\n        setVisibleModal={setShowConfirmModal}\r\n        modalClass=\"user-page confirm-modal\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserWithdrawalListTable;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserWalletPage\\inc\\UserPayoutListTable.js",["2321","2322","2323","2324","2325","2326","2327","2328","2329","2330","2331","2332","2333","2334","2335"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport { RULE_PERCENT } from \"config/CONSTANTS\";\r\nimport { ROUTE_USER_ACADEMY, ROUTE_USER_MARKETING } from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useMemo, useState } from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport {\r\n  apiGetUserMarketingPageDetail,\r\n  apiGetUserMarketingRankDetail,\r\n} from \"services/userMarketingService\";\r\nimport { apiDeleteUserPayoutRow } from \"services/userWalletService\";\r\n\r\nimport {\r\n  empty,\r\n  get_data_value,\r\n  intval,\r\n  is_empty,\r\n  jQuery,\r\n  showToast,\r\n  show_loading,\r\n  toLocalDatetime,\r\n} from \"utils/GlobalFunctions\";\r\n\r\nconst UserPayoutListTable = (props) => {\r\n  const { initialTableData } = props;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    setTableData(initialTableData);\r\n  }, [initialTableData]);\r\n  //const history = useHistory();\r\n  const [tableData, setTableData] = useState(initialTableData);\r\n  const [confirmModalTitle, setConfirmModalTitle] = useState(\r\n    \"Are you sure to delete this record?\"\r\n  );\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n  const [currentRow, setCurrentRow] = useState({});\r\n\r\n  const onClickDeleteRow = (row) => {\r\n    console.log(\"row\", row);\r\n    setCurrentRow(row);\r\n    setShowConfirmModal(true);\r\n  };\r\n  const deleteRow = () => {\r\n    console.log(\"selected row\", currentRow);\r\n    show_loading(true);\r\n    apiDeleteUserPayoutRow(currentRow)\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setShowConfirmModal(false);\r\n          setTableData(api_res.data[\"payout_list\"]);\r\n          showToast(\r\n            \"Residual record has been deleted successfully.\",\r\n            \"success\"\r\n          );\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      name: \"ID\",\r\n      selector: \"id\",\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Amount\",\r\n      selector: \"paid_amount\",\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Created At\",\r\n      selector: \"created_at\",\r\n      sortable: true,\r\n      hide: \"md\",\r\n      cell: (row) =>\r\n        row.created_at ? (\r\n          <>\r\n            <span className=\"hidden\">{row.created_at}</span>\r\n            {toLocalDatetime(row.created_at)}\r\n          </>\r\n        ) : null,\r\n    },\r\n    {\r\n      name: \"Action\",\r\n      button: true,\r\n      cell: (row) => (\r\n        <>\r\n          <button\r\n            className=\"btn btn-xs btn-danger\"\r\n            onClick={() => onClickDeleteRow(row)}\r\n          >\r\n            <i className=\"fa fa-times\"></i>\r\n          </button>\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const [filterText, setFilterText] = useState(\"\");\r\n  const [resetPaginationToggle, setResetPaginationToggle] = useState(false);\r\n\r\n  const filteredItems = tableData.filter(\r\n    (item) =>\r\n      JSON.stringify(item).toLowerCase().indexOf(filterText.toLowerCase()) !==\r\n      -1\r\n  );\r\n\r\n  const subHeaderComponent = useMemo(() => {\r\n    const handleClear = () => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText(\"\");\r\n      }\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <input\r\n          id=\"search\"\r\n          type=\"text\"\r\n          placeholder=\"Search...\"\r\n          value={filterText}\r\n          className=\"form-control input-search\"\r\n          onChange={(e) => setFilterText(e.target.value)}\r\n        />\r\n        <button className=\"a-btn btn-clear-search\" onClick={handleClear}>\r\n          x\r\n        </button>\r\n      </>\r\n    );\r\n  }, [filterText, resetPaginationToggle]);\r\n\r\n  return (\r\n    <>\r\n      <DataTable\r\n        theme=\"dark\"\r\n        noHeader={true}\r\n        columns={columns}\r\n        data={filteredItems}\r\n        defaultSortField=\"id\"\r\n        defaultSortAsc={true}\r\n        pagination\r\n        subHeader\r\n        subHeaderComponent={subHeaderComponent}\r\n        paginationRowsPerPageOptions={[5, 10, 25, 50, 100]}\r\n      />\r\n      <ConfirmModal\r\n        content={confirmModalTitle}\r\n        onClickYes={deleteRow}\r\n        visibleModal={showConfirmModal}\r\n        setVisibleModal={setShowConfirmModal}\r\n        modalClass=\"user-page confirm-modal\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserPayoutListTable;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserWalletPage\\inc\\UserDataTable.js",["2336","2337","2338","2339","2340","2341","2342","2343","2344","2345","2346","2347","2348","2349","2350","2351","2352"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport { RULE_PERCENT } from \"config/CONSTANTS\";\r\nimport { ROUTE_USER_ACADEMY, ROUTE_USER_MARKETING } from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useMemo, useState } from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport {\r\n  apiGetUserMarketingPageDetail,\r\n  apiGetUserMarketingRankDetail,\r\n} from \"services/userMarketingService\";\r\n\r\nimport {\r\n  empty,\r\n  get_data_value,\r\n  intval,\r\n  is_empty,\r\n  jQuery,\r\n  showToast,\r\n  show_loading,\r\n} from \"utils/GlobalFunctions\";\r\n\r\nconst UserDataTable = (props) => {\r\n  const { pageData } = props;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {}, [pageData]);\r\n  //const history = useHistory();\r\n\r\n  const onClickRow = (row)=>{\r\n    console.log('row', row)\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Name\",\r\n      selector: \"name\",\r\n      sortable: true,\r\n      grow: 2,\r\n    },\r\n    {\r\n      name: \"Email\",\r\n      selector: \"email\",\r\n      sortable: true,\r\n      hide: \"sm\",\r\n    },\r\n    {\r\n      name: \"Website\",\r\n      selector: \"website\",\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Company\",\r\n      selector: \"company.name\",\r\n      sortable: true,\r\n      hide: \"md\",\r\n    },\r\n    {\r\n      name: \"City\",\r\n      selector: \"address.city\",\r\n      sortable: true,\r\n      hide: \"md\",\r\n    },\r\n    {\r\n      name: \"Buttons\",\r\n      button: true,\r\n      cell: (row) =>\r\n        row.showButtons ? (\r\n          <>\r\n            <button\r\n            className=\"btn btn-danger\"\r\n              onClick={() => onClickRow(row)}\r\n              style={{ marginRight: \"5px\" }}\r\n            >\r\n              <i className=\"fa fa-times\"></i>\r\n            </button>\r\n          </>\r\n        ) : null,\r\n    },\r\n  ];\r\n\r\n  const tableData = [\r\n    {\r\n      id: 1,\r\n      name: \"Leanne Graham\",\r\n      username: \"Bret\",\r\n      email: \"Sincere@april.biz\",\r\n      address: {\r\n        street: \"Kulas Light\",\r\n        suite: \"Apt. 556\",\r\n        city: \"Lebsackbury\",\r\n        zipcode: \"92998-3874\",\r\n        geo: {\r\n          lat: \"-37.3159\",\r\n          lng: \"81.1496\",\r\n        },\r\n      },\r\n      phone: \"1-770-736-8031 x56442\",\r\n      website: \"hildegard.org\",\r\n      company: {\r\n        name: \"Romaguera-Crona\",\r\n        catchPhrase: \"Multi-layered client-server neural-net\",\r\n        bs: \"harness real-time e-markets\",\r\n      },\r\n      showButtons: true,\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Ervin Howell\",\r\n      username: \"Antonette\",\r\n      email: \"Shanna@melissa.tv\",\r\n      address: {\r\n        street: \"Victor Plains\",\r\n        suite: \"Suite 879\",\r\n        city: \"Wisokyburgh\",\r\n        zipcode: \"90566-7771\",\r\n        geo: {\r\n          lat: \"-43.9509\",\r\n          lng: \"-34.4618\",\r\n        },\r\n      },\r\n      phone: \"010-692-6593 x09125\",\r\n      website: \"anastasia.net\",\r\n      company: {\r\n        name: \"Deckow-Crist\",\r\n        catchPhrase: \"Proactive didactic contingency\",\r\n        bs: \"synergize scalable supply-chains\",\r\n      },\r\n      showButtons: true,\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Clementine Bauch\",\r\n      username: \"Samantha\",\r\n      email: \"Nathan@yesenia.net\",\r\n      address: {\r\n        street: \"Douglas Extension\",\r\n        suite: \"Suite 847\",\r\n        city: \"McKenziehaven\",\r\n        zipcode: \"59590-4157\",\r\n        geo: {\r\n          lat: \"-68.6102\",\r\n          lng: \"-47.0653\",\r\n        },\r\n      },\r\n      phone: \"1-463-123-4447\",\r\n      website: \"ramiro.info\",\r\n      company: {\r\n        name: \"Romaguera-Jacobson\",\r\n        catchPhrase: \"Face to face bifurcated interface\",\r\n        bs: \"e-enable strategic applications\",\r\n      },\r\n      showButtons: false,\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Patricia Lebsack\",\r\n      username: \"Karianne\",\r\n      email: \"Julianne.OConner@kory.org\",\r\n      address: {\r\n        street: \"Hoeger Mall\",\r\n        suite: \"Apt. 692\",\r\n        city: \"South Elvis\",\r\n        zipcode: \"53919-4257\",\r\n        geo: {\r\n          lat: \"29.4572\",\r\n          lng: \"-164.2990\",\r\n        },\r\n      },\r\n      phone: \"493-170-9623 x156\",\r\n      website: \"kale.biz\",\r\n      company: {\r\n        name: \"Robel-Corkery\",\r\n        catchPhrase: \"Multi-tiered zero tolerance productivity\",\r\n        bs: \"transition cutting-edge web services\",\r\n      },\r\n      showButtons: true,\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Chelsey Dietrich\",\r\n      username: \"Kamren\",\r\n      email: \"Lucio_Hettinger@annie.ca\",\r\n      address: {\r\n        street: \"Skiles Walks\",\r\n        suite: \"Suite 351\",\r\n        city: \"Roscoeview\",\r\n        zipcode: \"33263\",\r\n        geo: {\r\n          lat: \"-31.8129\",\r\n          lng: \"62.5342\",\r\n        },\r\n      },\r\n      phone: \"(254)954-1289\",\r\n      website: \"demarco.info\",\r\n      company: {\r\n        name: \"Keebler LLC\",\r\n        catchPhrase: \"User-centric fault-tolerant solution\",\r\n        bs: \"revolutionize end-to-end systems\",\r\n      },\r\n      showButtons: false,\r\n    },\r\n    {\r\n      id: 6,\r\n      name: \"Mrs. Dennis Schulist\",\r\n      username: \"Leopoldo_Corkery\",\r\n      email: \"Karley_Dach@jasper.info\",\r\n      address: {\r\n        street: \"Norberto Crossing\",\r\n        suite: \"Apt. 950\",\r\n        city: \"South Christy\",\r\n        zipcode: \"23505-1337\",\r\n        geo: {\r\n          lat: \"-71.4197\",\r\n          lng: \"71.7478\",\r\n        },\r\n      },\r\n      phone: \"1-477-935-8478 x6430\",\r\n      website: \"ola.org\",\r\n      company: {\r\n        name: \"Considine-Lockman\",\r\n        catchPhrase: \"Synchronised bottom-line interface\",\r\n        bs: \"e-enable innovative applications\",\r\n      },\r\n      showButtons: true,\r\n    },\r\n    {\r\n      id: 7,\r\n      name: \"Kurtis Weissnat\",\r\n      username: \"Elwyn.Skiles\",\r\n      email: \"Telly.Hoeger@billy.biz\",\r\n      address: {\r\n        street: \"Rex Trail\",\r\n        suite: \"Suite 280\",\r\n        city: \"Howemouth\",\r\n        zipcode: \"58804-1099\",\r\n        geo: {\r\n          lat: \"24.8918\",\r\n          lng: \"21.8984\",\r\n        },\r\n      },\r\n      phone: \"210.067.6132\",\r\n      website: \"elvis.io\",\r\n      company: {\r\n        name: \"Johns Group\",\r\n        catchPhrase: \"Configurable multimedia task-force\",\r\n        bs: \"generate enterprise e-tailers\",\r\n      },\r\n      showButtons: true,\r\n    },\r\n    {\r\n      id: 8,\r\n      name: \"Nicholas Runolfsdottir V\",\r\n      username: \"Maxime_Nienow\",\r\n      email: \"Sherwood@rosamond.me\",\r\n      address: {\r\n        street: \"Ellsworth Summit\",\r\n        suite: \"Suite 729\",\r\n        city: \"Aliyaview\",\r\n        zipcode: \"45169\",\r\n        geo: {\r\n          lat: \"-14.3990\",\r\n          lng: \"-120.7677\",\r\n        },\r\n      },\r\n      phone: \"586.493.6943 x140\",\r\n      website: \"jacynthe.com\",\r\n      company: {\r\n        name: \"Abernathy Group\",\r\n        catchPhrase: \"Implemented secondary concept\",\r\n        bs: \"e-enable extensible e-tailers\",\r\n      },\r\n      showButtons: false,\r\n    },\r\n    {\r\n      id: 9,\r\n      name: \"Glenna Reichert\",\r\n      username: \"Delphine\",\r\n      email: \"Chaim_McDermott@dana.io\",\r\n      address: {\r\n        street: \"Dayna Park\",\r\n        suite: \"Suite 449\",\r\n        city: \"Bartholomebury\",\r\n        zipcode: \"76495-3109\",\r\n        geo: {\r\n          lat: \"24.6463\",\r\n          lng: \"-168.8889\",\r\n        },\r\n      },\r\n      phone: \"(775)976-6794 x41206\",\r\n      website: \"conrad.com\",\r\n      company: {\r\n        name: \"Yost and Sons\",\r\n        catchPhrase: \"Switchable contextually-based project\",\r\n        bs: \"aggregate real-time technologies\",\r\n      },\r\n      showButtons: true,\r\n    },\r\n    {\r\n      id: 10,\r\n      name: \"Clementina DuBuque\",\r\n      username: \"Moriah.Stanton\",\r\n      email: \"Rey.Padberg@karina.biz\",\r\n      address: {\r\n        street: \"Kattie Turnpike\",\r\n        suite: \"Suite 198\",\r\n        city: \"Lebsackbury\",\r\n        zipcode: \"31428-2261\",\r\n        geo: {\r\n          lat: \"-38.2386\",\r\n          lng: \"57.2232\",\r\n        },\r\n      },\r\n      phone: \"024-648-3804\",\r\n      website: \"ambrose.net\",\r\n      company: {\r\n        name: \"Hoeger LLC\",\r\n        catchPhrase: \"Centralized empowering task-force\",\r\n        bs: \"target end-to-end models\",\r\n      },\r\n      showButtons: false,\r\n    },\r\n    {\r\n      id: 11,\r\n      name: \"Clementina DuBuque\",\r\n      username: \"Moriah.Stanton\",\r\n      email: \"Rey.Padberg@karina.biz\",\r\n      address: {\r\n        street: \"Kattie Turnpike\",\r\n        suite: \"Suite 198\",\r\n        city: \"Lebsackbury\",\r\n        zipcode: \"31428-2261\",\r\n        geo: {\r\n          lat: \"-38.2386\",\r\n          lng: \"57.2232\",\r\n        },\r\n      },\r\n      phone: \"024-648-3804\",\r\n      website: \"ambrose.net\",\r\n      company: {\r\n        name: \"Hoeger LLC\",\r\n        catchPhrase: \"Centralized empowering task-force\",\r\n        bs: \"target end-to-end models\",\r\n      },\r\n      showButtons: true,\r\n    },\r\n    {\r\n      id: 12,\r\n      name: \"Clementina DuBuque\",\r\n      username: \"Moriah.Stanton\",\r\n      email: \"Rey.Padberg@karina.biz\",\r\n      address: {\r\n        street: \"Kattie Turnpike\",\r\n        suite: \"Suite 198\",\r\n        city: \"Lebsackbury\",\r\n        zipcode: \"31428-2261\",\r\n        geo: {\r\n          lat: \"-38.2386\",\r\n          lng: \"57.2232\",\r\n        },\r\n      },\r\n      phone: \"024-648-3804\",\r\n      website: \"ambrose.net\",\r\n      company: {\r\n        name: \"Hoeger LLC\",\r\n        catchPhrase: \"Centralized empowering task-force\",\r\n        bs: \"target end-to-end models\",\r\n      },\r\n      showButtons: false,\r\n    },\r\n  ];\r\n\r\n  const [filterText, setFilterText] = useState(\"\");\r\n  const [resetPaginationToggle, setResetPaginationToggle] = useState(false);\r\n\r\n  const filteredItems = tableData.filter(\r\n    (item) =>\r\n      JSON.stringify(item).toLowerCase().indexOf(filterText.toLowerCase()) !==\r\n      -1\r\n  );\r\n\r\n  const subHeaderComponent = useMemo(() => {\r\n    const handleClear = () => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText(\"\");\r\n      }\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <input\r\n          id=\"search\"\r\n          type=\"text\"\r\n          placeholder=\"Search...\"\r\n          value={filterText}\r\n          className=\"form-control input-search\"\r\n          onChange={(e) => setFilterText(e.target.value)}\r\n        />\r\n        <button className=\"a-btn btn-clear-search\" onClick={handleClear}>\r\n          x\r\n        </button>\r\n      </>\r\n    );\r\n  }, [filterText, resetPaginationToggle]);\r\n\r\n  return (\r\n    <DataTable\r\n      theme=\"dark\"\r\n      noHeader={true}\r\n      columns={columns}\r\n      data={filteredItems}\r\n      defaultSortField=\"name\"\r\n      defaultSortAsc={true}\r\n      pagination\r\n      subHeader\r\n      subHeaderComponent={subHeaderComponent}\r\n      paginationRowsPerPageOptions={[5,10,25,50,100]}\r\n    />\r\n  );\r\n};\r\n\r\nexport default UserDataTable;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserPaymentListPage\\UserPaymentListPage.js",["2353","2354","2355","2356","2357","2358","2359","2360","2361"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport {\r\n  ROUTE_USER_ACADEMY,\r\n  ROUTE_USER_PAYMENT,\r\n  ROUTE_USER_WALLET,\r\n} from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport { apiGetUserMarketingPageDetail } from \"services/userMarketingService\";\r\nimport { apiGetUserPaymentListPageDetail } from \"services/userPaymentService\";\r\nimport {\r\n  apiGetUserWalletPageDetail,\r\n  apiUserRequestWithdrawal,\r\n} from \"services/userWalletService\";\r\nimport { get_data_value, showToast, show_loading } from \"utils/GlobalFunctions\";\r\nimport UserPaymentListTable from \"./inc/UserPaymentListTable\";\r\n \r\n\r\nconst currentPageTitle = \"Payment History\";\r\nconst UserPaymentListPage = () => {\r\n  const dispatch = useDispatch();\r\n  const initPage = () => {\r\n    dispatch(\r\n      UpdateAppData({\r\n        currentPageTitle: currentPageTitle,\r\n        current_route: ROUTE_USER_PAYMENT,\r\n        m_user_menu_collapsed: true,\r\n      })\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    initPage();\r\n    getData();\r\n  }, []);\r\n  //const history = useHistory();\r\n  const defaultPageData = {\r\n    user: {},\r\n    payment_list: [],\r\n  };\r\n  const [pageData, setPageData] = useState(defaultPageData);\r\n  const getData = () => {\r\n    show_loading(true);\r\n    apiGetUserPaymentListPageDetail()\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setPageData(api_res.data);\r\n          dispatch(updateUser(api_res.data[\"user\"]));\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-payment-page\">\r\n      <div className={`row`}>\r\n        <div className=\"col-lg-12 grid-margin stretch-card\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title t-show-mobile\">{currentPageTitle}</h4>\r\n              <div className=\"card-content\">\r\n                <div className=\"datatable-wrapper\">\r\n                  <UserPaymentListTable\r\n                    initialTableData={pageData[\"payment_list\"]}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPaymentListPage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserPaymentListPage\\inc\\UserPaymentListTable.js",["2362","2363","2364","2365","2366","2367","2368","2369","2370","2371","2372","2373","2374","2375","2376","2377"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport { RULE_PERCENT } from \"config/CONSTANTS\";\r\nimport { ROUTE_USER_ACADEMY, ROUTE_USER_MARKETING } from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useMemo, useState } from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport { urlUserDownloadInvoice } from \"services/CONSTANTS\";\r\nimport {\r\n  apiGetUserMarketingPageDetail,\r\n  apiGetUserMarketingRankDetail,\r\n} from \"services/userMarketingService\";\r\nimport { apiDeleteUserPayoutRow } from \"services/userWalletService\";\r\n\r\nimport {\r\n  curl_post,\r\n  empty,\r\n  get_data_value,\r\n  intval,\r\n  is_empty,\r\n  jQuery,\r\n  showToast,\r\n  show_loading,\r\n  toLocalDate,\r\n  toLocalDatetime,\r\n} from \"utils/GlobalFunctions\";\r\n\r\nconst UserPaymentListTable = (props) => {\r\n  const { initialTableData } = props;\r\n  const userDataStore = useSelector((x) => x.userDataStore);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    setTableData(initialTableData)\r\n  }\r\n  , [initialTableData]);\r\n  //const history = useHistory();\r\n  const [tableData, setTableData] = useState(initialTableData)\r\n  const [confirmModalTitle, setConfirmModalTitle] = useState(\"Are you sure to delete this record?\")\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false)\r\n  const [currentRow, setCurrentRow] = useState({})\r\n\r\n  const downloadInvoice = (row)=>{\r\n    console.log('userDataStore', userDataStore)\r\n\r\n    if(userDataStore['user_first_name'] === \"\" || userDataStore['user_last_name'] === \"\"){\r\n      showToast(\"Please update first name and last name in your profile section.\", \"error\");\r\n      return false;\r\n    }\r\n\r\n    let payment_id = row['id']\r\n    console.log('payment_id', payment_id);\r\n    let payment_date = toLocalDate(row.created_at)\r\n    let post_param = {\r\n      payment_id: payment_id,\r\n      payment_date:payment_date,\r\n      token: userDataStore['token']\r\n    }\r\n    curl_post(urlUserDownloadInvoice, post_param, 'post')\r\n  }\r\n\r\n  const onClickDeleteRow = (row)=>{\r\n    console.log('row', row)\r\n    setCurrentRow(row)\r\n    setShowConfirmModal(true)\r\n  }\r\n  const deleteRow = ()=>{\r\n    console.log('selected row', currentRow)\r\n    show_loading(true);\r\n    apiDeleteUserPayoutRow(currentRow)\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setShowConfirmModal(false)\r\n          setTableData(api_res.data['payout_list']);\r\n          showToast(\r\n            \"Residual record has been deleted successfully.\",\r\n            \"success\"\r\n          );\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Transaction ID\",\r\n      selector: \"trans_id_str\",\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Paid amount\",\r\n      selector: \"paid_amount\",\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n      sortable: true,\r\n      omit:true,\r\n      cell: (row) =>\r\n        row.status ? (\r\n          <>\r\n            <span className={`badge badge-sm ${row.status==='success' ? \"badge-success\" : \"badge-warning\"}`}>{row.status}</span>\r\n          </>\r\n        ) : null,\r\n    },\r\n    {\r\n      name: \"Invoice\",\r\n      selector: \"id\",\r\n      sortable: false,\r\n      cell: (row) =>\r\n        row.status === 'success' ? (\r\n          <>\r\n            <span className={`a-btn badge badge-sm badge-success`} onClick={(e)=>{downloadInvoice(row)}}>Download Invoice</span>\r\n          </>\r\n        ) : null,\r\n    },\r\n    {\r\n      name: \"Created At\",\r\n      selector: \"created_at\",\r\n      sortable: true,\r\n      hide: \"md\",\r\n      cell: (row) =>\r\n        row.created_at ? (\r\n          <>\r\n            <span className=\"hidden\">{row.created_at}</span>{toLocalDatetime(row.created_at)}\r\n          </>\r\n        ) : null,\r\n    }\r\n  ];\r\n\r\n  const [filterText, setFilterText] = useState(\"\");\r\n  const [resetPaginationToggle, setResetPaginationToggle] = useState(false);\r\n\r\n  const filteredItems = tableData.filter(\r\n    (item) =>\r\n      JSON.stringify(item).toLowerCase().indexOf(filterText.toLowerCase()) !==\r\n      -1\r\n  );\r\n\r\n  const subHeaderComponent = useMemo(() => {\r\n    const handleClear = () => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText(\"\");\r\n      }\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <input\r\n          id=\"search\"\r\n          type=\"text\"\r\n          placeholder=\"Transaction ID...\"\r\n          value={filterText}\r\n          className=\"form-control input-search\"\r\n          onChange={(e) => setFilterText(e.target.value)}\r\n        />\r\n        <button className=\"a-btn btn-clear-search\" onClick={handleClear}>\r\n          x\r\n        </button>\r\n      </>\r\n    );\r\n  }, [filterText, resetPaginationToggle]);\r\n\r\n  return (\r\n    <>\r\n    <DataTable\r\n      theme=\"dark\"\r\n      noHeader={true}\r\n      columns={columns}\r\n      data={filteredItems}\r\n      defaultSortField=\"created_at\"\r\n      defaultSortAsc={false}\r\n      subHeader\r\n      subHeaderComponent={subHeaderComponent}\r\n      pagination={true}\r\n      paginationRowsPerPageOptions={[5,10,25,50,100]}\r\n    />\r\n    <ConfirmModal content={confirmModalTitle} onClickYes={deleteRow} visibleModal={showConfirmModal} setVisibleModal={setShowConfirmModal} modalClass=\"user-page confirm-modal\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserPaymentListTable;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\userPaymentService.js",["2378"],"import { APP_NAME, SYSTEM_ERROR } from \"config/CONSTANTS\";\r\nimport { axiosGet, axiosPost } from \"./ajaxServices\";\r\nimport {urlUserDeletePaymentRow, urlUserGetPaymentListPageDetail } from \"./CONSTANTS\";\r\n\r\nexport const apiGetUserPaymentListPageDetail = () => {\r\n  const url = urlUserGetPaymentListPageDetail;\r\n  return new Promise((resolve, reject) => {\r\n    axiosGet(url, {}, SYSTEM_ERROR)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n};\r\n\r\nexport const apiDeleteUserPaymentRow = (params) => {\r\n  const url = urlUserDeletePaymentRow;\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  var formData = new FormData();\r\n  formData.append(\"id\", params.id); \r\n  return new Promise((resolve, reject) => {\r\n    axiosPost(url, formData, config)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n};\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\userProfileService.js",["2379","2380","2381","2382","2383"],"import { APP_NAME, SYSTEM_ERROR } from \"config/CONSTANTS\";\r\nimport { axiosGet, axiosPost } from \"./ajaxServices\";\r\nimport {\r\n  urlUserCancelAffiliate,\r\n  urlUserCancelMembership,\r\n  urlUserDeletePayoutRow,\r\n  urlUserDeleteWithdrawalRow,\r\n  urlUserGetProfile,\r\n  urlUserGetProfilePageDetail,\r\n  urlUserGetWalletPageDetail,\r\n  urlUserRemoveCardInfo,\r\n  urlUserRequestWithdrawal,\r\n  urlUserUpdateCardInfo,\r\n  urlUserUpdateProfile,\r\n} from \"./CONSTANTS\";\r\n\r\nexport const apiGetUserProfilePageDetail = () => {\r\n  const url = urlUserGetProfilePageDetail;\r\n  return new Promise((resolve, reject) => {\r\n    axiosGet(url, {}, SYSTEM_ERROR)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n};\r\n\r\nexport const apiGetUserProfile = () => {\r\n  const url = urlUserGetProfile;\r\n  return new Promise((resolve, reject) => {\r\n    axiosGet(url, {}, SYSTEM_ERROR)\r\n      .then(function (response) {\r\n        resolve(response);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport const apiUserUpdateProfile = (params) => {\r\n  const url = urlUserUpdateProfile;\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  var formData = new FormData();\r\n  formData.append(\"user_email\", params.user_email);\r\n  formData.append(\"user_first_name\", params.user_first_name);\r\n  formData.append(\"user_last_name\", params.user_last_name);\r\n  formData.append(\"user_password\", params.user_password);\r\n  return new Promise((resolve, reject) => {\r\n    axiosPost(url, formData, config)\r\n      .then(function (response) {\r\n        resolve(response);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport const apiUserUpdateCardInfo = (params) => {\r\n  const url = urlUserUpdateCardInfo;\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  var formData = new FormData();\r\n  formData.append(\"owner\", params.owner);\r\n  formData.append(\"card_number\", params.card_number);\r\n  formData.append(\"cvv\", params.cvv);\r\n  formData.append(\"exp_month\", params.exp_month);\r\n  formData.append(\"exp_year\", params.exp_year);\r\n  formData.append(\"user_password\", params.user_password);\r\n  return new Promise((resolve, reject) => {\r\n    axiosPost(url, formData, config)\r\n      .then(function (response) {\r\n        resolve(response);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\nexport const apiUserRemoveCardInfo = () => {\r\n  const url = urlUserRemoveCardInfo;\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  var formData = new FormData();\r\n  return new Promise((resolve, reject) => {\r\n    axiosPost(url, formData, config)\r\n      .then(function (response) {\r\n        resolve(response);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\nexport const apiUserCancelMembership = () => {\r\n  const url = urlUserCancelMembership;\r\n  return new Promise((resolve, reject) => {\r\n    axiosGet(url, {}, SYSTEM_ERROR)\r\n      .then(function (response) {\r\n        resolve(response);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\nexport const apiUserCancelAffiliate = () => {\r\n  const url = urlUserCancelAffiliate;\r\n  return new Promise((resolve, reject) => {\r\n    axiosGet(url, {}, SYSTEM_ERROR)\r\n      .then(function (response) {\r\n        resolve(response);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\userVerificationService.js",["2384","2385","2386","2387","2388"],"import { APP_NAME, SYSTEM_ERROR } from \"config/CONSTANTS\";\r\nimport { axiosGet, axiosPost } from \"./ajaxServices\";\r\nimport {urlUserCancelVerification, urlUserCompleteVerification, urlUserConfirmVerificationCode, urlUserDeletePayoutRow, urlUserDeleteWithdrawalRow, urlUserDisableVerification, urlUserGetVerificationPageDetail, urlUserGetWalletPageDetail, urlUserRequestWithdrawal, urlUserSendTwoFactVerificationEmail} from \"./CONSTANTS\";\r\n\r\nexport const apiGetUserVerificationPageDetail = () => {\r\n  const url = urlUserGetVerificationPageDetail;\r\n  return new Promise((resolve, reject) => {\r\n    axiosGet(url, {}, SYSTEM_ERROR)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n};\r\n \r\nexport const apiUserSendTwoFactVerificationEmail = () => {\r\n  const url = urlUserSendTwoFactVerificationEmail;\r\n  return new Promise((resolve, reject) => {\r\n    axiosGet(url, {}, SYSTEM_ERROR)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n};\r\n\r\nexport const apiUserConfirmVerificationCode = (params) => {\r\n  const url = urlUserConfirmVerificationCode;\r\n  return new Promise((resolve, reject) => {\r\n    axiosGet(url, params, SYSTEM_ERROR)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n};\r\n\r\nexport const apiUserCompleteVerification = (params) => {\r\n  const url = urlUserCompleteVerification;\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  var formData = new FormData();\r\n  formData.append(\"secret\", params.secret); \r\n  formData.append(\"otp\", params.otp); \r\n  return new Promise((resolve, reject) => {\r\n    axiosPost(url, formData, config)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n};\r\n\r\nexport const apiUserCancelVerification = (params) => {\r\n  const url = urlUserCancelVerification;\r\n  return new Promise((resolve, reject) => {\r\n    axiosGet(url, params, SYSTEM_ERROR)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n};\r\n\r\nexport const apiUserDisableVerification = (params) => {\r\n  const url = urlUserDisableVerification;\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  var formData = new FormData();\r\n  formData.append(\"otp\", params.otp); \r\n  return new Promise((resolve, reject) => {\r\n    axiosPost(url, formData, config)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n};","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserVerificationPage\\inc\\TwoFactQRCodeModal.js",["2389","2390","2391","2392","2393","2394","2395","2396","2397","2398","2399"],"import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  empty,\r\n  get_data_value,\r\n  intval,\r\n  isEmpty,\r\n  jQuery,\r\n  showToast,\r\n  show_loading,\r\n  to_array,\r\n} from \"utils/GlobalFunctions\";\r\nimport { APP_NAME } from \"config/CONSTANTS\";\r\nimport TwoFactorCodeModal from \"components/TwoFactorCodeModal/TwoFactorCodeModal\";\r\nimport { apiUserCancelVerification, apiUserCompleteVerification } from \"services/userVerificationService\";\r\n\r\nfunction TwoFactQRCodeModal(props) {\r\n  const {\r\n    isVisible,\r\n    setVisibleModal,\r\n    pageData,\r\n    submitModalData,\r\n    modalClass,\r\n    modalTitle,\r\n  } = props;\r\n  useEffect(() => {\r\n    if (isVisible !== undefined) {\r\n      setShow(isVisible);\r\n      setModalPageData(pageData);\r\n    }\r\n  }, [isVisible, pageData]);\r\n  const [show, setShow] = useState(false);\r\n  const defaultModalData = {};\r\n  const [modalPageData, setModalPageData] = useState({});\r\n  const [modalData, setModalData] = useState(defaultModalData);\r\n  const [errorField, setErrorField] = useState([]);\r\n\r\n  const validateFields = () => {\r\n    var errorList = Array();\r\n    errorList = isEmpty(modalData, \"payout_amount\", errorList);\r\n    setErrorField([...errorList]);\r\n    return errorList.length > 0 ? false : true;\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    setVisibleModal(false);\r\n  };\r\n\r\n  const [showVerificationCodeModal, setShowVerificationCodeModal] = useState(false);\r\n\r\n  const showTwoFactVerificationDlg = () => {\r\n    setShowVerificationCodeModal(true)\r\n    handleClose()\r\n  };\r\n\r\n  const submitVerificationCodeData = (codeData) => {\r\n    let codeStr = to_array(codeData).join(\"\");\r\n    console.log(\"codeStr\", codeStr);\r\n    show_loading(true);\r\n    let params = {\r\n      secret: pageData['two_fact_secret'],\r\n      otp:codeStr\r\n    }\r\n    apiUserCompleteVerification(params)\r\n      .then((api_res) => {\r\n        if (api_res.status === \"1\") {\r\n          showToast(api_res.message, 'success');\r\n          setShowVerificationCodeModal(false)\r\n          submitModalData(true)\r\n        } else {\r\n          show_loading(false);\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  const cancelTwoStepVerification = () => {\r\n    show_loading(true);\r\n    apiUserCancelVerification()\r\n      .then((api_res) => {\r\n        show_loading(false);\r\n        handleClose()\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        centered\r\n        dialogClassName={modalClass}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Configure Two-Step Verification</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"block text-center\">\r\n            <div className=\"modal-box\">\r\n              <div id=\"dialog\">\r\n                <div className=\"2fa-qr-code-dlg-content padding-10\">\r\n                  <div className=\"block mb-4\">\r\n                    <p>\r\n                      Use your preferred application from App Store or Google\r\n                      Play and set up an account by scanning the QR code or\r\n                      entering the key.\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"block text-center mb-4\">\r\n                    <div className=\"img-wrapper text-center\">\r\n                      <img\r\n                        className=\"img-responsive img-qr-code\"\r\n                        style={{\r\n                          width: \"180px\",\r\n                          height: \"180px\",\r\n                          background: \"#b4b4b4\",\r\n                        }}\r\n                        src={get_data_value(pageData, \"two_fact_qr_code_url\")}\r\n                        alt=\"QR Code\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"block text-center mb-4\">\r\n                    <p className=\"text-gray\">\r\n                      Key: &nbsp;\r\n                      <span\r\n                        className=\"text-white qr-code-value\"\r\n                        style={{ fontSize: \"1.15rem\" }}\r\n                      >\r\n                        {get_data_value(pageData, \"two_fact_secret\")}\r\n                      </span>\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"alert alert-warning mb-4\" role=\"alert\">\r\n                    <div className=\"note mb-0 text-center\">\r\n                      <p>\r\n                        IMPORTANT: Do NOT lose this code! Store it in a safe\r\n                        place!\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-md btn-close-dlg btn-light margin-right-10\"\r\n            data-dismiss=\"modal\"\r\n            onClick={(e) => {\r\n              cancelTwoStepVerification();\r\n            }}\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-md btn-submit-hlx-withdrawal-request btn-primary\"\r\n            onClick={(e) => {\r\n              showTwoFactVerificationDlg();\r\n            }}\r\n          >\r\n            Continue\r\n          </button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {showVerificationCodeModal && (\r\n          <TwoFactorCodeModal\r\n            isVisible={showVerificationCodeModal}\r\n            setShowconfirmModal={setShowVerificationCodeModal}\r\n            submitModalData={submitVerificationCodeData}\r\n            onCancelModal={cancelTwoStepVerification}\r\n            modalClass=\"user-page two-fact-verification-code-dlg\"\r\n          />\r\n        )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TwoFactQRCodeModal;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserPayLicensePage\\UserPayLicensePage.js",["2400","2401","2402","2403","2404","2405","2406","2407","2408","2409","2410","2411","2412","2413"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport CreditCardForm from \"components/CreditCardForm/CreditCardForm\";\r\nimport {\r\n  APP_NAME,\r\n  LICENSE_PRICE,\r\n  LICENSE_TRIAL_PRICE,\r\n  TRIAL_LICENSE_DURATION,\r\n} from \"config/CONSTANTS\";\r\nimport {\r\n  ROUTE_USER_LICENSE,\r\n  ROUTE_USER_PAY_LICENSE,\r\n  ROUTE_USER_PROFILE,\r\n} from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport {\r\n  apiGetUserLicensePageDetail,\r\n  apiUserUpdateLicenseInfo,\r\n} from \"services/userLicenseService\";\r\nimport {\r\n  apiGetUserPayLicensePageDetail,\r\n  apiUserPayLicense,\r\n} from \"services/userPayService\";\r\nimport {\r\n  apiGetUserProfilePageDetail,\r\n  apiUserCancelAffiliate,\r\n  apiUserCancelMembership,\r\n  apiUserUpdateCardInfo,\r\n  apiUserUpdateProfile,\r\n} from \"services/userProfileService\";\r\nimport {\r\n  empty,\r\n  get_data_value,\r\n  isEmpty,\r\n  priceFormat,\r\n  showToast,\r\n  show_loading,\r\n} from \"utils/GlobalFunctions\";\r\n\r\nconst currentPageTitle = \"Purchase License\";\r\nconst UserPayLicensePage = () => {\r\n  const dispatch = useDispatch();\r\n  const initPage = () => {\r\n    dispatch(\r\n      UpdateAppData({\r\n        currentPageTitle: currentPageTitle,\r\n        current_route: ROUTE_USER_LICENSE,\r\n        m_user_menu_collapsed: true,\r\n      })\r\n    );\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    initPage();\r\n    getData();\r\n  }, []);\r\n  //const history = useHistory();\r\n  const defaultPageData = {\r\n    user: {},\r\n    enabled_membership: \"\",\r\n    is_active_customer: \"\",\r\n    card_number_last4: \"\",\r\n  };\r\n  const [pageData, setPageData] = useState(defaultPageData);\r\n  const getData = () => {\r\n    show_loading(true);\r\n    apiGetUserPayLicensePageDetail()\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setPageData(api_res.data);\r\n          dispatch(updateUser(api_res.data[\"user\"]));\r\n          if (api_res.data[\"is_active_customer\"] === 1) {\r\n            history.push(ROUTE_USER_LICENSE);\r\n          } else {\r\n            if (!empty(api_res.data[\"card_number_last4\"])) {\r\n              setConfirmModalContent(\r\n                \"Are you sure you want to pay with card on file (************\" +\r\n                  api_res.data[\"card_number_last4\"] +\r\n                  \")?\"\r\n              );\r\n              setShowConfirmModal(true);\r\n            }\r\n          }\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  let curYear = new Date().getFullYear();\r\n  const initCardData = {\r\n    owner: \"\",\r\n    card_number: \"\",\r\n    cvv: \"\",\r\n    exp_month: \"01\",\r\n    exp_year: curYear - 2000,\r\n    card_type: \"\",\r\n  };\r\n  const [cardData, setCardData] = useState(initCardData);\r\n  const [errorField, setErrorField] = useState([]);\r\n\r\n  const validateCardFields = () => {\r\n    var errorList = Array();\r\n    errorList = isEmpty(cardData, \"owner\", errorList);\r\n    errorList = isEmpty(cardData, \"card_number\", errorList);\r\n    errorList = isEmpty(cardData, \"cvv\", errorList);\r\n    setErrorField([...errorList]);\r\n    return errorList.length > 0 ? false : true;\r\n  };\r\n\r\n  const setCreditCardData = (creditCardData) => {\r\n    let updateData = {\r\n      owner: creditCardData[\"owner\"],\r\n      card_number: creditCardData[\"card_number\"],\r\n      cvv: creditCardData[\"cvv\"],\r\n      exp_month: creditCardData[\"exp_month\"],\r\n      exp_year: creditCardData[\"exp_year\"],\r\n      card_type: creditCardData[\"card_type\"],\r\n    };\r\n    setCardData({ ...cardData, ...updateData });\r\n  };\r\n\r\n  const onClickPayNow = () => {\r\n    let is_valid = validateCardFields();\r\n    console.log(\"is valid\", is_valid);\r\n    if (is_valid) {\r\n      show_loading(true);\r\n      apiUserPayLicense({ ...cardData, payment_type: \"newly\" })\r\n        .then((api_res) => {\r\n          console.log(\"api_res\", api_res);\r\n          show_loading(false);\r\n          if (api_res.status === \"1\") {\r\n            dispatch(updateUser(api_res.data[\"user\"]));\r\n            showToast(\"You have paid successfully.\", \"success\");\r\n            history.push(ROUTE_USER_LICENSE);\r\n          } else {\r\n            showToast(api_res.message, \"error\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          show_loading(false);\r\n          showToast(err, \"error\");\r\n        });\r\n    }\r\n  };\r\n\r\n  const [confirmModalContent, setConfirmModalContent] = useState(\r\n    \"Are you sure you want to pay with card on file?\"\r\n  );\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n  //const [currentConfirmAction, setCurrentConfirmAction] = useState(\"\");\r\n  const doConfirmedAction = () => {\r\n    show_loading(true);\r\n    apiUserPayLicense({ ...cardData, payment_type: \"recursive\" })\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setShowConfirmModal(false);\r\n          dispatch(updateUser(api_res.data[\"user\"]));\r\n          showToast(\"You have paid successfully.\", \"success\");\r\n          history.push(ROUTE_USER_LICENSE);\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-profile-page\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12 grid-margin stretch-card\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <div className=\"user-payment-box\">\r\n                <p className=\"card-description\"></p>\r\n                <div className=\"heading\">\r\n                  <h4 className=\"text-center\">\r\n                    Confirm Purchase - Credit Card\r\n                  </h4>\r\n                  <h4\r\n                    className={`text-center ${\r\n                      get_data_value(pageData[\"user\"], \"trial_used\") === 1\r\n                        ? \"\"\r\n                        : \"hidden\"\r\n                    }`}\r\n                  >\r\n                    ( ${priceFormat(LICENSE_PRICE)} )\r\n                  </h4>\r\n                  <h4\r\n                    className={`text-center ${\r\n                      get_data_value(pageData[\"user\"], \"trial_used\") === 0\r\n                        ? \"\"\r\n                        : \"hidden\"\r\n                    }`}\r\n                  >\r\n                    ( $\r\n                    {priceFormat(LICENSE_TRIAL_PRICE) +\r\n                      \" - \" +\r\n                      TRIAL_LICENSE_DURATION +\r\n                      \"days trial\"}{\" \"}\r\n                    )\r\n                  </h4>\r\n                </div>\r\n                <div>\r\n                  <CreditCardForm\r\n                    userData={cardData}\r\n                    setUserData={setCreditCardData}\r\n                    errorField={errorField}\r\n                    setErrorField={setErrorField}\r\n                  ></CreditCardForm>\r\n                </div>\r\n                <div className=\"form-group text-right\" id=\"pay-now\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-lg btn-block btn-primary\"\r\n                    id=\"confirm-update\"\r\n                    onClick={(e) => {\r\n                      onClickPayNow();\r\n                    }}\r\n                  >\r\n                    Confirm\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <ConfirmModal\r\n        content={confirmModalContent}\r\n        onClickYes={doConfirmedAction}\r\n        visibleModal={showConfirmModal}\r\n        setVisibleModal={setShowConfirmModal}\r\n        modalClass=\"user-page confirm-modal\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPayLicensePage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\userPayService.js",["2414","2415","2416"],"import { APP_NAME, SYSTEM_ERROR } from \"config/CONSTANTS\";\r\nimport { get_data_value } from \"utils/GlobalFunctions\";\r\nimport { axiosGet, axiosPost } from \"./ajaxServices\";\r\nimport {urlUserGetLicensePageDetail, urlUserPayAffiliate, urlUserPayLicense, urlUserPayLicensePageDetail, urlUserUpdateLicenseInfo} from \"./CONSTANTS\";\r\n\r\nexport const apiGetUserPayLicensePageDetail = () => {\r\n  const url = urlUserPayLicensePageDetail;\r\n  return new Promise((resolve, reject) => {\r\n    axiosGet(url, {}, SYSTEM_ERROR)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n};\r\n\r\nexport const apiUserPayLicense = (params) => {\r\n  const url = urlUserPayLicense;\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  var formData = new FormData();\r\n  formData.append(\"owner\", params.owner); \r\n  formData.append(\"card_number\", params.card_number); \r\n  formData.append(\"cvv\", params.cvv); \r\n  formData.append(\"exp_month\", params.exp_month); \r\n  formData.append(\"exp_year\", params.exp_year); \r\n  formData.append(\"card_type\", params.card_type); \r\n  formData.append(\"payment_type\", get_data_value(params, 'payment_type', 'newly'));\r\n  \r\n  return new Promise((resolve, reject) => {\r\n    axiosPost(url, formData, config)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n};\r\n\r\nexport const apiUserPayAffiliate = (params) => {\r\n  const url = urlUserPayAffiliate;\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  var formData = new FormData();\r\n  formData.append(\"owner\", params.owner); \r\n  formData.append(\"card_number\", params.card_number); \r\n  formData.append(\"cvv\", params.cvv); \r\n  formData.append(\"exp_month\", params.exp_month); \r\n  formData.append(\"exp_year\", params.exp_year); \r\n  formData.append(\"card_type\", params.card_type); \r\n  formData.append(\"payment_type\", get_data_value(params, 'payment_type', 'newly'));\r\n  \r\n  return new Promise((resolve, reject) => {\r\n    axiosPost(url, formData, config)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n};","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserPayAffiliatePage\\UserPayAffiliatePage.js",["2417","2418","2419","2420","2421","2422","2423","2424","2425","2426","2427","2428","2429","2430","2431","2432","2433","2434","2435","2436","2437"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport CreditCardForm from \"components/CreditCardForm/CreditCardForm\";\r\nimport {\r\n  AFFILIATE_COMMISSION,\r\n  APP_NAME,\r\n  LICENSE_PRICE,\r\n  LICENSE_TRIAL_PRICE,\r\n  TRIAL_LICENSE_DURATION,\r\n} from \"config/CONSTANTS\";\r\nimport {\r\n  ROUTE_USER_AFFILIATE,\r\n  ROUTE_USER_DASHBOARD,\r\n  ROUTE_USER_LICENSE,\r\n  ROUTE_USER_PAY_LICENSE,\r\n  ROUTE_USER_PROFILE,\r\n} from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport {\r\n  apiGetUserLicensePageDetail,\r\n  apiUserUpdateLicenseInfo,\r\n} from \"services/userLicenseService\";\r\nimport {\r\n  apiGetUserPayLicensePageDetail,\r\n  apiUserPayAffiliate,\r\n  apiUserPayLicense,\r\n} from \"services/userPayService\";\r\nimport {\r\n  apiGetUserProfilePageDetail,\r\n  apiUserCancelAffiliate,\r\n  apiUserCancelMembership,\r\n  apiUserUpdateCardInfo,\r\n  apiUserUpdateProfile,\r\n} from \"services/userProfileService\";\r\nimport {\r\n  empty,\r\n  get_data_value,\r\n  isEmpty,\r\n  priceFormat,\r\n  showToast,\r\n  show_loading,\r\n} from \"utils/GlobalFunctions\";\r\n\r\nconst currentPageTitle = \"Become an Affiliate\";\r\nconst UserPayAffiliatePage = () => {\r\n  const dispatch = useDispatch();\r\n  const initPage = () => {\r\n    dispatch(\r\n      UpdateAppData({\r\n        currentPageTitle: currentPageTitle,\r\n        current_route: ROUTE_USER_AFFILIATE,\r\n        m_user_menu_collapsed: true,\r\n      })\r\n    );\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    initPage();\r\n    getData();\r\n  }, []);\r\n  //const history = useHistory();\r\n  const defaultPageData = {\r\n    user: {},\r\n    enabled_membership: \"\",\r\n    is_active_customer: \"\",\r\n    card_number_last4: \"\",\r\n  };\r\n  const [pageData, setPageData] = useState(defaultPageData);\r\n  const getData = () => {\r\n    show_loading(true);\r\n    apiGetUserPayLicensePageDetail()\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setPageData(api_res.data);\r\n          dispatch(updateUser(api_res.data[\"user\"]));\r\n          if (api_res.data[\"user\"][\"user_type\"] === 1) {\r\n            showToast(\"You are already an affiliate\", \"error\");\r\n            history.push(ROUTE_USER_DASHBOARD);\r\n          } else {\r\n            if (!empty(api_res.data[\"card_number_last4\"])) {\r\n              setConfirmModalContent(\r\n                \"Are you sure you want to pay with card on file (************\" +\r\n                  api_res.data[\"card_number_last4\"] +\r\n                  \")?\"\r\n              );\r\n              setShowConfirmModal(true);\r\n            }\r\n          }\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  let curYear = new Date().getFullYear();\r\n  const initCardData = {\r\n    owner: \"\",\r\n    card_number: \"\",\r\n    cvv: \"\",\r\n    exp_month: \"01\",\r\n    exp_year: curYear - 2000,\r\n    card_type: \"\",\r\n  };\r\n  const [cardData, setCardData] = useState(initCardData);\r\n  const [errorField, setErrorField] = useState([]);\r\n\r\n  const validateCardFields = () => {\r\n    var errorList = Array();\r\n    errorList = isEmpty(cardData, \"owner\", errorList);\r\n    errorList = isEmpty(cardData, \"card_number\", errorList);\r\n    errorList = isEmpty(cardData, \"cvv\", errorList);\r\n    setErrorField([...errorList]);\r\n    return errorList.length > 0 ? false : true;\r\n  };\r\n\r\n  const setCreditCardData = (creditCardData) => {\r\n    let updateData = {\r\n      owner: creditCardData[\"owner\"],\r\n      card_number: creditCardData[\"card_number\"],\r\n      cvv: creditCardData[\"cvv\"],\r\n      exp_month: creditCardData[\"exp_month\"],\r\n      exp_year: creditCardData[\"exp_year\"],\r\n      card_type: creditCardData[\"card_type\"],\r\n    };\r\n    setCardData({ ...cardData, ...updateData });\r\n  };\r\n\r\n  const onClickPayNow = () => {\r\n    let is_valid = validateCardFields();\r\n    console.log(\"is valid\", is_valid);\r\n    if (is_valid) {\r\n      show_loading(true);\r\n      apiUserPayAffiliate({ ...cardData, payment_type: \"newly\" })\r\n        .then((api_res) => {\r\n          console.log(\"api_res\", api_res);\r\n          show_loading(false);\r\n          if (api_res.status === \"1\") {\r\n            dispatch(updateUser(api_res.data[\"user\"]));\r\n            showToast(\"You have paid successfully.\", \"success\");\r\n            history.push(ROUTE_USER_DASHBOARD);\r\n          } else {\r\n            showToast(api_res.message, \"error\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          show_loading(false);\r\n          showToast(err, \"error\");\r\n        });\r\n    }\r\n  };\r\n\r\n  const [confirmModalContent, setConfirmModalContent] = useState(\r\n    \"Are you sure you want to pay with card on file?\"\r\n  );\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n  //const [currentConfirmAction, setCurrentConfirmAction] = useState(\"\");\r\n  const doConfirmedAction = () => {\r\n    show_loading(true);\r\n    apiUserPayAffiliate({ ...cardData, payment_type: \"recursive\" })\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setShowConfirmModal(false);\r\n          dispatch(updateUser(api_res.data[\"user\"]));\r\n          showToast(\"You have paid successfully.\", \"success\");\r\n          history.push(ROUTE_USER_DASHBOARD);\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-profile-page\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12 grid-margin stretch-card\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <div className=\"user-payment-box\">\r\n                <p className=\"card-description\"></p>\r\n                <div className=\"heading\">\r\n                  <h4 className=\"text-center\">\r\n                    Confirm Purchase - Credit Card\r\n                  </h4>\r\n                  <h4 className={`text-center`}>\r\n                    ( ${priceFormat(AFFILIATE_COMMISSION)} )\r\n                  </h4>\r\n                </div>\r\n                <div>\r\n                  <CreditCardForm\r\n                    userData={cardData}\r\n                    setUserData={setCreditCardData}\r\n                    errorField={errorField}\r\n                    setErrorField={setErrorField}\r\n                  ></CreditCardForm>\r\n                </div>\r\n                <div className=\"form-group text-right\" id=\"pay-now\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-lg btn-block btn-primary\"\r\n                    id=\"confirm-update\"\r\n                    onClick={(e) => {\r\n                      onClickPayNow();\r\n                    }}\r\n                  >\r\n                    Confirm\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <ConfirmModal\r\n        content={confirmModalContent}\r\n        onClickYes={doConfirmedAction}\r\n        visibleModal={showConfirmModal}\r\n        setVisibleModal={setShowConfirmModal}\r\n        modalClass=\"user-page confirm-modal\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPayAffiliatePage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\userTeamService.js",["2438","2439","2440"],"import { APP_NAME, SYSTEM_ERROR } from \"config/CONSTANTS\";\r\nimport { axiosGet, axiosPost } from \"./ajaxServices\";\r\nimport {urlUserAssignTankUser, urlUserGetAcademyData, urlUserGetAcademyPageDetail, urlUserGetTankUserList, urlUserGetTreeUpLevelUser, urlUserTeamPageDetail} from \"./CONSTANTS\";\r\n\r\nexport const apiGetUserTeamPageDetail = (rootUserId) => {\r\n  const url = urlUserTeamPageDetail;\r\n  return new Promise((resolve, reject) => {\r\n    let params = {\r\n      root_user_id: rootUserId\r\n    }\r\n    axiosGet(url, params, SYSTEM_ERROR)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n};\r\n\r\nexport const apiGetUserTankList = (rootUserId) => {\r\n  const url = urlUserGetTankUserList;\r\n  return new Promise((resolve, reject) => {\r\n    let params = {\r\n      user_id: rootUserId\r\n    }\r\n    axiosGet(url, params, SYSTEM_ERROR)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });\r\n};\r\n\r\n\r\nexport const apiUserAssignChildUser = (params) => {\r\n  const url = urlUserAssignTankUser;\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  var formData = new FormData();\r\n  formData.append(\"parent_id\", params.parent_id); \r\n  formData.append(\"position\", params.position); \r\n  formData.append(\"user_id\", params.user_id); \r\n\r\n  return new Promise((resolve, reject) => {\r\n    axiosPost(url, formData, config)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n};\r\nexport const apiUserGetTreeUpLevelUser = (user_id) => {\r\n  const url = urlUserGetTreeUpLevelUser;\r\n  return new Promise((resolve, reject) => {\r\n    let params = {\r\n      user_id: user_id\r\n    }\r\n    axiosGet(url, params, SYSTEM_ERROR)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });\r\n};","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserTeamPage\\inc\\UserTankUserListModal.js",["2441","2442","2443","2444","2445","2446","2447","2448"],"import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  empty,\r\n  get_data_value,\r\n  intval,\r\n  isEmpty,\r\n  jQuery,\r\n  showToast,\r\n} from \"utils/GlobalFunctions\";\r\nimport { APP_NAME } from \"config/CONSTANTS\";\r\n\r\nfunction UserTankUserListModal(props) {\r\n  const {\r\n    isVisible,\r\n    setVisibleModal,\r\n    modalData,\r\n    submitModalData,\r\n    modalClass,\r\n    modalTitle,\r\n  } = props;\r\n\r\n  const [selectedUserID, setSelectedUserID] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (isVisible !== undefined) {\r\n      setShow(isVisible);\r\n      setSelectedUserID(intval(get_data_value(modalData[0], 'id')))\r\n    }\r\n  }, [isVisible, modalData]);\r\n  const [show, setShow] = useState(false);\r\n  const defaultModalData = {\r\n    selected_user_id: \"\",\r\n  };\r\n  const [modalPageData, setModalPageData] = useState(defaultModalData);\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    setVisibleModal(false);\r\n  };\r\n\r\n  const onClickSubmitModal = () => {\r\n    submitModalData(selectedUserID);\r\n  };\r\n\r\n  const onChangeSelectedTankUser = (event) => {\r\n    let value = event.target.value\r\n    console.log(\"value\", value);\r\n    setSelectedUserID(value)\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        centered\r\n        dialogClassName={modalClass}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{modalTitle}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"block text-center\">\r\n            <div className=\"modal-box\">\r\n              <div id=\"dialog\">\r\n                <div className=\"text-normal text-left\">\r\n                  <div className=\"table-responsive\">\r\n                    <table className=\"table table-striped12\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th></th>\r\n                          <th>User Name</th>\r\n                          <th>Avatar</th>\r\n                          <th className=\"hidden\">Email</th>\r\n                          <th className=\"hidden\">Phone</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {modalData.map((item, index) => (\r\n                          <tr key={index}>\r\n                            <td>\r\n                              <div className=\"form-check\">\r\n                                <label className=\"form-check-label\">\r\n                                  <input\r\n                                    type=\"radio\"\r\n                                    id={`tank-user-id-${item[\"id\"]}`}\r\n                                    name=\"tank-user-id\"\r\n                                    className=\"form-check-input\"\r\n                                    value={`${item['id']}`}\r\n                                    defaultChecked={index === 0 ? true : false}\r\n                                    onChange={(e) => {\r\n                                      onChangeSelectedTankUser(e);\r\n                                    }}\r\n                                  />\r\n                                  <i className=\"input-helper\"></i>\r\n                                </label>\r\n                              </div>\r\n                            </td>\r\n                            <td>\r\n                              <label htmlFor={`tank-user-id-${item[\"id\"]}`}>\r\n                                {item[\"user_name\"]}\r\n                              </label>\r\n                            </td>\r\n                            <td>\r\n                              <label\r\n                                htmlFor={`tank-user-id-${item[\"id\"]}`}\r\n                                className=\"mb-0 margin-bottom-0\"\r\n                              >\r\n                                <img\r\n                                  src=\"/assets/global/img/default-avatar-1.png?v=1\"\r\n                                  alt=\"\"\r\n                                />\r\n                              </label>\r\n                            </td>\r\n                            <td className=\"hidden\"></td>\r\n                            <td className=\"hidden\"></td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-md btn-close-dlg btn-light margin-right-10\"\r\n            data-dismiss=\"modal\"\r\n            onClick={handleClose}\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-md btn-submit-hlx-withdrawal-request btn-primary\"\r\n            onClick={onClickSubmitModal}\r\n          >\r\n            Confirm\r\n          </button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserTankUserListModal;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\redux\\reducers\\socketReducer.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\redux\\actions\\socketActions.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\userTicketService.js",["2449"],"import { APP_NAME, SYSTEM_ERROR } from \"config/CONSTANTS\";\r\nimport { axiosGet, axiosPost, axiosPostMultipart } from \"./ajaxServices\";\r\nimport { urlUserCloseTicket, urlUserDeleteTicket, urlUserGetTicketInfoPageDetail, urlUserGetTicketListPageDetail, urlUserSubmitTicket, urlUserSubmitTicketMessage } from \"./CONSTANTS\";\r\n\r\nexport const apiGetUserTicketListPageDetail = () => {\r\n  const url = urlUserGetTicketListPageDetail;\r\n  return new Promise((resolve, reject) => {\r\n    axiosGet(url, {}, SYSTEM_ERROR)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n};\r\n\r\nexport const apiSubmitUserTicket = (params, uploadFile) => {\r\n  const url = urlUserSubmitTicket;\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  var formData = new FormData();\r\n  formData.append(\"title\", params.title.trim()); \r\n  formData.append(\"description\", params.description.trim()); \r\n  formData.append(\"upload_file\", uploadFile); \r\n  return new Promise((resolve, reject) => {\r\n    axiosPostMultipart(url, formData, config)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n};\r\n\r\nexport const apiSubmitUserTicketMessage = (params, uploadFile) => {\r\n  const url = urlUserSubmitTicketMessage;\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  var formData = new FormData();\r\n  formData.append(\"ticket_id\", params.ticket_id); \r\n  formData.append(\"description\", params.description.trim()); \r\n  formData.append(\"upload_file\", uploadFile); \r\n  return new Promise((resolve, reject) => {\r\n    axiosPostMultipart(url, formData, config)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n};\r\nexport const apiCloseUserTicket = (ticketid) => {\r\n  const url = urlUserCloseTicket;\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  var formData = new FormData();\r\n  formData.append(\"id\", ticketid); \r\n  return new Promise((resolve, reject) => {\r\n    axiosPost(url, formData, config)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n};\r\nexport const apiDeleteUserTicket = (params) => {\r\n  const url = urlUserDeleteTicket;\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  var formData = new FormData();\r\n  formData.append(\"id\", params.id); \r\n  return new Promise((resolve, reject) => {\r\n    axiosPost(url, formData, config)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n};\r\n\r\nexport const apiGetUserTickeDetailPageDetail = (ticketid) => {\r\n  const url = urlUserGetTicketInfoPageDetail;\r\n  return new Promise((resolve, reject) => {\r\n    axiosGet(url, {ticketid:ticketid}, SYSTEM_ERROR)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n};","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserTicketPage\\UserAddTicketPage.js",["2450","2451","2452","2453","2454","2455","2456"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport { ROUTE_USER_TEAM_DETAIL, ROUTE_USER_TICKET } from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport {\r\n  apiGetUserTicketListPageDetail,\r\n  apiSubmitUserTicket,\r\n} from \"services/userTicketService\";\r\nimport { empty, isEmpty, showToast, show_loading } from \"utils/GlobalFunctions\";\r\n\r\nconst currentPageTitle = \"New Ticket\";\r\nconst UserAddTicketPage = () => {\r\n  const dispatch = useDispatch();\r\n  const initPage = () => {\r\n    dispatch(\r\n      UpdateAppData({\r\n        currentPageTitle: currentPageTitle,\r\n        current_route: ROUTE_USER_TICKET,\r\n        m_user_menu_collapsed: true,\r\n      })\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    initPage();\r\n    getData();\r\n  }, []);\r\n  const history = useHistory();\r\n  const defaultPageData = {\r\n    user: {},\r\n    ticket_list: [],\r\n  };\r\n  const [pageData, setPageData] = useState(defaultPageData);\r\n  const getData = () => {\r\n    show_loading(true);\r\n    apiGetUserTicketListPageDetail()\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setPageData(api_res.data);\r\n          dispatch(updateUser(api_res.data[\"user\"]));\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  const [uploadFile, setUploadFile] = useState(null);\r\n  const [fileUploadPlaceholder, setFileUploadPlaceholder] = useState(\"No file selected\")\r\n  const initFormData = { title: \"\", description: \"\" };\r\n  const [formData, setFormData] = useState(initFormData);\r\n  const [errorField, setErrorField] = useState([]);\r\n\r\n  const validateFields = () => {\r\n    var errorList = Array();\r\n    errorList = isEmpty(formData, \"title\", errorList);\r\n    errorList = isEmpty(formData, \"description\", errorList);\r\n    setErrorField([...errorList]);\r\n    return errorList.length > 0 ? false : true;\r\n  };\r\n  const onChangeFormField = (e, field_name) => {\r\n    if (errorField.includes(field_name)) {\r\n      let errors = errorField.filter((x) => x != field_name);\r\n      setErrorField([...errors]);\r\n    }\r\n    let updateData = {};\r\n    updateData[field_name] = e.target.value;\r\n    setFormData({ ...formData, ...updateData });\r\n  };\r\n  const onFileInputChanged = (e) =>{\r\n    setUploadFile(e.target.files[0]);\r\n    console.log('e', e)\r\n    let files = e.target.files;\r\n    if(!empty(files)){\r\n      setFileUploadPlaceholder(files[0].name)\r\n    }else{\r\n      setFileUploadPlaceholder(\"No file selected\")\r\n    }\r\n  }\r\n  const onSubmitTicket = () => {\r\n    let is_valid = validateFields();\r\n    console.log(\"is valid\", is_valid);\r\n    if (is_valid) {\r\n      show_loading(true);\r\n      apiSubmitUserTicket(formData, uploadFile)\r\n        .then((api_res) => {\r\n          console.log(\"api_res\", api_res);\r\n          show_loading(false);\r\n          if (api_res.status === \"1\") {\r\n            dispatch(updateUser(api_res.data[\"user\"]));\r\n            showToast(\"New ticket has been submitted successfully\", \"success\")\r\n            history.push(ROUTE_USER_TICKET) /////////////////\r\n          } else {\r\n            showToast(api_res.message, \"error\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          show_loading(false);\r\n          showToast(err, \"error\");\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-add-ticket-page\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title t-show-mobile\">{currentPageTitle}</h4>\r\n              <div className=\"card-content\">\r\n                <div className=\"alert alert-warning mb-5\" role=\"alert\">\r\n                  <div className=\"note mb-0 text-center\">\r\n                    <p>\r\n                      If you have any questions or you need any assistance,\r\n                      please send us a support ticket and we will get back to\r\n                      you as soon as possible.\r\n                      <br />\r\n                      We will notify you in email and our response can be found\r\n                      at the top of your backoffice where the message icon is.\r\n                    </p>\r\n                    <p>\r\n                      Be sure to include a detailed description of your question\r\n                      or issue, you can even attach files.\r\n                      <br />\r\n                      We answer customer tickets Monday to Friday / 10am - 5pm\r\n                      PST.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n\r\n                <form className=\"forms\" method=\"post\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"title\">\r\n                      Subject <span className=\"text-primary\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className={`form-control ${\r\n                        errorField.includes(\"title\") ? \"is-invalid\" : \"\"\r\n                      }`}\r\n                      id=\"title\"\r\n                      name=\"title\"\r\n                      required\r\n                      onChange={(e) => onChangeFormField(e, \"title\")}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"description\">\r\n                      Description <span className=\"text-primary\">*</span>\r\n                    </label>\r\n                    <textarea\r\n                      className={`form-control description ${\r\n                        errorField.includes(\"description\") ? \"is-invalid\" : \"\"\r\n                      }`}\r\n                      id=\"description\"\r\n                      name=\"description\"\r\n                      rows=\"10\"\r\n                      required\r\n                      onChange={(e) => onChangeFormField(e, \"description\")}\r\n                    ></textarea>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label>File upload</label>\r\n                    <div className=\"input-group file-upload-group col-xs-12\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control file-upload-info\"\r\n                        readOnly\r\n                        placeholder={fileUploadPlaceholder}\r\n                        style={{ borderColor: \"#313452 !important\" }}\r\n                      />\r\n                      <button\r\n                        className=\"file-upload-browse btn btn-gradient-primary\"\r\n                        type=\"button\"\r\n                      >\r\n                        Browse\r\n                      </button>\r\n                      <input\r\n                        type=\"file\"\r\n                        name=\"upload_file\"\r\n                        className=\"file-upload-default upload_file\"\r\n                        onChange={(e) => onFileInputChanged(e)}\r\n                      />\r\n                    </div>\r\n                    <p className=\"card-description mt-2\">\r\n                      Only allowed (JPEG, JPG, PNG)\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                      <div className=\"form-group mt-4\">\r\n                        <div\r\n                          className=\"button-group\"\r\n                          style={{ textAlign: \"center\" }}\r\n                        >\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"mb-2 btn btn-lg1 btn-primary mr-2\"\r\n                            onClick={(e) => {\r\n                              onSubmitTicket();\r\n                            }}\r\n                          >\r\n                            Submit\r\n                          </button>\r\n                          <button\r\n                            type=\"reset\"\r\n                            className=\"mb-2 btn btn-lg1 btn-light\"\r\n                          >\r\n                            Cancel\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserAddTicketPage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserTicketPage\\UserDetailTicketPage.js",["2457","2458","2459","2460","2461","2462","2463","2464","2465","2466","2467","2468","2469"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport { BASE_API_URL, BASE_UPLOAD_URL } from \"config/CONSTANTS\";\r\nimport {\r\n  ROUTE_USER_TEAM_DETAIL,\r\n  ROUTE_USER_TICKET,\r\n} from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport {\r\n  apiCloseUserTicket,\r\n  apiGetUserTickeDetailPageDetail,\r\n  apiGetUserTicketListPageDetail,\r\n  apiSubmitUserTicket,\r\n  apiSubmitUserTicketMessage,\r\n} from \"services/userTicketService\";\r\nimport {\r\n  empty,\r\n  get_data_value,\r\n  get_utc_timestamp,\r\n  intval,\r\n  isEmpty,\r\n  showToast,\r\n  show_loading,\r\n  timeConverter,\r\n  toLocalDatetime,\r\n} from \"utils/GlobalFunctions\";\r\n\r\nconst UserDetailTicketPage = (props) => {\r\n  const ticketid = props.match.params.ticketid;\r\n  const currentPageTitle = \"Ticket No #\" + ticketid\r\n  const dispatch = useDispatch();\r\n\r\n  //////////////////////////socket part////////////////////////////////\r\n  const userDataStore = useSelector((x) => x.userDataStore);\r\n  const socketStore = useSelector((x) => x.socketStore);\r\n  const socket = socketStore[\"socket\"];\r\n  useEffect(() => {\r\n    if (!empty(socket)) {\r\n      console.log(\"------------socketStore---------------\", socketStore);\r\n      addSocketListener();\r\n      getTicketNewMessageList();\r\n    }\r\n  }, [socket, ticketid]);\r\n\r\n  const token = get_data_value(userDataStore, \"token\");\r\n  const socketHeader = { token: token };\r\n\r\n  const [socketMessageList, setSocketMessageList] = useState([]);\r\n\r\n  const addSocketListener = () => {\r\n    socket.off(\"get_ticket_message_list\");\r\n    socket.on(\"get_ticket_message_list\", (data) => {\r\n      console.log(\r\n        \"-------------get_ticket_message_list reply data---------\",\r\n        data\r\n      );\r\n      if (parseInt(data[\"ticketid\"]) === parseInt(ticketid)) {\r\n        if (!empty(data)) {\r\n          setSocketMessageList(data[\"ticket_message_list\"]);\r\n          socket.emit(\"read_ticket_message_list\", {\r\n            ...socketHeader,\r\n            ticketid: ticketid,\r\n          });\r\n        }\r\n        setTimeout(function () {\r\n          window.scrollTo(0, document.body.scrollHeight);\r\n        }, 100);\r\n      }\r\n    });\r\n  };\r\n  const [lastPostId, setLastPostId] = useState(0);\r\n  const getTicketNewMessageList = () => {\r\n    socket.emit(\"get_ticket_message_list\", {\r\n      ...socketHeader,\r\n      last_id: lastPostId,\r\n      ticketid: ticketid,\r\n    });\r\n    //setLastPostId(lastPostId + 1)\r\n  };\r\n  const emitNewTicketNewMessage = () => {\r\n    socket.emit(\"submit_new_ticket_message\", {\r\n      ...socketHeader,\r\n      ticketid: ticketid,\r\n    });\r\n  };\r\n  ///////////////////////////end socket part/////////////////////////////\r\n\r\n  const initPage = () => {\r\n    dispatch(\r\n      UpdateAppData({\r\n        currentPageTitle: currentPageTitle,\r\n        current_route: ROUTE_USER_TICKET,\r\n        m_user_menu_collapsed: true,\r\n      })\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    initPage();\r\n    getData();\r\n  }, [ticketid]);\r\n  const history = useHistory();\r\n  const defaultPageData = {\r\n    user: {},\r\n    ticket_info: {},\r\n  };\r\n  const [pageData, setPageData] = useState(defaultPageData);\r\n  const getData = () => {\r\n    show_loading(true);\r\n    apiGetUserTickeDetailPageDetail(ticketid)\r\n      .then((api_res) => {\r\n        console.log(\"-----------------api_res----------------\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setPageData(api_res.data);\r\n          dispatch(updateUser(api_res.data[\"user\"]));\r\n          if (!empty(api_res.data[\"ticket_info\"][\"message_list\"])) {\r\n            setLastPostId(\r\n              intval(\r\n                api_res.data[\"ticket_info\"][\"message_list\"][\r\n                  api_res.data[\"ticket_info\"][\"message_list\"].length - 1\r\n                ][\"id\"]\r\n              )\r\n            );\r\n          }\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"warning\");\r\n      });\r\n  };\r\n\r\n  const [confirmModalTitle, setConfirmModalTitle] = useState(\r\n    \"Are you sure you want to close current ticket?\"\r\n  );\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n\r\n  const [uploadFile, setUploadFile] = useState(null);\r\n  const [fileUploadPlaceholder, setFileUploadPlaceholder] =\r\n    useState(\"No file selected\");\r\n  const initFormData = { description: \"\" };\r\n  const [formData, setFormData] = useState(initFormData);\r\n  const [fileKey, setFileKey] = useState(\"upload_file\");\r\n  const [errorField, setErrorField] = useState([]);\r\n\r\n  const validateFields = () => {\r\n    var errorList = Array();\r\n    errorList = isEmpty(formData, \"description\", errorList);\r\n    setErrorField([...errorList]);\r\n    return errorList.length > 0 ? false : true;\r\n  };\r\n  const onChangeFormField = (e, field_name) => {\r\n    if (errorField.includes(field_name)) {\r\n      let errors = errorField.filter((x) => x != field_name);\r\n      setErrorField([...errors]);\r\n    }\r\n    let updateData = {};\r\n    updateData[field_name] = e.target.value;\r\n    setFormData({ ...formData, ...updateData });\r\n  };\r\n  const onFileInputChanged = (e) => {\r\n    setUploadFile(e.target.files[0]);\r\n    console.log(\"e\", e);\r\n    let files = e.target.files;\r\n    if (!empty(files)) {\r\n      setFileUploadPlaceholder(files[0].name);\r\n    } else {\r\n      setFileUploadPlaceholder(\"No file selected\");\r\n    }\r\n  };\r\n  const onSubmitTicketMessage = () => {\r\n    let is_valid = validateFields();\r\n    console.log(\"is valid\", is_valid);\r\n    if (is_valid) {\r\n      show_loading(true);\r\n      apiSubmitUserTicketMessage(\r\n        { ...formData, ticket_id: ticketid },\r\n        uploadFile\r\n      )\r\n        .then((api_res) => {\r\n          console.log(\"api_res\", api_res);\r\n          show_loading(false);\r\n          if (api_res.status === \"1\") {\r\n            dispatch(updateUser(api_res.data[\"user\"]));\r\n            showToast(api_res.message, \"success\");\r\n            setFormData(initFormData);\r\n            setFileKey(\"upload_file_\" + new Date().getTime());\r\n            setUploadFile(null);\r\n            emitNewTicketNewMessage();\r\n          } else {\r\n            showToast(api_res.message, \"error\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          show_loading(false);\r\n          showToast(err, \"error\");\r\n        });\r\n    }\r\n  };\r\n  const onCloseTicket = () => {\r\n    setShowConfirmModal(true);\r\n  };\r\n  const closeTicket = () => {\r\n    show_loading(true);\r\n    apiCloseUserTicket(ticketid)\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          dispatch(updateUser(api_res.data[\"user\"]));\r\n          showToast(api_res.message, \"success\");\r\n          setShowConfirmModal(false);\r\n          getData();\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-detail-ticket-page\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title t-show-mobile\">{currentPageTitle}</h4>\r\n              <div className=\"card-content ticket-item-container\">\r\n                {true && (\r\n                  <div className=\"ticket-item\">\r\n                    <div className=\"ticket-row\">\r\n                      <div className=\"ticket-details\">\r\n                        <span className=\"info\">\r\n                          <i className=\"fa fa-clock-o\"></i> Posted at:{\" \"}\r\n                          <em className=\"ticket-timestamp unix-timestamp\">\r\n                            {timeConverter(\r\n                              get_data_value(\r\n                                pageData[\"ticket_info\"],\r\n                                \"add_timestamp\"\r\n                              )\r\n                            )}\r\n                          </em>\r\n                        </span>\r\n                      </div>\r\n\r\n                      <div className=\"ticket-status-box text-center\">\r\n                        <span\r\n                          className={`ticket-status badge badge-pill badge-sm ${\r\n                            pageData[\"ticket_info\"][\"status\"] === \"Opened\"\r\n                              ? \"badge-gradient-danger\"\r\n                              : pageData[\"ticket_info\"][\"status\"] === \"Answered\"\r\n                              ? \"badge-gradient-warning\"\r\n                              : pageData[\"ticket_info\"][\"status\"] === \"Replied\"\r\n                              ? \"badge-gradient-info\"\r\n                              : pageData[\"ticket_info\"][\"status\"] === \"Closed\"\r\n                              ? \"badge-light\"\r\n                              : \"badge-warning\"\r\n                          }`}\r\n                        >\r\n                          {pageData[\"ticket_info\"][\"status\"]}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"ticket-content mt-4\">\r\n                      <h3 className=\"ticket-subject text-normal\">\r\n                        {pageData[\"ticket_info\"][\"title\"]}\r\n                      </h3>\r\n                      <p className=\"text-normal ticket-description\">\r\n                        {pageData[\"ticket_info\"][\"description\"]}\r\n                      </p>\r\n                      <p\r\n                        className={`ticket-attachment ${\r\n                          empty(pageData[\"ticket_info\"][\"attachment_path\"])\r\n                            ? \"hidden\"\r\n                            : \"\"\r\n                        }`}\r\n                      >\r\n                        <a\r\n                          className=\"text-primary\"\r\n                          href={`${BASE_UPLOAD_URL}/${pageData[\"ticket_info\"][\"attachment_path\"]}`}\r\n                          target=\"_blank\"\r\n                          download\r\n                          rel=\"noreferrer\"\r\n                        >\r\n                          <i className=\"fa fa fa-cloud-download\"></i> File\r\n                          attachment\r\n                        </a>\r\n                        <img\r\n                          src={`${BASE_UPLOAD_URL}/${pageData[\"ticket_info\"][\"attachment_path\"]}`}\r\n                          alt=\"\"\r\n                          style={{ maxwidth: \"200px\", display: \"none\" }}\r\n                        />\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"ticket-message-container\">\r\n                      <hr\r\n                        className={`${\r\n                          empty(socketMessageList) ? \"hidden\" : \"\"\r\n                        }`}\r\n                      />\r\n                      <div className=\"ticket-message-list mt-4\">\r\n                        {socketMessageList.map((info, index) => (\r\n                          <div\r\n                            key={index + \"_\" + info[\"id\"]}\r\n                            className={`ticket-message-item ${\r\n                              intval(info[\"sender_id\"]) ===\r\n                              intval(pageData[\"user\"][\"id\"])\r\n                                ? \"self\"\r\n                                : \"other\"\r\n                            }`}\r\n                          >\r\n                            <div className=\"ticket-details ticket-message-time mb-2\">\r\n                              <span className=\"info\">\r\n                                <i className=\"fa fa-clock-o\"></i> Replied at:{\" \"}\r\n                                <em className=\"ticket-timestamp unix-timestamp\">\r\n                                  {timeConverter(info[\"add_timestamp\"])}\r\n                                </em>\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"reply-info mt-2\">\r\n                              <div className=\"user-avatar-name\">\r\n                                <img\r\n                                  className=\"img-responsive rounded-circle bg-white\"\r\n                                  alt=\"\"\r\n                                  src={`/assets/global/img/${\r\n                                    intval(info[\"sender_id\"]) ===\r\n                                    intval(pageData[\"user\"][\"id\"])\r\n                                      ? \"default-avatar-1.png\"\r\n                                      : intval(info[\"sender_admin_id\"]) === 1\r\n                                      ? \"admin-avatar.jpg\"\r\n                                      : \"assistant-avatar.png\"\r\n                                  }`}\r\n                                  width=\"40\"\r\n                                />\r\n                                <span className=\"ml-2 user-name\">\r\n                                  {info[\"sender_name\"]}\r\n                                </span>\r\n                              </div>\r\n                              <p className=\"mt-2 ticket-message-body\">\r\n                                {info[\"message\"]}\r\n                              </p>\r\n                              <p\r\n                                className={`ticket-attachment ${\r\n                                  empty(info[\"attachment_path\"]) ? \"hidden\" : \"\"\r\n                                }`}\r\n                              >\r\n                                <a\r\n                                  className=\"text-primary\"\r\n                                  href={`${BASE_UPLOAD_URL}/${info[\"attachment_path\"]}`}\r\n                                  target=\"_blank\"\r\n                                  download=\"\"\r\n                                  rel=\"noreferrer\"\r\n                                >\r\n                                  <i className=\"fa fa fa-cloud-download\"></i>{\" \"}\r\n                                  File attachment\r\n                                </a>\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                <form\r\n                  className={`forms ${\r\n                    pageData[\"ticket_info\"][\"status\"] === \"Closed\"\r\n                      ? \"hidden\"\r\n                      : \"\"\r\n                  }`}\r\n                  method=\"post\"\r\n                >\r\n                  <hr />\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"description\">\r\n                      Your reply: <span className=\"text-primary\">*</span>\r\n                    </label>\r\n                    <textarea\r\n                      className={`form-control description ${\r\n                        errorField.includes(\"description\") ? \"is-invalid\" : \"\"\r\n                      }`}\r\n                      id=\"description\"\r\n                      name=\"description\"\r\n                      rows=\"10\"\r\n                      value={formData[\"description\"]}\r\n                      required\r\n                      onChange={(e) => onChangeFormField(e, \"description\")}\r\n                    ></textarea>\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label>File upload</label>\r\n                    <div className=\"input-group file-upload-group col-xs-12\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control file-upload-info\"\r\n                        readOnly\r\n                        placeholder={fileUploadPlaceholder}\r\n                        style={{ borderColor: \"#313452 !important\" }}\r\n                      />\r\n                      <button\r\n                        className=\"file-upload-browse btn btn-gradient-primary\"\r\n                        type=\"button\"\r\n                      >\r\n                        Browse\r\n                      </button>\r\n                      <input\r\n                        type=\"file\"\r\n                        name=\"upload_file\"\r\n                        className=\"file-upload-default upload_file\"\r\n                        data-key={fileKey}\r\n                        key={fileKey}\r\n                        onChange={(e) => onFileInputChanged(e)}\r\n                      />\r\n                    </div>\r\n                    <p className=\"card-description mt-2\">\r\n                      Only allowed (JPEG, JPG, PNG)\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                      <div className=\"form-group mt-4\">\r\n                        <div\r\n                          className=\"button-group\"\r\n                          style={{ textAlign: \"center\" }}\r\n                        >\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"mb-2 btn btn-lg1 btn-primary mr-2\"\r\n                            onClick={(e) => {\r\n                              onSubmitTicketMessage();\r\n                            }}\r\n                          >\r\n                            Submit\r\n                          </button>\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"mb-2 btn-ticket-close btn btn-lg1 btn-danger\"\r\n                            onClick={(e) => {\r\n                              onCloseTicket();\r\n                            }}\r\n                          >\r\n                            Close\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ConfirmModal\r\n        content={confirmModalTitle}\r\n        onClickYes={closeTicket}\r\n        visibleModal={showConfirmModal}\r\n        setVisibleModal={setShowConfirmModal}\r\n        modalClass=\"user-page confirm-modal\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserDetailTicketPage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserTicketPage\\inc\\UserTicketListTable.js",["2470","2471","2472","2473","2474","2475","2476","2477","2478","2479","2480","2481","2482","2483","2484","2485","2486"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport { RULE_PERCENT } from \"config/CONSTANTS\";\r\nimport {\r\n  ROUTE_USER_ACADEMY,\r\n  ROUTE_USER_MARKETING,\r\n  ROUTE_USER_TEAM_DETAIL,\r\n} from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useMemo, useState } from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport {\r\n  apiGetUserMarketingPageDetail,\r\n  apiGetUserMarketingRankDetail,\r\n} from \"services/userMarketingService\";\r\nimport { apiDeleteUserPayoutRow } from \"services/userWalletService\";\r\n\r\nimport {\r\n  empty,\r\n  get_data_value,\r\n  intval,\r\n  is_empty,\r\n  jQuery,\r\n  showToast,\r\n  show_loading,\r\n  timeConverter,\r\n  toLocalDatetime,\r\n} from \"utils/GlobalFunctions\";\r\n\r\nconst UserTicketListTable = (props) => {\r\n  const { initialTableData } = props;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    setTableData(initialTableData);\r\n  }, [initialTableData]);\r\n  //const history = useHistory();\r\n  const [tableData, setTableData] = useState(initialTableData);\r\n  const [confirmModalTitle, setConfirmModalTitle] = useState(\r\n    \"Are you sure to delete this record?\"\r\n  );\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n  const [currentRow, setCurrentRow] = useState({});\r\n\r\n  const onClickDeleteRow = (row) => {\r\n    console.log(\"row\", row);\r\n    setCurrentRow(row);\r\n    setShowConfirmModal(true);\r\n  };\r\n  const deleteRow = () => {\r\n    console.log(\"selected row\", currentRow);\r\n    show_loading(true);\r\n    apiDeleteUserPayoutRow(currentRow)\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setShowConfirmModal(false);\r\n          setTableData(api_res.data[\"payout_list\"]);\r\n          showToast(\r\n            \"Residual record has been deleted successfully.\",\r\n            \"success\"\r\n          );\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Title\",\r\n      selector: \"title\",\r\n      sortable: false,\r\n      cell: (row) =>\r\n        row.id ? (\r\n          <>\r\n            <Link to={`/user/ticket/detail/${row.id}`} className=\"ticket-item\">\r\n              <div className=\"ticket-row\">\r\n                <div className=\"ticket-content\">\r\n                  <h3 className=\"ticket-subject text-emphasis\">{row.title}</h3>\r\n                  <div className=\"ticket-details\">\r\n                    <span className=\"info\">\r\n                      <i className=\"fa fa-info-circle\"></i> Ticket ID: {row.id}\r\n                    </span>\r\n                    <span className=\"info\">\r\n                      <i className=\"fa fa-clock-o\"></i>{\" \"}\r\n                      <em className=\"ticket-timestamp unix-timestamp\"></em>\r\n                      {timeConverter(row.add_timestamp)}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"ticket-status-box\">\r\n                  <span\r\n                    className={`badge badge-pill badge-sm ${\r\n                      row[\"status\"] === \"Opened\"\r\n                        ? \"badge-gradient-danger\"\r\n                        : row[\"status\"] === \"Answered\"\r\n                        ? \"badge-gradient-warning\"\r\n                        : row[\"status\"] === \"Replied\"\r\n                        ? \"badge-gradient-info\"\r\n                        : row[\"status\"] === \"Closed\"\r\n                        ? \"badge-light\"\r\n                        : \"badge-warning\"\r\n                    }`}\r\n                  >\r\n                    {row[\"status\"]}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          </>\r\n        ) : null,\r\n    },\r\n    {\r\n      name: \"Description\",\r\n      selector: \"description\",\r\n      hide: 1,\r\n      omit: true,\r\n    },\r\n  ];\r\n\r\n  const [filterText, setFilterText] = useState(\"\");\r\n  const [resetPaginationToggle, setResetPaginationToggle] = useState(false);\r\n\r\n  const filteredItems = tableData.filter(\r\n    (item) =>\r\n      JSON.stringify(item).toLowerCase().indexOf(filterText.toLowerCase()) !==\r\n      -1\r\n  );\r\n\r\n  const subHeaderComponent = useMemo(() => {\r\n    const handleClear = () => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText(\"\");\r\n      }\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <input\r\n          id=\"search\"\r\n          type=\"text\"\r\n          placeholder=\"Search...\"\r\n          value={filterText}\r\n          className=\"form-control input-search\"\r\n          onChange={(e) => setFilterText(e.target.value)}\r\n        />\r\n        <button className=\"a-btn btn-clear-search\" onClick={handleClear}>\r\n          x\r\n        </button>\r\n      </>\r\n    );\r\n  }, [filterText, resetPaginationToggle]);\r\n\r\n  return (\r\n    <>\r\n      <DataTable\r\n        theme=\"dark\"\r\n        noHeader={true}\r\n        noTableHead={true}\r\n        columns={columns}\r\n        data={filteredItems}\r\n        defaultSortField=\"id\"\r\n        defaultSortAsc={false}\r\n        subHeader\r\n        subHeaderComponent={subHeaderComponent}\r\n        pagination={true}\r\n        paginationPerPage={5}\r\n        paginationRowsPerPageOptions={[5, 10, 25, 50, 100]}\r\n      />\r\n      <ConfirmModal\r\n        content={confirmModalTitle}\r\n        onClickYes={deleteRow}\r\n        visibleModal={showConfirmModal}\r\n        setVisibleModal={setShowConfirmModal}\r\n        modalClass=\"user-page confirm-modal\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserTicketListTable;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminDashboardPage\\AdminDashboardPage.js",["2487","2488","2489","2490","2491","2492","2493","2494","2495","2496","2497","2498","2499","2500","2501"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport AdminLayout from \"layouts/AdminLayout/AdminLayout\";\r\nimport {\r\n  ROUTE_ADMIN_USERS,\r\n  ROUTE_USER_ACADEMY,\r\n  ROUTE_USER_PAYMENT,\r\n  ROUTE_USER_WALLET,\r\n} from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport { get_data_value, showToast, show_loading } from \"utils/GlobalFunctions\";\r\nimport AdminUserListTable from \"./inc/AdminUserListTable\";\r\n\r\nconst currentPageTitle = \"Dashboard\";\r\nconst AdminDashboardPage = () => {\r\n\r\n  return <Redirect to={ROUTE_ADMIN_USERS} />;\r\n\r\n  const dispatch = useDispatch();\r\n  const initPage = () => {\r\n    dispatch(\r\n      UpdateAppData({\r\n        currentPageTitle: currentPageTitle,\r\n        current_route: ROUTE_USER_PAYMENT,\r\n        m_user_menu_collapsed: true,\r\n      })\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    initPage();\r\n    getData();\r\n  }, []);\r\n  //const history = useHistory();\r\n  const defaultPageData = {\r\n    user: {},\r\n    payment_list: [],\r\n  };\r\n  const [pageData, setPageData] = useState(defaultPageData);\r\n  const getData = () => {};\r\n\r\n  return (\r\n    <>\r\n      <AdminLayout>\r\n        <div className=\"user-payment-page\">\r\n          <div className={`row`}>\r\n            <div className=\"col-lg-12 grid-margin stretch-card\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <h4 className=\"card-title t-show-mobile\">\r\n                    {currentPageTitle}\r\n                  </h4>\r\n                  <div className=\"card-content\">\r\n                    <div className=\"datatable-wrapper\">\r\n                      <AdminUserListTable\r\n                        initialTableData={pageData[\"payment_list\"]}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </AdminLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminDashboardPage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminDashboardPage\\inc\\AdminUserListTable.js",["2502","2503","2504","2505","2506","2507","2508","2509","2510","2511","2512","2513","2514","2515","2516","2517"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport { RULE_PERCENT } from \"config/CONSTANTS\";\r\nimport { ROUTE_USER_ACADEMY, ROUTE_USER_MARKETING } from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useMemo, useState } from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport {\r\n  apiGetUserMarketingPageDetail,\r\n  apiGetUserMarketingRankDetail,\r\n} from \"services/userMarketingService\";\r\nimport { apiDeleteUserPayoutRow } from \"services/userWalletService\";\r\n\r\nimport {\r\n  empty,\r\n  get_data_value,\r\n  intval,\r\n  is_empty,\r\n  jQuery,\r\n  showToast,\r\n  show_loading,\r\n  toLocalDatetime,\r\n} from \"utils/GlobalFunctions\";\r\n\r\nconst AdminUserListTable = (props) => {\r\n  const { initialTableData } = props;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    setTableData(initialTableData)\r\n  }\r\n  , [initialTableData]);\r\n  //const history = useHistory();\r\n  const [tableData, setTableData] = useState(initialTableData)\r\n  const [confirmModalTitle, setConfirmModalTitle] = useState(\"Are you sure to delete this record?\")\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false)\r\n  const [currentRow, setCurrentRow] = useState({})\r\n\r\n  const onClickDeleteRow = (row)=>{\r\n    console.log('row', row)\r\n    setCurrentRow(row)\r\n    setShowConfirmModal(true)\r\n  }\r\n  const deleteRow = ()=>{\r\n    console.log('selected row', currentRow)\r\n    show_loading(true);\r\n    apiDeleteUserPayoutRow(currentRow)\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setShowConfirmModal(false)\r\n          setTableData(api_res.data['payout_list']);\r\n          showToast(\r\n            \"Residual record has been deleted successfully.\",\r\n            \"success\"\r\n          );\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: \"ID\",\r\n      selector: \"id\",\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Transaction ID\",\r\n      selector: \"trans_id_str\",\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Paid amount\",\r\n      selector: \"paid_amount\",\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      selector: \"status\",\r\n      sortable: true,\r\n      cell: (row) =>\r\n        row.status ? (\r\n          <>\r\n            <span className={`badge badge-sm ${row.status==='success' ? \"badge-success\" : \"badge-warning\"}`}>{row.status}</span>\r\n          </>\r\n        ) : null,\r\n    },\r\n    {\r\n      name: \"Created At\",\r\n      selector: \"created_at\",\r\n      sortable: true,\r\n      hide: \"md\",\r\n      cell: (row) =>\r\n        row.created_at ? (\r\n          <>\r\n            <span className=\"hidden\">{row.created_at}</span>{toLocalDatetime(row.created_at)}\r\n          </>\r\n        ) : null,\r\n    }\r\n  ];\r\n\r\n  const [filterText, setFilterText] = useState(\"\");\r\n  const [resetPaginationToggle, setResetPaginationToggle] = useState(false);\r\n\r\n  const filteredItems = tableData.filter(\r\n    (item) =>\r\n      JSON.stringify(item).toLowerCase().indexOf(filterText.toLowerCase()) !==\r\n      -1\r\n  );\r\n\r\n  const subHeaderComponent = useMemo(() => {\r\n    const handleClear = () => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText(\"\");\r\n      }\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <input\r\n          id=\"search\"\r\n          type=\"text\"\r\n          placeholder=\"Search...\"\r\n          value={filterText}\r\n          className=\"form-control input-search\"\r\n          onChange={(e) => setFilterText(e.target.value)}\r\n        />\r\n        <button className=\"a-btn btn-clear-search\" onClick={handleClear}>\r\n          x\r\n        </button>\r\n      </>\r\n    );\r\n  }, [filterText, resetPaginationToggle]);\r\n\r\n  return (\r\n    <>\r\n    <DataTable\r\n      theme=\"dark\"\r\n      noHeader={true}\r\n      columns={columns}\r\n      data={filteredItems}\r\n      defaultSortField=\"id\"\r\n      defaultSortAsc={true}\r\n      subHeader\r\n      subHeaderComponent={subHeaderComponent}\r\n      pagination={true}\r\n      paginationRowsPerPageOptions={[5,10,25,50,100]}\r\n    />\r\n    <ConfirmModal content={confirmModalTitle} onClickYes={deleteRow} visibleModal={showConfirmModal} setVisibleModal={setShowConfirmModal} modalClass=\"user-page confirm-modal\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminUserListTable;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\layouts\\AdminLayout\\AdminLayout.js",["2518","2519","2520"],"import { ROUTE_LOGIN } from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { empty, get_data_value, is_empty } from \"utils/GlobalFunctions\";\r\nimport \"./AdminLayout.css\";\r\n\r\nimport { SOCKET_SERVER_URL } from \"config/CONSTANTS\";\r\nimport io from \"socket.io-client\";\r\nimport { updateSocket } from \"redux/actions/socketActions\";\r\nimport AdminLoader from \"./Includes/AdminLoader\";\r\nimport AdminSidebar from \"./Includes/AdminSidebar\";\r\nimport AdminHeader from \"./Includes/AdminHeader\";\r\nimport AdminFooter from \"./Includes/AdminFooter\";\r\nimport ConfirmLogoutModal from \"components/ConfirmLogoutModal/ConfirmLogoutModal\";\r\n\r\nconst AdminLayout = (props) => {\r\n  //console.log('props', props);\r\n  const dispatch = useDispatch();\r\n\r\n  const appDataStore = useSelector((x) => x.appDataStore);\r\n  const userDataStore = useSelector((x) => x.userDataStore);\r\n  const socketStore = useSelector((x) => x.socketStore);\r\n  //console.log(\"socketStore\", socketStore);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  ///////////////////////////////////socket part///////////////////////////////////////////\r\n  const token = get_data_value(userDataStore, \"token\");\r\n  const socketHeader = { token: token };\r\n\r\n  useEffect(() => {\r\n    if (!empty(token)) {\r\n      const socket = io(SOCKET_SERVER_URL);\r\n\r\n      socket.on(\"connnection\", () => {\r\n        console.log(\"-------------connected to server---------------\");\r\n      });\r\n      addSocketListener(socket);\r\n      getAdminNotificationData(socket);\r\n      socket.on(\"disconnect\", () => {\r\n        console.log(\"---------------Socket disconnecting-------------------\");\r\n        // dispatch(\r\n        //   updateSocket({\r\n        //     socket: null,\r\n        //   })\r\n        // );\r\n      });\r\n\r\n      dispatch(\r\n        updateSocket({\r\n          socket: socket,\r\n        })\r\n      );\r\n      return () => socket.close();\r\n    } else {\r\n      return () => false;\r\n    }\r\n  }, []);\r\n\r\n  const addSocketListener = (socket) => {\r\n    socket.off(\"get_admin_notification_data\");\r\n    socket.on(\"get_admin_notification_data\", (data) => {\r\n      console.log(\"-------------get_admin_notification_data---------\", data);\r\n      dispatch(\r\n        updateSocket({\r\n          admin_notification_data: data,\r\n        })\r\n      );\r\n    });\r\n  };\r\n  const getAdminNotificationData = (socket) => {\r\n    socket.emit(\"get_admin_notification_data\", { ...socketHeader });\r\n  };\r\n  ///////////////////////////////////end socket part///////////////////////////////////////////\r\n  const [showConfirmLogoutModal, setShowConfirmLogoutModal] = useState(false);\r\n  const askLogout = () => {\r\n    console.log(\"ask logout\");\r\n    setShowConfirmLogoutModal(true);\r\n  };\r\n\r\n  const doLogout = () => {\r\n    console.log(\"logout\");\r\n    setShowConfirmLogoutModal(false);\r\n    history.push(ROUTE_LOGIN);\r\n  };\r\n\r\n  const checkLogin = () => {\r\n    let token = get_data_value(userDataStore, \"token\");\r\n    let is_admin = userDataStore[\"is_admin\"];\r\n    return !is_empty(token) && is_admin === \"1\"; //if valid logged in (for admin)\r\n  };\r\n\r\n  if (!checkLogin()) {\r\n    return <Redirect to={ROUTE_LOGIN} />;\r\n  }\r\n  return (\r\n    <div>\r\n      <div\r\n        className={`user-page admin-page ${\r\n          appDataStore.user_menu_collapsed ? \"sidebar-icon-only\" : \"\"\r\n        }`}\r\n      >\r\n        <AdminLoader></AdminLoader>\r\n        <div className=\"container-scroller\">\r\n          <AdminSidebar askLogout={askLogout}></AdminSidebar>\r\n          <div className=\"container-fluid page-body-wrapper\">\r\n            <AdminHeader askLogout={askLogout}></AdminHeader>\r\n            <div className=\"main-panel\">\r\n              <div className=\"content-wrapper\">\r\n                <div>{props.children}</div>\r\n              </div>\r\n              <AdminFooter></AdminFooter>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <ConfirmLogoutModal\r\n          onClickYes={doLogout}\r\n          visibleModal={showConfirmLogoutModal}\r\n          setVisibleModal={setShowConfirmLogoutModal}\r\n          modalClass=\"user-page confirm-modal\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default AdminLayout;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\layouts\\AdminLayout\\Includes\\AdminLoader.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\layouts\\AdminLayout\\Includes\\AdminFooter.js",[],"E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\layouts\\AdminLayout\\Includes\\AdminSidebar.js",["2521","2522","2523","2524","2525","2526","2527","2528"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport {\r\n  ADMIN_LEVEL_ALL,\r\n  ADMIN_LEVEL_ASSISTANT,\r\n  ADMIN_LEVEL_SUPERADMIN,\r\n  USER_LEVEL_AFFILIATE,\r\n  USER_LEVEL_ALL,\r\n  USER_LEVEL_CUSTOMER,\r\n} from \"navigation/CONSTANTS\";\r\nimport { empty, get_data_value } from \"utils/GlobalFunctions\";\r\nimport { ADMIN_MENU_ITEMS } from \"./AdminMenuItems\";\r\n\r\nconst AdminSidebar = (props) => {\r\n  const { askLogout } = props;\r\n  const appDataStore = useSelector((x) => x.appDataStore);\r\n  const user = useSelector((x) => x.userDataStore);\r\n\r\n  let sideMenuItems = [];\r\n  for (let i = 0; i < ADMIN_MENU_ITEMS.length; i++) {\r\n    let menuItem = ADMIN_MENU_ITEMS[i];\r\n    if (user[\"admin_type\"] === ADMIN_LEVEL_SUPERADMIN) {\r\n      if (\r\n        menuItem[\"level\"] === ADMIN_LEVEL_ALL ||\r\n        menuItem[\"level\"] === ADMIN_LEVEL_SUPERADMIN\r\n      ) {\r\n        sideMenuItems.push(menuItem);\r\n      }\r\n    } else if (user[\"admin_type\"] === ADMIN_LEVEL_ASSISTANT) {\r\n      if (\r\n        menuItem[\"level\"] === USER_LEVEL_ALL ||\r\n        menuItem[\"level\"] === ADMIN_LEVEL_ASSISTANT\r\n      ) {\r\n        sideMenuItems.push(menuItem);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <nav className=\"sidebar\" id=\"sidebar\">\r\n      <div\r\n        className={`sidebar-content-wrapper sidebar-offcanvas custom-scroller ${\r\n          appDataStore.m_user_menu_collapsed ? \"\" : \"active\"\r\n        }`}\r\n      >\r\n        <ul className=\"nav\">\r\n          {sideMenuItems.map((menuItem, index) => (\r\n            <li\r\n              key={index}\r\n              className={`nav-item  ${\r\n                appDataStore.current_route === menuItem.route ? \"active\" : \"\"\r\n              }`}\r\n            >\r\n              <Link\r\n                to={menuItem.route}\r\n                activeclassname=\"active\"\r\n                className=\"nav-link\"\r\n              >\r\n                <i className={menuItem.icon}></i>\r\n                <span className=\"menu-title\">{menuItem.title}</span>\r\n              </Link>\r\n            </li>\r\n          ))}\r\n          <li className=\"nav-item\">\r\n            <div className=\"nav-link a-btn\" onClick={(e)=>{askLogout()}}>\r\n              <i className=\"mdi mdi-logout-variant\"></i>\r\n              <span className=\"menu-title\">Log out</span>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default AdminSidebar;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\layouts\\AdminLayout\\Includes\\AdminHeader.js",["2529","2530","2531","2532","2533","2534","2535","2536","2537","2538","2539"],"import {\r\n  ROUTE_ADMIN_PROFILE,\r\n  ROUTE_LOGIN,\r\n  ROUTE_USER_LOGOUT,\r\n  ROUTE_USER_PROFILE,\r\n  ROUTE_USER_TICKET_DETAIL,\r\n} from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useHistory, withRouter } from \"react-router-dom\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport {\r\n  empty,\r\n  get_data_value,\r\n  intval,\r\n  is_empty,\r\n  showToast,\r\n  show_dialog,\r\n} from \"utils/GlobalFunctions\";\r\n\r\nconst AdminHeader = (props) => {\r\n  const { askLogout } = props;\r\n  //console.log('socket',socket)\r\n  const appDataStore = useSelector((x) => x.appDataStore);\r\n  const userDataStore = useSelector((x) => x.userDataStore);\r\n\r\n  //////////////////////////socket part////////////////////////////////\r\n  const socketStore = useSelector((x) => x.socketStore);\r\n  const socket = socketStore[\"socket\"];\r\n  const admin_notification_data = socketStore[\"admin_notification_data\"];\r\n  useEffect(() => {\r\n    if (!empty(admin_notification_data)) {\r\n      console.log(\r\n        \"------------socketStore(AdminHeader page)---------------\",\r\n        admin_notification_data\r\n      );\r\n      //addSocketListener();\r\n      //getFeedList();\r\n    }\r\n  }, [admin_notification_data]);\r\n\r\n  const token = get_data_value(userDataStore, \"token\");\r\n  const socketHeader = { token: token };\r\n  ///////////////////////////end socket part/////////////////////////////\r\n\r\n  const dispatch = useDispatch();\r\n  const toggleUserSideBar = () => {\r\n    dispatch(\r\n      UpdateAppData({\r\n        user_menu_collapsed: appDataStore.user_menu_collapsed ? false : true,\r\n      })\r\n    );\r\n  };\r\n  const toggleMUserSideBar = () => {\r\n    console.log(\"m_user_menu_collapsed\");\r\n    dispatch(\r\n      UpdateAppData({\r\n        m_user_menu_collapsed: appDataStore.m_user_menu_collapsed\r\n          ? false\r\n          : true,\r\n      })\r\n    );\r\n  };\r\n  const history = useHistory();\r\n  const onLogout = () => {\r\n    askLogout()\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar p-0 d-flex flex-row\">\r\n        <div className=\"navbar-menu-wrapper d-flex align-items-center\">\r\n          <button\r\n            className=\"navbar-toggler navbar-toggler align-self-center\"\r\n            type=\"button\"\r\n            data-toggle=\"minimize\"\r\n            onClick={toggleUserSideBar}\r\n          >\r\n            <span className=\"ti-align-left\"></span>\r\n          </button>\r\n          <div className=\"navbar-brand-wrapper d-flex align-items-center justify-content-center\">\r\n            <span className=\"navbar-brand brand-logo\">\r\n              {appDataStore.currentPageTitle}\r\n            </span>\r\n            <span className=\"navbar-brand brand-logo-mini\">HLX</span>\r\n          </div>\r\n          <ul className=\"navbar-nav navbar-nav-right ml-auto\">\r\n            {/* <li className=\"hidden nav-item nav-search d-none d-sm-flex\">\r\n              <div className=\"nav-link d-flex justify-content-center align-items-center\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control hidden\"\r\n                  id=\"search-field\"\r\n                  placeholder=\"Search...\"\r\n                />\r\n                <i className=\"ti-search mx-0\" id=\"search-icon\"></i>\r\n              </div>\r\n            </li> */}\r\n            <li className=\"nav-item dropdown\">\r\n              <button\r\n                className=\"a-btn nav-link count-indicator dropdown-toggle d-flex justify-content-center align-items-center\"\r\n                id=\"messageDropdown\"\r\n                data-toggle=\"dropdown\"\r\n              >\r\n                <i className=\"ti-comment mx-0\"></i>\r\n                <span\r\n                  className=\"notification-count badge badge-pill badge-primary\"\r\n                  data-value={\r\n                    !empty(admin_notification_data) &&\r\n                    !empty(admin_notification_data[\"unread_ticket_list\"])\r\n                      ? admin_notification_data[\"unread_ticket_list\"].length\r\n                      : \"\"\r\n                  }\r\n                >\r\n                  {!empty(admin_notification_data) &&\r\n                  !empty(admin_notification_data[\"unread_ticket_list\"])\r\n                    ? admin_notification_data[\"unread_ticket_list\"].length > 10\r\n                      ? \"10+\"\r\n                      : admin_notification_data[\"unread_ticket_list\"].length\r\n                    : \"\"}\r\n                </span>\r\n              </button>\r\n              <div\r\n                className=\"dropdown-menu dropdown-menu-right navbar-dropdown preview-list\"\r\n                aria-labelledby=\"messageDropdown\"\r\n              >\r\n                <p className=\"mb-0 font-weight-normal float-left dropdown-header hidden\">\r\n                  Tickets\r\n                </p>\r\n                <div className=\"notification-list custom-scroller\">\r\n                  {!empty(admin_notification_data) &&\r\n                    !empty(admin_notification_data[\"unread_ticket_list\"]) &&\r\n                    admin_notification_data[\"unread_ticket_list\"].map(\r\n                      (item, index) => (\r\n                        <Link\r\n                          className=\"notification-item dropdown-item preview-item\"\r\n                          to={`/admin/ticket/detail/${item[\"id\"]}`}\r\n                          key={item[\"id\"]}\r\n                        >\r\n                          <div className=\"preview-item-content flex-grow\">\r\n                            <h5 className=\"notification-content text-emphasis preview-subject font-weight-normal\">\r\n                              {item[\"title\"]}\r\n                            </h5>\r\n                            <p className=\"notification-content text-emphasis font-weight-light small-text text-white-80 mb-0\">\r\n                              {item[\"msg_info\"][\"message\"]}\r\n                            </p>\r\n                          </div>\r\n                        </Link>\r\n                      )\r\n                    )}\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li className=\"nav-item nav-profile dropdown\">\r\n              <button\r\n                className=\"a-btn nav-link\"\r\n                data-toggle=\"dropdown\"\r\n                id=\"profileDropdown\"\r\n              >\r\n                <span className=\"hi-text\">\r\n                  Hi,{\" \"}\r\n                  {userDataStore.admin_type === \"assistant\"\r\n                    ? \"Assistant\"\r\n                    : \"Admin\"}\r\n                </span>\r\n                &nbsp; &nbsp;\r\n                <img\r\n                  src={`/assets/global/img/${\r\n                    userDataStore[\"admin_type\"] === \"assistant\"\r\n                      ? \"assistant-avatar.png\"\r\n                      : \"admin-avatar.jpg\"\r\n                  }`}\r\n                  alt=\"profile\"\r\n                />\r\n              </button>\r\n              <div\r\n                className=\"dropdown-menu dropdown-menu-right navbar-dropdown\"\r\n                aria-labelledby=\"profileDropdown\"\r\n              >\r\n                <Link className=\"dropdown-item\" to={ROUTE_ADMIN_PROFILE}>\r\n                  <i className=\"ti-user text-primary\"></i>\r\n                  Profile\r\n                </Link>\r\n                <button\r\n                  className=\"a-btn dropdown-item btn-logout\"\r\n                  to={ROUTE_USER_LOGOUT}\r\n                  title=\"logout\"\r\n                  onClick={onLogout}\r\n                >\r\n                  <i className=\"ti-new-window text-primary\"></i>\r\n                  Logout\r\n                </button>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n          <button\r\n            className=\"navbar-toggler navbar-toggler-right d-lg-none align-self-center m-btn-toggle-sidebar\"\r\n            type=\"button\"\r\n            data-toggle=\"offcanvas\"\r\n            onClick={toggleMUserSideBar}\r\n          >\r\n            <span className=\"ti-menu\"></span>\r\n          </button>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(AdminHeader);\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\layouts\\AdminLayout\\Includes\\AdminMenuItems.js",["2540"],"import {\r\n  ADMIN_LEVEL_ALL,\r\n  ADMIN_LEVEL_SUPERADMIN,\r\n  ROUTE_ADMIN_ANNOUNCEMENT,\r\n  ROUTE_ADMIN_COUPON,\r\n  ROUTE_ADMIN_FEED,\r\n  ROUTE_ADMIN_LICESES,\r\n  ROUTE_ADMIN_PAYMENTS,\r\n  ROUTE_ADMIN_PROFILE,\r\n  ROUTE_ADMIN_RANK,\r\n  ROUTE_ADMIN_STATS,\r\n  ROUTE_ADMIN_TEAM,\r\n  ROUTE_ADMIN_TICKET,\r\n  ROUTE_ADMIN_USERS,\r\n  ROUTE_ADMIN_WITHDRAWS,\r\n  ROUTE_LOGIN,\r\n} from \"navigation/CONSTANTS\";\r\n\r\n\r\nexport const ADMIN_MENU_ITEMS = [\r\n  {\r\n    route: ROUTE_ADMIN_USERS,\r\n    icon: \"mdi mdi-account-multiple\",\r\n    title: \"Users\",\r\n    level: ADMIN_LEVEL_ALL,\r\n  },\r\n  {\r\n    route: ROUTE_ADMIN_PROFILE,\r\n    icon: \"mdi mdi-account\",\r\n    title: \"Profile\",\r\n    level: ADMIN_LEVEL_SUPERADMIN,\r\n  },\r\n  {\r\n    route: ROUTE_ADMIN_LICESES,\r\n    icon: \"mdi mdi-format-list-bulleted-type\",\r\n    title: \"Licenses\",\r\n    level: ADMIN_LEVEL_ALL,\r\n  },\r\n  {\r\n    route: ROUTE_ADMIN_PAYMENTS,\r\n    icon: \"mdi mdi-currency-usd\",\r\n    title: \"Payments\",\r\n    level: ADMIN_LEVEL_ALL,\r\n  },\r\n  {\r\n    route: ROUTE_ADMIN_WITHDRAWS,\r\n    icon: \"mdi mdi-wallet\",\r\n    title: \"Withdraw\",\r\n    level: ADMIN_LEVEL_ALL,\r\n  },\r\n  {\r\n    route: ROUTE_ADMIN_STATS,\r\n    icon: \"mdi mdi-chart-bar\",\r\n    title: \"Company Stats\",\r\n    level: ADMIN_LEVEL_SUPERADMIN,\r\n  },\r\n  {\r\n    route: ROUTE_ADMIN_TEAM,\r\n    icon: \"mdi mdi-sitemap\",\r\n    title: \"MLM Tree\",\r\n    level: ADMIN_LEVEL_ALL,\r\n  },\r\n  {\r\n    route: ROUTE_ADMIN_RANK,\r\n    icon: \"mdi mdi-buffer\",\r\n    title: \"Rank\",\r\n    level: ADMIN_LEVEL_ALL,\r\n  },\r\n  {\r\n    route: ROUTE_ADMIN_TICKET,\r\n    icon: \"mdi mdi-forum\",\r\n    title: \"Tickets\",\r\n    level: ADMIN_LEVEL_ALL,\r\n  },\r\n  {\r\n    route: ROUTE_ADMIN_COUPON,\r\n    icon: \"mdi mdi-code-not-equal-variant\",\r\n    title: \"Coupon System\",\r\n    level: ADMIN_LEVEL_SUPERADMIN,\r\n  },\r\n  {\r\n    route: ROUTE_ADMIN_ANNOUNCEMENT,\r\n    icon: \"mdi mdi-comment-alert\",\r\n    title: \"Announcement\",\r\n    level: ADMIN_LEVEL_SUPERADMIN,\r\n  },\r\n  {\r\n    route: ROUTE_ADMIN_FEED,\r\n    icon: \"mdi mdi-rss-box\",\r\n    title: \"News Feed\",\r\n    level: ADMIN_LEVEL_SUPERADMIN,\r\n  },\r\n];\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminUsersPage\\AdminUsersPage.js",["2541","2542","2543","2544","2545","2546","2547","2548","2549"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport AdminLayout from \"layouts/AdminLayout/AdminLayout\";\r\nimport {\r\n  ROUTE_ADMIN_USERS,\r\n  ROUTE_USER_ACADEMY,\r\n  ROUTE_USER_PAYMENT,\r\n  ROUTE_USER_WALLET,\r\n} from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport { apiAdminGetProfileInfo } from \"services/adminCommonService\";\r\nimport { apiGetAdminUsersPageDetail } from \"services/adminUsersService\";\r\nimport { get_data_value, showToast, show_loading } from \"utils/GlobalFunctions\";\r\nimport AdminUserListTable from \"./inc/AdminUserListTable\";\r\n\r\nconst currentPageTitle = \"Users\";\r\nconst AdminUsersPage = () => {\r\n  const dispatch = useDispatch();\r\n  const initPage = () => {\r\n    dispatch(\r\n      UpdateAppData({\r\n        currentPageTitle: currentPageTitle,\r\n        current_route: ROUTE_ADMIN_USERS,\r\n        m_user_menu_collapsed: true,\r\n      })\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    initPage();\r\n    getData();\r\n  }, []);\r\n  const history = useHistory();\r\n  const defaultPageData = {\r\n    user: {},\r\n    user_list: [],\r\n  };\r\n  const [pageData, setPageData] = useState(defaultPageData);\r\n  const getData = () => {\r\n    show_loading(true);\r\n    apiAdminGetProfileInfo()\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setPageData(api_res.data);\r\n          dispatch(updateUser(api_res.data[\"user\"]));\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AdminLayout>\r\n        <div className=\"user-list-page\">\r\n          <div className={`row`}>\r\n            <div className=\"col-lg-12 grid-margin stretch-card\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <h4 className=\"card-title t-show-mobile\">\r\n                    {currentPageTitle}\r\n                  </h4>\r\n                  <div className=\"card-content\">\r\n                    <div className=\"datatable-page\">\r\n                    <AdminUserListTable\r\n                        pageData={pageData}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </AdminLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminUsersPage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminUsersPage\\inc\\AdminUserListTable.js",["2550","2551","2552","2553","2554","2555","2556","2557","2558","2559","2560","2561","2562","2563","2564","2565","2566","2567","2568","2569","2570"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport { RULE_PERCENT } from \"config/CONSTANTS\";\r\nimport { ROUTE_USER_ACADEMY, ROUTE_USER_MARKETING } from \"navigation/CONSTANTS\";\r\nimport React, { useState, useEffect, useCallback, useMemo } from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport {\r\n  apiGetUserMarketingPageDetail,\r\n  apiGetUserMarketingRankDetail,\r\n} from \"services/userMarketingService\";\r\nimport { apiDeleteUserPayoutRow } from \"services/userWalletService\";\r\n\r\nimport {\r\n  curl_post,\r\n  empty,\r\n  get_data_value,\r\n  intval,\r\n  is_empty,\r\n  jQuery,\r\n  showToast,\r\n  show_loading,\r\n  timeConverter,\r\n  toLocalDatetime,\r\n} from \"utils/GlobalFunctions\";\r\nimport { urlAdminDeleteUser, urlAdminDownloadUserList, urlAdminGetUsersList, urlUserGetTreeUserList } from \"services/CONSTANTS\";\r\nimport TmpPasswordModal from \"./TmpPasswordModal\";\r\nimport AdminUserDownloadModal from \"./AdminUserDownloadModal\";\r\n\r\nimport {\r\n  apiAdminSetUserTmpPassword,\r\n  apiAdminUpdateUserInfo,\r\n  apiAdminUpdateUserStatus,\r\n} from \"services/adminUsersService\";\r\nimport AdminUserInfoModal from \"./AdminUserInfoModal\";\r\n\r\nconst AdminUserListTable = (props) => {\r\n  const userDataStore = useSelector((x) => x.userDataStore);\r\n  const { pageData } = props;\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [totalRows, setTotalRows] = useState(0);\r\n  const [perPage, setPerPage] = useState(10);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  // const [deleted, setDeleted] = useState([]);\r\n  const [currentSortField, setCurrentSortField] = useState(\"add_timestamp\");\r\n  const [currentSortDirection, setCurrentSortDirection] = useState(\"asc\");\r\n  const [userType, setUserType] = useState(\"\");\r\n\r\n  const [filterText, setFilterText] = useState(\"\");\r\n\r\n  const fetchDataList = async (\r\n    page,\r\n    size = perPage,\r\n    searchText = filterText,\r\n    sortColumn = currentSortField,\r\n    sortDirection = currentSortDirection,\r\n    userKind = userType\r\n  ) => {\r\n    show_loading(true);\r\n\r\n    const response = await axios.get(\r\n      `${urlAdminGetUsersList}?page=${page}&per_page=${size}&keyword1=${searchText}&sort_column=${sortColumn}&sort_direction=${sortDirection}&user_kind=${userKind}`\r\n    );\r\n\r\n    setData(response.data.data);\r\n    setTotalRows(response.data.total);\r\n    show_loading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchDataList(1);\r\n  }, []);\r\n\r\n  const removeItem = (array, item) => {\r\n    const newArray = array.slice();\r\n    newArray.splice(\r\n      newArray.findIndex((a) => a === item),\r\n      1\r\n    );\r\n\r\n    return newArray;\r\n  };\r\n\r\n  const handleDelete = useCallback(\r\n    (row) => async () => {\r\n      await axios.delete(`${urlAdminDeleteUser}?id=${row.id}`);\r\n      const response = await axios.get(\r\n        `${urlAdminGetUsersList}?page=${currentPage}&per_page=${perPage}&keyword1=${filterText}&sort_column=${currentSortField}&sort_direction=${currentSortDirection}&user_kind=${userType}`\r\n      );\r\n\r\n      setData(removeItem(response.data.data, row));\r\n      setTotalRows(totalRows - 1);\r\n    },\r\n    [currentPage, perPage, totalRows]\r\n  );\r\n  const handlePageChange = (page) => {\r\n    fetchDataList(page);\r\n    setCurrentPage(page);\r\n  };\r\n  const handlePerRowsChange = async (newPerPage, page) => {\r\n    fetchDataList(page, newPerPage);\r\n    setPerPage(newPerPage);\r\n  };\r\n  const handleSearchChange = (newSearchText) => {\r\n    fetchDataList(currentPage, perPage, newSearchText);\r\n    setFilterText(newSearchText);\r\n  };\r\n  const onSort = (column, sortDirection, event) => {\r\n    console.log(\r\n      \"--------column, sortDirection, event--------\",\r\n      column,\r\n      sortDirection,\r\n      event\r\n    );\r\n    let sortColumn = column[\"selector\"];\r\n    setCurrentSortField(sortColumn);\r\n    setCurrentSortDirection(sortDirection);\r\n    fetchDataList(currentPage, perPage, filterText, sortColumn, sortDirection);\r\n  };\r\n  const handleChangeUserKind = (userKind) => {\r\n    setUserType(userKind);\r\n    fetchDataList(\r\n      currentPage,\r\n      perPage,\r\n      filterText,\r\n      currentSortField,\r\n      currentSortDirection,\r\n      userKind\r\n    );\r\n  };\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        name: \"ID\",\r\n        selector: \"id\",\r\n        sortable: true,\r\n        omit: true,\r\n      },\r\n      {\r\n        name: \"Name\",\r\n        selector: \"user_name\",\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"Email\",\r\n        selector: \"user_email\",\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"Type\",\r\n        selector: \"user_type\",\r\n        sortable: false,\r\n        cell: (row) =>\r\n          row.user_type < 2 ? (\r\n            <>\r\n              <span\r\n                className={`badge badge-pill badge-sm ${\r\n                  row.user_type === 0\r\n                    ? row.license_status === 2 ? \"badge-warning\" : intval(row.is_active) === 0\r\n                      ? \"badge-light\"\r\n                      : \"badge-success\"\r\n                    : row.user_type === 1\r\n                    ? row.check_user_has_active_license\r\n                      ? \"badge-info\"\r\n                      : \"badge-danger\"\r\n                    : \"\"\r\n                }`}\r\n              >{`${\r\n                row.user_type === 0\r\n                  ? intval(row.is_active) === 1\r\n                    ? row.license_status === 2 ? \"Free Tier\" : \"Active Customer\"\r\n                    : \"Inactive Customer\"\r\n                  : row.user_type === 1\r\n                  ? row.check_user_has_active_license\r\n                    ? \"Both\"\r\n                    : \"Affiliate\"\r\n                  : \"\"\r\n              }`}</span>\r\n            </>\r\n          ) : null,\r\n      },\r\n      {\r\n        name: \"Rank\",\r\n        selector: \"rank_name\",\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"Wallet($)\",\r\n        selector: \"balance\",\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"Register Date\",\r\n        selector: \"add_timestamp\",\r\n        sortable: true,\r\n        cell: (row) => <span>{timeConverter(row.add_timestamp)}</span>,\r\n      },\r\n      {\r\n        name: \"Action\",\r\n        // eslint-disable-next-line react/button-has-type\r\n        cell: (row) =>\r\n          !empty(userDataStore[\"admin_type\"]) &&\r\n          userDataStore[\"admin_type\"] !== \"assistant\" && (\r\n            <>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-xs btn-danger\"\r\n                onClick={() => onClickSetTmpPassword(row)}\r\n              >\r\n                <i className=\"fa fa-key\"></i>\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-xs btn-info\"\r\n                onClick={() => onClickEditUser(row)}\r\n              >\r\n                <i className=\"fa fa-pencil\"></i>\r\n              </button>\r\n              {intval(row[\"status\"]) === 1 && (\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-xs btn-warning\"\r\n                  onClick={() => onClickChangeUserStatus(row, \"block\")}\r\n                >\r\n                  <i className=\"fa fa-ban\"></i>\r\n                </button>\r\n              )}\r\n              {intval(row[\"status\"]) === 0 && (\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-xs btn-success\"\r\n                  onClick={() => onClickChangeUserStatus(row, \"active\")}\r\n                >\r\n                  <i className=\"fa fa-check\"></i>\r\n                </button>\r\n              )}\r\n            </>\r\n          ),\r\n      },\r\n    ],\r\n    [handleDelete]\r\n  );\r\n  const [resetPaginationToggle, setResetPaginationToggle] = useState(false);\r\n  // const filteredItems = data.filter(\r\n  //   (item) =>\r\n  //     JSON.stringify(item).toLowerCase().indexOf(filterText.toLowerCase()) !==\r\n  //     -1\r\n  // );\r\n\r\n  const subHeaderComponent = useMemo(() => {\r\n    const handleClear = () => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        handleSearchChange(\"\");\r\n      }\r\n    };\r\n    const onChangeUserType = (type) => {\r\n      handleChangeUserKind(type);\r\n    };\r\n\r\n    return (\r\n      <div className=\"datatable-subheader\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8\">\r\n            <div className=\"btn-toolbar\">\r\n              <div className=\"btn-group\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-primary\"\r\n                  onClick={(e) => onChangeUserType(\"\")}\r\n                >\r\n                  All\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-danger\"\r\n                  onClick={(e) => onChangeUserType(\"affliate\")}\r\n                >\r\n                  Affiliate\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-success\"\r\n                  onClick={(e) => onChangeUserType(\"active_customer\")}\r\n                >\r\n                  Active Customer\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-info\"\r\n                  onClick={(e) => onChangeUserType(\"both\")}\r\n                >\r\n                  Both\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-warning\"\r\n                  onClick={(e) => onChangeUserType(\"free_tier\")}\r\n                >\r\n                  Free Tier\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-light\"\r\n                  onClick={(e) => onChangeUserType(\"inactive_customer\")}\r\n                >\r\n                  Inactive Customer\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-dark\"\r\n                  onClick={(e) => onChangeUserType(\"holding_tank\")}\r\n                >\r\n                  In Holding Tank\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n          <div className=\"pull-right ml-1\" style={{border: \"1px solid transparent\"}}>\r\n              <button type=\"button\" className=\"btn btn-success btn-icon-text\" title=\"Download\" onClick={(e)=>{onClickDownload()}}>\r\n                <i className=\"ti-download\"></i>\r\n              </button>\r\n            </div>\r\n            <div className=\"datatable-filter-box pull-right\">\r\n              <input\r\n                id=\"search\"\r\n                type=\"text\"\r\n                placeholder=\"Search...\"\r\n                value={filterText}\r\n                className=\"form-control input-search\"\r\n                onChange={(e) => handleSearchChange(e.target.value)}\r\n              />\r\n              <button className=\"a-btn btn-clear-search\" onClick={handleClear}>\r\n                x\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }, [filterText, resetPaginationToggle]);\r\n\r\n  //////////////////////////////////////////start modal actions///////////////////////////////////////////////\r\n  const [currentRow, setCurrentRow] = useState({});\r\n\r\n  const [showTmpPasswordModal, setShowTmpPasswordModal] = useState(false);\r\n  const onClickSetTmpPassword = (row) => {\r\n    setShowTmpPasswordModal(true);\r\n    setCurrentRow(row);\r\n  };\r\n  const submitTmpPassword = (params) => {\r\n    console.log(\"params\", params);\r\n    show_loading(true);\r\n    apiAdminSetUserTmpPassword(params)\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setShowTmpPasswordModal(false);\r\n          showToast(\"Temporary password has been set successfully\", \"success\");\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  const [showUserInfoModal, setShowUserInfoModal] = useState(false);\r\n  const onClickEditUser = (row) => {\r\n    setShowUserInfoModal(true);\r\n    setCurrentRow(row);\r\n  };\r\n  const updateUserInfo = (params) => {\r\n    console.log(\"params\", params);\r\n    show_loading(true);\r\n    apiAdminUpdateUserInfo(params)\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setShowUserInfoModal(false);\r\n          showToast(\"User has been updated successfully\", \"success\");\r\n\r\n          fetchDataList(currentPage, perPage);\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  const [confirmModalTitle, setConfirmModalTitle] = useState(\r\n    \"Are you sure to delete this record?\"\r\n  );\r\n  const [confirmedAction, setConfirmedAction] = useState(\"change_user_status\");\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n  const onClickChangeUserStatus = (row, status) => {\r\n    console.log(\"row, status\", row, status);\r\n    setCurrentRow(row);\r\n    if (status === \"active\") {\r\n      setConfirmModalTitle(\"Are you sure you want to activate user?\");\r\n      setConfirmedAction(\"activate_user\");\r\n    } else {\r\n      setConfirmModalTitle(\"Are you sure you want to block user?\");\r\n      setConfirmedAction(\"block_user\");\r\n    }\r\n    setShowConfirmModal(true);\r\n  };\r\n  const doConfirmedAction = () => {\r\n    let params = {\r\n      user_id: currentRow[\"id\"],\r\n    };\r\n    if (confirmedAction === \"activate_user\") {\r\n      params[\"status\"] = \"1\";\r\n    } else if (confirmedAction === \"block_user\") {\r\n      params[\"status\"] = \"0\";\r\n    }\r\n    console.log(\"params\", params);\r\n    show_loading(true);\r\n    apiAdminUpdateUserStatus(params)\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setShowConfirmModal(false);\r\n          showToast(api_res.message, \"success\");\r\n\r\n          fetchDataList(currentPage, perPage);\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  const [showUserDownloadModal, setShowUserDownloadModal] = useState(false);\r\n  const onClickDownload = () => {\r\n    setShowUserDownloadModal(true);\r\n  };\r\n  const doDownloadUserList = (user_kind) => {\r\n    console.log(\"user_kind: \", user_kind);\r\n    setShowUserDownloadModal(false);\r\n    // let download_link = urlAdminDownloadUserList + \"?option=\"+user_kind\r\n    // window.location.href = download_link;\r\n    if(userDataStore['admin_type'] !== 'superadmin'){\r\n      showToast(\"Permission is denied\", \"error\")\r\n      return false\r\n    }else{\r\n      let post_param = {\r\n        option: user_kind,\r\n        token: userDataStore['token']\r\n      }\r\n      curl_post(urlAdminDownloadUserList, post_param, 'post')\r\n    }\r\n  };\r\n  ////////////////////////////////////////////end modal actions/////////////////////////////////////////////////////////\r\n\r\n  return (\r\n    <>\r\n      <div className=\"datatable-wrapper\">\r\n        <DataTable\r\n          theme=\"dark\"\r\n          noHeader={true}\r\n          columns={columns}\r\n          data={data}\r\n          defaultSortField={currentSortField}\r\n          defaultSortAsc={currentSortDirection === \"asc\"}\r\n          onSort={onSort}\r\n          sortServer={true}\r\n          subHeader\r\n          subHeaderComponent={subHeaderComponent}\r\n          pagination\r\n          paginationServer\r\n          paginationTotalRows={totalRows}\r\n          paginationDefaultPage={currentPage}\r\n          onChangeRowsPerPage={handlePerRowsChange}\r\n          onChangePage={handlePageChange}\r\n          paginationRowsPerPageOptions={[5, 10, 25, 50, 100]}\r\n        />\r\n      </div>\r\n\r\n      <TmpPasswordModal\r\n        modalTitle={`Set temporary password`}\r\n        isVisible={showTmpPasswordModal}\r\n        setVisibleModal={setShowTmpPasswordModal}\r\n        pageData={pageData}\r\n        currentRow={currentRow}\r\n        submitModalData={submitTmpPassword}\r\n        modalClass=\"user-page admin-page set-temporary-password\"\r\n      />\r\n      <AdminUserInfoModal\r\n        modalTitle={`Edit User`}\r\n        isVisible={showUserInfoModal}\r\n        setVisibleModal={setShowUserInfoModal}\r\n        pageData={pageData}\r\n        currentRow={currentRow}\r\n        submitModalData={updateUserInfo}\r\n        modalClass=\"user-page admin-page user-info-modal\"\r\n      />\r\n      <AdminUserDownloadModal\r\n        modalTitle={`Choose download option`}\r\n        isVisible={showUserDownloadModal}\r\n        setVisibleModal={setShowUserDownloadModal}\r\n        pageData={pageData}\r\n        submitModalData={doDownloadUserList}\r\n        modalClass=\"user-page admin-page user-info-modal\"\r\n      />\r\n\r\n      <ConfirmModal\r\n        content={confirmModalTitle}\r\n        onClickYes={doConfirmedAction}\r\n        visibleModal={showConfirmModal}\r\n        setVisibleModal={setShowConfirmModal}\r\n        modalClass=\"user-page admin-page confirm-modal\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminUserListTable;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\adminUsersService.js",["2571","2572","2573","2574","2575"],"import { APP_NAME, SYSTEM_ERROR } from \"config/CONSTANTS\";\r\nimport { curl_post } from \"utils/GlobalFunctions\";\r\nimport { axiosGet, axiosPost } from \"./ajaxServices\";\r\nimport {urlAdminDownloadUserList, urlAdminGetUsersPageDetail, urlAdminSetUserTmpPassword, urlAdminUpdateUserInfo, urlAdminUpdateUserStatus, urlUserDeletePaymentRow, urlUserGetPaymentListPageDetail } from \"./CONSTANTS\";\r\n\r\nexport const apiGetAdminUsersPageDetail = () => {\r\n  const url = urlAdminGetUsersPageDetail;\r\n  return new Promise((resolve, reject) => {\r\n    axiosGet(url, {}, SYSTEM_ERROR)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n};\r\nexport function apiAdminSetUserTmpPassword(params) {\r\n  const url = urlAdminSetUserTmpPassword;\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  var formData = new FormData();\r\n  formData.append(\"user_id\", params.user_id);\r\n  formData.append(\"tmp_password\", params.tmp_password);\r\n\r\n  return new Promise((resolve, reject) => {\r\n    axiosPost(url, formData, config)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n} \r\nexport function apiAdminUpdateUserInfo(params) {\r\n  const url = urlAdminUpdateUserInfo;\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  var formData = new FormData();\r\n  formData.append(\"id\", params.id);\r\n  formData.append(\"user_email\", params.user_email.trim());\r\n  formData.append(\"user_first_name\", params.user_first_name.trim());\r\n  formData.append(\"user_last_name\", params.user_last_name.trim());\r\n  formData.append(\"balance\", params.balance);\r\n  formData.append(\"user_password\", params.user_password);\r\n  \r\n  return new Promise((resolve, reject) => {\r\n    axiosPost(url, formData, config)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n} \r\nexport function apiAdminUpdateUserStatus(params) {\r\n  const url = urlAdminUpdateUserStatus;\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  var formData = new FormData();\r\n  formData.append(\"user_id\", params.user_id);\r\n  formData.append(\"status\", params.status);\r\n\r\n  return new Promise((resolve, reject) => {\r\n    axiosPost(url, formData, config)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n} \r\n\r\n  ","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\adminCommonService.js",["2576","2577","2578","2579","2580"],"import { axiosGet, axiosPost, axiosPostMultipart } from \"./ajaxServices\";\r\nimport { urlAdminGetProfile, urlAdminSetUserTmpPassword, urlAdminUpdateProfile, urlUserCheckHasActiveLicense, urlUserCheckHlxPassword, urlUserGetProfileInfo } from \"./CONSTANTS\";\r\n\r\nexport const apiAdminGetProfileInfo = () => {\r\n  const url = urlAdminGetProfile;\r\n  return new Promise((resolve, reject) => {\r\n    axiosGet(url)\r\n      .then((res) => {\r\n        resolve(res);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport const apiAdminUpdateProfile = (params) => {\r\n  const url = urlAdminUpdateProfile;\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  var formData = new FormData();\r\n  formData.append(\"admin_name\", params.admin_name.trim());\r\n  formData.append(\"admin_email\", params.admin_email.trim());\r\n  formData.append(\"admin_password\", params.admin_password);\r\n  return new Promise((resolve, reject) => {\r\n    axiosPostMultipart(url, formData, config)\r\n      .then(function (response) {\r\n        resolve(response);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminUsersPage\\inc\\TmpPasswordModal.js",["2581","2582","2583","2584","2585","2586","2587","2588","2589","2590"],"import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  empty,\r\n  get_data_value,\r\n  intval,\r\n  isEmpty,\r\n  jQuery,\r\n  showToast,\r\n} from \"utils/GlobalFunctions\";\r\nimport { APP_NAME } from \"config/CONSTANTS\";\r\n\r\nfunction TmpPasswordModal(props) {\r\n  const {\r\n    isVisible,\r\n    setVisibleModal,\r\n    pageData,\r\n    currentRow,\r\n    submitModalData,\r\n    modalClass,\r\n    modalTitle,\r\n  } = props;\r\n  useEffect(() => {\r\n    if (isVisible !== undefined) {\r\n      setShow(isVisible);\r\n      setModalPageData(pageData);\r\n      setModalData({...defaultModalData})\r\n    }    \r\n  }, [isVisible, pageData]);\r\n  const [show, setShow] = useState(false);\r\n  const defaultModalData = {\r\n    tmp_password: \"\",\r\n  };\r\n  const [modalPageData, setModalPageData] = useState({});\r\n  const [modalData, setModalData] = useState(defaultModalData);\r\n  const [errorField, setErrorField] = useState([]);\r\n\r\n  const validateFields = () => {\r\n    var errorList = Array();\r\n    errorList = isEmpty(modalData, \"tmp_password\", errorList); \r\n    setErrorField([...errorList]);\r\n    return errorList.length > 0 ? false : true;\r\n  };\r\n\r\n  const onChangeFormField = (e, field_name) => {\r\n    if (errorField.includes(field_name)) {\r\n      let errors = errorField.filter((x) => x != field_name);\r\n      setErrorField([...errors]);\r\n    }\r\n    let updateData = {}\r\n    updateData[field_name] = e.target.value;\r\n    setModalData({ ...modalData, ...updateData });\r\n  };\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    setVisibleModal(false);\r\n  };\r\n\r\n  const onClickSubmitModal = () => {\r\n    let is_valid = validateFields();\r\n    console.log(\"is valid\", is_valid);\r\n    if (is_valid) {\r\n      submitModalData({...modalData, user_id: currentRow['id']});\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        centered\r\n        dialogClassName={modalClass}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{modalTitle}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"block text-center\">\r\n            <div className=\"modal-box\">\r\n              <div id=\"dialog\">\r\n                <div className=\"text-normal text-left\">\r\n                  <div className=\"text-left\">\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"\">Username</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"user_name\"\r\n                        className={`form-control`}\r\n                        defaultValue={get_data_value(currentRow, \"user_name\")}\r\n                        readOnly={true}\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"\">Temporary password</label>\r\n                      <input\r\n                        type=\"search\"\r\n                        autoComplete=\"off\"\r\n                        placeholder=\" \"\r\n                        name=\"tmp_password\"\r\n                        className={`form-control tmp_password ${\r\n                          errorField.includes(\"tmp_password\")\r\n                            ? \"is-invalid\"\r\n                            : \"\"\r\n                        }`}\r\n                        onChange={(e) => {\r\n                          onChangeFormField(e, \"tmp_password\");\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-md btn-close-dlg btn-light margin-right-10\"\r\n            data-dismiss=\"modal\"\r\n            onClick={handleClose}\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-md btn-submit-modal-data btn-primary\"\r\n            onClick={onClickSubmitModal}\r\n          >\r\n            Submit\r\n          </button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TmpPasswordModal;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminUsersPage\\inc\\AdminUserInfoModal.js",["2591","2592","2593","2594","2595","2596","2597","2598","2599"],"import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  empty,\r\n  get_data_value,\r\n  intval,\r\n  isEmpty,\r\n  jQuery,\r\n  showToast,\r\n} from \"utils/GlobalFunctions\";\r\nimport { APP_NAME } from \"config/CONSTANTS\";\r\n\r\nfunction AdminUserInfoModal(props) {\r\n  const {\r\n    isVisible,\r\n    setVisibleModal,\r\n    pageData,\r\n    currentRow,\r\n    submitModalData,\r\n    modalClass,\r\n    modalTitle,\r\n  } = props;\r\n  useEffect(() => {\r\n    if (isVisible !== undefined) {\r\n      setShow(isVisible);\r\n      setModalPageData(pageData);\r\n      if(!empty(currentRow)){\r\n        setModalData({...defaultModalData, ...currentRow, user_password: \"\" })\r\n      }\r\n    }    \r\n  }, [isVisible, pageData, currentRow]);\r\n  const [show, setShow] = useState(false);\r\n  const defaultModalData = {\r\n    user_name: \"\",\r\n    user_email: \"\",\r\n    user_first_name: \"\",\r\n    user_last_name: \"\",\r\n    user_password: \"\",\r\n    balance:\"\"\r\n  };\r\n  const [modalPageData, setModalPageData] = useState({});\r\n  const [modalData, setModalData] = useState(defaultModalData);\r\n  const [errorField, setErrorField] = useState([]);\r\n\r\n  const validateFields = () => {\r\n    var errorList = Array();\r\n    errorList = isEmpty(modalData, \"user_email\", errorList); \r\n    errorList = isEmpty(modalData, \"user_first_name\", errorList); \r\n    errorList = isEmpty(modalData, \"user_last_name\", errorList); \r\n    setErrorField([...errorList]);\r\n    return errorList.length > 0 ? false : true;\r\n  };\r\n\r\n  const onChangeFormField = (e, field_name) => {\r\n    if (errorField.includes(field_name)) {\r\n      let errors = errorField.filter((x) => x != field_name);\r\n      setErrorField([...errors]);\r\n    }\r\n    let updateData = {}\r\n    updateData[field_name] = e.target.value;\r\n    setModalData({ ...modalData, ...updateData });\r\n  };\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    setVisibleModal(false);\r\n  };\r\n\r\n  const onClickSubmitModal = () => {\r\n    let is_valid = validateFields();\r\n    console.log(\"is valid\", is_valid);\r\n    if (is_valid) {\r\n      submitModalData({...modalData, user_id: currentRow['id']});\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        centered\r\n        dialogClassName={modalClass}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{modalTitle}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"block text-center\">\r\n            <div className=\"modal-box\">\r\n              <div id=\"dialog\">\r\n                <div className=\"text-normal text-left\">\r\n                  <div className=\"text-left\">\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"\">Username</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"user_name\"\r\n                        className={`form-control`}\r\n                        defaultValue={get_data_value(currentRow, \"user_name\")}\r\n                        readOnly={true}\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"\">First Name</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        placeholder=\" \"\r\n                        name=\"user_first_name\"\r\n                        className={`form-control user_first_name ${\r\n                          errorField.includes(\"user_first_name\")\r\n                            ? \"is-invalid\"\r\n                            : \"\"\r\n                        }`}\r\n                        value={modalData['user_first_name']}\r\n                        onChange={(e) => {\r\n                          onChangeFormField(e, \"user_first_name\");\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"\">Last Name</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        placeholder=\" \"\r\n                        name=\"user_last_name\"\r\n                        className={`form-control user_last_name ${\r\n                          errorField.includes(\"user_last_name\")\r\n                            ? \"is-invalid\"\r\n                            : \"\"\r\n                        }`}\r\n                        value={modalData['user_last_name']}\r\n                        onChange={(e) => {\r\n                          onChangeFormField(e, \"user_last_name\");\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"\">Email</label>\r\n                      <input\r\n                        type=\"email\"\r\n                        autoComplete=\"off\"\r\n                        placeholder=\" \"\r\n                        name=\"user_email\"\r\n                        className={`form-control user_email ${\r\n                          errorField.includes(\"user_email\")\r\n                            ? \"is-invalid\"\r\n                            : \"\"\r\n                        }`}\r\n                        value={modalData['user_email']}\r\n                        onChange={(e) => {\r\n                          onChangeFormField(e, \"user_email\");\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"\">Wallet Amount ($)</label>\r\n                      <input\r\n                        type=\"number\"\r\n                        placeholder=\" \"\r\n                        min='0'\r\n                        step='0.01'\r\n                        name=\"balance\"\r\n                        className={`form-control balance ${\r\n                          errorField.includes(\"balance\")\r\n                            ? \"is-invalid\"\r\n                            : \"\"\r\n                        }`}\r\n                        value={modalData['balance']}\r\n                        onChange={(e) => {\r\n                          onChangeFormField(e, \"balance\");\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"\">Password</label>\r\n                      <input\r\n                        type=\"search\"\r\n                        autoComplete=\"off\"\r\n                        placeholder=\" \"\r\n                        name=\"user_password\"\r\n                        className={`form-control user_password ${\r\n                          errorField.includes(\"user_password\")\r\n                            ? \"is-invalid\"\r\n                            : \"\"\r\n                        }`}\r\n                        onChange={(e) => {\r\n                          onChangeFormField(e, \"user_password\");\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-md btn-close-dlg btn-light margin-right-10\"\r\n            data-dismiss=\"modal\"\r\n            onClick={handleClose}\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-md btn-submit-modal-data btn-primary\"\r\n            onClick={onClickSubmitModal}\r\n          >\r\n            Submit\r\n          </button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdminUserInfoModal;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminLicensesPage\\AdminLicensesPage.js",["2600","2601","2602","2603","2604","2605","2606","2607","2608"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport AdminLayout from \"layouts/AdminLayout/AdminLayout\";\r\nimport {\r\n  ROUTE_ADMIN_LICESES,\r\n  ROUTE_ADMIN_USERS,\r\n  ROUTE_USER_ACADEMY,\r\n  ROUTE_USER_PAYMENT,\r\n  ROUTE_USER_WALLET,\r\n} from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport { apiAdminGetProfileInfo } from \"services/adminCommonService\";\r\nimport { get_data_value, showToast, show_loading } from \"utils/GlobalFunctions\";\r\nimport AdminLicenseListTable from \"./inc/AdminLicenseListTable\";\r\n \r\nconst currentPageTitle = \"License Management\";\r\nconst AdminLicensesPage = () => {\r\n  const dispatch = useDispatch();\r\n  const initPage = () => {\r\n    dispatch(\r\n      UpdateAppData({\r\n        currentPageTitle: currentPageTitle,\r\n        current_route: ROUTE_ADMIN_LICESES,\r\n        m_user_menu_collapsed: true,\r\n      })\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    initPage();\r\n    getData();\r\n  }, []);\r\n  const history = useHistory();\r\n  const defaultPageData = {\r\n    user: {},\r\n    user_list: [],\r\n  };\r\n  const [pageData, setPageData] = useState(defaultPageData);\r\n  const getData = () => {\r\n    show_loading(true);\r\n    apiAdminGetProfileInfo()\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setPageData(api_res.data);\r\n          dispatch(updateUser(api_res.data[\"user\"]));\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AdminLayout>\r\n        <div className=\"license-list-page\">\r\n          <div className={`row`}>\r\n            <div className=\"col-lg-12 grid-margin stretch-card\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <h4 className=\"card-title t-show-mobile\">\r\n                    {currentPageTitle}\r\n                  </h4>\r\n                  <div className=\"card-content\">\r\n                    <div className=\"datatable-page\">\r\n                    <AdminLicenseListTable\r\n                        pageData={pageData}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </AdminLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminLicensesPage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminLicensesPage\\inc\\AdminLicenseListTable.js",["2609","2610","2611","2612","2613","2614","2615","2616","2617","2618","2619","2620","2621","2622","2623","2624","2625","2626","2627","2628","2629","2630","2631","2632","2633","2634","2635","2636","2637","2638","2639"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport { RULE_PERCENT } from \"config/CONSTANTS\";\r\nimport { ROUTE_USER_ACADEMY, ROUTE_USER_MARKETING } from \"navigation/CONSTANTS\";\r\nimport React, { useState, useEffect, useCallback, useMemo } from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport {\r\n  apiGetUserMarketingPageDetail,\r\n  apiGetUserMarketingRankDetail,\r\n} from \"services/userMarketingService\";\r\nimport { apiDeleteUserPayoutRow } from \"services/userWalletService\";\r\n\r\nimport {\r\n  empty,\r\n  get_data_value,\r\n  intval,\r\n  is_empty,\r\n  jQuery,\r\n  showToast,\r\n  show_loading,\r\n  timeConverter,\r\n  toLocalDatetime,\r\n} from \"utils/GlobalFunctions\";\r\nimport { urlAdminDeleteUser, urlAdminGetLicensesList } from \"services/CONSTANTS\";\r\n \r\nimport {\r\n  apiAdminSetUserTmpPassword,\r\n  apiAdminUpdateUserInfo,\r\n  apiAdminUpdateUserStatus,\r\n} from \"services/adminUsersService\";\r\n\r\nconst AdminLicenseListTable = (props) => {\r\n  const userDataStore = useSelector((x) => x.userDataStore);\r\n  const { pageData } = props;\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [totalRows, setTotalRows] = useState(0);\r\n  const [perPage, setPerPage] = useState(10);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  // const [deleted, setDeleted] = useState([]);\r\n  const [currentSortField, setCurrentSortField] = useState(\"add_timestamp\");\r\n  const [currentSortDirection, setCurrentSortDirection] = useState(\"asc\");\r\n  const [userType, setUserType] = useState(\"\");\r\n\r\n  const [filterText, setFilterText] = useState(\"\");\r\n\r\n  const fetchDataList = async (\r\n    page,\r\n    size = perPage,\r\n    searchText = filterText,\r\n    sortColumn = currentSortField,\r\n    sortDirection = currentSortDirection,\r\n  ) => {\r\n    show_loading(true);\r\n\r\n    const response = await axios.get(\r\n      `${urlAdminGetLicensesList}?page=${page}&per_page=${size}&keyword1=${searchText}&sort_column=${sortColumn}&sort_direction=${sortDirection}`\r\n    );\r\n\r\n    setData(response.data.data);\r\n    setTotalRows(response.data.total);\r\n    show_loading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchDataList(1);\r\n  }, []);\r\n\r\n  const removeItem = (array, item) => {\r\n    const newArray = array.slice();\r\n    newArray.splice(\r\n      newArray.findIndex((a) => a === item),\r\n      1\r\n    );\r\n\r\n    return newArray;\r\n  };\r\n\r\n  const handleDelete = useCallback(\r\n    (row) => async () => {\r\n      await axios.delete(`${urlAdminDeleteUser}?id=${row.id}`);\r\n      const response = await axios.get(\r\n        `${urlAdminGetLicensesList}?page=${currentPage}&per_page=${perPage}&keyword1=${filterText}&sort_column=${currentSortField}&sort_direction=${currentSortDirection}`\r\n      );\r\n\r\n      setData(removeItem(response.data.data, row));\r\n      setTotalRows(totalRows - 1);\r\n    },\r\n    [currentPage, perPage, totalRows]\r\n  );\r\n  const handlePageChange = (page) => {\r\n    fetchDataList(page);\r\n    setCurrentPage(page);\r\n  };\r\n  const handlePerRowsChange = async (newPerPage, page) => {\r\n    fetchDataList(page, newPerPage);\r\n    setPerPage(newPerPage);\r\n  };\r\n  const handleSearchChange = (newSearchText) => {\r\n    fetchDataList(currentPage, perPage, newSearchText);\r\n    setFilterText(newSearchText);\r\n  };\r\n  const onSort = (column, sortDirection, event) => {\r\n    console.log(\r\n      \"--------column, sortDirection, event--------\",\r\n      column,\r\n      sortDirection,\r\n      event\r\n    );\r\n    let sortColumn = column[\"selector\"];\r\n    setCurrentSortField(sortColumn);\r\n    setCurrentSortDirection(sortDirection);\r\n    fetchDataList(currentPage, perPage, filterText, sortColumn, sortDirection);\r\n  };\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        name: \"ID\",\r\n        selector: \"id\",\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"User Name\",\r\n        selector: \"user_name\",\r\n        sortable: true,\r\n        cell: (row) => <span>{empty(row.user_name) ? \"User Deleted\" : row.user_name}</span>,\r\n      },\r\n      {\r\n        name: \"License Number\",\r\n        selector: \"license_number\",\r\n        sortable: true,\r\n      },\r\n    ],\r\n    [handleDelete]\r\n  );\r\n  const [resetPaginationToggle, setResetPaginationToggle] = useState(false);\r\n  // const filteredItems = data.filter(\r\n  //   (item) =>\r\n  //     JSON.stringify(item).toLowerCase().indexOf(filterText.toLowerCase()) !==\r\n  //     -1\r\n  // );\r\n\r\n  \r\n  const subHeaderComponent = useMemo(() => {\r\n    const handleClear = () => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        handleSearchChange(\"\");\r\n      }\r\n    };\r\n    \r\n    return (\r\n      <div className=\"datatable-subheader\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"datatable-filter-box\">\r\n              <input\r\n                id=\"search\"\r\n                type=\"text\"\r\n                placeholder=\"Search...\"\r\n                value={filterText}\r\n                className=\"form-control input-search\"\r\n                onChange={(e) => handleSearchChange(e.target.value)}\r\n              />\r\n              <button className=\"a-btn btn-clear-search\" onClick={handleClear}>\r\n                x\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }, [filterText, resetPaginationToggle]);\r\n\r\n  //////////////////////////////////////////start modal actions///////////////////////////////////////////////\r\n\r\n  ////////////////////////////////////////////end modal actions/////////////////////////////////////////////////////////\r\n\r\n  return (\r\n    <>\r\n      <div className=\"datatable-wrapper\">\r\n        <DataTable\r\n          theme=\"dark\"\r\n          noHeader={true}\r\n          columns={columns}\r\n          data={data}\r\n          defaultSortField={currentSortField}\r\n          defaultSortAsc={currentSortDirection === \"asc\"}\r\n          onSort={onSort}\r\n          sortServer={true}\r\n          subHeader\r\n          subHeaderComponent={subHeaderComponent}\r\n          pagination\r\n          paginationServer\r\n          paginationTotalRows={totalRows}\r\n          paginationDefaultPage={currentPage}\r\n          onChangeRowsPerPage={handlePerRowsChange}\r\n          onChangePage={handlePageChange}\r\n          paginationRowsPerPageOptions={[5, 10, 25, 50, 100]}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminLicenseListTable;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminPaymentsPage\\AdminPaymentsPage.js",["2640","2641","2642","2643","2644","2645","2646","2647","2648"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport AdminLayout from \"layouts/AdminLayout/AdminLayout\";\r\nimport {\r\n  ROUTE_ADMIN_PAYMENTS,\r\n  ROUTE_ADMIN_USERS,\r\n  ROUTE_USER_ACADEMY,\r\n  ROUTE_USER_PAYMENT,\r\n  ROUTE_USER_WALLET,\r\n} from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport { apiAdminGetProfileInfo } from \"services/adminCommonService\";\r\nimport { get_data_value, showToast, show_loading } from \"utils/GlobalFunctions\";\r\nimport AdminPaymentListTable from \"./inc/AdminPaymentListTable\";\r\n \r\nconst currentPageTitle = \"Payment History\";\r\nconst AdminPaymentsPage = () => {\r\n  const dispatch = useDispatch();\r\n  const initPage = () => {\r\n    dispatch(\r\n      UpdateAppData({\r\n        currentPageTitle: currentPageTitle,\r\n        current_route: ROUTE_ADMIN_PAYMENTS,\r\n        m_user_menu_collapsed: true,\r\n      })\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    initPage();\r\n    getData();\r\n  }, []);\r\n  const history = useHistory();\r\n  const defaultPageData = {\r\n    user: {},\r\n    user_list: [],\r\n  };\r\n  const [pageData, setPageData] = useState(defaultPageData);\r\n  const getData = () => {\r\n    show_loading(true);\r\n    apiAdminGetProfileInfo()\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setPageData(api_res.data);\r\n          dispatch(updateUser(api_res.data[\"user\"]));\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AdminLayout>\r\n        <div className=\"payment-list-page\">\r\n          <div className={`row`}>\r\n            <div className=\"col-lg-12 grid-margin stretch-card\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <h4 className=\"card-title t-show-mobile\">\r\n                    {currentPageTitle}\r\n                  </h4>\r\n                  <div className=\"card-content\">\r\n                    <div className=\"datatable-page\">\r\n                    <AdminPaymentListTable\r\n                        pageData={pageData}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </AdminLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminPaymentsPage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminPaymentsPage\\inc\\AdminPaymentListTable.js",["2649","2650","2651","2652","2653","2654","2655","2656","2657","2658","2659","2660","2661","2662","2663","2664","2665","2666","2667","2668","2669","2670","2671","2672","2673","2674","2675"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport { RULE_PERCENT } from \"config/CONSTANTS\";\r\nimport { ROUTE_USER_ACADEMY, ROUTE_USER_MARKETING } from \"navigation/CONSTANTS\";\r\nimport React, { useState, useEffect, useCallback, useMemo } from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport {\r\n  apiGetUserMarketingPageDetail,\r\n  apiGetUserMarketingRankDetail,\r\n} from \"services/userMarketingService\";\r\nimport { apiDeleteUserPayoutRow } from \"services/userWalletService\";\r\n\r\nimport {\r\n  empty,\r\n  get_data_value,\r\n  intval,\r\n  is_empty,\r\n  jQuery,\r\n  showToast,\r\n  show_loading,\r\n  timeConverter,\r\n  toLocalDatetime,\r\n} from \"utils/GlobalFunctions\";\r\nimport { urlAdminDeleteUser, urlAdminGetPaymentList } from \"services/CONSTANTS\";\r\n\r\nimport {\r\n  apiAdminSetUserTmpPassword,\r\n  apiAdminUpdateUserInfo,\r\n  apiAdminUpdateUserStatus,\r\n} from \"services/adminUsersService\";\r\nimport { apiAdminDeletePaymentHistory } from \"services/adminPaymentsService\";\r\n\r\n\r\nconst AdminPaymentListTable = (props) => {\r\n  const userDataStore = useSelector((x) => x.userDataStore);\r\n  const { pageData } = props;\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [totalRows, setTotalRows] = useState(0);\r\n  const [perPage, setPerPage] = useState(10);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  // const [deleted, setDeleted] = useState([]);\r\n  const [currentSortField, setCurrentSortField] = useState(\"created_at\");\r\n  const [currentSortDirection, setCurrentSortDirection] = useState(\"desc\");\r\n  const [userType, setUserType] = useState(\"\");\r\n\r\n  const [filterText, setFilterText] = useState(\"\");\r\n\r\n  const fetchDataList = async (\r\n    page,\r\n    size = perPage,\r\n    searchText = filterText,\r\n    sortColumn = currentSortField,\r\n    sortDirection = currentSortDirection\r\n  ) => {\r\n    show_loading(true);\r\n\r\n    const response = await axios.get(\r\n      `${urlAdminGetPaymentList}?page=${page}&per_page=${size}&keyword1=${searchText}&sort_column=${sortColumn}&sort_direction=${sortDirection}`\r\n    );\r\n\r\n    setData(response.data.data);\r\n    setTotalRows(response.data.total);\r\n    show_loading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchDataList(1);\r\n  }, []);\r\n\r\n  const removeItem = (array, item) => {\r\n    const newArray = array.slice();\r\n    newArray.splice(\r\n      newArray.findIndex((a) => a === item),\r\n      1\r\n    );\r\n\r\n    return newArray;\r\n  };\r\n\r\n  const handleDelete = useCallback(\r\n    (row) => async () => {\r\n      await axios.delete(`${urlAdminDeleteUser}?id=${row.id}`);\r\n      const response = await axios.get(\r\n        `${urlAdminGetPaymentList}?page=${currentPage}&per_page=${perPage}&keyword1=${filterText}&sort_column=${currentSortField}&sort_direction=${currentSortDirection}`\r\n      );\r\n\r\n      setData(removeItem(response.data.data, row));\r\n      setTotalRows(totalRows - 1);\r\n    },\r\n    [currentPage, perPage, totalRows]\r\n  );\r\n  const handlePageChange = (page) => {\r\n    fetchDataList(page);\r\n    setCurrentPage(page);\r\n  };\r\n  const handlePerRowsChange = async (newPerPage, page) => {\r\n    fetchDataList(page, newPerPage);\r\n    setPerPage(newPerPage);\r\n  };\r\n  const handleSearchChange = (newSearchText) => {\r\n    fetchDataList(currentPage, perPage, newSearchText);\r\n    setFilterText(newSearchText);\r\n  };\r\n  const onSort = (column, sortDirection, event) => {\r\n    console.log(\r\n      \"--------column, sortDirection, event--------\",\r\n      column,\r\n      sortDirection,\r\n      event\r\n    );\r\n    let sortColumn = column[\"selector\"];\r\n    setCurrentSortField(sortColumn);\r\n    setCurrentSortDirection(sortDirection);\r\n    fetchDataList(currentPage, perPage, filterText, sortColumn, sortDirection);\r\n  };\r\n  const handleChangeUserKind = (userKind) => {\r\n    setUserType(userKind)\r\n    fetchDataList(currentPage, perPage, filterText, currentSortField, currentSortDirection, userKind);\r\n  };\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        name: \"ID\",\r\n        selector: \"id\",\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"User Name\",\r\n        selector: \"user_name\",\r\n        sortable: true,\r\n        cell: (row) => <span className={``}>{empty(row.user_name) ? \"User Deleted\" : row.user_name}</span>,\r\n      },\r\n      {\r\n        name: \"Trans ID\",\r\n        selector: \"trans_id\",\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"Paid Amount ($)\",\r\n        selector: \"network_amount\",\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"Gateway\",\r\n        selector: \"gateway\",\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"Environment\",\r\n        selector: \"environment\",\r\n        sortable: true,\r\n        omit:true,\r\n      },\r\n      {\r\n        name: \"Status\",\r\n        selector: \"status\",\r\n        sortable: true,\r\n        omit:true,\r\n        cell: (row) => <span className={`badge badge-sm badge-success`}>{row.status}</span>,\r\n      },\r\n      {\r\n        name: \"Created at\",\r\n        selector: \"created_at\",\r\n        sortable: true,\r\n        cell: (row) => <span>{timeConverter(row.created_at)}</span>,\r\n      },\r\n      {\r\n        name: \"Action\",\r\n        // eslint-disable-next-line react/button-has-type\r\n        cell: (row) =>\r\n          !empty(userDataStore[\"admin_type\"]) &&\r\n          userDataStore[\"admin_type\"] !== \"assistant\" && (\r\n            <>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-xs btn-danger\"\r\n                onClick={() => onClickDeletePaymentItem(row)}\r\n              >\r\n                <i className=\"fa fa-times\"></i>\r\n              </button>\r\n            </>\r\n          ),\r\n      },\r\n    ],\r\n    [handleDelete]\r\n  );\r\n  const [resetPaginationToggle, setResetPaginationToggle] = useState(false);\r\n  // const filteredItems = data.filter(\r\n  //   (item) =>\r\n  //     JSON.stringify(item).toLowerCase().indexOf(filterText.toLowerCase()) !==\r\n  //     -1\r\n  // );\r\n\r\n  \r\n  const subHeaderComponent = useMemo(() => {\r\n    const handleClear = () => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        handleSearchChange(\"\");\r\n      }\r\n    };\r\n    const onChangeUserType = (type)=>{\r\n      handleChangeUserKind(type);\r\n    }\r\n\r\n    return (\r\n      <div className=\"datatable-subheader\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"datatable-filter-box\">\r\n              <input\r\n                id=\"search\"\r\n                type=\"text\"\r\n                placeholder=\"Search...\"\r\n                value={filterText}\r\n                className=\"form-control input-search\"\r\n                onChange={(e) => handleSearchChange(e.target.value)}\r\n              />\r\n              <button className=\"a-btn btn-clear-search\" onClick={handleClear}>\r\n                x\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }, [filterText, resetPaginationToggle]);\r\n\r\n  //////////////////////////////////////////start modal actions///////////////////////////////////////////////\r\n  const [currentRow, setCurrentRow] = useState({});\r\n\r\n  const [confirmModalTitle, setConfirmModalTitle] = useState(\r\n    \"Are you sure to delete this record?\"\r\n  );\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n  const onClickDeletePaymentItem = (row) => {\r\n    console.log(\"row, status\", row);\r\n    setCurrentRow(row);\r\n    setConfirmModalTitle(\"Are you sure you want to delete?\");\r\n    setShowConfirmModal(true);\r\n  };\r\n  const doConfirmedAction = () => {\r\n    let params = {\r\n      id: currentRow[\"id\"],\r\n    };\r\n    console.log(\"params\", params);\r\n    show_loading(true);\r\n    apiAdminDeletePaymentHistory(params)\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setShowConfirmModal(false);\r\n          showToast(api_res.message, \"success\");\r\n          fetchDataList(currentPage, perPage);\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n  ////////////////////////////////////////////end modal actions/////////////////////////////////////////////////////////\r\n\r\n  return (\r\n    <>\r\n      <div className=\"datatable-wrapper\">\r\n        <DataTable\r\n          theme=\"dark\"\r\n          noHeader={true}\r\n          columns={columns}\r\n          data={data}\r\n          defaultSortField={currentSortField}\r\n          defaultSortAsc={currentSortDirection === \"asc\"}\r\n          onSort={onSort}\r\n          sortServer={true}\r\n          subHeader\r\n          subHeaderComponent={subHeaderComponent}\r\n          pagination\r\n          paginationServer\r\n          paginationTotalRows={totalRows}\r\n          paginationDefaultPage={currentPage}\r\n          onChangeRowsPerPage={handlePerRowsChange}\r\n          onChangePage={handlePageChange}\r\n          paginationRowsPerPageOptions={[5, 10, 25, 50, 100]}\r\n        />\r\n      </div> \r\n      <ConfirmModal\r\n        content={confirmModalTitle}\r\n        onClickYes={doConfirmedAction}\r\n        visibleModal={showConfirmModal}\r\n        setVisibleModal={setShowConfirmModal}\r\n        modalClass=\"user-page admin-page confirm-modal\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminPaymentListTable;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminWithdrawPage\\AdminWithdrawPage.js",["2676","2677","2678","2679","2680","2681","2682","2683","2684"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport AdminLayout from \"layouts/AdminLayout/AdminLayout\";\r\nimport {\r\n  ROUTE_ADMIN_USERS,\r\n  ROUTE_ADMIN_WITHDRAWS,\r\n  ROUTE_USER_ACADEMY,\r\n  ROUTE_USER_PAYMENT,\r\n  ROUTE_USER_WALLET,\r\n} from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport { apiAdminGetProfileInfo } from \"services/adminCommonService\";\r\nimport { get_data_value, showToast, show_loading } from \"utils/GlobalFunctions\";\r\nimport AdminWithdrawListTable from \"./inc/AdminWithdrawListTable\";\r\n\r\nconst currentPageTitle = \"Withdraw Management\";\r\nconst AdminWithdrawPage = () => {\r\n  const dispatch = useDispatch();\r\n  const initPage = () => {\r\n    dispatch(\r\n      UpdateAppData({\r\n        currentPageTitle: currentPageTitle,\r\n        current_route: ROUTE_ADMIN_WITHDRAWS,\r\n        m_user_menu_collapsed: true,\r\n      })\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    initPage();\r\n    getData();\r\n  }, []);\r\n  const history = useHistory();\r\n  const defaultPageData = {\r\n    user: {},\r\n    user_list: [],\r\n  };\r\n  const [pageData, setPageData] = useState(defaultPageData);\r\n  const getData = () => {\r\n    show_loading(true);\r\n    apiAdminGetProfileInfo()\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setPageData(api_res.data);\r\n          dispatch(updateUser(api_res.data[\"user\"]));\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AdminLayout>\r\n        <div className=\"withdraw-list-page\">\r\n          <div className={`row`}>\r\n            <div className=\"col-lg-12 grid-margin stretch-card\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <h4 className=\"card-title t-show-mobile\">\r\n                    {currentPageTitle}\r\n                  </h4>\r\n                  <div className=\"card-content\">\r\n                    <div className=\"datatable-page\">\r\n                    <AdminWithdrawListTable\r\n                        pageData={pageData}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </AdminLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminWithdrawPage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminWithdrawPage\\inc\\AdminWithdrawListTable.js",["2685","2686","2687","2688","2689","2690","2691","2692","2693","2694","2695","2696","2697","2698","2699","2700","2701","2702","2703","2704","2705","2706","2707","2708"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport { RULE_PERCENT } from \"config/CONSTANTS\";\r\nimport { ROUTE_USER_ACADEMY, ROUTE_USER_MARKETING } from \"navigation/CONSTANTS\";\r\nimport React, { useState, useEffect, useCallback, useMemo } from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport {\r\n  apiGetUserMarketingPageDetail,\r\n  apiGetUserMarketingRankDetail,\r\n} from \"services/userMarketingService\";\r\nimport { apiDeleteUserPayoutRow } from \"services/userWalletService\";\r\n\r\nimport {\r\n  empty,\r\n  get_data_value,\r\n  intval,\r\n  is_empty,\r\n  jQuery,\r\n  showToast,\r\n  show_loading,\r\n  timeConverter,\r\n  toLocalDatetime,\r\n} from \"utils/GlobalFunctions\";\r\nimport {\r\n  urlAdminDeleteUser,\r\n  urlAdminGetWithdrawList,\r\n} from \"services/CONSTANTS\";\r\n\r\nimport {\r\n  apiAdminSetUserTmpPassword,\r\n  apiAdminUpdateUserInfo,\r\n  apiAdminUpdateUserStatus,\r\n} from \"services/adminUsersService\";\r\nimport { apiAdminChaneWithdrawStatus } from \"services/adminWithdrawService\";\r\n\r\nconst AdminWithdrawListTable = (props) => {\r\n  const userDataStore = useSelector((x) => x.userDataStore);\r\n  const { pageData } = props;\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [totalRows, setTotalRows] = useState(0);\r\n  const [perPage, setPerPage] = useState(10);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  // const [deleted, setDeleted] = useState([]);\r\n  const [currentSortField, setCurrentSortField] = useState(\"id\");\r\n  const [currentSortDirection, setCurrentSortDirection] = useState(\"desc\");\r\n  const [withdrawKind, setWithdrawKind] = useState(\"\");\r\n\r\n  const [filterText, setFilterText] = useState(\"\");\r\n\r\n  const fetchDataList = async (\r\n    page,\r\n    size = perPage,\r\n    searchText = filterText,\r\n    sortColumn = currentSortField,\r\n    sortDirection = currentSortDirection,\r\n    withdraw_kind = withdrawKind\r\n  ) => {\r\n    show_loading(true);\r\n\r\n    const response = await axios.get(\r\n      `${urlAdminGetWithdrawList}?page=${page}&per_page=${size}&keyword1=${searchText}&sort_column=${sortColumn}&sort_direction=${sortDirection}&withdraw_kind=${withdraw_kind}`\r\n    );\r\n\r\n    setData(response.data.data);\r\n    setTotalRows(response.data.total);\r\n    show_loading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchDataList(1);\r\n  }, []);\r\n\r\n  const removeItem = (array, item) => {\r\n    const newArray = array.slice();\r\n    newArray.splice(\r\n      newArray.findIndex((a) => a === item),\r\n      1\r\n    );\r\n\r\n    return newArray;\r\n  };\r\n\r\n  const handleDelete = useCallback(\r\n    (row) => async () => {\r\n      await axios.delete(`${urlAdminDeleteUser}?id=${row.id}`);\r\n      const response = await axios.get(\r\n        `${urlAdminGetWithdrawList}?page=${currentPage}&per_page=${perPage}&keyword1=${filterText}&sort_column=${currentSortField}&sort_direction=${currentSortDirection}&withdraw_kind=${withdrawKind}`\r\n      );\r\n\r\n      setData(removeItem(response.data.data, row));\r\n      setTotalRows(totalRows - 1);\r\n    },\r\n    [currentPage, perPage, totalRows]\r\n  );\r\n  const handlePageChange = (page) => {\r\n    fetchDataList(page);\r\n    setCurrentPage(page);\r\n  };\r\n  const handlePerRowsChange = async (newPerPage, page) => {\r\n    fetchDataList(page, newPerPage);\r\n    setPerPage(newPerPage);\r\n  };\r\n  const handleSearchChange = (newSearchText) => {\r\n    fetchDataList(currentPage, perPage, newSearchText);\r\n    setFilterText(newSearchText);\r\n  };\r\n  const onSort = (column, sortDirection, event) => {\r\n    console.log(\r\n      \"--------column, sortDirection, event--------\",\r\n      column,\r\n      sortDirection,\r\n      event\r\n    );\r\n    let sortColumn = column[\"selector\"];\r\n    setCurrentSortField(sortColumn);\r\n    setCurrentSortDirection(sortDirection);\r\n    fetchDataList(currentPage, perPage, filterText, sortColumn, sortDirection);\r\n  };\r\n  const handleChangeWithdrawKind = (kind) => {\r\n    setWithdrawKind(kind);\r\n    fetchDataList(\r\n      currentPage,\r\n      perPage,\r\n      filterText,\r\n      currentSortField,\r\n      currentSortDirection,\r\n      kind\r\n    );\r\n  };\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        name: \"ID\",\r\n        selector: \"id\",\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"User Name\",\r\n        selector: \"user_name\",\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"Amount($)\",\r\n        selector: \"amount\",\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"Method\",\r\n        selector: \"method_name\",\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"Status\",\r\n        selector: \"status\",\r\n        sortable: true,\r\n        cell: (row) => (\r\n          <span\r\n            className={`badge badge-pill badge-sm ${\r\n              intval(row[\"status\"]) === 0\r\n                ? \"badge-info\"\r\n                : intval(row[\"status\"]) === 1\r\n                ? \"badge-success\"\r\n                : intval(row[\"status\"]) === 2\r\n                ? \"badge-danger\"\r\n                : intval(row[\"status\"]) === 3\r\n                ? \"badge-success\"\r\n                : \"\"\r\n            }`}\r\n          >\r\n            {intval(row[\"status\"]) === 0\r\n              ? \"Requested\"\r\n              : intval(row[\"status\"]) === 1\r\n              ? \"Completed\"\r\n              : intval(row[\"status\"]) === 2\r\n              ? \"Rejected\"\r\n              : intval(row[\"status\"]) === 3\r\n              ? \"Completed\"\r\n              : \"\"}\r\n          </span>\r\n        ),\r\n      },\r\n      {\r\n        name: \"Paypal Address\",\r\n        selector: \"paypal_address\",\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"Created at\",\r\n        selector: \"add_timestamp\",\r\n        sortable: true,\r\n        cell: (row) => <span>{timeConverter(row.add_timestamp)}</span>,\r\n      },\r\n      {\r\n        name: \"Action\",\r\n        cell: (row) =>\r\n          !empty(userDataStore[\"admin_type\"]) &&\r\n          userDataStore[\"admin_type\"] !== \"assistant\" && (\r\n            <>\r\n              {intval(row[\"status\"]) === 0 && (\r\n                <>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-xs btn-success\"\r\n                    onClick={() => onClickTBActionBtn(row, \"approve\")}\r\n                  >\r\n                    <i className=\"fa fa-check\"></i>\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-xs btn-danger\"\r\n                    onClick={() => onClickTBActionBtn(row, \"reject\")}\r\n                  >\r\n                    <i className=\"fa fa-ban\"></i>\r\n                  </button>\r\n                </>\r\n              )}\r\n              {intval(row[\"status\"]) === 2 && (\r\n                <>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-xs btn-danger\"\r\n                    onClick={() => onClickTBActionBtn(row, \"delete\")}\r\n                  >\r\n                    <i className=\"fa fa-times\"></i>\r\n                  </button>\r\n                </>\r\n              )}\r\n              {(intval(row[\"status\"]) === 1 || intval(row[\"status\"]) === 3) && (\r\n                <>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-xs btn-danger\"\r\n                    onClick={() => onClickTBActionBtn(row, \"delete\")}\r\n                  >\r\n                    <i className=\"fa fa-times\"></i>\r\n                  </button>\r\n                </>\r\n              )}\r\n            </>\r\n          ),\r\n      },\r\n    ],\r\n    [handleDelete]\r\n  );\r\n  const [resetPaginationToggle, setResetPaginationToggle] = useState(false);\r\n  // const filteredItems = data.filter(\r\n  //   (item) =>\r\n  //     JSON.stringify(item).toLowerCase().indexOf(filterText.toLowerCase()) !==\r\n  //     -1\r\n  // );\r\n\r\n  const subHeaderComponent = useMemo(() => {\r\n    const handleClear = () => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        handleSearchChange(\"\");\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div className=\"datatable-subheader\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8\">\r\n            <div className=\"btn-toolbar\">\r\n              <div className=\"btn-group\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-primary\"\r\n                  onClick={(e) => handleChangeWithdrawKind(\"\")}\r\n                >\r\n                  All\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-info\"\r\n                  onClick={(e) => handleChangeWithdrawKind(\"requested\")}\r\n                >\r\n                  Requested\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-danger\"\r\n                  onClick={(e) => handleChangeWithdrawKind(\"rejected\")}\r\n                >\r\n                  Rejected\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-success\"\r\n                  onClick={(e) => handleChangeWithdrawKind(\"completed\")}\r\n                >\r\n                  Completed\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"datatable-filter-box\">\r\n              <input\r\n                id=\"search\"\r\n                type=\"text\"\r\n                placeholder=\"Search...\"\r\n                value={filterText}\r\n                className=\"form-control input-search\"\r\n                onChange={(e) => handleSearchChange(e.target.value)}\r\n              />\r\n              <button className=\"a-btn btn-clear-search\" onClick={handleClear}>\r\n                x\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }, [filterText, resetPaginationToggle]);\r\n\r\n  //////////////////////////////////////////start modal actions///////////////////////////////////////////////\r\n  const [currentRow, setCurrentRow] = useState({});\r\n\r\n  const [confirmModalTitle, setConfirmModalTitle] = useState(\r\n    \"Are you sure to delete this record?\"\r\n  );\r\n  const [confirmedAction, setConfirmedAction] = useState(\"change_user_status\");\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n  const onClickTBActionBtn = (row, actionName) => {\r\n    setCurrentRow(row);\r\n    if (actionName === \"approve\") {\r\n      setConfirmModalTitle(\"Are you sure you want to approve?\");\r\n    } else if (actionName === \"reject\") {\r\n      setConfirmModalTitle(\"Are you sure you want to reject?\");\r\n    } else if (actionName === \"delete\") {\r\n      setConfirmModalTitle(\"Are you sure you want to delete?\");\r\n    }\r\n    setConfirmedAction(actionName);\r\n    setShowConfirmModal(true);\r\n  };\r\n  const doConfirmedAction = () => {\r\n    let params = {\r\n      id: currentRow[\"id\"],\r\n      action: \"update\",\r\n    };\r\n    if (confirmedAction === \"approve\") {\r\n      params[\"status\"] = \"1\";\r\n    } else if (confirmedAction === \"reject\") {\r\n      params[\"status\"] = \"2\";\r\n    } else if (confirmedAction === \"delete\") {\r\n      params[\"action\"] = \"delete\";\r\n    }\r\n    console.log(\"params\", params);\r\n    show_loading(true);\r\n    apiAdminChaneWithdrawStatus(params)\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setShowConfirmModal(false);\r\n          showToast(api_res.message, \"success\");\r\n\r\n          fetchDataList(currentPage, perPage);\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n  ////////////////////////////////////////////end modal actions/////////////////////////////////////////////////////////\r\n\r\n  return (\r\n    <>\r\n      <div className=\"datatable-wrapper\">\r\n        <DataTable\r\n          theme=\"dark\"\r\n          noHeader={true}\r\n          columns={columns}\r\n          data={data}\r\n          defaultSortField={currentSortField}\r\n          defaultSortAsc={currentSortDirection === \"asc\"}\r\n          onSort={onSort}\r\n          sortServer={true}\r\n          subHeader\r\n          subHeaderComponent={subHeaderComponent}\r\n          pagination\r\n          paginationServer\r\n          paginationTotalRows={totalRows}\r\n          paginationDefaultPage={currentPage}\r\n          onChangeRowsPerPage={handlePerRowsChange}\r\n          onChangePage={handlePageChange}\r\n          paginationRowsPerPageOptions={[5, 10, 25, 50, 100]}\r\n        />\r\n      </div>\r\n\r\n      <ConfirmModal\r\n        content={confirmModalTitle}\r\n        onClickYes={doConfirmedAction}\r\n        visibleModal={showConfirmModal}\r\n        setVisibleModal={setShowConfirmModal}\r\n        modalClass=\"user-page admin-page confirm-modal\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminWithdrawListTable;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminTicketPage\\AdminTicketPage.js",["2709","2710","2711","2712","2713","2714","2715","2716","2717"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport AdminLayout from \"layouts/AdminLayout/AdminLayout\";\r\nimport {\r\n  ROUTE_ADMIN_TICKET,\r\n  ROUTE_ADMIN_USERS,\r\n  ROUTE_USER_ACADEMY,\r\n  ROUTE_USER_PAYMENT,\r\n  ROUTE_USER_WALLET,\r\n} from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport { apiAdminGetProfileInfo } from \"services/adminCommonService\";\r\nimport { get_data_value, showToast, show_loading } from \"utils/GlobalFunctions\";\r\nimport AdminTicketListTable from \"./inc/AdminTicketListTable\";\r\n\r\nconst currentPageTitle = \"Ticket Management\";\r\nconst AdminTicketPage = () => {\r\n  const dispatch = useDispatch();\r\n  const initPage = () => {\r\n    dispatch(\r\n      UpdateAppData({\r\n        currentPageTitle: currentPageTitle,\r\n        current_route: ROUTE_ADMIN_TICKET,\r\n        m_user_menu_collapsed: true,\r\n      })\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    initPage();\r\n    getData();\r\n  }, []);\r\n  const history = useHistory();\r\n  const defaultPageData = {\r\n    user: {},\r\n    user_list: [],\r\n  };\r\n  const [pageData, setPageData] = useState(defaultPageData);\r\n  const getData = () => {\r\n    show_loading(true);\r\n    apiAdminGetProfileInfo()\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setPageData(api_res.data);\r\n          dispatch(updateUser(api_res.data[\"user\"]));\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AdminLayout>\r\n        <div className=\"user-list-page\">\r\n          <div className={`row`}>\r\n            <div className=\"col-lg-12 grid-margin stretch-card\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <h4 className=\"card-title t-show-mobile\">\r\n                    {currentPageTitle}\r\n                  </h4>\r\n                  <div className=\"card-content\">\r\n                    <div className=\"datatable-page\">\r\n                    <AdminTicketListTable\r\n                        pageData={pageData}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </AdminLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminTicketPage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminTicketPage\\inc\\AdminTicketListTable.js",["2718","2719","2720","2721","2722","2723","2724","2725","2726","2727","2728","2729","2730","2731","2732","2733","2734","2735","2736","2737","2738","2739","2740","2741","2742","2743","2744","2745","2746","2747","2748"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport { RULE_PERCENT } from \"config/CONSTANTS\";\r\nimport { ROUTE_USER_ACADEMY, ROUTE_USER_MARKETING } from \"navigation/CONSTANTS\";\r\nimport React, { useState, useEffect, useCallback, useMemo } from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport {\r\n  apiGetUserMarketingPageDetail,\r\n  apiGetUserMarketingRankDetail,\r\n} from \"services/userMarketingService\";\r\nimport { apiDeleteUserPayoutRow } from \"services/userWalletService\";\r\n\r\nimport {\r\n  empty,\r\n  get_data_value,\r\n  intval,\r\n  is_empty,\r\n  jQuery,\r\n  showToast,\r\n  show_loading,\r\n  timeConverter,\r\n  toLocalDatetime,\r\n} from \"utils/GlobalFunctions\";\r\nimport { urlAdminDeleteUser, urlAdminGetTicketList, urlAdminGetUsersList } from \"services/CONSTANTS\";\r\nimport {\r\n  apiAdminSetUserTmpPassword,\r\n  apiAdminUpdateUserInfo,\r\n  apiAdminUpdateUserStatus,\r\n} from \"services/adminUsersService\";\r\n\r\nconst AdminTicketListTable = (props) => {\r\n  const userDataStore = useSelector((x) => x.userDataStore);\r\n  const { pageData } = props;\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [totalRows, setTotalRows] = useState(0);\r\n  const [perPage, setPerPage] = useState(5);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  // const [deleted, setDeleted] = useState([]);\r\n  const [currentSortField, setCurrentSortField] = useState(\"update_timestamp\");\r\n  const [currentSortDirection, setCurrentSortDirection] = useState(\"desc\");\r\n  const [itemType, setItemType] = useState(\"\");\r\n\r\n  const [filterText, setFilterText] = useState(\"\");\r\n\r\n  const fetchDataList = async (\r\n    page,\r\n    size = perPage,\r\n    searchText = filterText,\r\n    sortColumn = currentSortField,\r\n    sortDirection = currentSortDirection,\r\n    item_type = itemType\r\n  ) => {\r\n    show_loading(true);\r\n\r\n    const response = await axios.get(\r\n      `${urlAdminGetTicketList}?page=${page}&per_page=${size}&keyword1=${searchText}&sort_column=${sortColumn}&sort_direction=${sortDirection}&item_type=${item_type}`\r\n    );\r\n\r\n    setData(response.data.data);\r\n    setTotalRows(response.data.total);\r\n    show_loading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchDataList(1);\r\n  }, []);\r\n\r\n  const removeItem = (array, item) => {\r\n    const newArray = array.slice();\r\n    newArray.splice(\r\n      newArray.findIndex((a) => a === item),\r\n      1\r\n    );\r\n\r\n    return newArray;\r\n  };\r\n\r\n  const handleDelete = useCallback(\r\n    (row) => async () => {\r\n      await axios.delete(`${urlAdminDeleteUser}?id=${row.id}`);\r\n      const response = await axios.get(\r\n        `${urlAdminGetTicketList}?page=${currentPage}&per_page=${perPage}&keyword1=${filterText}&sort_column=${currentSortField}&sort_direction=${currentSortDirection}&item_type=${itemType}`\r\n      );\r\n\r\n      setData(removeItem(response.data.data, row));\r\n      setTotalRows(totalRows - 1);\r\n    },\r\n    [currentPage, perPage, totalRows]\r\n  );\r\n  const handlePageChange = (page) => {\r\n    fetchDataList(page);\r\n    setCurrentPage(page);\r\n  };\r\n  const handlePerRowsChange = async (newPerPage, page) => {\r\n    fetchDataList(page, newPerPage);\r\n    setPerPage(newPerPage);\r\n  };\r\n  const handleSearchChange = (newSearchText) => {\r\n    fetchDataList(currentPage, perPage, newSearchText);\r\n    setFilterText(newSearchText);\r\n  };\r\n  const onSort = (column, sortDirection, event) => {\r\n    console.log(\r\n      \"--------column, sortDirection, event--------\",\r\n      column,\r\n      sortDirection,\r\n      event\r\n    );\r\n    let sortColumn = column[\"selector\"];\r\n    setCurrentSortField(sortColumn);\r\n    setCurrentSortDirection(sortDirection);\r\n    fetchDataList(currentPage, perPage, filterText, sortColumn, sortDirection);\r\n  };\r\n  const handleChangeItemType = (item_tpye) => {\r\n    setItemType(item_tpye)\r\n    fetchDataList(currentPage, perPage, filterText, currentSortField, currentSortDirection, item_tpye);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Title\",\r\n      selector: \"title\",\r\n      sortable: false,\r\n      cell: (row) =>\r\n        row.id ? (\r\n          <>\r\n            <Link to={`/admin/ticket/detail/${row.id}`} className=\"ticket-item\">\r\n              <div className=\"ticket-row\">\r\n                <div className=\"ticket-content\">\r\n                  <h3 className=\"ticket-subject text-emphasis\"><span><i className=\"fa fa-user\" style={{width: \"20px\"}}></i></span> : &nbsp;{row.sender_name}</h3>\r\n                  <h3 className=\"ticket-subject text-emphasis\"><span><i className=\"fa fa-comments\" style={{width: \"20px\"}}></i></span> : &nbsp;{row.title}</h3>\r\n                  <div className=\"ticket-details\">\r\n                    <span className=\"info\">\r\n                      <i className=\"fa fa-info-circle\"></i> Ticket ID: {row.id}\r\n                    </span>\r\n                    <span className=\"info\">\r\n                      <i className=\"fa fa-clock-o\"></i>{\" \"}\r\n                      <em className=\"ticket-timestamp unix-timestamp\"></em>\r\n                      {timeConverter(row.add_timestamp)}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"ticket-status-box\">\r\n                  <span\r\n                    className={`badge badge-pill badge-sm ${\r\n                      row[\"status\"] === \"Opened\"\r\n                        ? \"badge-gradient-danger\"\r\n                        : row[\"status\"] === \"Answered\"\r\n                        ? \"badge-gradient-warning\"\r\n                        : row[\"status\"] === \"Replied\"\r\n                        ? \"badge-gradient-info\"\r\n                        : row[\"status\"] === \"Closed\"\r\n                        ? \"badge-light\"\r\n                        : \"badge-warning\"\r\n                    }`}\r\n                  >\r\n                    {row[\"status\"]}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          </>\r\n        ) : null,\r\n    },\r\n    {\r\n      name: \"Description\",\r\n      selector: \"description\",\r\n      hide: 1,\r\n      omit: true,\r\n    },\r\n  ];\r\n\r\n  const [resetPaginationToggle, setResetPaginationToggle] = useState(false);\r\n  // const filteredItems = data.filter(\r\n  //   (item) =>\r\n  //     JSON.stringify(item).toLowerCase().indexOf(filterText.toLowerCase()) !==\r\n  //     -1\r\n  // );\r\n\r\n  \r\n  const subHeaderComponent = useMemo(() => {\r\n    const handleClear = () => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        handleSearchChange(\"\");\r\n      }\r\n    };\r\n    \r\n\r\n    return (\r\n      <div className=\"datatable-subheader\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8\">\r\n            <div className=\"btn-toolbar\">\r\n              <div className=\"btn-group\">\r\n                <button type=\"button\" className=\"btn btn-sm btn-primary\" onClick={(e)=>handleChangeItemType('')}>\r\n                  All\r\n                </button>\r\n                <button type=\"button\" className=\"btn btn-sm btn-danger\" onClick={(e)=>handleChangeItemType('Opened')}>\r\n                  Opened\r\n                </button>\r\n                <button type=\"button\" className=\"btn btn-sm btn-info\" onClick={(e)=>handleChangeItemType('Replied')}>\r\n                  Replied\r\n                </button>\r\n                <button type=\"button\" className=\"btn btn-sm btn-warning\" onClick={(e)=>handleChangeItemType('Answered')}>\r\n                Answered\r\n                </button>\r\n                <button type=\"button\" className=\"btn btn-sm btn-light\" onClick={(e)=>handleChangeItemType('Closed')}>\r\n                  Closed\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"datatable-filter-box\">\r\n              <input\r\n                id=\"search\"\r\n                type=\"text\"\r\n                placeholder=\"Search...\"\r\n                value={filterText}\r\n                className=\"form-control input-search\"\r\n                onChange={(e) => handleSearchChange(e.target.value)}\r\n              />\r\n              <button className=\"a-btn btn-clear-search\" onClick={handleClear}>\r\n                x\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }, [filterText, resetPaginationToggle]);\r\n\r\n  //////////////////////////////////////////start modal actions///////////////////////////////////////////////\r\n  const [currentRow, setCurrentRow] = useState({});\r\n\r\n  const [showTmpPasswordModal, setShowTmpPasswordModal] = useState(false);\r\n  const onClickSetTmpPassword = (row) => {\r\n    setShowTmpPasswordModal(true);\r\n    setCurrentRow(row);\r\n  };\r\n  const submitTmpPassword = (params) => {\r\n    console.log(\"params\", params);\r\n    show_loading(true);\r\n    apiAdminSetUserTmpPassword(params)\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setShowTmpPasswordModal(false);\r\n          showToast(\"Temporary password has been set successfully\", \"success\");\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  const [showUserInfoModal, setShowUserInfoModal] = useState(false);\r\n  const onClickEditUser = (row) => {\r\n    setShowUserInfoModal(true);\r\n    setCurrentRow(row);\r\n  };\r\n  const updateUserInfo = (params) => {\r\n    console.log(\"params\", params);\r\n    show_loading(true);\r\n    apiAdminUpdateUserInfo(params)\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setShowUserInfoModal(false);\r\n          showToast(\"User has been updated successfully\", \"success\");\r\n\r\n          fetchDataList(currentPage, perPage);\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  const [confirmModalTitle, setConfirmModalTitle] = useState(\r\n    \"Are you sure to delete this record?\"\r\n  );\r\n  const [confirmedAction, setConfirmedAction] = useState(\"change_user_status\");\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n  const onClickChangeUserStatus = (row, status) => {\r\n    console.log(\"row, status\", row, status);\r\n    setCurrentRow(row);\r\n    if (status === \"active\") {\r\n      setConfirmModalTitle(\"Are you sure you want to activate user?\");\r\n      setConfirmedAction(\"activate_user\");\r\n    } else {\r\n      setConfirmModalTitle(\"Are you sure you want to block user?\");\r\n      setConfirmedAction(\"block_user\");\r\n    }\r\n    setShowConfirmModal(true);\r\n  };\r\n  const doConfirmedAction = () => {\r\n    let params = {\r\n      user_id: currentRow[\"id\"],\r\n    };\r\n    if (confirmedAction === \"activate_user\") {\r\n      params[\"status\"] = \"1\";\r\n    } else if (confirmedAction === \"block_user\") {\r\n      params[\"status\"] = \"0\";\r\n    }\r\n    console.log(\"params\", params);\r\n    show_loading(true);\r\n    apiAdminUpdateUserStatus(params)\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setShowConfirmModal(false);\r\n          showToast(api_res.message, \"success\");\r\n\r\n          fetchDataList(currentPage, perPage);\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n  ////////////////////////////////////////////end modal actions/////////////////////////////////////////////////////////\r\n\r\n  return (\r\n    <>\r\n      <div className=\"datatable-wrapper no-border\">\r\n        <DataTable\r\n          theme=\"dark\"\r\n          noHeader={true}\r\n          noTableHead={true}\r\n          columns={columns}\r\n          data={data}\r\n          defaultSortField={currentSortField}\r\n          defaultSortAsc={currentSortDirection === \"asc\"}\r\n          onSort={onSort}\r\n          sortServer={true}\r\n          subHeader\r\n          subHeaderComponent={subHeaderComponent}\r\n          pagination\r\n          paginationServer\r\n          paginationTotalRows={totalRows}\r\n          paginationDefaultPage={currentPage}\r\n          onChangeRowsPerPage={handlePerRowsChange}\r\n          onChangePage={handlePageChange}\r\n          paginationPerPage={perPage}\r\n          paginationRowsPerPageOptions={[5, 10, 25, 50, 100]}\r\n        />\r\n      </div>\r\n\r\n       \r\n      <ConfirmModal\r\n        content={confirmModalTitle}\r\n        onClickYes={doConfirmedAction}\r\n        visibleModal={showConfirmModal}\r\n        setVisibleModal={setShowConfirmModal}\r\n        modalClass=\"user-page admin-page confirm-modal\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminTicketListTable;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminFeedPage\\AdminFeedPage.js",["2749","2750","2751","2752","2753","2754","2755","2756","2757","2758"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport AdminLayout from \"layouts/AdminLayout/AdminLayout\";\r\nimport {\r\n  ROUTE_ADMIN_FEED,\r\n  ROUTE_ADMIN_FEED_DETAIL,\r\n  ROUTE_ADMIN_TICKET,\r\n  ROUTE_ADMIN_USERS,\r\n  ROUTE_USER_ACADEMY,\r\n  ROUTE_USER_PAYMENT,\r\n  ROUTE_USER_WALLET,\r\n} from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport { apiAdminGetProfileInfo } from \"services/adminCommonService\";\r\nimport { get_data_value, showToast, show_loading } from \"utils/GlobalFunctions\";\r\nimport AdminFeedListTable from \"./inc/AdminFeedListTable\";\r\n\r\nconst currentPageTitle = \"News Feed\";\r\nconst AdminFeedPage = () => {\r\n  const dispatch = useDispatch();\r\n  const initPage = () => {\r\n    dispatch(\r\n      UpdateAppData({\r\n        currentPageTitle: currentPageTitle,\r\n        current_route: ROUTE_ADMIN_FEED,\r\n        m_user_menu_collapsed: true,\r\n      })\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    initPage();\r\n    getData();\r\n  }, []);\r\n  const history = useHistory();\r\n  const defaultPageData = {\r\n    user: {},\r\n    user_list: [],\r\n  };\r\n  const [pageData, setPageData] = useState(defaultPageData);\r\n  const getData = () => {\r\n    show_loading(true);\r\n    apiAdminGetProfileInfo()\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setPageData(api_res.data);\r\n          dispatch(updateUser(api_res.data[\"user\"]));\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AdminLayout>\r\n        <div className=\"feed-list-page\">\r\n          <div className={`row`}>\r\n            <div className=\"col-lg-12 grid-margin stretch-card\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <h4 className=\"card-title t-show-mobile\">\r\n                    {currentPageTitle}\r\n                  </h4>\r\n                  <div className=\"card-content\">\r\n                    <h4 className=\"card-title pull-left\">\r\n                      <Link\r\n                        to={`/admin/feed/detail/0`}\r\n                        className=\"btn btn-primary\"\r\n                      >\r\n                        <i className=\"mdi mdi-plus\"></i> New Feed\r\n                      </Link>\r\n                    </h4>\r\n                    <div className=\"clearfix\"></div>\r\n                    <div className=\"datatable-page\">\r\n                      <AdminFeedListTable pageData={pageData} />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </AdminLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminFeedPage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminFeedPage\\inc\\AdminFeedListTable.js",["2759","2760","2761","2762","2763","2764","2765","2766","2767","2768","2769","2770","2771","2772","2773","2774","2775","2776","2777","2778","2779","2780","2781","2782","2783","2784","2785","2786","2787","2788","2789","2790"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport { RULE_PERCENT } from \"config/CONSTANTS\";\r\nimport { ROUTE_ADMIN_FEED_DETAIL, ROUTE_USER_ACADEMY, ROUTE_USER_MARKETING } from \"navigation/CONSTANTS\";\r\nimport React, { useState, useEffect, useCallback, useMemo } from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport {\r\n  apiGetUserMarketingPageDetail,\r\n  apiGetUserMarketingRankDetail,\r\n} from \"services/userMarketingService\";\r\nimport { apiDeleteUserPayoutRow } from \"services/userWalletService\";\r\n\r\nimport {\r\n  empty,\r\n  get_data_value,\r\n  intval,\r\n  is_empty,\r\n  jQuery,\r\n  showToast,\r\n  show_loading,\r\n  timeConverter,\r\n  toLocalDatetime,\r\n} from \"utils/GlobalFunctions\";\r\nimport {\r\n  urlAdminDeleteUser,\r\n  urlAdminGetFeedList,\r\n  urlAdminGetTicketList,\r\n  urlAdminGetUsersList,\r\n} from \"services/CONSTANTS\";\r\nimport {\r\n  apiAdminSetUserTmpPassword,\r\n  apiAdminUpdateUserInfo,\r\n  apiAdminUpdateUserStatus,\r\n} from \"services/adminUsersService\";\r\nimport renderHTML from 'react-render-html';\r\nimport { apiDeleteAdminFeed } from \"services/adminFeedService\";\r\n\r\nconst AdminFeedListTable = (props) => {\r\n  const history = useHistory()\r\n  const userDataStore = useSelector((x) => x.userDataStore);\r\n  const { pageData } = props;\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [totalRows, setTotalRows] = useState(0);\r\n  const [perPage, setPerPage] = useState(5);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  // const [deleted, setDeleted] = useState([]);\r\n  const [currentSortField, setCurrentSortField] = useState(\"id\");\r\n  const [currentSortDirection, setCurrentSortDirection] = useState(\"desc\");\r\n  const [itemType, setItemType] = useState(\"\");\r\n\r\n  const [filterText, setFilterText] = useState(\"\");\r\n\r\n  const fetchDataList = async (\r\n    page,\r\n    size = perPage,\r\n    searchText = filterText,\r\n    sortColumn = currentSortField,\r\n    sortDirection = currentSortDirection,\r\n    item_type = itemType\r\n  ) => {\r\n    show_loading(true);\r\n\r\n    const response = await axios.get(\r\n      `${urlAdminGetFeedList}?page=${page}&per_page=${size}&keyword1=${searchText}&sort_column=${sortColumn}&sort_direction=${sortDirection}&item_type=${item_type}`\r\n    );\r\n\r\n    setData(response.data.data);\r\n    setTotalRows(response.data.total);\r\n    show_loading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchDataList(1);\r\n  }, []);\r\n\r\n  const removeItem = (array, item) => {\r\n    const newArray = array.slice();\r\n    newArray.splice(\r\n      newArray.findIndex((a) => a === item),\r\n      1\r\n    );\r\n\r\n    return newArray;\r\n  };\r\n\r\n  const handleDelete = useCallback(\r\n    (row) => async () => {\r\n      await axios.delete(`${urlAdminDeleteUser}?id=${row.id}`);\r\n      const response = await axios.get(\r\n        `${urlAdminGetFeedList}?page=${currentPage}&per_page=${perPage}&keyword1=${filterText}&sort_column=${currentSortField}&sort_direction=${currentSortDirection}&item_type=${itemType}`\r\n      );\r\n\r\n      setData(removeItem(response.data.data, row));\r\n      setTotalRows(totalRows - 1);\r\n    },\r\n    [currentPage, perPage, totalRows]\r\n  );\r\n  const handlePageChange = (page) => {\r\n    fetchDataList(page);\r\n    setCurrentPage(page);\r\n  };\r\n  const handlePerRowsChange = async (newPerPage, page) => {\r\n    fetchDataList(page, newPerPage);\r\n    setPerPage(newPerPage);\r\n  };\r\n  const handleSearchChange = (newSearchText) => {\r\n    fetchDataList(currentPage, perPage, newSearchText);\r\n    setFilterText(newSearchText);\r\n  };\r\n  const onSort = (column, sortDirection, event) => {\r\n    console.log(\r\n      \"--------column, sortDirection, event--------\",\r\n      column,\r\n      sortDirection,\r\n      event\r\n    );\r\n    let sortColumn = column[\"selector\"];\r\n    setCurrentSortField(sortColumn);\r\n    setCurrentSortDirection(sortDirection);\r\n    fetchDataList(currentPage, perPage, filterText, sortColumn, sortDirection);\r\n  };\r\n\r\n  const goFeedDetailPage = (row)=>{\r\n    const url = \"/admin/feed/detail/\" + row.id\r\n    history.push(url)\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Subject\",\r\n      selector: \"subject\",\r\n      sortable: false,\r\n      cell: (row) =>\r\n        row.id ? (\r\n          <>\r\n            <div className=\"feed-row\">\r\n              <div className=\"feed-item\">\r\n                <div className=\"feed-box\" onClick={(e)=>{goFeedDetailPage(row)}}>\r\n                  <div className=\"feed-subject\">{row.subject}</div>\r\n                  <div className=\"feed-message word-break\">{renderHTML(row.message)}</div>\r\n                  <div className=\"feed-date unix-timestamp\">\r\n                    {timeConverter(row.add_timestamp)}\r\n                  </div>\r\n                </div>\r\n                <div className=\"feed-action\">\r\n                  <button\r\n                    title=\"Delete\"\r\n                    data-id={`${row.id}`}\r\n                    className=\"ajax-del-btn btn btn-sm btn-danger\"\r\n                    style={{width:\"30px\"}}\r\n                    onClick={(e)=>{onClickDeleteFeed(row)}}\r\n                  >\r\n                    <i className=\"fa fa-times\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : null,\r\n    },\r\n    {\r\n      name: \"action\",\r\n      selector: \"id\",\r\n      hide: 1,\r\n      omit: true,\r\n    },\r\n  ];\r\n\r\n  const [resetPaginationToggle, setResetPaginationToggle] = useState(false);\r\n  // const filteredItems = data.filter(\r\n  //   (item) =>\r\n  //     JSON.stringify(item).toLowerCase().indexOf(filterText.toLowerCase()) !==\r\n  //     -1\r\n  // );\r\n\r\n  const subHeaderComponent = useMemo(() => {\r\n    const handleClear = () => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        handleSearchChange(\"\");\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div className=\"datatable-subheader\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"datatable-filter-box\">\r\n              <input\r\n                id=\"search\"\r\n                type=\"text\"\r\n                placeholder=\"Search...\"\r\n                value={filterText}\r\n                className=\"form-control input-search\"\r\n                onChange={(e) => handleSearchChange(e.target.value)}\r\n              />\r\n              <button className=\"a-btn btn-clear-search\" onClick={handleClear}>\r\n                x\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }, [filterText, resetPaginationToggle]);\r\n\r\n  //////////////////////////////////////////start modal actions///////////////////////////////////////////////\r\n  const [currentRow, setCurrentRow] = useState({});\r\n  const [confirmModalTitle, setConfirmModalTitle] = useState(\r\n    \"Are you sure you want to delete?\"\r\n  );\r\n  const [confirmedAction, setConfirmedAction] = useState(\"delete\");\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n  const onClickDeleteFeed = (row) => {\r\n    setCurrentRow(row);\r\n    setConfirmModalTitle(\"Are you sure you want to delete?\");\r\n    setConfirmedAction(\"delete\");\r\n    setShowConfirmModal(true);\r\n  };\r\n  const doConfirmedAction = () => {\r\n    let params = {\r\n      id: currentRow[\"id\"],\r\n    };\r\n    show_loading(true);\r\n    apiDeleteAdminFeed(params)\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setShowConfirmModal(false);\r\n          showToast(api_res.message, \"success\");\r\n          fetchDataList(currentPage, perPage);\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n  ////////////////////////////////////////////end modal actions/////////////////////////////////////////////////////////\r\n\r\n  return (\r\n    <>\r\n      <div className=\"datatable-wrapper no-border\">\r\n        <DataTable\r\n          theme=\"dark\"\r\n          noHeader={true}\r\n          noTableHead={true}\r\n          columns={columns}\r\n          data={data}\r\n          defaultSortField={currentSortField}\r\n          defaultSortAsc={currentSortDirection === \"asc\"}\r\n          onSort={onSort}\r\n          sortServer={true}\r\n          subHeader\r\n          subHeaderComponent={subHeaderComponent}\r\n          pagination\r\n          paginationServer\r\n          paginationTotalRows={totalRows}\r\n          paginationDefaultPage={currentPage}\r\n          onChangeRowsPerPage={handlePerRowsChange}\r\n          onChangePage={handlePageChange}\r\n          paginationPerPage={perPage}\r\n          paginationRowsPerPageOptions={[5, 10, 25, 50, 100]}\r\n        />\r\n      </div>\r\n\r\n      <ConfirmModal\r\n        content={confirmModalTitle}\r\n        onClickYes={doConfirmedAction}\r\n        visibleModal={showConfirmModal}\r\n        setVisibleModal={setShowConfirmModal}\r\n        modalClass=\"user-page admin-page confirm-modal\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminFeedListTable;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\adminPaymentsService.js",["2791","2792","2793","2794","2795","2796","2797","2798","2799"],"import { APP_NAME, SYSTEM_ERROR } from \"config/CONSTANTS\";\r\nimport { axiosGet, axiosPost } from \"./ajaxServices\";\r\nimport {urlAdminDeletePaymentHistory, urlAdminGetUsersPageDetail, urlAdminSetUserTmpPassword, urlAdminUpdateUserInfo, urlAdminUpdateUserStatus, urlUserDeletePaymentRow, urlUserGetPaymentListPageDetail } from \"./CONSTANTS\";\r\n \r\nexport function apiAdminDeletePaymentHistory(params) {\r\n  const url = urlAdminDeletePaymentHistory;\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  var formData = new FormData();\r\n  formData.append(\"id\", params.id);\r\n\r\n  return new Promise((resolve, reject) => {\r\n    axiosPost(url, formData, config)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n} ","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\adminWithdrawService.js",["2800","2801","2802","2803","2804","2805","2806","2807","2808","2809"],"import { APP_NAME, SYSTEM_ERROR } from \"config/CONSTANTS\";\r\nimport { get_data_value } from \"utils/GlobalFunctions\";\r\nimport { axiosGet, axiosPost } from \"./ajaxServices\";\r\nimport {urlAdminChangeWithdrawStatus, urlAdminDeletePaymentHistory, urlAdminGetUsersPageDetail, urlAdminSetUserTmpPassword, urlAdminUpdateUserInfo, urlAdminUpdateUserStatus, urlUserDeletePaymentRow, urlUserGetPaymentListPageDetail } from \"./CONSTANTS\";\r\n \r\nexport function apiAdminChaneWithdrawStatus(params) {\r\n  const url = urlAdminChangeWithdrawStatus;\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  var formData = new FormData();\r\n  formData.append(\"id\", params.id);\r\n  formData.append(\"status\", get_data_value(params, 'status'))\r\n  formData.append(\"action\", get_data_value(params, 'action'))\r\n\r\n  return new Promise((resolve, reject) => {\r\n    axiosPost(url, formData, config)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n} ","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminTicketPage\\AdminDetailTicketPage.js",["2810","2811","2812","2813","2814","2815","2816","2817","2818","2819","2820","2821","2822","2823","2824","2825","2826","2827","2828","2829","2830","2831","2832"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport { BASE_API_URL, BASE_UPLOAD_URL } from \"config/CONSTANTS\";\r\nimport AdminLayout from \"layouts/AdminLayout/AdminLayout\";\r\nimport {\r\n  ROUTE_ADMIN_TICKET,\r\n  ROUTE_ADMIN_TICKET_DETAIL,\r\n  ROUTE_USER_TEAM_DETAIL,\r\n  ROUTE_USER_TICKET,\r\n} from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport {\r\n  apiGetAdminTickeDetailPageDetail,\r\n  apiSubmitAdminTicketMessage,\r\n} from \"services/adminTicketService\";\r\nimport {\r\n  apiCloseUserTicket,\r\n  apiGetUserTickeDetailPageDetail,\r\n  apiGetUserTicketListPageDetail,\r\n  apiSubmitUserTicket,\r\n  apiSubmitUserTicketMessage,\r\n} from \"services/userTicketService\";\r\nimport {\r\n  empty,\r\n  get_data_value,\r\n  get_utc_timestamp,\r\n  intval,\r\n  isEmpty,\r\n  showToast,\r\n  show_loading,\r\n  timeConverter,\r\n  toLocalDatetime,\r\n} from \"utils/GlobalFunctions\";\r\n\r\nconst AdminDetailTicketPage = (props) => {\r\n  const ticketid = props.match.params.ticketid;\r\n  const currentPageTitle = \"Ticket No #\" + ticketid;\r\n  const dispatch = useDispatch();\r\n\r\n  //////////////////////////socket part////////////////////////////////\r\n  const userDataStore = useSelector((x) => x.userDataStore);\r\n  const socketStore = useSelector((x) => x.socketStore);\r\n  const socket = socketStore[\"socket\"];\r\n  useEffect(() => {\r\n    if (!empty(socket)) {\r\n      console.log(\"------------socketStore---------------\", socketStore);\r\n      addSocketListener();\r\n      getTicketNewMessageList();\r\n    }\r\n  }, [socket, ticketid]);\r\n\r\n  const token = get_data_value(userDataStore, \"token\");\r\n  const socketHeader = { token: token };\r\n\r\n  const [socketMessageList, setSocketMessageList] = useState([]);\r\n\r\n  const addSocketListener = () => {\r\n    socket.off(\"get_ticket_message_list\");\r\n    socket.on(\"get_ticket_message_list\", (data) => {\r\n      console.log(\r\n        \"-------------get_ticket_message_list reply data---------\",\r\n        data\r\n      );\r\n      if (parseInt(data[\"ticketid\"]) === parseInt(ticketid)) {\r\n        if (!empty(data)) {\r\n          setSocketMessageList(data[\"ticket_message_list\"]);\r\n          socket.emit(\"read_ticket_message_list\", {\r\n            ...socketHeader,\r\n            ticketid: ticketid,\r\n          });\r\n        }\r\n        setTimeout(function () {\r\n          window.scrollTo(0, document.body.scrollHeight);\r\n        }, 100);\r\n      }\r\n    });\r\n  };\r\n\r\n  const [lastPostId, setLastPostId] = useState(0);\r\n  const getTicketNewMessageList = () => {\r\n    socket.emit(\"get_ticket_message_list\", {\r\n      ...socketHeader,\r\n      last_id: lastPostId,\r\n      ticketid: ticketid,\r\n    });\r\n    //setLastPostId(lastPostId + 1)\r\n  };\r\n  const emitNewTicketNewMessage = () => {\r\n    socket.emit(\"submit_new_ticket_message\", {\r\n      ...socketHeader,\r\n      ticketid: ticketid,\r\n    });\r\n  };\r\n  ///////////////////////////end socket part/////////////////////////////\r\n\r\n  const initPage = () => {\r\n    dispatch(\r\n      UpdateAppData({\r\n        currentPageTitle: currentPageTitle,\r\n        current_route: ROUTE_ADMIN_TICKET,\r\n        m_user_menu_collapsed: true,\r\n      })\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    initPage();\r\n    getData();\r\n  }, [ticketid]);\r\n  const history = useHistory();\r\n  const defaultPageData = {\r\n    user: {},\r\n    ticket_info: {},\r\n  };\r\n  const [pageData, setPageData] = useState(defaultPageData);\r\n  const getData = () => {\r\n    show_loading(true);\r\n    apiGetAdminTickeDetailPageDetail(ticketid)\r\n      .then((api_res) => {\r\n        console.log(\"-----------------api_res----------------\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setPageData(api_res.data);\r\n          dispatch(updateUser(api_res.data[\"user\"]));\r\n          if (!empty(api_res.data[\"ticket_info\"][\"message_list\"])) {\r\n            setLastPostId(\r\n              intval(\r\n                api_res.data[\"ticket_info\"][\"message_list\"][\r\n                  api_res.data[\"ticket_info\"][\"message_list\"].length - 1\r\n                ][\"id\"]\r\n              )\r\n            );\r\n          }\r\n          //setCurrentPageTitle(\"Ticket No #\" + api_res.data[\"ticket_info\"]['id'])\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"warning\");\r\n      });\r\n  };\r\n\r\n  const [confirmModalTitle, setConfirmModalTitle] = useState(\r\n    \"Are you sure you want to close current ticket?\"\r\n  );\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n\r\n  const [uploadFile, setUploadFile] = useState(null);\r\n  const [fileUploadPlaceholder, setFileUploadPlaceholder] =\r\n    useState(\"No file selected\");\r\n  const initFormData = { description: \"\" };\r\n  const [formData, setFormData] = useState(initFormData);\r\n  const [fileKey, setFileKey] = useState(\"upload_file\");\r\n  const [errorField, setErrorField] = useState([]);\r\n  const [submitToEmail, setSubmitToEmail] = useState(false);\r\n\r\n  const validateFields = () => {\r\n    var errorList = Array();\r\n    errorList = isEmpty(formData, \"description\", errorList);\r\n    setErrorField([...errorList]);\r\n    return errorList.length > 0 ? false : true;\r\n  };\r\n  const onChangeFormField = (e, field_name) => {\r\n    if (errorField.includes(field_name)) {\r\n      let errors = errorField.filter((x) => x != field_name);\r\n      setErrorField([...errors]);\r\n    }\r\n    let updateData = {};\r\n    updateData[field_name] = e.target.value;\r\n    setFormData({ ...formData, ...updateData });\r\n  };\r\n  const onFileInputChanged = (e) => {\r\n    setUploadFile(e.target.files[0]);\r\n    console.log(\"e\", e);\r\n    let files = e.target.files;\r\n    if (!empty(files)) {\r\n      setFileUploadPlaceholder(files[0].name);\r\n    } else {\r\n      setFileUploadPlaceholder(\"No file selected\");\r\n    }\r\n  };\r\n  const onSubmitTicketMessage = (via_email) => {\r\n    let is_valid = validateFields();\r\n    console.log(\"is valid\", is_valid);\r\n    if (is_valid) {\r\n      show_loading(true);\r\n      apiSubmitAdminTicketMessage(\r\n        { ...formData, ticket_id: ticketid, to_email: via_email },\r\n        uploadFile\r\n      )\r\n        .then((api_res) => {\r\n          console.log(\"api_res\", api_res);\r\n          show_loading(false);\r\n          if (api_res.status === \"1\") {\r\n            dispatch(updateUser(api_res.data[\"user\"]));\r\n            showToast(api_res.message, \"success\");\r\n            setFormData(initFormData);\r\n            setFileKey(\"upload_file_\" + new Date().getTime());\r\n            setUploadFile(null);\r\n            setFileUploadPlaceholder(\"No file selected\");\r\n            emitNewTicketNewMessage();\r\n          } else {\r\n            showToast(api_res.message, \"error\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          show_loading(false);\r\n          showToast(err, \"error\");\r\n        });\r\n    }\r\n  };\r\n  const onClickSubmitTicketMessage = () => {\r\n    setSubmitToEmail(false);\r\n    onSubmitTicketMessage(false);\r\n  };\r\n  const onClickSubmitTicketMessageToEmail = () => {\r\n    setSubmitToEmail(true);\r\n    onSubmitTicketMessage(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AdminLayout>\r\n        <div className=\"user-detail-ticket-page\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <h4 className=\"card-title t-show-mobile\">\r\n                    {currentPageTitle}\r\n                  </h4>\r\n                  <div className=\"card-content ticket-item-container\">\r\n                    {true && (\r\n                      <div className=\"ticket-item\">\r\n                        <div className=\"ticket-row\">\r\n                          <div className=\"ticket-details\">\r\n                            <span className=\"info\">\r\n                              <i className=\"fa fa-clock-o\"></i> Posted at:{\" \"}\r\n                              <em className=\"ticket-timestamp unix-timestamp\">\r\n                                {timeConverter(\r\n                                  get_data_value(\r\n                                    pageData[\"ticket_info\"],\r\n                                    \"add_timestamp\"\r\n                                  )\r\n                                )}\r\n                              </em>\r\n                            </span>\r\n                          </div>\r\n\r\n                          <div className=\"ticket-status-box text-center\">\r\n                            <span\r\n                              className={`ticket-status badge badge-pill badge-sm ${\r\n                                pageData[\"ticket_info\"][\"status\"] === \"Opened\"\r\n                                  ? \"badge-gradient-danger\"\r\n                                  : pageData[\"ticket_info\"][\"status\"] ===\r\n                                    \"Answered\"\r\n                                  ? \"badge-gradient-warning\"\r\n                                  : pageData[\"ticket_info\"][\"status\"] ===\r\n                                    \"Replied\"\r\n                                  ? \"badge-gradient-info\"\r\n                                  : pageData[\"ticket_info\"][\"status\"] ===\r\n                                    \"Closed\"\r\n                                  ? \"badge-light\"\r\n                                  : \"badge-warning\"\r\n                              }`}\r\n                            >\r\n                              {pageData[\"ticket_info\"][\"status\"]}\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"ticket-content mt-4\">\r\n                          <h3 className=\"ticket-subject text-emphasis\">\r\n                            <span>\r\n                              <i\r\n                                className=\"fa fa-user\"\r\n                                style={{ width: \"20px\" }}\r\n                              ></i>\r\n                            </span>{\" \"}\r\n                            : &nbsp;{pageData[\"ticket_info\"][\"sender_name\"]}\r\n                          </h3>\r\n                          <h3 className=\"ticket-subject text-emphasis\">\r\n                            <span>\r\n                              <i\r\n                                className=\"fa fa-comments\"\r\n                                style={{ width: \"20px\" }}\r\n                              ></i>\r\n                            </span>{\" \"}\r\n                            : &nbsp;{pageData[\"ticket_info\"][\"title\"]}\r\n                          </h3>\r\n                          <p className=\"text-normal ticket-description\">\r\n                            {pageData[\"ticket_info\"][\"description\"]}\r\n                          </p>\r\n                          <p\r\n                            className={`ticket-attachment ${\r\n                              empty(pageData[\"ticket_info\"][\"attachment_path\"])\r\n                                ? \"hidden\"\r\n                                : \"\"\r\n                            }`}\r\n                          >\r\n                            <a\r\n                              className=\"text-primary\"\r\n                              href={`${BASE_UPLOAD_URL}/${pageData[\"ticket_info\"][\"attachment_path\"]}`}\r\n                              target=\"_blank\"\r\n                              download\r\n                              rel=\"noreferrer\"\r\n                            >\r\n                              <i className=\"fa fa fa-cloud-download\"></i> File\r\n                              attachment\r\n                            </a>\r\n                            <img\r\n                              src={`${BASE_UPLOAD_URL}/${pageData[\"ticket_info\"][\"attachment_path\"]}`}\r\n                              alt=\"\"\r\n                              style={{ maxwidth: \"200px\", display: \"none\" }}\r\n                            />\r\n                          </p>\r\n                        </div>\r\n                        <div className=\"ticket-message-container\">\r\n                          <hr\r\n                            className={`${\r\n                              empty(socketMessageList) ? \"hidden\" : \"\"\r\n                            }`}\r\n                          />\r\n                          <div className=\"ticket-message-list mt-4\">\r\n                            {socketMessageList.map((info, index) => (\r\n                              <div\r\n                                key={index + \"-\" + info[\"id\"]}\r\n                                className={`ticket-message-item ${\r\n                                  intval(info[\"sender_id\"]) === 0\r\n                                    ? \"self\"\r\n                                    : \"other\"\r\n                                }`}\r\n                              >\r\n                                <div className=\"ticket-details ticket-message-time mb-2\">\r\n                                  <span className=\"info\">\r\n                                    <i className=\"fa fa-clock-o\"></i> Replied\r\n                                    at:{\" \"}\r\n                                    <em className=\"ticket-timestamp unix-timestamp\">\r\n                                      {timeConverter(info[\"add_timestamp\"])}\r\n                                    </em>\r\n                                  </span>\r\n                                </div>\r\n                                <div className=\"reply-info mt-2\">\r\n                                  <div className=\"user-avatar-name\">\r\n                                    <img\r\n                                      className=\"img-responsive rounded-circle bg-white\"\r\n                                      alt=\"\"\r\n                                      src={`/assets/global/img/${\r\n                                        intval(info[\"sender_id\"]) !== 0\r\n                                          ? \"default-avatar-1.png\"\r\n                                          : intval(info[\"sender_admin_id\"]) ===\r\n                                            1\r\n                                          ? \"admin-avatar.jpg\"\r\n                                          : \"assistant-avatar.png\"\r\n                                      }`}\r\n                                      width=\"40\"\r\n                                    />\r\n                                    <span className=\"ml-2 user-name\">\r\n                                      {info[\"sender_name\"]}\r\n                                    </span>\r\n                                  </div>\r\n                                  <p className=\"mt-2 ticket-message-body\">\r\n                                    {info[\"message\"]}\r\n                                  </p>\r\n                                  {!empty(info[\"attachment_path\"]) && (\r\n                                    <p\r\n                                      className={`ticket-attachment`}\r\n                                    >\r\n                                      <a\r\n                                        className=\"text-primary\"\r\n                                        href={`${BASE_UPLOAD_URL}/${info[\"attachment_path\"]}`}\r\n                                        target=\"_blank\"\r\n                                        download=\"\"\r\n                                        rel=\"noreferrer\"\r\n                                      >\r\n                                        <i className=\"fa fa fa-cloud-download\"></i>{\" \"}\r\n                                        File attachment\r\n                                      </a>\r\n                                    </p>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                    <form\r\n                      className={`forms ${\r\n                        pageData[\"ticket_info\"][\"status\"] === \"Closed\"\r\n                          ? \"hidden\"\r\n                          : \"\"\r\n                      }`}\r\n                      method=\"post\"\r\n                    >\r\n                      <hr />\r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"description\">\r\n                          Your reply: <span className=\"text-primary\">*</span>\r\n                        </label>\r\n                        <textarea\r\n                          className={`form-control description ${\r\n                            errorField.includes(\"description\")\r\n                              ? \"is-invalid\"\r\n                              : \"\"\r\n                          }`}\r\n                          id=\"description\"\r\n                          name=\"description\"\r\n                          rows=\"10\"\r\n                          value={formData[\"description\"]}\r\n                          required\r\n                          onChange={(e) => onChangeFormField(e, \"description\")}\r\n                        ></textarea>\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label>File upload</label>\r\n                        <div className=\"input-group file-upload-group col-xs-12\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control file-upload-info\"\r\n                            readOnly\r\n                            placeholder={fileUploadPlaceholder}\r\n                            style={{ borderColor: \"#313452 !important\" }}\r\n                          />\r\n                          <button\r\n                            className=\"file-upload-browse btn btn-gradient-primary\"\r\n                            type=\"button\"\r\n                          >\r\n                            Browse\r\n                          </button>\r\n                          <input\r\n                            type=\"file\"\r\n                            name=\"upload_file\"\r\n                            className=\"file-upload-default upload_file\"\r\n                            data-key={fileKey}\r\n                            key={fileKey}\r\n                            onChange={(e) => onFileInputChanged(e)}\r\n                          />\r\n                        </div>\r\n                        <p className=\"card-description mt-2\">\r\n                          Only allowed (JPEG, JPG, PNG)\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                          <div className=\"form-group mt-4\">\r\n                            <div\r\n                              className=\"button-group\"\r\n                              style={{ textAlign: \"center\" }}\r\n                            >\r\n                              <button\r\n                                type=\"button\"\r\n                                className=\"mb-2 btn btn-lg1 btn-primary mr-2\"\r\n                                onClick={(e) => {\r\n                                  onClickSubmitTicketMessage();\r\n                                }}\r\n                              >\r\n                                Submit\r\n                              </button>\r\n                              <button\r\n                                type=\"button\"\r\n                                className=\"mb-2 btn btn-lg1 btn-primary\"\r\n                                onClick={(e) => {\r\n                                  onClickSubmitTicketMessageToEmail();\r\n                                }}\r\n                              >\r\n                                Submit to Email\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </AdminLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminDetailTicketPage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\adminTicketService.js",["2833","2834","2835","2836","2837","2838","2839","2840"],"import { APP_NAME, SYSTEM_ERROR } from \"config/CONSTANTS\";\r\nimport { axiosGet, axiosPost, axiosPostMultipart } from \"./ajaxServices\";\r\nimport {\r\n  urlAdminGetTicketInfoPageDetail,\r\n  urlAdminSubmitTicketMessage,\r\n  urlUserCloseTicket,\r\n  urlUserDeleteTicket,\r\n  urlUserGetTicketInfoPageDetail,\r\n  urlUserGetTicketListPageDetail,\r\n  urlUserSubmitTicket,\r\n  urlUserSubmitTicketMessage,\r\n} from \"./CONSTANTS\";\r\n\r\nexport const apiSubmitAdminTicketMessage = (params, uploadFile) => {\r\n  const url = urlAdminSubmitTicketMessage;\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  var formData = new FormData();\r\n  formData.append(\"ticket_id\", params.ticket_id);\r\n  formData.append(\"description\", params.description.trim());\r\n  formData.append(\"to_email\", params.to_email ? \"1\" : \"0\");\r\n  formData.append(\"upload_file\", uploadFile);\r\n  return new Promise((resolve, reject) => {\r\n    axiosPostMultipart(url, formData, config)\r\n      .then(function (response) {\r\n        resolve(response);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport const apiGetAdminTickeDetailPageDetail = (ticketid) => {\r\n  const url = urlAdminGetTicketInfoPageDetail;\r\n  return new Promise((resolve, reject) => {\r\n    axiosGet(url, { ticketid: ticketid }, SYSTEM_ERROR)\r\n      .then(function (response) {\r\n        resolve(response);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminFeedPage\\AdminDetailFeedPage.js",["2841","2842","2843","2844","2845","2846","2847","2848","2849","2850","2851","2852","2853","2854","2855","2856"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport AdminLayout from \"layouts/AdminLayout/AdminLayout\";\r\nimport {\r\n  ROUTE_ADMIN_FEED,\r\n  ROUTE_ADMIN_FEED_DETAIL,\r\n  ROUTE_ADMIN_TICKET,\r\n  ROUTE_ADMIN_USERS,\r\n  ROUTE_USER_ACADEMY,\r\n  ROUTE_USER_PAYMENT,\r\n  ROUTE_USER_WALLET,\r\n} from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport { apiAdminGetProfileInfo } from \"services/adminCommonService\";\r\nimport { apiGetAdminFeedDetailPageDetail, apiSubmitAdminFeed } from \"services/adminFeedService\";\r\nimport {\r\n  empty,\r\n  get_data_value,\r\n  isEmpty,\r\n  showToast,\r\n  show_loading,\r\n} from \"utils/GlobalFunctions\";\r\n\r\nimport { CKEditor, CKEditorContext } from \"@ckeditor/ckeditor5-react\";\r\nimport DecoupledEditor from \"@ckeditor/ckeditor5-build-decoupled-document\";\r\nimport { BASE_API_URL } from \"config/CONSTANTS\";\r\n\r\nconst currentPageTitle = \"News Feed\";\r\nconst AdminDetailFeedPage = (props) => {\r\n  const feedid = props.match.params.feedid;\r\n  const dispatch = useDispatch();\r\n\r\n    //////////////////////////socket part////////////////////////////////\r\n    const userDataStore = useSelector((x) => x.userDataStore);\r\n    const socketStore = useSelector((x) => x.socketStore);\r\n    const socket = socketStore[\"socket\"];\r\n    useEffect(() => {\r\n      if (!empty(socket)) {\r\n        console.log(\"------------socketStore---------------\", socketStore);\r\n      }\r\n    }, [socket, feedid]);\r\n  \r\n    const token = get_data_value(userDataStore, \"token\");\r\n    const socketHeader = { token: token };\r\n    \r\n    ///////////////////////////end socket part/////////////////////////////\r\n\r\n\r\n  const initPage = () => {\r\n    dispatch(\r\n      UpdateAppData({\r\n        currentPageTitle: currentPageTitle,\r\n        current_route: ROUTE_ADMIN_FEED,\r\n        m_user_menu_collapsed: true,\r\n      })\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    initPage();\r\n    getData();\r\n  }, []);\r\n\r\n  const history = useHistory();\r\n  const defaultPageData = {\r\n    user: {},\r\n    feed_info:{}\r\n  };\r\n  const [pageData, setPageData] = useState(defaultPageData);\r\n  const [subject, setSubject] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const getData = () => {\r\n    show_loading(true);\r\n    apiGetAdminFeedDetailPageDetail(feedid)\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setPageData(api_res.data);\r\n          setSubject(api_res.data[\"feed_info\"][\"subject\"]);\r\n          setMessage(api_res.data[\"feed_info\"][\"message\"]);\r\n          dispatch(updateUser(api_res.data[\"user\"]));\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  const onChangeSubject = (e) => {\r\n    const val = e.target.value \r\n    if (errorField.includes('subject')) {\r\n      let errors = errorField.filter((x) => x != 'subject');\r\n      setErrorField([...errors]);\r\n    }\r\n    setSubject(val);\r\n  };\r\n  const onChangeMessage = (event, editor) => {\r\n    const val = editor.getData()\r\n    if (errorField.includes('message')) {\r\n      let errors = errorField.filter((x) => x != 'message');\r\n      setErrorField([...errors]);\r\n    }\r\n    setMessage(val);\r\n  };\r\n\r\n  const [errorField, setErrorField] = useState([]);\r\n\r\n  const validateFields = () => {\r\n    var errorList = Array();\r\n    if(empty(subject)){\r\n      errorList.push('subject');\r\n    }\r\n    if(empty(message)){\r\n      errorList.push('message');\r\n    }\r\n    setErrorField([...errorList]);\r\n    return errorList.length > 0 ? false : true;\r\n  };\r\n  const submitData = ()=>{\r\n    const is_valid = validateFields()\r\n    if(!is_valid){\r\n      return false;\r\n    }\r\n    if(message===\"\"){\r\n      showToast(\"Please input content\", \"error\")\r\n      return false\r\n    }\r\n    show_loading(true)\r\n    let params = {\r\n      id: get_data_value(pageData['feed_info'], 'id', 0),\r\n      subject: subject,\r\n      message: message\r\n    }\r\n    apiSubmitAdminFeed(params)\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          socket.emit('submit_feed_item', {\r\n            ...socketHeader,\r\n            feedid: feedid,\r\n          })\r\n          \r\n          showToast(api_res.message, \"success\");\r\n          history.push(ROUTE_ADMIN_FEED)\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <AdminLayout>\r\n        <div className=\"feed-detail-page\">\r\n          <div className={`row`}>\r\n            <div className=\"col-lg-12 grid-margin stretch-card\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <h4 className=\"card-title t-show-mobile\">\r\n                    {currentPageTitle}\r\n                  </h4>\r\n                  <div className=\"card-content\">\r\n                    <div className=\"forms-sample\">\r\n                      <div className=\"form-group\">\r\n                        <input\r\n                          type=\"text\"\r\n                          placeholder=\"Input subject\"\r\n                          className={`form-control user_email ${\r\n                            errorField.includes(\"subject\") ? \"is-invalid\" : \"\"\r\n                          }`}\r\n                          id=\"subject\"\r\n                          name=\"subject\"\r\n                          value={subject}\r\n                          onChange={(e) => {\r\n                            onChangeSubject(e);\r\n                          }}\r\n                          required\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className={`feed-detail-container ${\r\n                            errorField.includes(\"message\") ? \"has-error\" : \"\"\r\n                          }`}>\r\n                      <CKEditor\r\n                        onReady={(editor) => {\r\n                          console.log(\"Editor is ready to use!\", editor);\r\n\r\n                          // Insert the toolbar before the editable area.\r\n                          editor.ui\r\n                            .getEditableElement()\r\n                            .parentElement.insertBefore(\r\n                              editor.ui.view.toolbar.element,\r\n                              editor.ui.getEditableElement()\r\n                            );\r\n                          //this.editor = editor;\r\n                        }}\r\n                        onError={({ willEditorRestart }) => {\r\n                          // If the editor is restarted, the toolbar element will be created once again.\r\n                          // The `onReady` callback will be called again and the new toolbar will be added.\r\n                          // This is why you need to remove the older toolbar.\r\n                          if (willEditorRestart) {\r\n                            this.editor.ui.view.toolbar.element.remove();\r\n                          }\r\n                        }}\r\n                        onChange={(event, editor) =>\r\n                          onChangeMessage(event, editor)\r\n                        }\r\n                        editor={DecoupledEditor}\r\n                        data={message}\r\n                        config={{\r\n                          // toolbar: [ 'bold', 'italic' ],\r\n                          ckfinder: {\r\n                            uploadUrl: BASE_API_URL + \"/upload-image\",\r\n                          },\r\n                        }}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"form-group mt-4\">\r\n                          <div className=\"button-group text-center\" >\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"mb-2 btn btn-lg1 btn-primary mr-2\"\r\n                              onClick={(e)=>{submitData()}}\r\n                            >\r\n                              Submit\r\n                            </button>\r\n                            <button\r\n                              type=\"reset\"\r\n                              className=\"mb-2 btn btn-lg1 btn-light\"\r\n                              onClick={(e)=>{getData()}}\r\n                            >\r\n                              Cancel\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </AdminLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminDetailFeedPage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\adminFeedService.js",["2857","2858","2859","2860","2861","2862","2863","2864","2865","2866"],"import { APP_NAME, SYSTEM_ERROR } from \"config/CONSTANTS\";\r\nimport { axiosGet, axiosPost, axiosPostMultipart } from \"./ajaxServices\";\r\nimport {\r\n  urlAdminDeleteFeed,\r\n  urlAdminGetFeedInfoPageDetail,\r\n  urlAdminGetTicketInfoPageDetail,\r\n  urlAdminSubmitFeed,\r\n  urlAdminSubmitTicketMessage,\r\n  urlUserCloseTicket,\r\n  urlUserDeleteTicket,\r\n  urlUserGetTicketInfoPageDetail,\r\n  urlUserGetTicketListPageDetail,\r\n  urlUserSubmitTicket,\r\n  urlUserSubmitTicketMessage,\r\n} from \"./CONSTANTS\";\r\n\r\nexport const apiSubmitAdminFeed = (params) => {\r\n  const url = urlAdminSubmitFeed;\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  var formData = new FormData();\r\n  formData.append(\"id\", params.id);\r\n  formData.append(\"subject\", params.subject.trim());\r\n  formData.append(\"message\", params.message);\r\n  return new Promise((resolve, reject) => {\r\n    axiosPostMultipart(url, formData, config)\r\n      .then(function (response) {\r\n        resolve(response);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport const apiGetAdminFeedDetailPageDetail = (feedid) => {\r\n  const url = urlAdminGetFeedInfoPageDetail;\r\n  return new Promise((resolve, reject) => {\r\n    axiosGet(url, { feedid: feedid }, SYSTEM_ERROR)\r\n      .then(function (response) {\r\n        resolve(response);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport const apiDeleteAdminFeed = (params) => {\r\n  const url = urlAdminDeleteFeed;\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  var formData = new FormData();\r\n  formData.append(\"id\", params.id);\r\n  return new Promise((resolve, reject) => {\r\n    axiosPostMultipart(url, formData, config)\r\n      .then(function (response) {\r\n        resolve(response);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminAnnouncementPage\\AdminAnnouncementPage.js",["2867","2868","2869","2870","2871","2872","2873","2874","2875","2876","2877","2878","2879","2880","2881"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport CreditCardForm from \"components/CreditCardForm/CreditCardForm\";\r\nimport AdminLayout from \"layouts/AdminLayout/AdminLayout\";\r\nimport {\r\n  ROUTE_ADMIN_ANNOUNCEMENT,\r\n  ROUTE_USER_PROFILE,\r\n} from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport { apiSubmitAdminAnnouncement } from \"services/adminAnnouncementService\";\r\nimport { apiAdminGetProfileInfo } from \"services/adminCommonService\";\r\nimport { apiGetAdminUsersPageDetail } from \"services/adminUsersService\";\r\nimport {\r\n  apiUserCancelAffiliate,\r\n  apiUserCancelMembership,\r\n  apiUserUpdateCardInfo,\r\n  apiUserUpdateProfile,\r\n} from \"services/userProfileService\";\r\nimport {\r\n  empty,\r\n  get_data_value,\r\n  isEmpty,\r\n  showToast,\r\n  show_loading,\r\n} from \"utils/GlobalFunctions\";\r\n\r\nconst currentPageTitle = \"Add Announcement\";\r\nconst AdminAnnouncementPage = () => {\r\n  const dispatch = useDispatch();\r\n  const initPage = () => {\r\n    dispatch(\r\n      UpdateAppData({\r\n        currentPageTitle: currentPageTitle,\r\n        current_route: ROUTE_ADMIN_ANNOUNCEMENT,\r\n        m_user_menu_collapsed: true,\r\n      })\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    initPage();\r\n    getData();\r\n  }, []);\r\n\r\n  const defaultPageData = {\r\n    user: {},\r\n  };\r\n  const [pageData, setPageData] = useState(defaultPageData);\r\n  const getData = () => {\r\n    show_loading(true);\r\n    apiAdminGetProfileInfo()\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setPageData(api_res.data);\r\n          dispatch(updateUser(api_res.data[\"user\"]));\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  const [userData, setUserData] = useState({});\r\n  const [errorField, setErrorField] = useState([]);\r\n\r\n  const validateFields = () => {\r\n    var errorList = Array();\r\n    errorList = isEmpty(userData, \"subject\", errorList);\r\n    errorList = isEmpty(userData, \"message\", errorList);\r\n\r\n    setErrorField([...errorList]);\r\n    return errorList.length > 0 ? false : true;\r\n  };\r\n\r\n  const onChangeFormField = (e, field_name) => {\r\n    if (errorField.includes(field_name)) {\r\n      let errors = errorField.filter((x) => x != field_name);\r\n      setErrorField([...errors]);\r\n    }\r\n    let updateData = { ...userData };\r\n    updateData[field_name] = e.target.value;\r\n    setUserData({ ...updateData });\r\n  };\r\n\r\n  const [userKind, setUserKind] = useState(\"\");\r\n  const userKindList = [\r\n    { label: \"All\", value: \"\" },\r\n    { label: \"Active users\", value: \"active\" },\r\n    { label: \"Active customers\", value: \"active_customer\" },\r\n    { label: \"Affiliates\", value: \"affiliate\" },\r\n    { label: \"Both\", value: \"both\" },\r\n    { label: \"Inactive users\", value: \"inactive_users\" },\r\n  ];\r\n  const onChangeUserKind = (user_kind) => {\r\n    setUserKind(user_kind);\r\n  };\r\n\r\n  const submitData = () => {\r\n    let is_valid = validateFields();\r\n    console.log(\"is valid\", is_valid);\r\n    if (is_valid) {\r\n      show_loading(true);\r\n      apiSubmitAdminAnnouncement({ ...userData, user_kind: userKind })\r\n        .then((api_res) => {\r\n          console.log(\"api_res\", api_res);\r\n          show_loading(false);\r\n          if (api_res.status === \"1\") {\r\n            dispatch(updateUser(api_res.data[\"user\"]));\r\n            showToast(api_res.message, \"success\");\r\n            getData();\r\n            setUserData({});\r\n          } else {\r\n            showToast(api_res.message, \"error\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          show_loading(false);\r\n          showToast(err, \"error\");\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AdminLayout>\r\n        <div className=\"admin-announcement-page\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12 grid-margin stretch-card\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <h4 className=\"card-title t-show-mobile\">\r\n                    {currentPageTitle}\r\n                  </h4>\r\n                  <div className=\"card-content\">\r\n                    <div className=\"forms-sample\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                          <div className=\"form-group row\">\r\n                            <div className=\"col-sm-12 text-center m-text-left\">\r\n                              {userKindList.map((item, index) => (\r\n                                <div\r\n                                  className=\"form-check form-check-inline margin-right-20\"\r\n                                  key={index}\r\n                                >\r\n                                  <label className=\"form-check-label\">\r\n                                    <input\r\n                                      type=\"radio\"\r\n                                      className=\"form-check-input\"\r\n                                      name=\"user_kind\"\r\n                                      id={`user_kind_${item[\"value\"]}`}\r\n                                      value={item[\"value\"]}\r\n                                      checked={userKind === item[\"value\"]}\r\n                                      onChange={(e) => {\r\n                                        onChangeUserKind(item[\"value\"]);\r\n                                      }}\r\n                                    />\r\n                                    {item[\"label\"]}\r\n                                    <i className=\"input-helper\"></i>\r\n                                  </label>\r\n                                </div>\r\n                              ))}\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"form-group row\">\r\n                            <label className=\"col-sm-2 col-form-label\">\r\n                              Subject\r\n                            </label>\r\n                            <div className=\"col-sm-10\">\r\n                              <input\r\n                                type=\"text\"\r\n                                className={`form-control subject ${\r\n                                  errorField.includes(\"subject\")\r\n                                    ? \"is-invalid\"\r\n                                    : \"\"\r\n                                }`}\r\n                                name=\"subject\"\r\n                                value={\r\n                                  !empty(userData[\"subject\"])\r\n                                    ? userData[\"subject\"]\r\n                                    : \"\"\r\n                                }\r\n                                onChange={(e) => {\r\n                                  onChangeFormField(e, \"subject\");\r\n                                }}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"form-group row\">\r\n                            <label className=\"col-sm-2 col-form-label\">\r\n                              Message\r\n                            </label>\r\n                            <div className=\"col-sm-10\">\r\n                              <textarea\r\n                                className={`form-control message ${\r\n                                  errorField.includes(\"message\")\r\n                                    ? \"is-invalid\"\r\n                                    : \"\"\r\n                                }`}\r\n                                name=\"message\"\r\n                                rows={`15`}\r\n                                value={\r\n                                  !empty(userData[\"message\"])\r\n                                    ? userData[\"message\"]\r\n                                    : \"\"\r\n                                }\r\n                                onChange={(e) => {\r\n                                  onChangeFormField(e, \"message\");\r\n                                }}\r\n                              ></textarea>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                              <div className=\"form-group mt-4\">\r\n                                <div className=\"button-group text-center\">\r\n                                  <button\r\n                                    type=\"button\"\r\n                                    className=\"mb-2 btn btn-lg1 btn-primary mr-2\"\r\n                                    onClick={(e) => {\r\n                                      submitData();\r\n                                    }}\r\n                                  >\r\n                                    Submit\r\n                                  </button>\r\n                                  <button\r\n                                    type=\"reset\"\r\n                                    className=\"mb-2 btn btn-lg1 btn-light\"\r\n                                    onClick={(e) => {\r\n                                      setUserData({});\r\n                                    }}\r\n                                  >\r\n                                    Cancel\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </AdminLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminAnnouncementPage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\adminAnnouncementService.js",["2882","2883","2884","2885","2886","2887","2888","2889","2890","2891","2892","2893","2894","2895","2896"],"import { APP_NAME, SYSTEM_ERROR } from \"config/CONSTANTS\";\r\nimport { axiosGet, axiosPost, axiosPostMultipart } from \"./ajaxServices\";\r\nimport {\r\n  urlAdminDeleteFeed,\r\n  urlAdminGetFeedInfoPageDetail,\r\n  urlAdminGetTicketInfoPageDetail,\r\n  urlAdminSubmitAnnouncement,\r\n  urlAdminSubmitFeed,\r\n  urlAdminSubmitTicketMessage,\r\n  urlUserCloseTicket,\r\n  urlUserDeleteTicket,\r\n  urlUserGetTicketInfoPageDetail,\r\n  urlUserGetTicketListPageDetail,\r\n  urlUserSubmitTicket,\r\n  urlUserSubmitTicketMessage,\r\n} from \"./CONSTANTS\";\r\n\r\nexport const apiSubmitAdminAnnouncement = (params) => {\r\n  const url = urlAdminSubmitAnnouncement;\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  var formData = new FormData();\r\n  formData.append(\"download_option\", params.user_kind);\r\n  formData.append(\"subject\", params.subject.trim());\r\n  formData.append(\"message\", params.message);\r\n  return new Promise((resolve, reject) => {\r\n    axiosPostMultipart(url, formData, config)\r\n      .then(function (response) {\r\n        resolve(response);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n \r\n ","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminProfilePage\\AdminProfilePage.js",["2897","2898","2899","2900","2901","2902","2903","2904","2905","2906","2907","2908","2909","2910","2911","2912","2913"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport CreditCardForm from \"components/CreditCardForm/CreditCardForm\";\r\nimport AdminLayout from \"layouts/AdminLayout/AdminLayout\";\r\nimport {\r\n  ROUTE_ADMIN_ANNOUNCEMENT,\r\n  ROUTE_ADMIN_PROFILE,\r\n  ROUTE_USER_PROFILE,\r\n} from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport { apiSubmitAdminAnnouncement } from \"services/adminAnnouncementService\";\r\nimport { apiAdminGetProfileInfo, apiAdminUpdateProfile } from \"services/adminCommonService\";\r\nimport { apiGetAdminUsersPageDetail } from \"services/adminUsersService\";\r\nimport {\r\n  apiUserCancelAffiliate,\r\n  apiUserCancelMembership,\r\n  apiUserUpdateCardInfo,\r\n  apiUserUpdateProfile,\r\n} from \"services/userProfileService\";\r\nimport {\r\n  empty,\r\n  get_data_value,\r\n  isEmpty,\r\n  showToast,\r\n  show_loading,\r\n} from \"utils/GlobalFunctions\";\r\n\r\nconst currentPageTitle = \"Profile\";\r\nconst AdminProfilePage = () => {\r\n  const dispatch = useDispatch();\r\n  const initPage = () => {\r\n    dispatch(\r\n      UpdateAppData({\r\n        currentPageTitle: currentPageTitle,\r\n        current_route: ROUTE_ADMIN_PROFILE,\r\n        m_user_menu_collapsed: true,\r\n      })\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    initPage();\r\n    getData();\r\n  }, []);\r\n\r\n  const defaultPageData = {\r\n    user: {},\r\n  };\r\n  const [pageData, setPageData] = useState(defaultPageData);\r\n  const getData = () => {\r\n    show_loading(true);\r\n    apiAdminGetProfileInfo()\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setPageData(api_res.data);\r\n          setUserData({...api_res.data['user'], admin_password:\"\"});\r\n          dispatch(updateUser(api_res.data[\"user\"]));\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  const [userData, setUserData] = useState({});\r\n  const [errorField, setErrorField] = useState([]);\r\n\r\n  const validateFields = () => {\r\n    var errorList = Array();\r\n    errorList = isEmpty(userData, \"admin_name\", errorList);\r\n    errorList = isEmpty(userData, \"admin_email\", errorList);\r\n\r\n    setErrorField([...errorList]);\r\n    return errorList.length > 0 ? false : true;\r\n  };\r\n\r\n  const onChangeFormField = (e, field_name) => {\r\n    if (errorField.includes(field_name)) {\r\n      let errors = errorField.filter((x) => x != field_name);\r\n      setErrorField([...errors]);\r\n    }\r\n    let updateData = { ...userData };\r\n    updateData[field_name] = e.target.value;\r\n    setUserData({ ...updateData });\r\n  };\r\n\r\n  const submitData = () => {\r\n    let is_valid = validateFields();\r\n    console.log(\"is valid\", is_valid);\r\n    if (is_valid) {\r\n      show_loading(true);\r\n      apiAdminUpdateProfile({ ...userData })\r\n        .then((api_res) => {\r\n          console.log(\"api_res\", api_res);\r\n          show_loading(false);\r\n          if (api_res.status === \"1\") {\r\n            dispatch(updateUser(api_res.data[\"user\"]));\r\n            showToast(api_res.message, \"success\");\r\n            getData();\r\n          } else {\r\n            showToast(api_res.message, \"error\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          show_loading(false);\r\n          showToast(err, \"error\");\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AdminLayout>\r\n        <div className=\"admin-announcement-page\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12 grid-margin stretch-card\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <h4 className=\"card-title t-show-mobile\">\r\n                    {currentPageTitle}\r\n                  </h4>\r\n                  <div className=\"card-content\">\r\n                    <div className=\"forms-sample\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                          <div className=\"form-group\">\r\n                            <label htmlFor=\"admin_name\">Name</label>\r\n                            <input\r\n                              type=\"text\"\r\n                              placeholder=\"Input your name\"\r\n                              className={`form-control admin_name ${\r\n                                errorField.includes(\"admin_name\")\r\n                                  ? \"is-invalid\"\r\n                                  : \"\"\r\n                              }`}\r\n                              id=\"admin_name\"\r\n                              name=\"admin_name\"\r\n                              value={!empty(userData['admin_name']) ? userData['admin_name'] : \"\"}\r\n                              onChange={(e) => {\r\n                                onChangeFormField(e, \"admin_name\");\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          <div className=\"form-group\">\r\n                            <label htmlFor=\"admin_email\">Email</label>\r\n                            <input\r\n                              type=\"email\"\r\n                              placeholder=\"Input your email\"\r\n                              className={`form-control admin_email ${\r\n                                errorField.includes(\"admin_email\")\r\n                                  ? \"is-invalid\"\r\n                                  : \"\"\r\n                              }`}\r\n                              id=\"admin_email\"\r\n                              name=\"admin_email\"\r\n                              value={!empty(userData['admin_email']) ? userData['admin_email'] : \"\"}\r\n                              onChange={(e) => {\r\n                                onChangeFormField(e, \"admin_email\");\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          <div className=\"form-group\">\r\n                            <label htmlFor=\"admin_password\">Password</label>\r\n                            <input\r\n                              type=\"email\"\r\n                              placeholder=\"Input your password\"\r\n                              className={`form-control admin_password ${\r\n                                errorField.includes(\"admin_password\")\r\n                                  ? \"is-invalid\"\r\n                                  : \"\"\r\n                              }`}\r\n                              id=\"admin_password\"\r\n                              name=\"admin_password\"\r\n                              value={!empty(userData['admin_password']) ? userData['admin_password'] : \"\"}\r\n                              onChange={(e) => {\r\n                                onChangeFormField(e, \"admin_password\");\r\n                              }}\r\n                            />\r\n                          </div>\r\n\r\n                          <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                              <div className=\"form-group mt-4\">\r\n                                <div className=\"button-group text-center\">\r\n                                  <button\r\n                                    type=\"button\"\r\n                                    className=\"mb-2 btn btn-lg1 btn-primary mr-2\"\r\n                                    onClick={(e) => {\r\n                                      submitData();\r\n                                    }}\r\n                                  >\r\n                                    Submit\r\n                                  </button>\r\n                                  <button\r\n                                    type=\"reset\"\r\n                                    className=\"mb-2 btn btn-lg1 btn-light\"\r\n                                    onClick={(e) => {\r\n                                      setUserData({});\r\n                                    }}\r\n                                  >\r\n                                    Cancel\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </AdminLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminProfilePage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminStatsPage\\AdminStatsPage.js",["2914","2915","2916","2917","2918","2919","2920","2921","2922","2923","2924","2925","2926","2927","2928","2929","2930","2931","2932"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport CreditCardForm from \"components/CreditCardForm/CreditCardForm\";\r\nimport AdminLayout from \"layouts/AdminLayout/AdminLayout\";\r\nimport {\r\n  ROUTE_ADMIN_ANNOUNCEMENT,\r\n  ROUTE_ADMIN_PROFILE,\r\n  ROUTE_ADMIN_STATS,\r\n  ROUTE_USER_PROFILE,\r\n} from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport { apiSubmitAdminAnnouncement } from \"services/adminAnnouncementService\";\r\nimport {\r\n  apiAdminGetProfileInfo,\r\n  apiAdminUpdateProfile,\r\n} from \"services/adminCommonService\";\r\nimport { apiGetAdminStatsPageDetail } from \"services/adminStatsService\";\r\nimport { apiGetAdminUsersPageDetail } from \"services/adminUsersService\";\r\nimport {\r\n  apiUserCancelAffiliate,\r\n  apiUserCancelMembership,\r\n  apiUserUpdateCardInfo,\r\n  apiUserUpdateProfile,\r\n} from \"services/userProfileService\";\r\nimport {\r\n  empty,\r\n  get_data_value,\r\n  isEmpty,\r\n  priceFormat,\r\n  showToast,\r\n  show_loading,\r\n} from \"utils/GlobalFunctions\";\r\n\r\nconst currentPageTitle = \"Company Stats\";\r\nconst AdminStatsPage = () => {\r\n  const dispatch = useDispatch();\r\n  const initPage = () => {\r\n    dispatch(\r\n      UpdateAppData({\r\n        currentPageTitle: currentPageTitle,\r\n        current_route: ROUTE_ADMIN_STATS,\r\n        m_user_menu_collapsed: true,\r\n      })\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    initPage();\r\n    getData();\r\n  }, []);\r\n\r\n  const defaultPageData = {\r\n    user: {},\r\n    company_balance:0,\r\n    total_revenue:0,\r\n    member_stats:{}\r\n  };\r\n  const [pageData, setPageData] = useState(defaultPageData);\r\n  const getData = () => {\r\n    show_loading(true);\r\n    apiGetAdminStatsPageDetail()\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setPageData(api_res.data);\r\n          dispatch(updateUser(api_res.data[\"user\"]));\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AdminLayout>\r\n        <div className=\"admin-stats-page\">\r\n          <h4 className=\"subtitle mb-3\">Finances:</h4>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 grid-margin stretch-card\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <div className=\"d-flex align-items-center justify-content-between\">\r\n                    <div>\r\n                      <h5>Total amount of money on user's credit wallet:</h5>\r\n                      <h4 className=\"text-success text-bold mt-3 mb-0\">${priceFormat(parseFloat(pageData['company_balance']))}</h4>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6 grid-margin stretch-card\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <div className=\"d-flex align-items-center justify-content-between\">\r\n                    <div>\r\n                      <h5>Total monthly revenue:</h5>\r\n                      <h4 className=\"text-success text-bold mt-3 mb-0\">${priceFormat(parseFloat(pageData['total_revenue']))}</h4>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <h4 className=\"subtitle mb-3\">Users Information:</h4>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 grid-margin stretch-card\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <div className=\"d-flex align-items-center justify-content-between\">\r\n                    <div>\r\n                      <h5>Total HLX Customers:</h5>\r\n                      <h4 className=\"text-success text-bold mt-3 mb-0\">{pageData['member_stats']['active_customer_cnt']}</h4>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6 grid-margin stretch-card\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <div className=\"d-flex align-items-center justify-content-between\">\r\n                    <div>\r\n                      <h5>Total HLX Affiliates:</h5>\r\n                      <h4 className=\"text-success text-bold mt-3 mb-0\">{pageData['member_stats']['active_affiliate_only_cnt']}</h4>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6 grid-margin stretch-card\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <div className=\"d-flex align-items-center justify-content-between\">\r\n                    <div>\r\n                      <h5>Total HLX Both (Customer & Affiliate):</h5>\r\n                      <h4 className=\"text-success text-bold mt-3 mb-0\">{pageData['member_stats']['both_cnt']}</h4>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6 grid-margin stretch-card\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <div className=\"d-flex align-items-center justify-content-between\">\r\n                    <div>\r\n                      <h5>Total HLX Users:</h5>\r\n                      <h4 className=\"text-success text-bold mt-3 mb-0\">{pageData['member_stats']['total_users']}</h4>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6 grid-margin stretch-card\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <div className=\"d-flex align-items-center justify-content-between\">\r\n                    <div>\r\n                      <h5>Users with Free Memberships:</h5>\r\n                      <h4 className=\"text-success text-bold mt-3 mb-0\">{pageData['member_stats']['free_member_cnt']}</h4>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <h4 className=\"subtitle mb-3\">Cancellation in Progress:</h4>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 grid-margin stretch-card\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <div className=\"d-flex align-items-center justify-content-between\">\r\n                    <div>\r\n                      <h5>Cancelled to Affiliate:</h5>\r\n                      <h4 className=\"text-success text-bold mt-3 mb-0\">{pageData['member_stats']['cancelled_affiliate_cnt']}</h4>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6 grid-margin stretch-card\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <div className=\"d-flex align-items-center justify-content-between\">\r\n                    <div>\r\n                      <h5>Cancelled to Inactive:</h5>\r\n                      <h4 className=\"text-success text-bold mt-3 mb-0\">{pageData['member_stats']['cancelled_customer_cnt']}</h4>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </AdminLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminStatsPage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\adminStatsService.js",["2933","2934","2935","2936","2937","2938","2939","2940","2941","2942","2943","2944","2945","2946","2947"],"import { APP_NAME, SYSTEM_ERROR } from \"config/CONSTANTS\";\r\nimport { axiosGet, axiosPost, axiosPostMultipart } from \"./ajaxServices\";\r\nimport {\r\n  urlAdminDeleteFeed,\r\n  urlAdminGetFeedInfoPageDetail,\r\n  urlAdminGetTicketInfoPageDetail,\r\n  urlAdminStatsPageDetail,\r\n  urlAdminSubmitAnnouncement,\r\n  urlAdminSubmitFeed,\r\n  urlAdminSubmitTicketMessage,\r\n  urlUserCloseTicket,\r\n  urlUserDeleteTicket,\r\n  urlUserGetTicketInfoPageDetail,\r\n  urlUserGetTicketListPageDetail,\r\n  urlUserSubmitTicket,\r\n  urlUserSubmitTicketMessage,\r\n} from \"./CONSTANTS\";\r\n\r\nexport const apiGetAdminStatsPageDetail = () => {\r\n  const url = urlAdminStatsPageDetail;\r\n  return new Promise((resolve, reject) => {\r\n    axiosGet(url, {}, SYSTEM_ERROR)\r\n      .then(function (response) {\r\n        resolve(response);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminTeamPage\\AdminTeamPage.js",["2948","2949","2950","2951","2952","2953","2954","2955","2956","2957","2958","2959","2960","2961","2962","2963","2964"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport {\r\n  ROUTE_ADMIN_TEAM,\r\n  ROUTE_USER_DASHBOARD,\r\n  ROUTE_USER_TEAM,\r\n} from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport { apiGetUserAcademyPageDetail } from \"services/userAcademyService\";\r\n\r\nimport {\r\n  empty,\r\n  get_data_value,\r\n  intval,\r\n  showToast,\r\n  show_loading,\r\n} from \"utils/GlobalFunctions\";\r\nimport Select from \"react-select\";\r\nimport { BASE_FRONT_URL } from \"config/CONSTANTS\";\r\nimport AdminTankUserListModal from \"./inc/AdminTankUserListModal\";\r\nimport { apiAdminGetTreeUpLevelUser, apiGetAdminTeamPageDetail } from \"services/adminTeamService\";\r\nimport AdminLayout from \"layouts/AdminLayout/AdminLayout\";\r\n\r\nconst currentPageTitle = \"MLM Tree\";\r\nconst AdminTeamPage = (props) => {\r\n  const dispatch = useDispatch();\r\n  const initPage = () => {\r\n    dispatch(\r\n      UpdateAppData({\r\n        currentPageTitle: currentPageTitle,\r\n        current_route: ROUTE_ADMIN_TEAM,\r\n        m_user_menu_collapsed: true,\r\n      })\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    initPage();\r\n    getData();\r\n  }, [props]);\r\n  const history = useHistory();\r\n  const defaultPageData = {\r\n    user: {},\r\n    user_tree: [],\r\n    check_in_holding_tank: \"\",\r\n    all_users_in_tree: \"\",\r\n  };\r\n  const [pageData, setPageData] = useState(defaultPageData);\r\n  const getData = () => {\r\n    show_loading(true);\r\n    const rootUserId = getRootUserId();\r\n    setSelectedUserID(rootUserId);\r\n    apiGetAdminTeamPageDetail(rootUserId)\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setPageData(api_res.data);\r\n          dispatch(updateUser(api_res.data[\"user\"]));\r\n          updateUserSelectList(api_res.data[\"all_users_in_tree\"]);\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  const getRootUserId = () => {\r\n    let rootUseId = 0;\r\n    try {\r\n      if (!empty(props.match.params.userid)) {\r\n        rootUseId = props.match.params.userid;\r\n      }\r\n    } catch (e) {}\r\n    return rootUseId;\r\n  };\r\n\r\n  /////////////////////////////////////////////// select box///////////////////////////////////////////\r\n  const colorStyles = {\r\n    control: (styles) => ({\r\n      ...styles,\r\n      backgroundColor: \"white\",\r\n      color: \"black\",\r\n    }),\r\n    option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n      return {\r\n        ...styles,\r\n        backgroundColor: \"white\",\r\n        color: \"black\",\r\n        cursor: isDisabled ? \"not-allowed\" : \"default\",\r\n\r\n        \":active\": {\r\n          ...styles[\":active\"],\r\n          backgroundColor: \"#f16857\",\r\n          color: \"white\",\r\n        },\r\n        \":hover\": {\r\n          ...styles[\":active\"],\r\n          backgroundColor: \"#f16857\",\r\n          color: \"white\",\r\n        },\r\n      };\r\n    },\r\n    input: (styles) => ({\r\n      ...styles,\r\n      backgroundColor: \"white\",\r\n      color: \"black\",\r\n    }),\r\n    placeholder: (styles) => ({\r\n      ...styles,\r\n      backgroundColor: \"white\",\r\n      color: \"black\",\r\n    }),\r\n  };\r\n  var userList = [];\r\n  var defaultUserList = [{ value: 0, label: \"Root User\" }];\r\n  const updateUserSelectList = (all_users_in_tree) => {\r\n    userList = defaultUserList;\r\n    for (var key in all_users_in_tree) {\r\n      var item = all_users_in_tree[key];\r\n      var option_item = { value: item[\"id\"], label: item[\"user_name\"] };\r\n      userList.push(option_item);\r\n    }\r\n    setSelectUserList(userList);\r\n  };\r\n\r\n  const [selectUserList, setSelectUserList] = useState(userList);\r\n  const [selectedUserID, setSelectedUserID] = useState(0);\r\n\r\n  function onUserChange(val) {\r\n    console.log(\"Selected: \", val);\r\n    //setSelectedUserID(get_data_value(val, \"value\", 0));\r\n    let child_user_id = get_data_value(val, \"value\", 0);\r\n    history.push(\"/admin/team/detail/\" + child_user_id);\r\n  }\r\n  ///////////////////////////////////////////////end select box///////////////////////////////////////////\r\n\r\n  const goDownLine = (item) => {\r\n    console.log(\"item\", item);\r\n    const child_user_id = item[\"user_info\"][\"id\"];\r\n    history.push(\"/admin/team/detail/\" + child_user_id);\r\n  };\r\n  const backToTop = () => {\r\n    history.push(ROUTE_ADMIN_TEAM);\r\n  };\r\n  const backToUp = () => {\r\n    console.log('selectedUserID',selectedUserID)\r\n    if(empty(selectedUserID)){\r\n      return false;\r\n    }\r\n    show_loading(true);\r\n    apiAdminGetTreeUpLevelUser(selectedUserID)\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          dispatch(updateUser(api_res.data[\"user\"]));\r\n          let up_user = api_res.data['up_user'];\r\n          if(up_user['id']===1) {\r\n            history.push(ROUTE_ADMIN_TEAM);\r\n          }else{\r\n            history.push(\"/admin/team/detail/\" + up_user['id']);\r\n          }\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  const [tankUserList, setTankUserList] = useState([]);\r\n  const [showTankModal, setShowTankModal] = useState(false);\r\n\r\n  const [selected_parent_user_id, set_selected_parent_user_id] = useState(0);\r\n  const [selected_tree_position, set_selected_tree_position] = useState(0);\r\n\r\n  const generate_user_subtree_view = (child_list, parent_user_id) => {\r\n    const user_subtree_view = child_list.map((item, index) => {\r\n      return (\r\n        <div\r\n          className={`main-tree-box main-tree-box-${intval(item[\"level\"])}`}\r\n          data-level={`${intval(item[\"level\"])}`}\r\n          data-index={`${index}`}\r\n          key={`${item[\"level\"] + \"-\" + index}`}\r\n        >\r\n          <div\r\n            className={`tree-user-info-box ${\r\n              !empty(item[\"child_list\"]) ? \"\" : \" last-tree-user\"\r\n            }`}\r\n          >\r\n            <div\r\n              className={`user-info-wrapper text-center ${\r\n                intval(item[\"user_info\"][\"id\"]) > 0 ? \"\" : \"empty-user-wrapper\"\r\n              }`}\r\n              data-level={`${intval(item[\"level\"])}`}\r\n              data-user-id={`${intval(item[\"user_info\"][\"id\"])}`}\r\n              data-parent-user-id={`${parent_user_id}`}\r\n            >\r\n              <div className=\"user-avatar-wrapper\">\r\n                <div className=\"user-avatar-box\">\r\n                  <img src={`${item[\"user_info\"][\"user_image\"]}`} alt=\"\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"user-name-wrapper\">\r\n                <div className=\"user-name-box text-emphasis\">\r\n                  {item[\"user_info\"][\"user_name\"]}\r\n                </div>\r\n              </div>\r\n              <button\r\n                className={`btn-show-more-wrapper text-white ${\r\n                  intval(item[\"level\"]) > 0 &&\r\n                  item[\"user_info\"][\"has_downline\"] == \"1\"\r\n                    ? \"\"\r\n                    : \"hidden\"\r\n                }`}\r\n                title=\"View Downline\"\r\n                onClick={(e) => {\r\n                  goDownLine(item);\r\n                }}\r\n              >\r\n                <i className=\"fa fa-plus\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          {!empty(item[\"child_list\"]) && (\r\n            <div\r\n              className=\"tree-child-container\"\r\n              data-level={`${intval(item[\"level\"])}`}\r\n              data-parent-user-id={`${item[\"user_info\"][\"id\"]}`}\r\n            >\r\n              {generate_user_subtree_view(\r\n                item[\"child_list\"],\r\n                item[\"user_info\"][\"id\"]\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      );\r\n    });\r\n    return user_subtree_view;\r\n  };\r\n\r\n  const user_tree_view = pageData[\"user_tree\"].map((item, index) => {\r\n    return (\r\n      <div\r\n        className={`main-tree-box main-tree-box-${intval(item[\"level\"])}`}\r\n        style={{ width: \"900px\" }}\r\n        data-level={`${intval(item[\"level\"])}`}\r\n        data-index={`${index}`}\r\n        key={`${item[\"level\"] + \"-\" + index}`}\r\n      >\r\n        <div\r\n          className={`tree-user-info-box ${\r\n            !empty(item[\"child_list\"]) ? \"\" : \" last-tree-user\"\r\n          }`}\r\n        >\r\n          <div\r\n            className={`user-info-wrapper text-center ${\r\n              intval(item[\"user_info\"][\"id\"]) > 0 ? \"\" : \"empty-user-wrapper\"\r\n            }`}\r\n            data-level={`${intval(item[\"level\"])}`}\r\n            data-user-id={`${intval(item[\"user_info\"][\"id\"])}`}\r\n          >\r\n            <div className=\"user-avatar-wrapper\">\r\n              <div className=\"user-avatar-box\">\r\n                <img src={`${item[\"user_info\"][\"user_image\"]}`} alt=\"\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"user-name-wrapper\">\r\n              <div className=\"user-name-box text-emphasis\">\r\n                {item[\"user_info\"][\"user_name\"]}\r\n              </div>\r\n            </div>\r\n            <button\r\n              className={`btn-show-more-wrapper text-white ${\r\n                intval(item[\"level\"]) > 0 &&\r\n                item[\"user_info\"][\"has_downline\"] == \"1\"\r\n                  ? \"\"\r\n                  : \"hidden\"\r\n              }`}\r\n              title=\"View Downline\"\r\n              onClick={(e) => {\r\n                goDownLine(item);\r\n              }}\r\n            >\r\n              <i className=\"fa fa-plus\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {!empty(item[\"child_list\"]) && (\r\n          <div\r\n            className=\"tree-child-container\"\r\n            data-level={`${intval(item[\"level\"])}`}\r\n            data-parent-user-id={`${item[\"user_info\"][\"id\"]}`}\r\n          >\r\n            {generate_user_subtree_view(\r\n              item[\"child_list\"],\r\n              item[\"user_info\"][\"id\"]\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <AdminLayout>\r\n        <div className=\"user-team-page\">\r\n          <div className={`row`}>\r\n            <div className=\"col-md-12 grid-margin\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <h4 className=\"card-title t-show-mobile\">\r\n                    {currentPageTitle}\r\n                  </h4>\r\n                  <div className=\"card-content\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-6 text-left m-text-center\">\r\n                        <div\r\n                          className=\"form-group form-search is-empty\"\r\n                          style={{\r\n                            position: \"relative\",\r\n                            maxWidth: \"360px\",\r\n                            paddingRight: \"50px\",\r\n                          }}\r\n                        >\r\n                          {selectedUserID === 0 && (\r\n                            <Select\r\n                              className=\"select2-box basic-single\"\r\n                              classNamePrefix=\"select\"\r\n                              defaultValue={defaultUserList[0]}\r\n                              isDisabled={false}\r\n                              isLoading={false}\r\n                              isClearable={true}\r\n                              isSearchable={true}\r\n                              name=\"color\"\r\n                              options={selectUserList}\r\n                              styles={colorStyles}\r\n                              onChange={onUserChange}\r\n                            />\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-6 text-right m-text-center\">\r\n                        <img\r\n                          className=\"avatar-list-heading\"\r\n                          src=\"/assets/global/img/avatar-heading-1.jpg\"\r\n                          alt=\"\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    {selectedUserID !== 0 && (\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-12 margin-top-20 text-center\">\r\n                          <button\r\n                            className=\"btn btn-primary btn-back-top mr-2\"\r\n                            onClick={(e) => {\r\n                              backToTop();\r\n                            }}\r\n                          >\r\n                            Back to top\r\n                          </button>\r\n                          <button\r\n                            className=\"btn btn-primary btn-back-up\"\r\n                            onClick={(e) => {\r\n                              backToUp();\r\n                            }}\r\n                          >\r\n                            Back up one level\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"mlm-tree-box\">{user_tree_view}</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={`row`}></div>\r\n        </div>\r\n      </AdminLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminTeamPage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminTeamPage\\inc\\AdminTankUserListModal.js",["2965","2966","2967","2968","2969","2970","2971","2972"],"import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  empty,\r\n  get_data_value,\r\n  intval,\r\n  isEmpty,\r\n  jQuery,\r\n  showToast,\r\n} from \"utils/GlobalFunctions\";\r\nimport { APP_NAME } from \"config/CONSTANTS\";\r\n\r\nfunction AdminTankUserListModal(props) {\r\n  const {\r\n    isVisible,\r\n    setVisibleModal,\r\n    modalData,\r\n    submitModalData,\r\n    modalClass,\r\n    modalTitle,\r\n  } = props;\r\n\r\n  const [selectedUserID, setSelectedUserID] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (isVisible !== undefined) {\r\n      setShow(isVisible);\r\n      setSelectedUserID(intval(get_data_value(modalData[0], 'id')))\r\n    }\r\n  }, [isVisible, modalData]);\r\n  const [show, setShow] = useState(false);\r\n  const defaultModalData = {\r\n    selected_user_id: \"\",\r\n  };\r\n  const [modalPageData, setModalPageData] = useState(defaultModalData);\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    setVisibleModal(false);\r\n  };\r\n\r\n  const onClickSubmitModal = () => {\r\n    submitModalData(selectedUserID);\r\n  };\r\n\r\n  const onChangeSelectedTankUser = (event) => {\r\n    let value = event.target.value\r\n    console.log(\"value\", value);\r\n    setSelectedUserID(value)\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        centered\r\n        dialogClassName={modalClass}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{modalTitle}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"block text-center\">\r\n            <div className=\"modal-box\">\r\n              <div id=\"dialog\">\r\n                <div className=\"text-normal text-left\">\r\n                  <div className=\"table-responsive\">\r\n                    <table className=\"table table-striped12\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th></th>\r\n                          <th>User Name</th>\r\n                          <th>Avatar</th>\r\n                          <th className=\"hidden\">Email</th>\r\n                          <th className=\"hidden\">Phone</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {modalData.map((item, index) => (\r\n                          <tr key={index}>\r\n                            <td>\r\n                              <div className=\"form-check\">\r\n                                <label className=\"form-check-label\">\r\n                                  <input\r\n                                    type=\"radio\"\r\n                                    id={`tank-user-id-${item[\"id\"]}`}\r\n                                    name=\"tank-user-id\"\r\n                                    className=\"form-check-input\"\r\n                                    value={`${item['id']}`}\r\n                                    defaultChecked={index === 0 ? true : false}\r\n                                    onChange={(e) => {\r\n                                      onChangeSelectedTankUser(e);\r\n                                    }}\r\n                                  />\r\n                                  <i className=\"input-helper\"></i>\r\n                                </label>\r\n                              </div>\r\n                            </td>\r\n                            <td>\r\n                              <label htmlFor={`tank-user-id-${item[\"id\"]}`}>\r\n                                {item[\"user_name\"]}\r\n                              </label>\r\n                            </td>\r\n                            <td>\r\n                              <label\r\n                                htmlFor={`tank-user-id-${item[\"id\"]}`}\r\n                                className=\"mb-0 margin-bottom-0\"\r\n                              >\r\n                                <img\r\n                                  src=\"/assets/global/img/default-avatar-1.png?v=1\"\r\n                                  alt=\"\"\r\n                                />\r\n                              </label>\r\n                            </td>\r\n                            <td className=\"hidden\"></td>\r\n                            <td className=\"hidden\"></td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-md btn-close-dlg btn-light margin-right-10\"\r\n            data-dismiss=\"modal\"\r\n            onClick={handleClose}\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-md btn-submit-hlx-withdrawal-request btn-primary\"\r\n            onClick={onClickSubmitModal}\r\n          >\r\n            Confirm\r\n          </button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdminTankUserListModal;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\adminTeamService.js",["2973","2974","2975","2976","2977","2978","2979"],"import { APP_NAME, SYSTEM_ERROR } from \"config/CONSTANTS\";\r\nimport { axiosGet, axiosPost } from \"./ajaxServices\";\r\nimport {urlAdminGetTreeUpLevelUser, urlAdminTeamPageDetail, urlUserAssignTankUser, urlUserGetAcademyData, urlUserGetAcademyPageDetail, urlUserGetTankUserList, urlUserTeamPageDetail} from \"./CONSTANTS\";\r\n\r\nexport const apiGetAdminTeamPageDetail = (rootUserId) => {\r\n  const url = urlAdminTeamPageDetail;\r\n  return new Promise((resolve, reject) => {\r\n    let params = {\r\n      root_user_id: rootUserId\r\n    }\r\n    axiosGet(url, params, SYSTEM_ERROR)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });   \r\n};\r\n\r\nexport const apiAdminGetTreeUpLevelUser = (user_id) => {\r\n  const url = urlAdminGetTreeUpLevelUser;\r\n  return new Promise((resolve, reject) => {\r\n    let params = {\r\n      user_id: user_id\r\n    }\r\n    axiosGet(url, params, SYSTEM_ERROR)\r\n    .then(function (response) {\r\n      resolve(response);\r\n    })\r\n    .catch((err) => {\r\n      reject(err);\r\n    });\r\n  });\r\n};","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminUsersPage\\inc\\AdminUserDownloadModal.js",["2980","2981","2982","2983","2984","2985","2986","2987","2988","2989","2990","2991","2992"],"import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  empty,\r\n  get_data_value,\r\n  intval,\r\n  isEmpty,\r\n  jQuery,\r\n  showToast,\r\n} from \"utils/GlobalFunctions\";\r\nimport { APP_NAME } from \"config/CONSTANTS\";\r\n\r\nfunction AdminUserDownloadModal(props) {\r\n  const {\r\n    isVisible,\r\n    setVisibleModal,\r\n    pageData,\r\n    submitModalData,\r\n    modalClass,\r\n    modalTitle,\r\n  } = props;\r\n  useEffect(() => {\r\n    if (isVisible !== undefined) {\r\n      setShow(isVisible);\r\n      setModalPageData(pageData);\r\n    }\r\n  }, [isVisible, pageData]);\r\n  const [show, setShow] = useState(false);\r\n  const defaultModalData = {\r\n    user_name: \"\",\r\n    user_email: \"\",\r\n    user_password: \"\",\r\n    balance: \"\",\r\n  };\r\n  const [modalPageData, setModalPageData] = useState({});\r\n  const [modalData, setModalData] = useState(defaultModalData);\r\n  const [errorField, setErrorField] = useState([]);\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    setVisibleModal(false);\r\n  };\r\n\r\n  const [userKind, setUserKind] = useState(\"\");\r\n  const userKindList = [\r\n    { label: \"All\", value: \"\" },\r\n    { label: \"Active users\", value: \"active\" },\r\n    { label: \"Active customers\", value: \"active_customer\" },\r\n    { label: \"Affiliates\", value: \"affiliate\" },\r\n    { label: \"Both\", value: \"both\" },\r\n    { label: \"Inactive users\", value: \"inactive_users\" },\r\n  ];\r\n  const onChangeUserKind = (user_kind) => {\r\n    setUserKind(user_kind);\r\n  };\r\n\r\n  const onClickSubmitModal = () => {\r\n    submitModalData(userKind);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        centered\r\n        dialogClassName={modalClass}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{modalTitle}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"block text-center\">\r\n            <div className=\"modal-box\">\r\n              <div id=\"dialog\">\r\n                <div className=\"text-normal text-left\">\r\n                  <div className=\"text-left\">\r\n                    <div className=\"form-group row\">\r\n                      <div className=\"col-sm-12\">\r\n                        <div\r\n                          className=\"text-left\"\r\n                          style={{ paddingLeft: \"20px\" }}\r\n                        >\r\n                          {userKindList.map((item, index) => (\r\n                            <div\r\n                              className=\"form-check form-check-block\"\r\n                              key={index}\r\n                            >\r\n                              <label className=\"form-check-label\">\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  className=\"form-check-input\"\r\n                                  name=\"user_kind\"\r\n                                  id={`user_kind_${item[\"value\"]}`}\r\n                                  value={item[\"value\"]}\r\n                                  checked={userKind === item[\"value\"]}\r\n                                  onChange={(e) => {\r\n                                    onChangeUserKind(item[\"value\"]);\r\n                                  }}\r\n                                />\r\n                                {item[\"label\"]}\r\n                                <i className=\"input-helper\"></i>\r\n                              </label>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-md btn-close-dlg btn-light margin-right-10\"\r\n            data-dismiss=\"modal\"\r\n            onClick={handleClose}\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-md btn-submit-modal-data btn-primary\"\r\n            onClick={onClickSubmitModal}\r\n          >\r\n            Download\r\n          </button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdminUserDownloadModal;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Home\\NotFoundPage\\NotFoundPage.js",["2993","2994","2995"],"import HomeLayout from \"layouts/HomeLayout/HomeLayout\";\r\nimport { ROUTE_ROOT } from \"navigation/CONSTANTS\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\n\r\nconst NotFoundPage = () => {\r\n  const dispatch = useDispatch();\r\n  const initPage = () => {\r\n    let currentPageTitle = \"Not Found\";\r\n    dispatch(\r\n      UpdateAppData({\r\n        m_user_menu_collapsed: true,\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    initPage();\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <style>{`\r\n        .user-page .sidebar .nav{\r\n          display:none;\r\n        }\r\n      `}</style>\r\n      <div className=\"user-not-found-page\">\r\n        Page Not Found\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFoundPage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\components\\ConfirmLogoutModal\\ConfirmLogoutModal.js",["2996","2997","2998","2999","3000"],"import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  empty,\r\n  isEmpty,\r\n  is_empty,\r\n  jQuery,\r\n  showToast,\r\n} from \"utils/GlobalFunctions\";\r\nimport { APP_NAME } from \"config/CONSTANTS\";\r\n\r\nfunction ConfirmModal(props) {\r\n  const {\r\n    title,\r\n    content,\r\n    onClickYes,\r\n    textBtnYes,\r\n    hideBtnYes,\r\n    onClickNo,\r\n    textBtnNo,\r\n    hideBtnNo,\r\n    visibleModal,\r\n    setVisibleModal,\r\n    modalClass,\r\n  } = props;\r\n  useEffect(() => {\r\n    if (visibleModal !== undefined) {\r\n      setShow(visibleModal);\r\n    }\r\n  }, [visibleModal]);\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    setVisibleModal(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        dialogClassName={modalClass}\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{is_empty(title) ? `Log Out` : title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"text-center modal-content-body\">\r\n            <div className=\"text-normal\">{!empty(content) ? content : `Are you sure you want to log out?`}</div>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n        \r\n        <button\r\n            type=\"button\"\r\n            className={`btn btn-primary mr-1 ${hideBtnNo ? \"hidden\" : \"\"}`}\r\n            data-dismiss=\"modal\"\r\n            onClick={(e) => {\r\n              !empty(onClickNo) ? onClickNo() : handleClose();\r\n            }}\r\n          >\r\n            {is_empty(textBtnNo) ? \"No\" : textBtnNo}\r\n          </button>\r\n        <button\r\n            type=\"button\"\r\n            className={`btn btn-success ${hideBtnYes ? \"hidden\" : \"\"}`}\r\n            onClick={(e) => {\r\n              !empty(onClickYes) ? onClickYes() : handleClose();\r\n            }}\r\n          >\r\n            {is_empty(textBtnYes) ? \"Yes\" : textBtnYes}\r\n          </button>\r\n          \r\n          \r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ConfirmModal;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\User\\UserDashboardPage\\inc\\UserReferralListPage.js",["3001","3002","3003","3004","3005","3006","3007","3008","3009","3010","3011","3012","3013","3014","3015","3016","3017","3018","3019","3020","3021","3022","3023"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport { RULE_PERCENT } from \"config/CONSTANTS\";\r\nimport {\r\n  ROUTE_USER_ACADEMY,\r\n  ROUTE_USER_MARKETING,\r\n  ROUTE_USER_TICKET_DETAIL,\r\n} from \"navigation/CONSTANTS\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect, useCallback, useMemo } from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport {\r\n  apiGetUserMarketingPageDetail,\r\n  apiGetUserMarketingRankDetail,\r\n} from \"services/userMarketingService\";\r\nimport Select from \"react-select\";\r\n// import \"react-select-2/dist/css/react-select-2.css\";\r\n\r\nimport {\r\n  empty,\r\n  get_data_value,\r\n  intval,\r\n  is_empty,\r\n  showToast,\r\n  show_loading,\r\n} from \"utils/GlobalFunctions\";\r\nimport { urlUserGetTreeUserList } from \"services/CONSTANTS\";\r\n\r\nconst currentPageTitle = \"User Referral list\";\r\nconst UserReferralListPage = (props) => {\r\n  const { pageData } = props;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    updateUserSelectList();\r\n  }, [pageData]);\r\n  var userList = [];\r\n  var defaultUserList = [{ value: 0, label: \"All\" }];\r\n\r\n  const updateUserSelectList = () => {\r\n    userList = defaultUserList;\r\n    for (var key in pageData[\"all_personal_referrals_in_tree\"]) {\r\n      var item = pageData[\"all_personal_referrals_in_tree\"][key];\r\n      var option_item = { value: item[\"id\"], label: item[\"user_name\"] };\r\n      userList.push(option_item);\r\n    }\r\n    console.log('userList', userList)\r\n    setSelectUserList(userList);\r\n  };\r\n  const [selectUserList, setSelectUserList] = useState(userList);\r\n  const [selectedUserID, setSelectedUserID] = useState(0);\r\n\r\n  function onUserChange(val) {\r\n    console.log(\"Selected: \", val);\r\n    let newSearchVal = get_data_value(val, \"value\")\r\n    let newSearchText = get_data_value(val, \"label\")\r\n    if(newSearchVal === 0) {\r\n      newSearchText = \"\"\r\n    }\r\n    setFilterText(newSearchText)\r\n    fetchDataList(currentPage, perPage, newSearchText);\r\n\r\n  }\r\n\r\n  const defaultUserRankDetail = {\r\n    user: {},\r\n    all_personal_referrals_in_tree: [],\r\n    missing_rank_list: {},\r\n    missing_rank_message: \"\",\r\n    next_rank_info: {},\r\n    rank_info: {},\r\n    rank_rule_list: {},\r\n    tree_info: [],\r\n    user_base_tree: [],\r\n    destination_personal_referrals: 0,\r\n    personal_referrals: 0,\r\n    error_msg_arr: [],\r\n    error_msg: \"\",\r\n  };\r\n  const [selectedUserItem, setSelectedUserItem] = useState({});\r\n  const [selectedUserRankDetail, setSelectedUserRankDetail] = useState(\r\n    defaultUserRankDetail\r\n  );\r\n  const [showRankModal, setShowRankModal] = useState(false);\r\n\r\n  const onClickUserRank = (item) => {\r\n    console.log(\"item\", item);\r\n\r\n    setSelectedUserItem(item);\r\n    var user_id = item[\"id\"];\r\n    show_loading(true);\r\n    apiGetUserMarketingRankDetail(user_id)\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setSelectedUserRankDetail(api_res.data);\r\n          setShowRankModal(true);\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  const [data, setData] = useState([]);\r\n  const [totalRows, setTotalRows] = useState(0);\r\n  const [perPage, setPerPage] = useState(5);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  // const [deleted, setDeleted] = useState([]);\r\n  const [currentSortField, setCurrentSortField] = useState(\"add_timestamp\");\r\n  const [currentSortDirection, setCurrentSortDirection] = useState(\"asc\");\r\n  const [userType, setUserType] = useState(\"personal_referral\");\r\n\r\n  const [filterText, setFilterText] = useState(\"\");\r\n\r\n  const fetchDataList = async (\r\n    page,\r\n    size = perPage,\r\n    searchText = filterText,\r\n    sortColumn = currentSortField,\r\n    sortDirection = currentSortDirection,\r\n    userKind = userType\r\n  ) => {\r\n    show_loading(true);\r\n\r\n    const response = await axios.get(\r\n      `${urlUserGetTreeUserList}?page=${page}&per_page=${size}&keyword1=${searchText}&sort_column=${sortColumn}&sort_direction=${sortDirection}&user_kind=${userKind}`\r\n    );\r\n\r\n    setData(response.data.data);\r\n    setTotalRows(response.data.total);\r\n    show_loading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(!empty(pageData['user'])){\r\n      fetchDataList(1);\r\n    }\r\n  }, [pageData]);\r\n\r\n  //const history = useHistory();\r\n  const removeItem = (array, item) => {\r\n    const newArray = array.slice();\r\n    newArray.splice(\r\n      newArray.findIndex((a) => a === item),\r\n      1\r\n    );\r\n\r\n    return newArray;\r\n  };\r\n\r\n  const handleDelete = useCallback(\r\n    (row) => async () => {},\r\n    [currentPage, perPage, totalRows]\r\n  );\r\n  const handlePageChange = (page) => {\r\n    fetchDataList(page);\r\n    setCurrentPage(page);\r\n  };\r\n  const handlePerRowsChange = async (newPerPage, page) => {\r\n    fetchDataList(page, newPerPage);\r\n    setPerPage(newPerPage);\r\n  };\r\n  const handleSearchChange = (newSearchText) => {\r\n    fetchDataList(currentPage, perPage, newSearchText);\r\n    setFilterText(newSearchText);\r\n  };\r\n  const onSort = (column, sortDirection, event) => {\r\n    console.log(\r\n      \"--------column, sortDirection, event--------\",\r\n      column,\r\n      sortDirection,\r\n      event\r\n    );\r\n    let sortColumn = column[\"selector\"];\r\n    setCurrentSortField(sortColumn);\r\n    setCurrentSortDirection(sortDirection);\r\n    fetchDataList(currentPage, perPage, filterText, sortColumn, sortDirection);\r\n  };\r\n\r\n  const handleChangeUserKind = (userKind) => {\r\n    setUserType(userKind);\r\n    fetchDataList(\r\n      currentPage,\r\n      perPage,\r\n      filterText,\r\n      currentSortField,\r\n      currentSortDirection,\r\n      userKind\r\n    );\r\n  };\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        name: \"USERNAME\",\r\n        selector: \"user_name\",\r\n        sortable: false,\r\n      },\r\n      {\r\n        name: \"STATUS\",\r\n        selector: \"status\",\r\n        sortable: false,\r\n        cell: (row) => (\r\n          <span\r\n            className={`text-bold ${row[\"status_class\"]}`}\r\n            data-user-type={row[\"user_type\"]}\r\n          >\r\n            {row[\"status\"]}\r\n          </span>\r\n        ),\r\n      },\r\n      {\r\n        name: \"LANE\",\r\n        selector: \"lane_number\",\r\n        sortable: false,\r\n        omit: true,\r\n      },\r\n      {\r\n        name: \"RANK\",\r\n        selector: \"user_name\",\r\n        sortable: false,\r\n        omit: true,\r\n        cell: (row) => (\r\n          <>\r\n            <button\r\n              className={`a-btn btn-view-user-rank-info btn-user-rank1 badge badge-sm badge-success badge-rounded text-center ${\r\n                intval(row[\"user_type\"]) === 1 ? \"\" : \"hidden\"\r\n              }`}\r\n              style={{\r\n                paddingLeft: \"1rem\",\r\n                paddingRight: \"1rem\",\r\n              }}\r\n              onClick={(e) => {\r\n                onClickUserRank(row);\r\n              }}\r\n            >\r\n              {get_data_value(row[\"rank_info\"], \"rank_name\", \"NO RANK\")}\r\n            </button>\r\n            <span\r\n              className={`text-bold text-success ${\r\n                intval(row[\"user_type\"]) === 1 ? \"hidden\" : \"\"\r\n              }`}\r\n            >\r\n              NONE\r\n            </span>\r\n          </>\r\n        ),\r\n      },\r\n      {\r\n        name: \"GO TO\",\r\n        selector: \"id\",\r\n        sortable: false,\r\n        omit: true,\r\n        cell: (row) => (\r\n          <Link\r\n            className=\"a-btn badge badge-sm badge-success badge-rounded text-center\"\r\n            to={`/user/team/detail/${row[\"id\"]}`}\r\n            style={{ minWidth: \"50px\" }}\r\n          >\r\n            GO\r\n          </Link>\r\n        ),\r\n      },\r\n    ],\r\n    [handleDelete]\r\n  );\r\n  const [resetPaginationToggle, setResetPaginationToggle] = useState(false);\r\n  // const filteredItems = data.filter(\r\n  //   (item) =>\r\n  //     JSON.stringify(item).toLowerCase().indexOf(filterText.toLowerCase()) !==\r\n  //     -1\r\n  // );\r\n\r\n  const colorStyles = {\r\n    control: (styles) => ({\r\n      ...styles,\r\n      backgroundColor: \"white\",\r\n      color: \"black\",\r\n    }),\r\n    option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n      return {\r\n        ...styles,\r\n        backgroundColor: \"white\",\r\n        color: \"black\",\r\n        cursor: isDisabled ? \"not-allowed\" : \"default\",\r\n\r\n        \":active\": {\r\n          ...styles[\":active\"],\r\n          backgroundColor: \"#f16857\",\r\n          color: \"white\",\r\n        },\r\n        \":hover\": {\r\n          ...styles[\":active\"],\r\n          backgroundColor: \"#f16857\",\r\n          color: \"white\",\r\n        },\r\n      };\r\n    },\r\n    input: (styles) => ({\r\n      ...styles,\r\n      backgroundColor: \"white\",\r\n      color: \"black\",\r\n    }),\r\n    placeholder: (styles) => ({\r\n      ...styles,\r\n      backgroundColor: \"white\",\r\n      color: \"black\",\r\n    }),\r\n  };\r\n\r\n  const subHeaderComponent = useMemo(() => {\r\n    const handleClear = () => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        handleSearchChange(\"\");\r\n      }\r\n    };\r\n\r\n    const onChangeUserType = (type) => {\r\n      handleChangeUserKind(type);\r\n    };\r\n\r\n    return (\r\n      <div className=\"datatable-subheader\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <form className=\"navbar-form margin-0\" role=\"search\">\r\n              <div\r\n                className=\"form-group form-search is-empty\"\r\n                style={{\r\n                  position: \"relative\",\r\n                  maxWidth: \"360px\",\r\n                  paddingRight: \"50px\",\r\n                }}\r\n              >\r\n                <Select\r\n                  className=\"select2-box basic-single\"\r\n                  classNamePrefix=\"select\"\r\n                  defaultValue={defaultUserList[0]}\r\n                  isDisabled={false}\r\n                  isLoading={false}\r\n                  isClearable={true}\r\n                  isSearchable={true}\r\n                  name=\"color\"\r\n                  options={selectUserList}\r\n                  styles={colorStyles}\r\n                  onChange={onUserChange}\r\n                />\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div className=\"col-md-8 hidden\">\r\n            <div className=\"btn-toolbar\">\r\n              <div className=\"btn-group\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-primary\"\r\n                  onClick={(e) => onChangeUserType(\"\")}\r\n                >\r\n                  All\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-danger\"\r\n                  onClick={(e) => onChangeUserType(\"affliate\")}\r\n                >\r\n                  Affiliate\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-success\"\r\n                  onClick={(e) => onChangeUserType(\"active_customer\")}\r\n                >\r\n                  Active Customer\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-info\"\r\n                  onClick={(e) => onChangeUserType(\"both\")}\r\n                >\r\n                  Both\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-secondary\"\r\n                  onClick={(e) => onChangeUserType(\"personal_referral\")}\r\n                >\r\n                  My Personals\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-warning\"\r\n                  onClick={(e) => onChangeUserType(\"free_tier\")}\r\n                >\r\n                  Free Tier\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-sm btn-light\"\r\n                  onClick={(e) => onChangeUserType(\"inactive_customer\")}\r\n                >\r\n                  Inactive Customer\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className=\"datatable-filter-box hidden\">\r\n              <input\r\n                id=\"search\"\r\n                type=\"text\"\r\n                placeholder=\"Search...\"\r\n                value={filterText}\r\n                className=\"form-control input-search\"\r\n                onChange={(e) => handleSearchChange(e.target.value)}\r\n              />\r\n              <button className=\"a-btn btn-clear-search\" onClick={handleClear}>\r\n                x\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }, [filterText, resetPaginationToggle, selectUserList]);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <div className=\"card-content affiliate-only-screen\">\r\n              <div className=\"block padding-bottom-5 padding-top-5\">\r\n                <h4 className=\"text-normal mb-3\">Your Personal Referrals:</h4>\r\n              </div>\r\n              <div className=\"divider-1 mb-4\"></div>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                  <div className=\"datatable-wrapper\">\r\n                    <DataTable\r\n                      theme=\"dark\"\r\n                      noHeader={true}\r\n                      columns={columns}\r\n                      data={data}\r\n                      defaultSortField={currentSortField}\r\n                      defaultSortAsc={currentSortDirection === \"asc\"}\r\n                      onSort={onSort}\r\n                      sortServer={true}\r\n                      subHeader\r\n                      subHeaderComponent={subHeaderComponent}\r\n                      pagination\r\n                      paginationServer\r\n                      paginationTotalRows={totalRows}\r\n                      paginationDefaultPage={currentPage}\r\n                      onChangeRowsPerPage={handlePerRowsChange}\r\n                      onChangePage={handlePageChange}\r\n                      paginationPerPage={perPage}\r\n                      paginationRowsPerPageOptions={[5, 10, 25, 50, 100]}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserReferralListPage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminRankPage\\AdminRankPage.js",["3024","3025","3026","3027","3028","3029","3030","3031","3032","3033","3034","3035"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport AdminLayout from \"layouts/AdminLayout/AdminLayout\";\r\nimport {\r\n  ROUTE_ADMIN_FEED,\r\n  ROUTE_ADMIN_FEED_DETAIL,\r\n  ROUTE_ADMIN_RANK,\r\n  ROUTE_ADMIN_TICKET,\r\n  ROUTE_ADMIN_USERS,\r\n  ROUTE_USER_ACADEMY,\r\n  ROUTE_USER_PAYMENT,\r\n  ROUTE_USER_WALLET,\r\n} from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport { apiGetAdminRankPageDetail } from \"services/adminRankService\";\r\nimport {\r\n  empty,\r\n  get_data_value,\r\n  priceFormat,\r\n  showToast,\r\n  show_loading,\r\n} from \"utils/GlobalFunctions\";\r\nimport AdminRankInfoModal from \"./inc/AdminRankInfoModal\";\r\n\r\nconst currentPageTitle = \"Rank\";\r\nconst AdminRankPage = () => {\r\n  const dispatch = useDispatch();\r\n  const initPage = () => {\r\n    dispatch(\r\n      UpdateAppData({\r\n        currentPageTitle: currentPageTitle,\r\n        current_route: ROUTE_ADMIN_RANK,\r\n        m_user_menu_collapsed: true,\r\n      })\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    initPage();\r\n    getData();\r\n  }, []);\r\n  const history = useHistory();\r\n  const defaultPageData = {\r\n    user: {},\r\n    affiliate_stats: [],\r\n  };\r\n  const [pageData, setPageData] = useState(defaultPageData);\r\n  const getData = () => {\r\n    show_loading(true);\r\n    apiGetAdminRankPageDetail()\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setPageData(api_res.data);\r\n          dispatch(updateUser(api_res.data[\"user\"]));\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  const [currentRankItem, setCurrentRankItem] = useState({});\r\n  const [showAdminRankInfoModal, setShowAdminRankInfoModal] = useState(false);\r\n  const showRankUserList = (rank_stats_item) => {\r\n    console.log(\"rank_stats_item\", rank_stats_item);\r\n    setCurrentRankItem(rank_stats_item);\r\n    setShowAdminRankInfoModal(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AdminLayout>\r\n        <div className=\"rank-list-page\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12 grid-margin stretch-card\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <div className=\"\">\r\n                    <div>\r\n                      <h4>Affiliate Rank Statistics </h4>\r\n                      <hr />\r\n                      <div className=\"rank-list-wrapper\">\r\n                        {pageData[\"affiliate_stats\"].map((item, index) => {\r\n                          return (\r\n                            <div\r\n                              key={index}\r\n                              className=\"rank-list-item\"\r\n                              onClick={(e) => {\r\n                                showRankUserList(item);\r\n                              }}\r\n                            >\r\n                              <div className=\"rank-name text-success\">\r\n                                {item[\"rank_name\"]}\r\n                              </div>\r\n                              <div className=\"rank-user-cnt \">\r\n                                {item[\"count\"]}\r\n                              </div>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <div className=\"\">\r\n                    <div>\r\n                      <h4>Rank Finances:</h4>\r\n                      <hr />\r\n                      <h4 className=\"text-success mt-3 mb-0\">\r\n                        Current Total Weekly Payout: &nbsp;{\" \"}\r\n                        <span className=\"text-semibold text-white\">\r\n                          ${priceFormat(\r\n                            !empty(pageData[\"rank_finance\"])\r\n                              ? pageData[\"rank_finance\"]\r\n                              : 0\r\n                          )}\r\n                        </span>\r\n                      </h4>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <AdminRankInfoModal\r\n            modalTitle={currentRankItem[\"rank_name\"]}\r\n            isVisible={showAdminRankInfoModal}\r\n            setVisibleModal={setShowAdminRankInfoModal}\r\n            pageData={pageData}\r\n            currentRankItem={currentRankItem}\r\n            modalClass=\"user-page admin-page admin-rank-modal modal-md\"\r\n          />\r\n        </div>\r\n      </AdminLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminRankPage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminRankPage\\AdminRankDetailPage.js",["3036","3037","3038","3039","3040","3041","3042","3043","3044","3045","3046","3047","3048","3049","3050","3051","3052","3053","3054","3055","3056","3057"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport AdminLayout from \"layouts/AdminLayout/AdminLayout\";\r\nimport {\r\n  ROUTE_ADMIN_FEED,\r\n  ROUTE_ADMIN_FEED_DETAIL,\r\n  ROUTE_ADMIN_RANK,\r\n  ROUTE_ADMIN_TICKET,\r\n  ROUTE_ADMIN_USERS,\r\n  ROUTE_USER_ACADEMY,\r\n  ROUTE_USER_PAYMENT,\r\n  ROUTE_USER_WALLET,\r\n} from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport { apiAdminGetProfileInfo } from \"services/adminCommonService\";\r\nimport { apiGetAdminFeedDetailPageDetail, apiSubmitAdminFeed } from \"services/adminFeedService\";\r\nimport {\r\n  empty,\r\n  get_data_value,\r\n  isEmpty,\r\n  showToast,\r\n  show_loading,\r\n} from \"utils/GlobalFunctions\";\r\n\r\nimport { CKEditor, CKEditorContext } from \"@ckeditor/ckeditor5-react\";\r\nimport DecoupledEditor from \"@ckeditor/ckeditor5-build-decoupled-document\";\r\nimport { BASE_API_URL } from \"config/CONSTANTS\";\r\n\r\nconst currentPageTitle = \"Rank\";\r\nconst AdminRankDetailPage = (props) => {\r\n  const rankno = props.match.params.rankno;\r\n  const dispatch = useDispatch();\r\n  const userDataStore = useSelector((x) => x.userDataStore);\r\n     \r\n  const initPage = () => {\r\n    dispatch(\r\n      UpdateAppData({\r\n        currentPageTitle: currentPageTitle,\r\n        current_route: ROUTE_ADMIN_RANK,\r\n        m_user_menu_collapsed: true,\r\n      })\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    initPage();\r\n    getData();\r\n  }, []);\r\n\r\n  const history = useHistory();\r\n  const defaultPageData = {\r\n    user: {},\r\n    feed_info:{}\r\n  };\r\n  const [pageData, setPageData] = useState(defaultPageData);\r\n  const [subject, setSubject] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const getData = () => {\r\n    show_loading(true);\r\n    apiGetAdminFeedDetailPageDetail(rankno)\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setPageData(api_res.data);\r\n          setSubject(api_res.data[\"feed_info\"][\"subject\"]);\r\n          setMessage(api_res.data[\"feed_info\"][\"message\"]);\r\n          dispatch(updateUser(api_res.data[\"user\"]));\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  const onChangeSubject = (e) => {\r\n    const val = e.target.value \r\n    if (errorField.includes('subject')) {\r\n      let errors = errorField.filter((x) => x != 'subject');\r\n      setErrorField([...errors]);\r\n    }\r\n    setSubject(val);\r\n  };\r\n  const onChangeMessage = (event, editor) => {\r\n    const val = editor.getData()\r\n    if (errorField.includes('message')) {\r\n      let errors = errorField.filter((x) => x != 'message');\r\n      setErrorField([...errors]);\r\n    }\r\n    setMessage(val);\r\n  };\r\n\r\n  const [errorField, setErrorField] = useState([]);\r\n\r\n  const validateFields = () => {\r\n    var errorList = Array();\r\n    if(empty(subject)){\r\n      errorList.push('subject');\r\n    }\r\n    if(empty(message)){\r\n      errorList.push('message');\r\n    }\r\n    setErrorField([...errorList]);\r\n    return errorList.length > 0 ? false : true;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AdminLayout>\r\n        <div className=\"feed-detail-page\">\r\n          <div className={`row`}>\r\n            <div className=\"col-lg-12 grid-margin stretch-card\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <h4 className=\"card-title t-show-mobile\">\r\n                    {currentPageTitle}\r\n                  </h4>\r\n                  <div className=\"card-content\">\r\n                    <div className=\"forms-sample\">\r\n                      <div className=\"form-group\">\r\n                        <input\r\n                          type=\"text\"\r\n                          placeholder=\"Input subject\"\r\n                          className={`form-control user_email ${\r\n                            errorField.includes(\"subject\") ? \"is-invalid\" : \"\"\r\n                          }`}\r\n                          id=\"subject\"\r\n                          name=\"subject\"\r\n                          value={subject}\r\n                          onChange={(e) => {\r\n                            onChangeSubject(e);\r\n                          }}\r\n                          required\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className={`feed-detail-container ${\r\n                            errorField.includes(\"message\") ? \"has-error\" : \"\"\r\n                          }`}>\r\n                      <CKEditor\r\n                        onReady={(editor) => {\r\n                          console.log(\"Editor is ready to use!\", editor);\r\n\r\n                          // Insert the toolbar before the editable area.\r\n                          editor.ui\r\n                            .getEditableElement()\r\n                            .parentElement.insertBefore(\r\n                              editor.ui.view.toolbar.element,\r\n                              editor.ui.getEditableElement()\r\n                            );\r\n                          //this.editor = editor;\r\n                        }}\r\n                        onError={({ willEditorRestart }) => {\r\n                          // If the editor is restarted, the toolbar element will be created once again.\r\n                          // The `onReady` callback will be called again and the new toolbar will be added.\r\n                          // This is why you need to remove the older toolbar.\r\n                          if (willEditorRestart) {\r\n                            this.editor.ui.view.toolbar.element.remove();\r\n                          }\r\n                        }}\r\n                        onChange={(event, editor) =>\r\n                          onChangeMessage(event, editor)\r\n                        }\r\n                        editor={DecoupledEditor}\r\n                        data={message}\r\n                        config={{\r\n                          // toolbar: [ 'bold', 'italic' ],\r\n                          ckfinder: {\r\n                            uploadUrl: BASE_API_URL + \"/upload-image\",\r\n                          },\r\n                        }}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"form-group mt-4\">\r\n                          <div className=\"button-group text-center\" >\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"mb-2 btn btn-lg1 btn-primary mr-2\"\r\n                          \r\n                            >\r\n                              Submit\r\n                            </button>\r\n                            <button\r\n                              type=\"reset\"\r\n                              className=\"mb-2 btn btn-lg1 btn-light\"\r\n                              onClick={(e)=>{getData()}}\r\n                            >\r\n                              Cancel\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </AdminLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminRankDetailPage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\adminRankService.js",["3058","3059","3060","3061","3062","3063","3064","3065","3066","3067","3068","3069","3070","3071","3072","3073"],"import { APP_NAME, SYSTEM_ERROR } from \"config/CONSTANTS\";\r\nimport { axiosGet, axiosPost, axiosPostMultipart } from \"./ajaxServices\";\r\nimport {\r\n  urlAdminDeleteFeed,\r\n  urlAdminGetFeedInfoPageDetail,\r\n  urlAdminGetTicketInfoPageDetail,\r\n  urlAdminRankPageDetail,\r\n  urlAdminStatsPageDetail,\r\n  urlAdminSubmitAnnouncement,\r\n  urlAdminSubmitFeed,\r\n  urlAdminSubmitTicketMessage,\r\n  urlUserCloseTicket,\r\n  urlUserDeleteTicket,\r\n  urlUserGetTicketInfoPageDetail,\r\n  urlUserGetTicketListPageDetail,\r\n  urlUserSubmitTicket,\r\n  urlUserSubmitTicketMessage,\r\n} from \"./CONSTANTS\";\r\n\r\nexport const apiGetAdminRankPageDetail = () => {\r\n  const url = urlAdminRankPageDetail;\r\n  return new Promise((resolve, reject) => {\r\n    axiosGet(url, {}, SYSTEM_ERROR)\r\n      .then(function (response) {\r\n        resolve(response);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminRankPage\\inc\\AdminRankInfoModal.js",["3074","3075","3076","3077","3078","3079","3080","3081"],"import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  empty,\r\n  get_data_value,\r\n  intval,\r\n  isEmpty,\r\n  jQuery,\r\n  showToast,\r\n} from \"utils/GlobalFunctions\";\r\nimport { APP_NAME } from \"config/CONSTANTS\";\r\nimport AdminRankUserListTable from \"./AdminRankUserListTable\";\r\n\r\nfunction AdminRankInfoModal(props) {\r\n  const {\r\n    modalTitle,\r\n    isVisible,\r\n    setVisibleModal,\r\n    pageData,\r\n    currentRankItem,\r\n    modalClass,\r\n  } = props;\r\n  useEffect(() => {\r\n    if (isVisible !== undefined) {\r\n      setShow(isVisible);\r\n      setModalPageData(pageData);\r\n      if (!empty(currentRankItem)) {\r\n        setModalData(currentRankItem);\r\n      }\r\n    }\r\n  }, [isVisible, pageData, currentRankItem]);\r\n  const [show, setShow] = useState(false);\r\n\r\n  const [modalPageData, setModalPageData] = useState({});\r\n  const [modalData, setModalData] = useState({});\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    setVisibleModal(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        centered\r\n        dialogClassName={modalClass}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{modalTitle}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"block text-left\">\r\n            <div className=\"modal-box\">\r\n              <div>\r\n                <AdminRankUserListTable\r\n                  initialTableData={modalData[\"user_list\"]}\r\n                  currentRankItem={currentRankItem}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-md btn-close-dlg btn-light\"\r\n            data-dismiss=\"modal\"\r\n            onClick={handleClose}\r\n          >\r\n            Close\r\n          </button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdminRankInfoModal;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminRankPage\\inc\\AdminRankUserListTable.js",["3082","3083","3084","3085","3086","3087","3088","3089","3090","3091","3092","3093","3094","3095","3096","3097","3098","3099","3100","3101"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport { RULE_PERCENT } from \"config/CONSTANTS\";\r\nimport { ROUTE_USER_ACADEMY, ROUTE_USER_MARKETING } from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useMemo, useState } from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport {\r\n  apiGetUserMarketingPageDetail,\r\n  apiGetUserMarketingRankDetail,\r\n} from \"services/userMarketingService\";\r\nimport { apiDeleteUserPayoutRow } from \"services/userWalletService\";\r\n\r\nimport {\r\n  empty,\r\n  get_data_value,\r\n  intval,\r\n  is_empty,\r\n  jQuery,\r\n  showToast,\r\n  show_loading,\r\n  toLocalDatetime,\r\n} from \"utils/GlobalFunctions\";\r\n\r\nconst AdminRankUserListTable = (props) => {\r\n  const { initialTableData, currentRankItem } = props;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    setTableData(initialTableData);\r\n  }, [initialTableData]);\r\n  //const history = useHistory();\r\n  const [tableData, setTableData] = useState(initialTableData);\r\n\r\n  const columns = [\r\n    {\r\n      name: \"ID\",\r\n      selector: \"id\",\r\n      sortable: true,\r\n      omit:true\r\n    },\r\n    {\r\n      name: \"Rank\",\r\n      selector: \"rank_name\",\r\n      sortable: false,\r\n    },\r\n    {\r\n      name: \"Username\",\r\n      selector: \"user_name\",\r\n      sortable: true,\r\n    },\r\n  ];\r\n\r\n  const [filterText, setFilterText] = useState(\"\");\r\n  const [resetPaginationToggle, setResetPaginationToggle] = useState(false);\r\n\r\n  const filteredItems = tableData.filter(\r\n    (item) =>\r\n      JSON.stringify(item).toLowerCase().indexOf(filterText.toLowerCase()) !==\r\n      -1\r\n  );\r\n\r\n  const subHeaderComponent = useMemo(() => {\r\n    const handleClear = () => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText(\"\");\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div className=\"datatable-subheader\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <div className=\"people-count m-text-center\">\r\n              Peoples: &nbsp; <span>{currentRankItem[\"count\"]}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <div className=\"datatable-filter-box\">\r\n              <input\r\n                id=\"search\"\r\n                type=\"text\"\r\n                placeholder=\"Search...\"\r\n                value={filterText}\r\n                className=\"form-control input-search\"\r\n                onChange={(e) => setFilterText(e.target.value)}\r\n              />\r\n              <button className=\"a-btn btn-clear-search\" onClick={handleClear}>\r\n                x\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }, [filterText, resetPaginationToggle]);\r\n\r\n  return (\r\n    <div className=\"datatable-wrapper p-0\">\r\n      <DataTable\r\n        theme=\"dark\"\r\n        noHeader={true}\r\n        columns={columns}\r\n        data={filteredItems}\r\n        defaultSortField=\"id\"\r\n        defaultSortAsc={true}\r\n        pagination\r\n        subHeader\r\n        subHeaderComponent={subHeaderComponent}\r\n        paginationPerPage={10}\r\n        paginationRowsPerPageOptions={[5, 10, 25, 50, 100]}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminRankUserListTable;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminCouponPage\\AdminCouponPage.js",["3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport AdminLayout from \"layouts/AdminLayout/AdminLayout\";\r\nimport {\r\n  ROUTE_ADMIN_COUPON,\r\n  ROUTE_ADMIN_FEED,\r\n  ROUTE_ADMIN_FEED_DETAIL,\r\n  ROUTE_ADMIN_TICKET,\r\n  ROUTE_ADMIN_USERS,\r\n  ROUTE_USER_ACADEMY,\r\n  ROUTE_USER_PAYMENT,\r\n  ROUTE_USER_WALLET,\r\n} from \"navigation/CONSTANTS\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport { apiAdminGetProfileInfo } from \"services/adminCommonService\";\r\nimport { get_data_value, showToast, show_loading } from \"utils/GlobalFunctions\";\r\nimport AdminCouponListTable from \"./inc/AdminCouponListTable\";\r\n\r\nconst currentPageTitle = \"Coupon System\";\r\nconst AdminCouponPage = () => {\r\n  const dispatch = useDispatch();\r\n  const initPage = () => {\r\n    dispatch(\r\n      UpdateAppData({\r\n        currentPageTitle: currentPageTitle,\r\n        current_route: ROUTE_ADMIN_COUPON,\r\n        m_user_menu_collapsed: true,\r\n      })\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    initPage();\r\n    getData();\r\n  }, []);\r\n  const history = useHistory();\r\n  const defaultPageData = {\r\n    user: {},\r\n    user_list: [],\r\n  };\r\n  const [pageData, setPageData] = useState(defaultPageData);\r\n  const getData = () => {\r\n    show_loading(true);\r\n    apiAdminGetProfileInfo()\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setPageData(api_res.data);\r\n          dispatch(updateUser(api_res.data[\"user\"]));\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AdminLayout>\r\n        <div className=\"feed-list-page\">\r\n          <div className={`row`}>\r\n            <div className=\"col-lg-12 grid-margin stretch-card\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <h4 className=\"card-title t-show-mobile\">\r\n                    {currentPageTitle}\r\n                  </h4>\r\n                  <div className=\"card-content\">                  \r\n                    <div className=\"clearfix\"></div>\r\n                    <div className=\"datatable-page\">\r\n                      <AdminCouponListTable pageData={pageData} />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </AdminLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminCouponPage;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminCouponPage\\inc\\AdminCouponListTable.js",["3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140"],"import ConfirmModal from \"components/ConfirmModal/ConfirmModal\";\r\nimport { RULE_PERCENT } from \"config/CONSTANTS\";\r\nimport { ROUTE_USER_ACADEMY, ROUTE_USER_MARKETING } from \"navigation/CONSTANTS\";\r\nimport React, { useState, useEffect, useCallback, useMemo } from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { UpdateAppData } from \"redux/actions/appActions\";\r\nimport { updateUser } from \"redux/actions/userActions\";\r\nimport {\r\n  apiGetUserMarketingPageDetail,\r\n  apiGetUserMarketingRankDetail,\r\n} from \"services/userMarketingService\";\r\nimport { apiDeleteUserPayoutRow } from \"services/userWalletService\";\r\n\r\nimport {\r\n  empty,\r\n  get_data_value,\r\n  intval,\r\n  is_empty,\r\n  jQuery,\r\n  showToast,\r\n  show_loading,\r\n  timeConverter,\r\n  toLocalDatetime,\r\n} from \"utils/GlobalFunctions\";\r\nimport {\r\n  urlAdminDeleteCoupon,\r\n  urlAdminDeleteUser,\r\n  urlAdminGetCouponList,\r\n  urlAdminGetLicensesList,\r\n} from \"services/CONSTANTS\";\r\n\r\nimport { apiAdminUpdateUserStatus } from \"services/adminUsersService\";\r\nimport AdminCouponInfoModal from \"./AdminCouponInfoModal\";\r\nimport {\r\n  apiDeleteAdminCoupon,\r\n  apiSubmitAdminCoupon,\r\n} from \"services/adminCouponService\";\r\n\r\nconst AdminCouponListTable = (props) => {\r\n  const userDataStore = useSelector((x) => x.userDataStore);\r\n  const { pageData } = props;\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [totalRows, setTotalRows] = useState(0);\r\n  const [perPage, setPerPage] = useState(10);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  // const [deleted, setDeleted] = useState([]);\r\n  const [currentSortField, setCurrentSortField] = useState(\"add_timestamp\");\r\n  const [currentSortDirection, setCurrentSortDirection] = useState(\"desc\");\r\n  const [userType, setUserType] = useState(\"\");\r\n\r\n  const [filterText, setFilterText] = useState(\"\");\r\n\r\n  const fetchDataList = async (\r\n    page,\r\n    size = perPage,\r\n    searchText = filterText,\r\n    sortColumn = currentSortField,\r\n    sortDirection = currentSortDirection\r\n  ) => {\r\n    show_loading(true);\r\n\r\n    const response = await axios.get(\r\n      `${urlAdminGetCouponList}?page=${page}&per_page=${size}&keyword1=${searchText}&sort_column=${sortColumn}&sort_direction=${sortDirection}`\r\n    );\r\n\r\n    setData(response.data.data);\r\n    setTotalRows(response.data.total);\r\n    show_loading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchDataList(1);\r\n  }, []);\r\n\r\n  const removeItem = (array, item) => {\r\n    const newArray = array.slice();\r\n    newArray.splice(\r\n      newArray.findIndex((a) => a === item),\r\n      1\r\n    );\r\n\r\n    return newArray;\r\n  };\r\n\r\n  const handleDelete = useCallback(\r\n    (row) => async () => {\r\n      await axios.delete(`${urlAdminDeleteCoupon}?id=${row.id}`);\r\n      const response = await axios.get(\r\n        `${urlAdminGetCouponList}?page=${currentPage}&per_page=${perPage}&keyword1=${filterText}&sort_column=${currentSortField}&sort_direction=${currentSortDirection}`\r\n      );\r\n\r\n      setData(removeItem(response.data.data, row));\r\n      setTotalRows(totalRows - 1);\r\n    },\r\n    [currentPage, perPage, totalRows]\r\n  );\r\n  const handlePageChange = (page) => {\r\n    fetchDataList(page);\r\n    setCurrentPage(page);\r\n  };\r\n  const handlePerRowsChange = async (newPerPage, page) => {\r\n    fetchDataList(page, newPerPage);\r\n    setPerPage(newPerPage);\r\n  };\r\n  const handleSearchChange = (newSearchText) => {\r\n    fetchDataList(currentPage, perPage, newSearchText);\r\n    setFilterText(newSearchText);\r\n  };\r\n  const onSort = (column, sortDirection, event) => {\r\n    console.log(\r\n      \"--------column, sortDirection, event--------\",\r\n      column,\r\n      sortDirection,\r\n      event\r\n    );\r\n    let sortColumn = column[\"selector\"];\r\n    setCurrentSortField(sortColumn);\r\n    setCurrentSortDirection(sortDirection);\r\n    fetchDataList(currentPage, perPage, filterText, sortColumn, sortDirection);\r\n  };\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        name: \"ID\",\r\n        selector: \"id\",\r\n        sortable: true,\r\n        omit: true\r\n      },\r\n      {\r\n        name: \"Coupon Code\",\r\n        selector: \"name\",\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"Coupon Type\",\r\n        selector: \"type_desc\",\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: \"Created at\",\r\n        selector: \"add_timestamp\",\r\n        sortable: true,\r\n        cell: (row) => <span>{timeConverter(row.add_timestamp)}</span>,\r\n      },\r\n      {\r\n        name: \"Action\",\r\n        // eslint-disable-next-line react/button-has-type\r\n        cell: (row) => (\r\n          <>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-xs btn-info\"\r\n              onClick={() => onClickEditCoupon(row)}\r\n            >\r\n              <i className=\"fa fa-pencil\"></i>\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-xs btn-danger\"\r\n              onClick={() => onClickDeleteCoupon(row)}\r\n            >\r\n              <i className=\"fa fa-times\"></i>\r\n            </button>\r\n          </>\r\n        ),\r\n      },\r\n    ],\r\n    [handleDelete]\r\n  );\r\n  const [resetPaginationToggle, setResetPaginationToggle] = useState(false);\r\n  // const filteredItems = data.filter(\r\n  //   (item) =>\r\n  //     JSON.stringify(item).toLowerCase().indexOf(filterText.toLowerCase()) !==\r\n  //     -1\r\n  // );\r\n\r\n  const subHeaderComponent = useMemo(() => {\r\n    const handleClear = () => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        handleSearchChange(\"\");\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div className=\"datatable-subheader\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              onClick={(e) => onClickEditCoupon()}\r\n            >\r\n              <i className=\"mdi mdi-plus\"></i> New Coupon\r\n            </button>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <div className=\"datatable-filter-box\">\r\n              <input\r\n                id=\"search\"\r\n                type=\"text\"\r\n                placeholder=\"Search...\"\r\n                value={filterText}\r\n                className=\"form-control input-search\"\r\n                onChange={(e) => handleSearchChange(e.target.value)}\r\n              />\r\n              <button className=\"a-btn btn-clear-search\" onClick={handleClear}>\r\n                x\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }, [filterText, resetPaginationToggle]);\r\n\r\n  //////////////////////////////////////////start modal actions///////////////////////////////////////////////\r\n  const [currentRow, setCurrentRow] = useState(null);\r\n  const [showCouponInfoModal, setShowCouponInfoModal] = useState(false);\r\n\r\n  const onClickEditCoupon = (row) => {\r\n    if (empty(row)) {\r\n      setCurrentRow(null);\r\n    } else {\r\n      setCurrentRow(row);\r\n    }\r\n    setShowCouponInfoModal(true);\r\n  };\r\n  const updateCouponInfo = (params) => {\r\n    console.log(\"params\", params);\r\n    show_loading(true);\r\n    apiSubmitAdminCoupon(params)\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setShowCouponInfoModal(false);\r\n          showToast(api_res.message, \"success\");\r\n          fetchDataList(currentPage, perPage);\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n\r\n  const [confirmModalTitle, setConfirmModalTitle] = useState(\r\n    \"Are you sure to delete this coupon?\"\r\n  );\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n  const onClickDeleteCoupon = (row) => {\r\n    console.log(\"row, status\", row);\r\n    setCurrentRow(row);\r\n    setConfirmModalTitle(\"Are you sure you want to delete?\");\r\n    setShowConfirmModal(true);\r\n  };\r\n  const doConfirmedAction = () => {\r\n    let params = {\r\n      id: currentRow[\"id\"],\r\n    };\r\n    console.log(\"params\", params);\r\n    show_loading(true);\r\n    apiDeleteAdminCoupon(params)\r\n      .then((api_res) => {\r\n        console.log(\"api_res\", api_res);\r\n        show_loading(false);\r\n        if (api_res.status === \"1\") {\r\n          setShowConfirmModal(false);\r\n          showToast(api_res.message, \"success\");\r\n          fetchDataList(currentPage, perPage);\r\n        } else {\r\n          showToast(api_res.message, \"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        show_loading(false);\r\n        showToast(err, \"error\");\r\n      });\r\n  };\r\n  ////////////////////////////////////////////end modal actions/////////////////////////////////////////////////////////\r\n\r\n  return (\r\n    <>\r\n      <div className=\"datatable-wrapper\">\r\n        <DataTable\r\n          theme=\"dark\"\r\n          noHeader={true}\r\n          columns={columns}\r\n          data={data}\r\n          defaultSortField={currentSortField}\r\n          defaultSortAsc={currentSortDirection === \"asc\"}\r\n          onSort={onSort}\r\n          sortServer={true}\r\n          subHeader\r\n          subHeaderComponent={subHeaderComponent}\r\n          pagination\r\n          paginationServer\r\n          paginationTotalRows={totalRows}\r\n          paginationDefaultPage={currentPage}\r\n          onChangeRowsPerPage={handlePerRowsChange}\r\n          onChangePage={handlePageChange}\r\n          paginationRowsPerPageOptions={[5, 10, 25, 50, 100]}\r\n        />\r\n      </div>\r\n      <AdminCouponInfoModal\r\n        modalTitle={!empty(currentRow) ? `Edit Coupon` : `Add Coupon`}\r\n        isVisible={showCouponInfoModal}\r\n        setVisibleModal={setShowCouponInfoModal}\r\n        pageData={pageData}\r\n        currentRow={currentRow}\r\n        submitModalData={updateCouponInfo}\r\n        modalClass=\"user-page admin-page user-info-modal\"\r\n      />\r\n      <ConfirmModal\r\n        content={confirmModalTitle}\r\n        onClickYes={doConfirmedAction}\r\n        visibleModal={showConfirmModal}\r\n        setVisibleModal={setShowConfirmModal}\r\n        modalClass=\"user-page admin-page confirm-modal\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminCouponListTable;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\pages\\Admin\\AdminCouponPage\\inc\\AdminCouponInfoModal.js",["3141","3142","3143","3144","3145","3146","3147","3148","3149","3150"],"import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  empty,\r\n  get_data_value,\r\n  intval,\r\n  isEmpty,\r\n  jQuery,\r\n  showToast,\r\n} from \"utils/GlobalFunctions\";\r\nimport { APP_NAME } from \"config/CONSTANTS\";\r\n\r\nfunction AdminCouponInfoModal(props) {\r\n  const {\r\n    isVisible,\r\n    setVisibleModal,\r\n    pageData,\r\n    currentRow,\r\n    submitModalData,\r\n    modalClass,\r\n    modalTitle,\r\n  } = props;\r\n\r\n  const coupon_options = [\r\n    {\r\n      label: \"14 Day Trial Coupon Code\",\r\n      value: 14,\r\n    },\r\n    {\r\n      label: \"30 Day Trial Coupon Code\",\r\n      value: 30,\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (isVisible !== undefined) {\r\n      setShow(isVisible);\r\n      setModalPageData(pageData);\r\n      if (!empty(currentRow)) {\r\n        setModalData({ ...defaultModalData, ...currentRow });\r\n      } else {\r\n        setModalData({ ...defaultModalData });\r\n      }\r\n    }\r\n  }, [isVisible, pageData, currentRow]);\r\n  const [show, setShow] = useState(false);\r\n  const defaultModalData = {\r\n    name: \"\",\r\n    type: coupon_options[0][\"value\"],\r\n  };\r\n \r\n  const [modalPageData, setModalPageData] = useState({});\r\n  const [modalData, setModalData] = useState(defaultModalData);\r\n  const [errorField, setErrorField] = useState([]);\r\n\r\n  const validateFields = () => {\r\n    var errorList = Array();\r\n    errorList = isEmpty(modalData, \"name\", errorList);\r\n    errorList = isEmpty(modalData, \"type\", errorList);\r\n    setErrorField([...errorList]);\r\n    return errorList.length > 0 ? false : true;\r\n  };\r\n\r\n  const onChangeFormField = (e, field_name) => {\r\n    if (errorField.includes(field_name)) {\r\n      let errors = errorField.filter((x) => x != field_name);\r\n      setErrorField([...errors]);\r\n    }\r\n    let updateData = {};\r\n    updateData[field_name] = e.target.value;\r\n    setModalData({ ...modalData, ...updateData });\r\n  };\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    setVisibleModal(false);\r\n  };\r\n\r\n  const onClickSubmitModal = () => {\r\n    let is_valid = validateFields();\r\n    if (is_valid) {\r\n      let submitData = {\r\n        ...modalData,\r\n        id: empty(currentRow) ? 0 : currentRow[\"id\"],\r\n      }\r\n      submitData['type_desc'] = submitData['type'] + \" Day Trial Coupon Code\";    \r\n      submitModalData(submitData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        centered\r\n        dialogClassName={modalClass}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{modalTitle}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"block text-center\">\r\n            <div className=\"modal-box\">\r\n              <div id=\"dialog\">\r\n                <div className=\"text-normal text-left\">\r\n                  <div className=\"text-left\">\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"\">Coupon Code</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        placeholder=\" \"\r\n                        name=\"name\"\r\n                        className={`form-control name ${\r\n                          errorField.includes(\"name\") ? \"is-invalid\" : \"\"\r\n                        }`}\r\n                        value={modalData[\"name\"]}\r\n                        onChange={(e) => {\r\n                          onChangeFormField(e, \"name\");\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"\">Coupon Type</label>\r\n                      <select\r\n                        className={`form-control type ${\r\n                          errorField.includes(\"type\") ? \"is-invalid\" : \"\"\r\n                        }`}\r\n                        name=\"type\"\r\n                        value={modalData[\"type\"]}\r\n                        onChange={(e) => {\r\n                          onChangeFormField(e, \"type\");\r\n                        }}\r\n                      >\r\n                        {coupon_options.map((option) => (\r\n                          <option key={option.value} value={option.value}>{option.label}</option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-md btn-close-dlg btn-light margin-right-10\"\r\n            data-dismiss=\"modal\"\r\n            onClick={handleClose}\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-md btn-submit-modal-data btn-primary\"\r\n            onClick={(e)=>{onClickSubmitModal()}}\r\n          >\r\n            Submit\r\n          </button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdminCouponInfoModal;\r\n","E:\\xampp721\\htdocs\\000_work\\hlx_node\\source\\frontend\\src\\services\\adminCouponService.js",["3151","3152"],"import { APP_NAME, SYSTEM_ERROR } from \"config/CONSTANTS\";\r\nimport { axiosGet, axiosPost, axiosPostMultipart } from \"./ajaxServices\";\r\nimport {\r\n  urlAdminDeleteCoupon,\r\n  urlAdminGetCouponInfo,\r\n  urlAdminSubmitCoupon,\r\n} from \"./CONSTANTS\";\r\n\r\nexport const apiSubmitAdminCoupon = (params) => {\r\n  const url = urlAdminSubmitCoupon;\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  var formData = new FormData();\r\n  formData.append(\"id\", params.id);\r\n  formData.append(\"name\", params.name.trim());\r\n  formData.append(\"type\", params.type);\r\n  formData.append(\"type_desc\", params.type_desc);\r\n  return new Promise((resolve, reject) => {\r\n    axiosPostMultipart(url, formData, config)\r\n      .then(function (response) {\r\n        resolve(response);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport const apiGetAdminCounponDetail = (coupon_id) => {\r\n  const url = urlAdminGetCouponInfo;\r\n  return new Promise((resolve, reject) => {\r\n    axiosGet(url, { coupon_id: coupon_id }, SYSTEM_ERROR)\r\n      .then(function (response) {\r\n        resolve(response);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport const apiDeleteAdminCoupon = (params) => {\r\n  const url = urlAdminDeleteCoupon;\r\n  const config = {\r\n    headers: {\r\n      \"content-type\": \"multipart/form-data\",\r\n    },\r\n  };\r\n  var formData = new FormData();\r\n  formData.append(\"id\", params.id);\r\n  return new Promise((resolve, reject) => {\r\n    axiosPostMultipart(url, formData, config)\r\n      .then(function (response) {\r\n        resolve(response);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};",{"ruleId":"3153","severity":1,"message":"3154","line":17,"column":3,"nodeType":"3155","messageId":"3156","endLine":17,"endColumn":27},{"ruleId":"3153","severity":1,"message":"3157","line":18,"column":3,"nodeType":"3155","messageId":"3156","endLine":18,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3158","line":54,"column":10,"nodeType":"3155","messageId":"3156","endLine":54,"endColumn":40},{"ruleId":"3159","severity":1,"message":"3160","line":62,"column":6,"nodeType":"3161","endLine":62,"endColumn":18,"suggestions":"3162"},{"ruleId":"3163","severity":1,"message":"3164","line":109,"column":50,"nodeType":"3165","messageId":"3166","endLine":109,"endColumn":51},{"ruleId":"3153","severity":1,"message":"3167","line":3,"column":23,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":37},{"ruleId":"3153","severity":1,"message":"3168","line":4,"column":17,"nodeType":"3155","messageId":"3156","endLine":4,"endColumn":30},{"ruleId":"3153","severity":1,"message":"3169","line":4,"column":32,"nodeType":"3155","messageId":"3156","endLine":4,"endColumn":42},{"ruleId":"3153","severity":1,"message":"3170","line":4,"column":44,"nodeType":"3155","messageId":"3156","endLine":4,"endColumn":52},{"ruleId":"3153","severity":1,"message":"3171","line":1,"column":8,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":13},{"ruleId":"3153","severity":1,"message":"3172","line":1,"column":17,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":26},{"ruleId":"3153","severity":1,"message":"3170","line":1,"column":28,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":36},{"ruleId":"3153","severity":1,"message":"3173","line":1,"column":69,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":88},{"ruleId":"3153","severity":1,"message":"3174","line":6,"column":28,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":40},{"ruleId":"3153","severity":1,"message":"3175","line":7,"column":28,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":39},{"ruleId":"3153","severity":1,"message":"3176","line":9,"column":28,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":40},{"ruleId":"3153","severity":1,"message":"3177","line":10,"column":28,"nodeType":"3155","messageId":"3156","endLine":10,"endColumn":44},{"ruleId":"3153","severity":1,"message":"3178","line":13,"column":11,"nodeType":"3155","messageId":"3156","endLine":13,"endColumn":19},{"ruleId":"3153","severity":1,"message":"3179","line":15,"column":12,"nodeType":"3155","messageId":"3156","endLine":15,"endColumn":18},{"ruleId":"3159","severity":1,"message":"3180","line":24,"column":8,"nodeType":"3161","endLine":24,"endColumn":10,"suggestions":"3181"},{"ruleId":"3182","severity":1,"message":"3183","line":22,"column":18,"nodeType":"3184","endLine":22,"endColumn":76},{"ruleId":"3182","severity":1,"message":"3183","line":39,"column":18,"nodeType":"3184","endLine":39,"endColumn":76},{"ruleId":"3182","severity":1,"message":"3183","line":53,"column":18,"nodeType":"3184","endLine":53,"endColumn":74},{"ruleId":"3153","severity":1,"message":"3170","line":4,"column":17,"nodeType":"3155","messageId":"3156","endLine":4,"endColumn":25},{"ruleId":"3153","severity":1,"message":"3185","line":12,"column":9,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":17},{"ruleId":"3153","severity":1,"message":"3186","line":13,"column":9,"nodeType":"3155","messageId":"3156","endLine":13,"endColumn":13},{"ruleId":"3159","severity":1,"message":"3160","line":18,"column":6,"nodeType":"3161","endLine":18,"endColumn":8,"suggestions":"3187"},{"ruleId":"3159","severity":1,"message":"3160","line":44,"column":6,"nodeType":"3161","endLine":44,"endColumn":8,"suggestions":"3188"},{"ruleId":"3153","severity":1,"message":"3189","line":51,"column":17,"nodeType":"3155","messageId":"3156","endLine":51,"endColumn":22},{"ruleId":"3153","severity":1,"message":"3190","line":69,"column":9,"nodeType":"3155","messageId":"3156","endLine":69,"endColumn":19},{"ruleId":"3191","severity":1,"message":"3192","line":93,"column":43,"nodeType":"3165","messageId":"3193","endLine":93,"endColumn":45},{"ruleId":"3153","severity":1,"message":"3194","line":6,"column":10,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3195","line":6,"column":22,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":34},{"ruleId":"3191","severity":1,"message":"3192","line":58,"column":63,"nodeType":"3165","messageId":"3193","endLine":58,"endColumn":65},{"ruleId":"3191","severity":1,"message":"3192","line":92,"column":43,"nodeType":"3165","messageId":"3193","endLine":92,"endColumn":45},{"ruleId":"3191","severity":1,"message":"3192","line":92,"column":81,"nodeType":"3165","messageId":"3193","endLine":92,"endColumn":83},{"ruleId":"3153","severity":1,"message":"3196","line":1,"column":10,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":28},{"ruleId":"3153","severity":1,"message":"3197","line":1,"column":30,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":43},{"ruleId":"3153","severity":1,"message":"3198","line":8,"column":10,"nodeType":"3155","messageId":"3156","endLine":8,"endColumn":36},{"ruleId":"3191","severity":1,"message":"3192","line":67,"column":59,"nodeType":"3165","messageId":"3193","endLine":67,"endColumn":61},{"ruleId":"3153","severity":1,"message":"3199","line":12,"column":10,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":26},{"ruleId":"3191","severity":1,"message":"3192","line":83,"column":65,"nodeType":"3165","messageId":"3193","endLine":83,"endColumn":67},{"ruleId":"3159","severity":1,"message":"3200","line":19,"column":8,"nodeType":"3161","endLine":19,"endColumn":10,"suggestions":"3201"},{"ruleId":"3191","severity":1,"message":"3192","line":92,"column":17,"nodeType":"3165","messageId":"3193","endLine":92,"endColumn":19},{"ruleId":"3153","severity":1,"message":"3202","line":7,"column":3,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3203","line":9,"column":44,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":48},{"ruleId":"3153","severity":1,"message":"3204","line":14,"column":3,"nodeType":"3155","messageId":"3156","endLine":14,"endColumn":13},{"ruleId":"3191","severity":1,"message":"3192","line":31,"column":55,"nodeType":"3165","messageId":"3193","endLine":31,"endColumn":57},{"ruleId":"3159","severity":1,"message":"3205","line":37,"column":6,"nodeType":"3161","endLine":37,"endColumn":33,"suggestions":"3206"},{"ruleId":"3182","severity":1,"message":"3183","line":98,"column":25,"nodeType":"3184","endLine":98,"endColumn":72},{"ruleId":"3191","severity":1,"message":"3192","line":135,"column":118,"nodeType":"3165","messageId":"3193","endLine":135,"endColumn":120},{"ruleId":"3182","severity":1,"message":"3183","line":144,"column":35,"nodeType":"3184","endLine":144,"endColumn":82},{"ruleId":"3153","severity":1,"message":"3207","line":14,"column":11,"nodeType":"3155","messageId":"3156","endLine":14,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3208","line":15,"column":13,"nodeType":"3155","messageId":"3156","endLine":15,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3209","line":15,"column":25,"nodeType":"3155","messageId":"3156","endLine":15,"endColumn":38},{"ruleId":"3153","severity":1,"message":"3210","line":1,"column":10,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":16},{"ruleId":"3153","severity":1,"message":"3211","line":1,"column":34,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":41},{"ruleId":"3191","severity":1,"message":"3212","line":48,"column":32,"nodeType":"3165","messageId":"3193","endLine":48,"endColumn":34},{"ruleId":"3159","severity":1,"message":"3213","line":78,"column":8,"nodeType":"3161","endLine":78,"endColumn":28,"suggestions":"3214"},{"ruleId":"3215","severity":1,"message":"3216","line":81,"column":25,"nodeType":"3217","messageId":"3218","endLine":81,"endColumn":32},{"ruleId":"3191","severity":1,"message":"3192","line":92,"column":33,"nodeType":"3165","messageId":"3193","endLine":92,"endColumn":35},{"ruleId":"3191","severity":1,"message":"3192","line":112,"column":58,"nodeType":"3165","messageId":"3193","endLine":112,"endColumn":60},{"ruleId":"3191","severity":1,"message":"3192","line":119,"column":58,"nodeType":"3165","messageId":"3193","endLine":119,"endColumn":60},{"ruleId":"3191","severity":1,"message":"3192","line":204,"column":36,"nodeType":"3165","messageId":"3193","endLine":204,"endColumn":38},{"ruleId":"3191","severity":1,"message":"3192","line":209,"column":30,"nodeType":"3165","messageId":"3193","endLine":209,"endColumn":32},{"ruleId":"3191","severity":1,"message":"3192","line":212,"column":34,"nodeType":"3165","messageId":"3193","endLine":212,"endColumn":36},{"ruleId":"3191","severity":1,"message":"3192","line":215,"column":31,"nodeType":"3165","messageId":"3193","endLine":215,"endColumn":33},{"ruleId":"3215","severity":1,"message":"3216","line":29,"column":25,"nodeType":"3217","messageId":"3218","endLine":29,"endColumn":32},{"ruleId":"3191","severity":1,"message":"3192","line":40,"column":33,"nodeType":"3165","messageId":"3193","endLine":40,"endColumn":35},{"ruleId":"3191","severity":1,"message":"3212","line":56,"column":23,"nodeType":"3165","messageId":"3193","endLine":56,"endColumn":25},{"ruleId":"3191","severity":1,"message":"3212","line":56,"column":48,"nodeType":"3165","messageId":"3193","endLine":56,"endColumn":50},{"ruleId":"3191","severity":1,"message":"3212","line":64,"column":79,"nodeType":"3165","messageId":"3193","endLine":64,"endColumn":81},{"ruleId":"3191","severity":1,"message":"3212","line":84,"column":77,"nodeType":"3165","messageId":"3193","endLine":84,"endColumn":79},{"ruleId":"3191","severity":1,"message":"3212","line":102,"column":77,"nodeType":"3165","messageId":"3193","endLine":102,"endColumn":79},{"ruleId":"3191","severity":1,"message":"3192","line":118,"column":65,"nodeType":"3165","messageId":"3193","endLine":118,"endColumn":67},{"ruleId":"3191","severity":1,"message":"3212","line":126,"column":81,"nodeType":"3165","messageId":"3193","endLine":126,"endColumn":83},{"ruleId":"3191","severity":1,"message":"3212","line":138,"column":65,"nodeType":"3165","messageId":"3193","endLine":138,"endColumn":67},{"ruleId":"3191","severity":1,"message":"3212","line":165,"column":77,"nodeType":"3165","messageId":"3193","endLine":165,"endColumn":79},{"ruleId":"3191","severity":1,"message":"3212","line":188,"column":77,"nodeType":"3165","messageId":"3193","endLine":188,"endColumn":79},{"ruleId":"3191","severity":1,"message":"3212","line":206,"column":77,"nodeType":"3165","messageId":"3193","endLine":206,"endColumn":79},{"ruleId":"3153","severity":1,"message":"3170","line":2,"column":10,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3219","line":3,"column":20,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":27},{"ruleId":"3182","severity":1,"message":"3183","line":28,"column":34,"nodeType":"3184","endLine":28,"endColumn":111},{"ruleId":"3182","severity":1,"message":"3183","line":29,"column":34,"nodeType":"3184","endLine":29,"endColumn":111},{"ruleId":"3182","severity":1,"message":"3183","line":34,"column":29,"nodeType":"3184","endLine":34,"endColumn":103},{"ruleId":"3182","severity":1,"message":"3183","line":8,"column":7,"nodeType":"3184","endLine":11,"endColumn":9},{"ruleId":"3182","severity":1,"message":"3183","line":17,"column":11,"nodeType":"3184","endLine":24,"endColumn":13},{"ruleId":"3182","severity":1,"message":"3183","line":27,"column":11,"nodeType":"3184","endLine":34,"endColumn":13},{"ruleId":"3182","severity":1,"message":"3183","line":38,"column":11,"nodeType":"3184","endLine":43,"endColumn":13},{"ruleId":"3182","severity":1,"message":"3183","line":30,"column":9,"nodeType":"3184","endLine":37,"endColumn":11},{"ruleId":"3191","severity":1,"message":"3192","line":32,"column":42,"nodeType":"3165","messageId":"3193","endLine":32,"endColumn":44},{"ruleId":"3153","severity":1,"message":"3179","line":7,"column":10,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":16},{"ruleId":"3153","severity":1,"message":"3220","line":7,"column":18,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":27},{"ruleId":"3221","severity":1,"message":"3222","line":74,"column":11,"nodeType":"3184","endLine":77,"endColumn":14},{"ruleId":"3191","severity":1,"message":"3192","line":76,"column":21,"nodeType":"3165","messageId":"3193","endLine":76,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3210","line":3,"column":24,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":30},{"ruleId":"3153","severity":1,"message":"3223","line":3,"column":32,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":42},{"ruleId":"3153","severity":1,"message":"3179","line":87,"column":10,"nodeType":"3155","messageId":"3156","endLine":87,"endColumn":16},{"ruleId":"3153","severity":1,"message":"3220","line":87,"column":18,"nodeType":"3155","messageId":"3156","endLine":87,"endColumn":27},{"ruleId":"3153","severity":1,"message":"3224","line":93,"column":5,"nodeType":"3155","messageId":"3156","endLine":93,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3225","line":97,"column":5,"nodeType":"3155","messageId":"3156","endLine":97,"endColumn":17},{"ruleId":"3153","severity":1,"message":"3226","line":99,"column":5,"nodeType":"3155","messageId":"3156","endLine":99,"endColumn":17},{"ruleId":"3191","severity":1,"message":"3192","line":101,"column":16,"nodeType":"3165","messageId":"3193","endLine":101,"endColumn":18},{"ruleId":"3221","severity":1,"message":"3222","line":201,"column":11,"nodeType":"3184","endLine":206,"endColumn":14},{"ruleId":"3191","severity":1,"message":"3192","line":203,"column":21,"nodeType":"3165","messageId":"3193","endLine":203,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3227","line":7,"column":40,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":48},{"ruleId":"3153","severity":1,"message":"3228","line":7,"column":54,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":64},{"ruleId":"3153","severity":1,"message":"3170","line":1,"column":17,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":25},{"ruleId":"3153","severity":1,"message":"3210","line":3,"column":10,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":16},{"ruleId":"3153","severity":1,"message":"3219","line":3,"column":18,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":25},{"ruleId":"3153","severity":1,"message":"3223","line":3,"column":27,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":37},{"ruleId":"3153","severity":1,"message":"3220","line":7,"column":11,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":20},{"ruleId":"3182","severity":1,"message":"3183","line":16,"column":9,"nodeType":"3184","endLine":19,"endColumn":11},{"ruleId":"3191","severity":1,"message":"3192","line":25,"column":48,"nodeType":"3165","messageId":"3193","endLine":25,"endColumn":50},{"ruleId":"3191","severity":1,"message":"3192","line":30,"column":22,"nodeType":"3165","messageId":"3193","endLine":30,"endColumn":24},{"ruleId":"3191","severity":1,"message":"3192","line":32,"column":28,"nodeType":"3165","messageId":"3193","endLine":32,"endColumn":30},{"ruleId":"3229","severity":1,"message":"3230","line":40,"column":14,"nodeType":"3231","messageId":"3232","endLine":40,"endColumn":28,"fix":"3233"},{"ruleId":"3191","severity":1,"message":"3192","line":40,"column":29,"nodeType":"3165","messageId":"3193","endLine":40,"endColumn":31},{"ruleId":"3191","severity":1,"message":"3192","line":48,"column":48,"nodeType":"3165","messageId":"3193","endLine":48,"endColumn":50},{"ruleId":"3191","severity":1,"message":"3192","line":52,"column":48,"nodeType":"3165","messageId":"3193","endLine":52,"endColumn":50},{"ruleId":"3191","severity":1,"message":"3192","line":131,"column":19,"nodeType":"3165","messageId":"3193","endLine":131,"endColumn":21},{"ruleId":"3221","severity":1,"message":"3222","line":148,"column":11,"nodeType":"3184","endLine":152,"endColumn":12},{"ruleId":"3221","severity":1,"message":"3222","line":155,"column":11,"nodeType":"3184","endLine":159,"endColumn":14},{"ruleId":"3153","severity":1,"message":"3234","line":6,"column":10,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":27},{"ruleId":"3153","severity":1,"message":"3179","line":8,"column":12,"nodeType":"3155","messageId":"3156","endLine":8,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3220","line":8,"column":20,"nodeType":"3155","messageId":"3156","endLine":8,"endColumn":29},{"ruleId":"3153","severity":1,"message":"3235","line":5,"column":10,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":30},{"ruleId":"3153","severity":1,"message":"3179","line":9,"column":12,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3220","line":9,"column":20,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":29},{"ruleId":"3182","severity":1,"message":"3183","line":28,"column":25,"nodeType":"3184","endLine":28,"endColumn":95},{"ruleId":"3182","severity":1,"message":"3183","line":33,"column":25,"nodeType":"3184","endLine":33,"endColumn":87},{"ruleId":"3153","severity":1,"message":"3236","line":1,"column":20,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":29},{"ruleId":"3153","severity":1,"message":"3237","line":1,"column":10,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3238","line":1,"column":44,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":52},{"ruleId":"3191","severity":1,"message":"3212","line":42,"column":23,"nodeType":"3165","messageId":"3193","endLine":42,"endColumn":25},{"ruleId":"3191","severity":1,"message":"3212","line":71,"column":21,"nodeType":"3165","messageId":"3193","endLine":71,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3196","line":1,"column":10,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":28},{"ruleId":"3153","severity":1,"message":"3237","line":2,"column":10,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3238","line":2,"column":44,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":52},{"ruleId":"3239","severity":1,"message":"3240","line":24,"column":20,"nodeType":"3241","messageId":"3242","endLine":24,"endColumn":21,"suggestions":"3243"},{"ruleId":"3239","severity":1,"message":"3244","line":24,"column":44,"nodeType":"3241","messageId":"3242","endLine":24,"endColumn":45,"suggestions":"3245"},{"ruleId":"3239","severity":1,"message":"3244","line":24,"column":60,"nodeType":"3241","messageId":"3242","endLine":24,"endColumn":61,"suggestions":"3246"},{"ruleId":"3153","severity":1,"message":"3237","line":1,"column":10,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3238","line":1,"column":44,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":52},{"ruleId":"3153","severity":1,"message":"3179","line":8,"column":12,"nodeType":"3155","messageId":"3156","endLine":8,"endColumn":18},{"ruleId":"3191","severity":1,"message":"3192","line":27,"column":23,"nodeType":"3165","messageId":"3193","endLine":27,"endColumn":25},{"ruleId":"3191","severity":1,"message":"3192","line":20,"column":50,"nodeType":"3165","messageId":"3193","endLine":20,"endColumn":52},{"ruleId":"3191","severity":1,"message":"3192","line":22,"column":61,"nodeType":"3165","messageId":"3193","endLine":22,"endColumn":63},{"ruleId":"3153","severity":1,"message":"3247","line":4,"column":10,"nodeType":"3155","messageId":"3156","endLine":4,"endColumn":25},{"ruleId":"3153","severity":1,"message":"3209","line":9,"column":23,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":36},{"ruleId":"3159","severity":1,"message":"3248","line":19,"column":6,"nodeType":"3161","endLine":19,"endColumn":19,"suggestions":"3249"},{"ruleId":"3191","severity":1,"message":"3192","line":39,"column":39,"nodeType":"3165","messageId":"3193","endLine":39,"endColumn":41},{"ruleId":"3182","severity":1,"message":"3183","line":49,"column":11,"nodeType":"3184","endLine":49,"endColumn":75},{"ruleId":"3182","severity":1,"message":"3183","line":3,"column":12,"nodeType":"3184","endLine":3,"endColumn":60},{"ruleId":"3153","severity":1,"message":"3235","line":10,"column":10,"nodeType":"3155","messageId":"3156","endLine":10,"endColumn":30},{"ruleId":"3153","severity":1,"message":"3178","line":15,"column":11,"nodeType":"3155","messageId":"3156","endLine":15,"endColumn":19},{"ruleId":"3153","severity":1,"message":"3179","line":21,"column":12,"nodeType":"3155","messageId":"3156","endLine":21,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3250","line":23,"column":12,"nodeType":"3155","messageId":"3156","endLine":23,"endColumn":30},{"ruleId":"3159","severity":1,"message":"3180","line":33,"column":8,"nodeType":"3161","endLine":33,"endColumn":10,"suggestions":"3251"},{"ruleId":"3191","severity":1,"message":"3192","line":54,"column":57,"nodeType":"3165","messageId":"3193","endLine":54,"endColumn":59},{"ruleId":"3191","severity":1,"message":"3192","line":78,"column":26,"nodeType":"3165","messageId":"3193","endLine":78,"endColumn":28},{"ruleId":"3153","severity":1,"message":"3252","line":2,"column":10,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3179","line":15,"column":37,"nodeType":"3155","messageId":"3156","endLine":15,"endColumn":43},{"ruleId":"3159","severity":1,"message":"3253","line":18,"column":8,"nodeType":"3161","endLine":18,"endColumn":10,"suggestions":"3254"},{"ruleId":"3191","severity":1,"message":"3192","line":80,"column":64,"nodeType":"3165","messageId":"3193","endLine":80,"endColumn":66},{"ruleId":"3191","severity":1,"message":"3192","line":101,"column":46,"nodeType":"3165","messageId":"3193","endLine":101,"endColumn":48},{"ruleId":"3153","severity":1,"message":"3255","line":6,"column":10,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3179","line":11,"column":10,"nodeType":"3155","messageId":"3156","endLine":11,"endColumn":16},{"ruleId":"3153","severity":1,"message":"3220","line":11,"column":18,"nodeType":"3155","messageId":"3156","endLine":11,"endColumn":27},{"ruleId":"3153","severity":1,"message":"3256","line":1,"column":10,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":19},{"ruleId":"3153","severity":1,"message":"3179","line":7,"column":12,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3220","line":7,"column":20,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":29},{"ruleId":"3182","severity":1,"message":"3183","line":20,"column":17,"nodeType":"3184","endLine":20,"endColumn":84},{"ruleId":"3191","severity":1,"message":"3192","line":19,"column":24,"nodeType":"3165","messageId":"3193","endLine":19,"endColumn":26},{"ruleId":"3191","severity":1,"message":"3192","line":19,"column":52,"nodeType":"3165","messageId":"3193","endLine":19,"endColumn":54},{"ruleId":"3191","severity":1,"message":"3192","line":27,"column":59,"nodeType":"3165","messageId":"3193","endLine":27,"endColumn":61},{"ruleId":"3191","severity":1,"message":"3192","line":28,"column":36,"nodeType":"3165","messageId":"3193","endLine":28,"endColumn":38},{"ruleId":"3191","severity":1,"message":"3192","line":28,"column":66,"nodeType":"3165","messageId":"3193","endLine":28,"endColumn":68},{"ruleId":"3191","severity":1,"message":"3212","line":36,"column":53,"nodeType":"3165","messageId":"3193","endLine":36,"endColumn":55},{"ruleId":"3191","severity":1,"message":"3212","line":46,"column":15,"nodeType":"3165","messageId":"3193","endLine":46,"endColumn":17},{"ruleId":"3191","severity":1,"message":"3192","line":55,"column":32,"nodeType":"3165","messageId":"3193","endLine":55,"endColumn":34},{"ruleId":"3191","severity":1,"message":"3192","line":58,"column":38,"nodeType":"3165","messageId":"3193","endLine":58,"endColumn":40},{"ruleId":"3191","severity":1,"message":"3192","line":61,"column":30,"nodeType":"3165","messageId":"3193","endLine":61,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3257","line":5,"column":9,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":13},{"ruleId":"3153","severity":1,"message":"3258","line":10,"column":27,"nodeType":"3155","messageId":"3156","endLine":10,"endColumn":38},{"ruleId":"3191","severity":1,"message":"3192","line":23,"column":65,"nodeType":"3165","messageId":"3193","endLine":23,"endColumn":67},{"ruleId":"3191","severity":1,"message":"3212","line":30,"column":53,"nodeType":"3165","messageId":"3193","endLine":30,"endColumn":55},{"ruleId":"3153","severity":1,"message":"3259","line":3,"column":3,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3260","line":5,"column":3,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":22},{"ruleId":"3182","severity":1,"message":"3183","line":14,"column":13,"nodeType":"3184","endLine":18,"endColumn":61},{"ruleId":"3191","severity":1,"message":"3192","line":15,"column":52,"nodeType":"3165","messageId":"3193","endLine":15,"endColumn":54},{"ruleId":"3153","severity":1,"message":"3179","line":36,"column":12,"nodeType":"3155","messageId":"3156","endLine":36,"endColumn":18},{"ruleId":"3191","severity":1,"message":"3192","line":51,"column":35,"nodeType":"3165","messageId":"3193","endLine":51,"endColumn":37},{"ruleId":"3182","severity":1,"message":"3183","line":90,"column":21,"nodeType":"3184","endLine":92,"endColumn":25},{"ruleId":"3182","severity":1,"message":"3183","line":94,"column":22,"nodeType":"3184","endLine":94,"endColumn":93},{"ruleId":"3182","severity":1,"message":"3183","line":96,"column":21,"nodeType":"3184","endLine":98,"endColumn":25},{"ruleId":"3153","severity":1,"message":"3261","line":2,"column":19,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3262","line":2,"column":42,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":47},{"ruleId":"3153","severity":1,"message":"3179","line":10,"column":12,"nodeType":"3155","messageId":"3156","endLine":10,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3263","line":11,"column":28,"nodeType":"3155","messageId":"3156","endLine":11,"endColumn":34},{"ruleId":"3153","severity":1,"message":"3264","line":11,"column":52,"nodeType":"3155","messageId":"3156","endLine":11,"endColumn":64},{"ruleId":"3191","severity":1,"message":"3212","line":25,"column":18,"nodeType":"3165","messageId":"3193","endLine":25,"endColumn":20},{"ruleId":"3159","severity":1,"message":"3265","line":46,"column":8,"nodeType":"3161","endLine":46,"endColumn":18,"suggestions":"3266"},{"ruleId":"3191","severity":1,"message":"3192","line":50,"column":30,"nodeType":"3165","messageId":"3193","endLine":50,"endColumn":32},{"ruleId":"3191","severity":1,"message":"3192","line":50,"column":71,"nodeType":"3165","messageId":"3193","endLine":50,"endColumn":73},{"ruleId":"3191","severity":1,"message":"3192","line":61,"column":46,"nodeType":"3165","messageId":"3193","endLine":61,"endColumn":48},{"ruleId":"3191","severity":1,"message":"3192","line":76,"column":43,"nodeType":"3165","messageId":"3193","endLine":76,"endColumn":45},{"ruleId":"3191","severity":1,"message":"3192","line":82,"column":39,"nodeType":"3165","messageId":"3193","endLine":82,"endColumn":41},{"ruleId":"3191","severity":1,"message":"3192","line":82,"column":85,"nodeType":"3165","messageId":"3193","endLine":82,"endColumn":87},{"ruleId":"3191","severity":1,"message":"3192","line":88,"column":37,"nodeType":"3165","messageId":"3193","endLine":88,"endColumn":39},{"ruleId":"3191","severity":1,"message":"3192","line":88,"column":81,"nodeType":"3165","messageId":"3193","endLine":88,"endColumn":83},{"ruleId":"3191","severity":1,"message":"3192","line":90,"column":44,"nodeType":"3165","messageId":"3193","endLine":90,"endColumn":46},{"ruleId":"3191","severity":1,"message":"3192","line":90,"column":89,"nodeType":"3165","messageId":"3193","endLine":90,"endColumn":91},{"ruleId":"3215","severity":1,"message":"3216","line":106,"column":25,"nodeType":"3217","messageId":"3218","endLine":106,"endColumn":32},{"ruleId":"3191","severity":1,"message":"3192","line":116,"column":35,"nodeType":"3165","messageId":"3193","endLine":116,"endColumn":37},{"ruleId":"3153","severity":1,"message":"3267","line":4,"column":10,"nodeType":"3155","messageId":"3156","endLine":4,"endColumn":26},{"ruleId":"3153","severity":1,"message":"3179","line":7,"column":10,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":16},{"ruleId":"3153","severity":1,"message":"3220","line":7,"column":18,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":27},{"ruleId":"3153","severity":1,"message":"3268","line":1,"column":10,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":15},{"ruleId":"3221","severity":1,"message":"3222","line":8,"column":9,"nodeType":"3184","endLine":12,"endColumn":10},{"ruleId":"3221","severity":1,"message":"3222","line":15,"column":9,"nodeType":"3184","endLine":19,"endColumn":12},{"ruleId":"3191","severity":1,"message":"3192","line":17,"column":19,"nodeType":"3165","messageId":"3193","endLine":17,"endColumn":21},{"ruleId":"3191","severity":1,"message":"3212","line":34,"column":30,"nodeType":"3165","messageId":"3193","endLine":34,"endColumn":32},{"ruleId":"3215","severity":1,"message":"3216","line":53,"column":23,"nodeType":"3217","messageId":"3218","endLine":53,"endColumn":30},{"ruleId":"3191","severity":1,"message":"3192","line":62,"column":31,"nodeType":"3165","messageId":"3193","endLine":62,"endColumn":33},{"ruleId":"3191","severity":1,"message":"3192","line":66,"column":39,"nodeType":"3165","messageId":"3193","endLine":66,"endColumn":41},{"ruleId":"3159","severity":1,"message":"3269","line":33,"column":6,"nodeType":"3161","endLine":33,"endColumn":16,"suggestions":"3270"},{"ruleId":"3159","severity":1,"message":"3271","line":42,"column":6,"nodeType":"3161","endLine":42,"endColumn":12,"suggestions":"3272"},{"ruleId":"3153","severity":1,"message":"3273","line":17,"column":5,"nodeType":"3155","messageId":"3156","endLine":17,"endColumn":18},{"ruleId":"3182","severity":1,"message":"3183","line":31,"column":9,"nodeType":"3184","endLine":34,"endColumn":11},{"ruleId":"3191","severity":1,"message":"3192","line":66,"column":34,"nodeType":"3165","messageId":"3193","endLine":66,"endColumn":36},{"ruleId":"3191","severity":1,"message":"3192","line":95,"column":29,"nodeType":"3165","messageId":"3193","endLine":95,"endColumn":31},{"ruleId":"3153","severity":1,"message":"3223","line":2,"column":15,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":25},{"ruleId":"3191","severity":1,"message":"3192","line":49,"column":19,"nodeType":"3165","messageId":"3193","endLine":49,"endColumn":21},{"ruleId":"3191","severity":1,"message":"3212","line":72,"column":25,"nodeType":"3165","messageId":"3193","endLine":72,"endColumn":27},{"ruleId":"3191","severity":1,"message":"3212","line":82,"column":25,"nodeType":"3165","messageId":"3193","endLine":82,"endColumn":27},{"ruleId":"3221","severity":1,"message":"3222","line":85,"column":9,"nodeType":"3184","endLine":89,"endColumn":12},{"ruleId":"3191","severity":1,"message":"3192","line":87,"column":19,"nodeType":"3165","messageId":"3193","endLine":87,"endColumn":21},{"ruleId":"3221","severity":1,"message":"3222","line":92,"column":9,"nodeType":"3184","endLine":100,"endColumn":12},{"ruleId":"3191","severity":1,"message":"3192","line":98,"column":19,"nodeType":"3165","messageId":"3193","endLine":98,"endColumn":21},{"ruleId":"3221","severity":1,"message":"3222","line":109,"column":7,"nodeType":"3184","endLine":113,"endColumn":8},{"ruleId":"3221","severity":1,"message":"3222","line":116,"column":7,"nodeType":"3184","endLine":124,"endColumn":10},{"ruleId":"3191","severity":1,"message":"3192","line":122,"column":17,"nodeType":"3165","messageId":"3193","endLine":122,"endColumn":19},{"ruleId":"3153","severity":1,"message":"3219","line":7,"column":22,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":29},{"ruleId":"3153","severity":1,"message":"3274","line":14,"column":9,"nodeType":"3155","messageId":"3156","endLine":14,"endColumn":19},{"ruleId":"3191","severity":1,"message":"3212","line":22,"column":19,"nodeType":"3165","messageId":"3193","endLine":22,"endColumn":21},{"ruleId":"3159","severity":1,"message":"3275","line":37,"column":6,"nodeType":"3161","endLine":37,"endColumn":17,"suggestions":"3276"},{"ruleId":"3159","severity":1,"message":"3277","line":38,"column":5,"nodeType":"3161","endLine":38,"endColumn":15,"suggestions":"3278"},{"ruleId":"3159","severity":1,"message":"3279","line":62,"column":6,"nodeType":"3161","endLine":62,"endColumn":15,"suggestions":"3280"},{"ruleId":"3215","severity":1,"message":"3216","line":74,"column":21,"nodeType":"3217","messageId":"3218","endLine":74,"endColumn":28},{"ruleId":"3191","severity":1,"message":"3192","line":83,"column":29,"nodeType":"3165","messageId":"3193","endLine":83,"endColumn":31},{"ruleId":"3191","severity":1,"message":"3192","line":111,"column":35,"nodeType":"3165","messageId":"3193","endLine":111,"endColumn":37},{"ruleId":"3191","severity":1,"message":"3212","line":215,"column":49,"nodeType":"3165","messageId":"3193","endLine":215,"endColumn":51},{"ruleId":"3153","severity":1,"message":"3261","line":2,"column":17,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3210","line":3,"column":10,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":16},{"ruleId":"3153","severity":1,"message":"3281","line":5,"column":10,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3282","line":5,"column":20,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":31},{"ruleId":"3153","severity":1,"message":"3283","line":5,"column":33,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":44},{"ruleId":"3153","severity":1,"message":"3284","line":5,"column":46,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":53},{"ruleId":"3153","severity":1,"message":"3285","line":12,"column":11,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":22},{"ruleId":"3191","severity":1,"message":"3212","line":31,"column":25,"nodeType":"3165","messageId":"3193","endLine":31,"endColumn":27},{"ruleId":"3182","severity":1,"message":"3183","line":87,"column":17,"nodeType":"3184","endLine":90,"endColumn":19},{"ruleId":"3153","severity":1,"message":"3286","line":5,"column":8,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":27},{"ruleId":"3153","severity":1,"message":"3237","line":6,"column":10,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3287","line":6,"column":23,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":31},{"ruleId":"3153","severity":1,"message":"3236","line":6,"column":33,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":42},{"ruleId":"3153","severity":1,"message":"3238","line":6,"column":44,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":52},{"ruleId":"3153","severity":1,"message":"3288","line":8,"column":9,"nodeType":"3155","messageId":"3156","endLine":8,"endColumn":17},{"ruleId":"3191","severity":1,"message":"3192","line":22,"column":26,"nodeType":"3165","messageId":"3193","endLine":22,"endColumn":28},{"ruleId":"3191","severity":1,"message":"3192","line":31,"column":50,"nodeType":"3165","messageId":"3193","endLine":31,"endColumn":52},{"ruleId":"3191","severity":1,"message":"3192","line":50,"column":26,"nodeType":"3165","messageId":"3193","endLine":50,"endColumn":28},{"ruleId":"3191","severity":1,"message":"3192","line":59,"column":50,"nodeType":"3165","messageId":"3193","endLine":59,"endColumn":52},{"ruleId":"3153","severity":1,"message":"3289","line":9,"column":78,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":91},{"ruleId":"3191","severity":1,"message":"3212","line":23,"column":21,"nodeType":"3165","messageId":"3193","endLine":23,"endColumn":23},{"ruleId":"3159","severity":1,"message":"3290","line":37,"column":10,"nodeType":"3161","endLine":37,"endColumn":19,"suggestions":"3291"},{"ruleId":"3191","severity":1,"message":"3212","line":78,"column":73,"nodeType":"3165","messageId":"3193","endLine":78,"endColumn":75},{"ruleId":"3191","severity":1,"message":"3212","line":98,"column":73,"nodeType":"3165","messageId":"3193","endLine":98,"endColumn":75},{"ruleId":"3153","severity":1,"message":"3292","line":11,"column":61,"nodeType":"3155","messageId":"3156","endLine":11,"endColumn":70},{"ruleId":"3153","severity":1,"message":"3179","line":11,"column":99,"nodeType":"3155","messageId":"3156","endLine":11,"endColumn":105},{"ruleId":"3159","severity":1,"message":"3293","line":39,"column":8,"nodeType":"3161","endLine":39,"endColumn":10,"suggestions":"3294"},{"ruleId":"3191","severity":1,"message":"3212","line":42,"column":24,"nodeType":"3165","messageId":"3193","endLine":42,"endColumn":26},{"ruleId":"3191","severity":1,"message":"3212","line":43,"column":37,"nodeType":"3165","messageId":"3193","endLine":43,"endColumn":39},{"ruleId":"3191","severity":1,"message":"3212","line":44,"column":54,"nodeType":"3165","messageId":"3193","endLine":44,"endColumn":56},{"ruleId":"3159","severity":1,"message":"3295","line":54,"column":8,"nodeType":"3161","endLine":54,"endColumn":26,"suggestions":"3296"},{"ruleId":"3159","severity":1,"message":"3295","line":57,"column":8,"nodeType":"3161","endLine":57,"endColumn":26,"suggestions":"3297"},{"ruleId":"3159","severity":1,"message":"3295","line":60,"column":8,"nodeType":"3161","endLine":60,"endColumn":24,"suggestions":"3298"},{"ruleId":"3159","severity":1,"message":"3295","line":63,"column":8,"nodeType":"3161","endLine":63,"endColumn":25,"suggestions":"3299"},{"ruleId":"3191","severity":1,"message":"3212","line":65,"column":20,"nodeType":"3165","messageId":"3193","endLine":65,"endColumn":22},{"ruleId":"3159","severity":1,"message":"3300","line":80,"column":8,"nodeType":"3161","endLine":80,"endColumn":18,"suggestions":"3301"},{"ruleId":"3159","severity":1,"message":"3302","line":83,"column":8,"nodeType":"3161","endLine":83,"endColumn":21,"suggestions":"3303"},{"ruleId":"3191","severity":1,"message":"3192","line":90,"column":20,"nodeType":"3165","messageId":"3193","endLine":90,"endColumn":22},{"ruleId":"3191","severity":1,"message":"3212","line":117,"column":30,"nodeType":"3165","messageId":"3193","endLine":117,"endColumn":32},{"ruleId":"3191","severity":1,"message":"3212","line":123,"column":32,"nodeType":"3165","messageId":"3193","endLine":123,"endColumn":34},{"ruleId":"3191","severity":1,"message":"3212","line":128,"column":32,"nodeType":"3165","messageId":"3193","endLine":128,"endColumn":34},{"ruleId":"3191","severity":1,"message":"3192","line":147,"column":73,"nodeType":"3165","messageId":"3193","endLine":147,"endColumn":75},{"ruleId":"3191","severity":1,"message":"3192","line":147,"column":110,"nodeType":"3165","messageId":"3193","endLine":147,"endColumn":112},{"ruleId":"3191","severity":1,"message":"3192","line":155,"column":22,"nodeType":"3165","messageId":"3193","endLine":155,"endColumn":24},{"ruleId":"3191","severity":1,"message":"3192","line":161,"column":34,"nodeType":"3165","messageId":"3193","endLine":161,"endColumn":36},{"ruleId":"3191","severity":1,"message":"3192","line":172,"column":34,"nodeType":"3165","messageId":"3193","endLine":172,"endColumn":36},{"ruleId":"3191","severity":1,"message":"3192","line":187,"column":38,"nodeType":"3165","messageId":"3193","endLine":187,"endColumn":40},{"ruleId":"3182","severity":1,"message":"3183","line":10,"column":9,"nodeType":"3184","endLine":10,"endColumn":74},{"ruleId":"3153","severity":1,"message":"3172","line":1,"column":17,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":26},{"ruleId":"3153","severity":1,"message":"3170","line":1,"column":28,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":36},{"ruleId":"3153","severity":1,"message":"3288","line":12,"column":9,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":17},{"ruleId":"3153","severity":1,"message":"3304","line":23,"column":5,"nodeType":"3155","messageId":"3156","endLine":23,"endColumn":14},{"ruleId":"3191","severity":1,"message":"3192","line":33,"column":20,"nodeType":"3165","messageId":"3193","endLine":33,"endColumn":22},{"ruleId":"3191","severity":1,"message":"3192","line":47,"column":53,"nodeType":"3165","messageId":"3193","endLine":47,"endColumn":55},{"ruleId":"3191","severity":1,"message":"3192","line":17,"column":23,"nodeType":"3165","messageId":"3193","endLine":17,"endColumn":25},{"ruleId":"3191","severity":1,"message":"3192","line":39,"column":23,"nodeType":"3165","messageId":"3193","endLine":39,"endColumn":25},{"ruleId":"3153","severity":1,"message":"3305","line":20,"column":11,"nodeType":"3155","messageId":"3156","endLine":20,"endColumn":19},{"ruleId":"3153","severity":1,"message":"3305","line":11,"column":11,"nodeType":"3155","messageId":"3156","endLine":11,"endColumn":19},{"ruleId":"3191","severity":1,"message":"3212","line":45,"column":36,"nodeType":"3165","messageId":"3193","endLine":45,"endColumn":38},{"ruleId":"3191","severity":1,"message":"3212","line":51,"column":32,"nodeType":"3165","messageId":"3193","endLine":51,"endColumn":34},{"ruleId":"3191","severity":1,"message":"3212","line":52,"column":59,"nodeType":"3165","messageId":"3193","endLine":52,"endColumn":61},{"ruleId":"3153","severity":1,"message":"3170","line":1,"column":28,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":36},{"ruleId":"3153","severity":1,"message":"3306","line":2,"column":15,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":22},{"ruleId":"3153","severity":1,"message":"3268","line":2,"column":36,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":41},{"ruleId":"3153","severity":1,"message":"3307","line":2,"column":43,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":48},{"ruleId":"3153","severity":1,"message":"3308","line":13,"column":5,"nodeType":"3155","messageId":"3156","endLine":13,"endColumn":16},{"ruleId":"3153","severity":1,"message":"3305","line":24,"column":11,"nodeType":"3155","messageId":"3156","endLine":24,"endColumn":19},{"ruleId":"3191","severity":1,"message":"3192","line":80,"column":34,"nodeType":"3165","messageId":"3193","endLine":80,"endColumn":36},{"ruleId":"3191","severity":1,"message":"3192","line":22,"column":73,"nodeType":"3165","messageId":"3193","endLine":22,"endColumn":75},{"ruleId":"3191","severity":1,"message":"3212","line":34,"column":53,"nodeType":"3165","messageId":"3193","endLine":34,"endColumn":55},{"ruleId":"3153","severity":1,"message":"3237","line":7,"column":10,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3287","line":7,"column":23,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":31},{"ruleId":"3153","severity":1,"message":"3238","line":7,"column":44,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":52},{"ruleId":"3191","severity":1,"message":"3192","line":15,"column":15,"nodeType":"3165","messageId":"3193","endLine":15,"endColumn":17},{"ruleId":"3191","severity":1,"message":"3192","line":19,"column":50,"nodeType":"3165","messageId":"3193","endLine":19,"endColumn":52},{"ruleId":"3153","severity":1,"message":"3309","line":15,"column":5,"nodeType":"3155","messageId":"3156","endLine":15,"endColumn":14},{"ruleId":"3153","severity":1,"message":"3310","line":16,"column":5,"nodeType":"3155","messageId":"3156","endLine":16,"endColumn":12},{"ruleId":"3182","severity":1,"message":"3183","line":31,"column":9,"nodeType":"3184","endLine":34,"endColumn":11},{"ruleId":"3191","severity":1,"message":"3212","line":35,"column":26,"nodeType":"3165","messageId":"3193","endLine":35,"endColumn":28},{"ruleId":"3215","severity":1,"message":"3216","line":54,"column":21,"nodeType":"3217","messageId":"3218","endLine":54,"endColumn":28},{"ruleId":"3191","severity":1,"message":"3192","line":68,"column":29,"nodeType":"3165","messageId":"3193","endLine":68,"endColumn":31},{"ruleId":"3191","severity":1,"message":"3192","line":72,"column":33,"nodeType":"3165","messageId":"3193","endLine":72,"endColumn":35},{"ruleId":"3153","severity":1,"message":"3257","line":7,"column":9,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":13},{"ruleId":"3153","severity":1,"message":"3258","line":12,"column":27,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":38},{"ruleId":"3191","severity":1,"message":"3192","line":25,"column":34,"nodeType":"3165","messageId":"3193","endLine":25,"endColumn":36},{"ruleId":"3191","severity":1,"message":"3212","line":33,"column":53,"nodeType":"3165","messageId":"3193","endLine":33,"endColumn":55},{"ruleId":"3153","severity":1,"message":"3210","line":2,"column":10,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":16},{"ruleId":"3153","severity":1,"message":"3262","line":2,"column":32,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":37},{"ruleId":"3153","severity":1,"message":"3311","line":7,"column":8,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":30},{"ruleId":"3153","severity":1,"message":"3312","line":18,"column":25,"nodeType":"3155","messageId":"3156","endLine":18,"endColumn":40},{"ruleId":"3153","severity":1,"message":"3313","line":18,"column":42,"nodeType":"3155","messageId":"3156","endLine":18,"endColumn":63},{"ruleId":"3153","severity":1,"message":"3314","line":2,"column":17,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3315","line":2,"column":22,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":25},{"ruleId":"3153","severity":1,"message":"3316","line":3,"column":10,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":29},{"ruleId":"3153","severity":1,"message":"3317","line":3,"column":31,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":44},{"ruleId":"3153","severity":1,"message":"3196","line":3,"column":46,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":64},{"ruleId":"3153","severity":1,"message":"3318","line":3,"column":66,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":80},{"ruleId":"3153","severity":1,"message":"3319","line":9,"column":23,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":34},{"ruleId":"3153","severity":1,"message":"3320","line":11,"column":12,"nodeType":"3155","messageId":"3156","endLine":11,"endColumn":21},{"ruleId":"3191","severity":1,"message":"3212","line":13,"column":22,"nodeType":"3165","messageId":"3193","endLine":13,"endColumn":24},{"ruleId":"3191","severity":1,"message":"3212","line":18,"column":29,"nodeType":"3165","messageId":"3193","endLine":18,"endColumn":31},{"ruleId":"3159","severity":1,"message":"3321","line":37,"column":8,"nodeType":"3161","endLine":37,"endColumn":26,"suggestions":"3322"},{"ruleId":"3191","severity":1,"message":"3212","line":45,"column":65,"nodeType":"3165","messageId":"3193","endLine":45,"endColumn":67},{"ruleId":"3182","severity":1,"message":"3183","line":61,"column":29,"nodeType":"3184","endLine":63,"endColumn":75},{"ruleId":"3191","severity":1,"message":"3192","line":61,"column":80,"nodeType":"3165","messageId":"3193","endLine":61,"endColumn":82},{"ruleId":"3191","severity":1,"message":"3192","line":83,"column":77,"nodeType":"3165","messageId":"3193","endLine":83,"endColumn":79},{"ruleId":"3191","severity":1,"message":"3212","line":14,"column":45,"nodeType":"3165","messageId":"3193","endLine":14,"endColumn":47},{"ruleId":"3191","severity":1,"message":"3192","line":14,"column":112,"nodeType":"3165","messageId":"3193","endLine":14,"endColumn":114},{"ruleId":"3191","severity":1,"message":"3212","line":18,"column":29,"nodeType":"3165","messageId":"3193","endLine":18,"endColumn":31},{"ruleId":"3153","severity":1,"message":"3323","line":12,"column":36,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":52},{"ruleId":"3153","severity":1,"message":"3179","line":12,"column":106,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":112},{"ruleId":"3191","severity":1,"message":"3212","line":81,"column":86,"nodeType":"3165","messageId":"3193","endLine":81,"endColumn":88},{"ruleId":"3191","severity":1,"message":"3212","line":83,"column":86,"nodeType":"3165","messageId":"3193","endLine":83,"endColumn":88},{"ruleId":"3324","severity":1,"message":"3325","line":102,"column":44,"nodeType":"3326","messageId":"3327","endLine":102,"endColumn":62},{"ruleId":"3324","severity":1,"message":"3328","line":104,"column":50,"nodeType":"3326","messageId":"3327","endLine":104,"endColumn":68},{"ruleId":"3191","severity":1,"message":"3212","line":114,"column":56,"nodeType":"3165","messageId":"3193","endLine":114,"endColumn":58},{"ruleId":"3182","severity":1,"message":"3183","line":170,"column":37,"nodeType":"3184","endLine":173,"endColumn":39},{"ruleId":"3182","severity":1,"message":"3183","line":180,"column":33,"nodeType":"3184","endLine":183,"endColumn":35},{"ruleId":"3191","severity":1,"message":"3212","line":214,"column":52,"nodeType":"3165","messageId":"3193","endLine":214,"endColumn":54},{"ruleId":"3191","severity":1,"message":"3212","line":217,"column":52,"nodeType":"3165","messageId":"3193","endLine":217,"endColumn":54},{"ruleId":"3153","severity":1,"message":"3179","line":8,"column":12,"nodeType":"3155","messageId":"3156","endLine":8,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3220","line":8,"column":20,"nodeType":"3155","messageId":"3156","endLine":8,"endColumn":29},{"ruleId":"3182","severity":1,"message":"3183","line":23,"column":17,"nodeType":"3184","endLine":23,"endColumn":78},{"ruleId":"3182","severity":1,"message":"3183","line":15,"column":9,"nodeType":"3184","endLine":18,"endColumn":11},{"ruleId":"3191","severity":1,"message":"3192","line":77,"column":29,"nodeType":"3165","messageId":"3193","endLine":77,"endColumn":31},{"ruleId":"3153","severity":1,"message":"3262","line":3,"column":15,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3329","line":3,"column":36,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":42},{"ruleId":"3153","severity":1,"message":"3261","line":3,"column":44,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":48},{"ruleId":"3153","severity":1,"message":"3185","line":21,"column":11,"nodeType":"3155","messageId":"3156","endLine":21,"endColumn":19},{"ruleId":"3191","severity":1,"message":"3192","line":47,"column":26,"nodeType":"3165","messageId":"3193","endLine":47,"endColumn":28},{"ruleId":"3191","severity":1,"message":"3192","line":47,"column":55,"nodeType":"3165","messageId":"3193","endLine":47,"endColumn":57},{"ruleId":"3191","severity":1,"message":"3192","line":63,"column":33,"nodeType":"3165","messageId":"3193","endLine":63,"endColumn":35},{"ruleId":"3153","severity":1,"message":"3172","line":1,"column":17,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":26},{"ruleId":"3153","severity":1,"message":"3170","line":1,"column":28,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":36},{"ruleId":"3153","severity":1,"message":"3288","line":11,"column":9,"nodeType":"3155","messageId":"3156","endLine":11,"endColumn":17},{"ruleId":"3191","severity":1,"message":"3192","line":37,"column":17,"nodeType":"3165","messageId":"3193","endLine":37,"endColumn":19},{"ruleId":"3191","severity":1,"message":"3192","line":47,"column":26,"nodeType":"3165","messageId":"3193","endLine":47,"endColumn":28},{"ruleId":"3191","severity":1,"message":"3192","line":64,"column":26,"nodeType":"3165","messageId":"3193","endLine":64,"endColumn":28},{"ruleId":"3191","severity":1,"message":"3192","line":69,"column":53,"nodeType":"3165","messageId":"3193","endLine":69,"endColumn":55},{"ruleId":"3191","severity":1,"message":"3212","line":111,"column":25,"nodeType":"3165","messageId":"3193","endLine":111,"endColumn":27},{"ruleId":"3191","severity":1,"message":"3212","line":152,"column":29,"nodeType":"3165","messageId":"3193","endLine":152,"endColumn":31},{"ruleId":"3191","severity":1,"message":"3212","line":182,"column":29,"nodeType":"3165","messageId":"3193","endLine":182,"endColumn":31},{"ruleId":"3191","severity":1,"message":"3212","line":241,"column":25,"nodeType":"3165","messageId":"3193","endLine":241,"endColumn":27},{"ruleId":"3153","severity":1,"message":"3330","line":14,"column":5,"nodeType":"3155","messageId":"3156","endLine":14,"endColumn":14},{"ruleId":"3191","severity":1,"message":"3192","line":29,"column":25,"nodeType":"3165","messageId":"3193","endLine":29,"endColumn":27},{"ruleId":"3153","severity":1,"message":"3210","line":3,"column":10,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":16},{"ruleId":"3153","severity":1,"message":"3219","line":3,"column":39,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":46},{"ruleId":"3153","severity":1,"message":"3331","line":4,"column":10,"nodeType":"3155","messageId":"3156","endLine":4,"endColumn":24},{"ruleId":"3153","severity":1,"message":"3332","line":5,"column":10,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":26},{"ruleId":"3153","severity":1,"message":"3287","line":6,"column":10,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":18},{"ruleId":"3182","severity":1,"message":"3183","line":61,"column":17,"nodeType":"3184","endLine":64,"endColumn":19},{"ruleId":"3153","severity":1,"message":"3316","line":4,"column":10,"nodeType":"3155","messageId":"3156","endLine":4,"endColumn":29},{"ruleId":"3153","severity":1,"message":"3317","line":4,"column":31,"nodeType":"3155","messageId":"3156","endLine":4,"endColumn":44},{"ruleId":"3221","severity":1,"message":"3222","line":29,"column":9,"nodeType":"3184","endLine":33,"endColumn":12},{"ruleId":"3191","severity":1,"message":"3192","line":31,"column":21,"nodeType":"3165","messageId":"3193","endLine":31,"endColumn":23},{"ruleId":"3333","severity":1,"message":"3334","line":60,"column":32,"nodeType":"3326","messageId":"3335","endLine":60,"endColumn":34},{"ruleId":"3333","severity":1,"message":"3334","line":64,"column":38,"nodeType":"3326","messageId":"3335","endLine":64,"endColumn":40},{"ruleId":"3159","severity":1,"message":"3336","line":71,"column":8,"nodeType":"3161","endLine":71,"endColumn":10,"suggestions":"3337"},{"ruleId":"3215","severity":1,"message":"3216","line":76,"column":21,"nodeType":"3217","messageId":"3218","endLine":76,"endColumn":28},{"ruleId":"3191","severity":1,"message":"3192","line":95,"column":29,"nodeType":"3165","messageId":"3193","endLine":95,"endColumn":31},{"ruleId":"3191","severity":1,"message":"3192","line":124,"column":34,"nodeType":"3165","messageId":"3193","endLine":124,"endColumn":36},{"ruleId":"3191","severity":1,"message":"3192","line":124,"column":65,"nodeType":"3165","messageId":"3193","endLine":124,"endColumn":67},{"ruleId":"3191","severity":1,"message":"3192","line":130,"column":30,"nodeType":"3165","messageId":"3193","endLine":130,"endColumn":32},{"ruleId":"3333","severity":1,"message":"3334","line":139,"column":51,"nodeType":"3326","messageId":"3335","endLine":139,"endColumn":53},{"ruleId":"3333","severity":1,"message":"3334","line":149,"column":37,"nodeType":"3326","messageId":"3335","endLine":149,"endColumn":39},{"ruleId":"3333","severity":1,"message":"3334","line":154,"column":29,"nodeType":"3326","messageId":"3335","endLine":154,"endColumn":31},{"ruleId":"3153","severity":1,"message":"3223","line":2,"column":15,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":25},{"ruleId":"3153","severity":1,"message":"3219","line":2,"column":34,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":41},{"ruleId":"3221","severity":1,"message":"3222","line":46,"column":9,"nodeType":"3184","endLine":50,"endColumn":10},{"ruleId":"3221","severity":1,"message":"3222","line":53,"column":9,"nodeType":"3184","endLine":58,"endColumn":12},{"ruleId":"3191","severity":1,"message":"3192","line":55,"column":21,"nodeType":"3165","messageId":"3193","endLine":55,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3210","line":2,"column":34,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":40},{"ruleId":"3153","severity":1,"message":"3338","line":10,"column":23,"nodeType":"3155","messageId":"3156","endLine":10,"endColumn":35},{"ruleId":"3153","severity":1,"message":"3339","line":10,"column":37,"nodeType":"3155","messageId":"3156","endLine":10,"endColumn":49},{"ruleId":"3191","severity":1,"message":"3192","line":17,"column":21,"nodeType":"3165","messageId":"3193","endLine":17,"endColumn":23},{"ruleId":"3191","severity":1,"message":"3192","line":21,"column":22,"nodeType":"3165","messageId":"3193","endLine":21,"endColumn":24},{"ruleId":"3191","severity":1,"message":"3192","line":25,"column":17,"nodeType":"3165","messageId":"3193","endLine":25,"endColumn":19},{"ruleId":"3191","severity":1,"message":"3192","line":25,"column":37,"nodeType":"3165","messageId":"3193","endLine":25,"endColumn":39},{"ruleId":"3191","severity":1,"message":"3192","line":29,"column":17,"nodeType":"3165","messageId":"3193","endLine":29,"endColumn":19},{"ruleId":"3191","severity":1,"message":"3192","line":29,"column":44,"nodeType":"3165","messageId":"3193","endLine":29,"endColumn":46},{"ruleId":"3191","severity":1,"message":"3192","line":29,"column":65,"nodeType":"3165","messageId":"3193","endLine":29,"endColumn":67},{"ruleId":"3191","severity":1,"message":"3192","line":82,"column":39,"nodeType":"3165","messageId":"3193","endLine":82,"endColumn":41},{"ruleId":"3153","severity":1,"message":"3247","line":4,"column":10,"nodeType":"3155","messageId":"3156","endLine":4,"endColumn":25},{"ruleId":"3153","severity":1,"message":"3209","line":9,"column":23,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":36},{"ruleId":"3159","severity":1,"message":"3248","line":19,"column":6,"nodeType":"3161","endLine":19,"endColumn":19,"suggestions":"3340"},{"ruleId":"3191","severity":1,"message":"3192","line":39,"column":39,"nodeType":"3165","messageId":"3193","endLine":39,"endColumn":41},{"ruleId":"3182","severity":1,"message":"3183","line":49,"column":11,"nodeType":"3184","endLine":49,"endColumn":75},{"ruleId":"3153","severity":1,"message":"3238","line":1,"column":44,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":52},{"ruleId":"3153","severity":1,"message":"3341","line":5,"column":22,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":43},{"ruleId":"3153","severity":1,"message":"3342","line":11,"column":22,"nodeType":"3155","messageId":"3156","endLine":11,"endColumn":34},{"ruleId":"3153","severity":1,"message":"3342","line":6,"column":22,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":34},{"ruleId":"3182","severity":1,"message":"3183","line":18,"column":13,"nodeType":"3184","endLine":21,"endColumn":15},{"ruleId":"3221","severity":1,"message":"3222","line":76,"column":13,"nodeType":"3184","endLine":83,"endColumn":16},{"ruleId":"3191","severity":1,"message":"3192","line":78,"column":23,"nodeType":"3165","messageId":"3193","endLine":78,"endColumn":25},{"ruleId":"3191","severity":1,"message":"3212","line":80,"column":99,"nodeType":"3165","messageId":"3193","endLine":80,"endColumn":101},{"ruleId":"3153","severity":1,"message":"3343","line":7,"column":10,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":17},{"ruleId":"3191","severity":1,"message":"3192","line":30,"column":38,"nodeType":"3165","messageId":"3193","endLine":30,"endColumn":40},{"ruleId":"3191","severity":1,"message":"3212","line":32,"column":66,"nodeType":"3165","messageId":"3193","endLine":32,"endColumn":68},{"ruleId":"3191","severity":1,"message":"3212","line":53,"column":66,"nodeType":"3165","messageId":"3193","endLine":53,"endColumn":68},{"ruleId":"3191","severity":1,"message":"3192","line":57,"column":39,"nodeType":"3165","messageId":"3193","endLine":57,"endColumn":41},{"ruleId":"3191","severity":1,"message":"3192","line":96,"column":39,"nodeType":"3165","messageId":"3193","endLine":96,"endColumn":41},{"ruleId":"3191","severity":1,"message":"3192","line":129,"column":37,"nodeType":"3165","messageId":"3193","endLine":129,"endColumn":39},{"ruleId":"3191","severity":1,"message":"3192","line":140,"column":36,"nodeType":"3165","messageId":"3193","endLine":140,"endColumn":38},{"ruleId":"3191","severity":1,"message":"3192","line":157,"column":41,"nodeType":"3165","messageId":"3193","endLine":157,"endColumn":43},{"ruleId":"3182","severity":1,"message":"3183","line":32,"column":23,"nodeType":"3184","endLine":35,"endColumn":25},{"ruleId":"3182","severity":1,"message":"3183","line":74,"column":23,"nodeType":"3184","endLine":77,"endColumn":25},{"ruleId":"3221","severity":1,"message":"3222","line":112,"column":11,"nodeType":"3184","endLine":119,"endColumn":16},{"ruleId":"3191","severity":1,"message":"3192","line":114,"column":23,"nodeType":"3165","messageId":"3193","endLine":114,"endColumn":25},{"ruleId":"3191","severity":1,"message":"3212","line":116,"column":96,"nodeType":"3165","messageId":"3193","endLine":116,"endColumn":98},{"ruleId":"3182","severity":1,"message":"3183","line":32,"column":23,"nodeType":"3184","endLine":35,"endColumn":25},{"ruleId":"3221","severity":1,"message":"3222","line":82,"column":13,"nodeType":"3184","endLine":89,"endColumn":16},{"ruleId":"3191","severity":1,"message":"3192","line":84,"column":23,"nodeType":"3165","messageId":"3193","endLine":84,"endColumn":25},{"ruleId":"3191","severity":1,"message":"3212","line":86,"column":93,"nodeType":"3165","messageId":"3193","endLine":86,"endColumn":95},{"ruleId":"3153","severity":1,"message":"3179","line":18,"column":5,"nodeType":"3155","messageId":"3156","endLine":18,"endColumn":11},{"ruleId":"3324","severity":1,"message":"3325","line":157,"column":36,"nodeType":"3326","messageId":"3327","endLine":157,"endColumn":54},{"ruleId":"3324","severity":1,"message":"3328","line":159,"column":40,"nodeType":"3326","messageId":"3327","endLine":159,"endColumn":58},{"ruleId":"3191","severity":1,"message":"3192","line":183,"column":24,"nodeType":"3165","messageId":"3193","endLine":183,"endColumn":26},{"ruleId":"3191","severity":1,"message":"3192","line":192,"column":23,"nodeType":"3165","messageId":"3193","endLine":192,"endColumn":25},{"ruleId":"3191","severity":1,"message":"3212","line":192,"column":54,"nodeType":"3165","messageId":"3193","endLine":192,"endColumn":56},{"ruleId":"3191","severity":1,"message":"3212","line":192,"column":111,"nodeType":"3165","messageId":"3193","endLine":192,"endColumn":113},{"ruleId":"3191","severity":1,"message":"3212","line":219,"column":19,"nodeType":"3165","messageId":"3193","endLine":219,"endColumn":21},{"ruleId":"3191","severity":1,"message":"3212","line":231,"column":17,"nodeType":"3165","messageId":"3193","endLine":231,"endColumn":19},{"ruleId":"3191","severity":1,"message":"3212","line":231,"column":49,"nodeType":"3165","messageId":"3193","endLine":231,"endColumn":51},{"ruleId":"3191","severity":1,"message":"3212","line":231,"column":81,"nodeType":"3165","messageId":"3193","endLine":231,"endColumn":83},{"ruleId":"3191","severity":1,"message":"3212","line":253,"column":19,"nodeType":"3165","messageId":"3193","endLine":253,"endColumn":21},{"ruleId":"3191","severity":1,"message":"3212","line":266,"column":19,"nodeType":"3165","messageId":"3193","endLine":266,"endColumn":21},{"ruleId":"3191","severity":1,"message":"3212","line":268,"column":21,"nodeType":"3165","messageId":"3193","endLine":268,"endColumn":23},{"ruleId":"3191","severity":1,"message":"3212","line":268,"column":53,"nodeType":"3165","messageId":"3193","endLine":268,"endColumn":55},{"ruleId":"3191","severity":1,"message":"3212","line":268,"column":85,"nodeType":"3165","messageId":"3193","endLine":268,"endColumn":87},{"ruleId":"3191","severity":1,"message":"3192","line":274,"column":15,"nodeType":"3165","messageId":"3193","endLine":274,"endColumn":17},{"ruleId":"3191","severity":1,"message":"3212","line":294,"column":19,"nodeType":"3165","messageId":"3193","endLine":294,"endColumn":21},{"ruleId":"3191","severity":1,"message":"3212","line":310,"column":19,"nodeType":"3165","messageId":"3193","endLine":310,"endColumn":21},{"ruleId":"3191","severity":1,"message":"3212","line":312,"column":21,"nodeType":"3165","messageId":"3193","endLine":312,"endColumn":23},{"ruleId":"3191","severity":1,"message":"3212","line":312,"column":53,"nodeType":"3165","messageId":"3193","endLine":312,"endColumn":55},{"ruleId":"3191","severity":1,"message":"3212","line":312,"column":85,"nodeType":"3165","messageId":"3193","endLine":312,"endColumn":87},{"ruleId":"3191","severity":1,"message":"3212","line":324,"column":19,"nodeType":"3165","messageId":"3193","endLine":324,"endColumn":21},{"ruleId":"3191","severity":1,"message":"3212","line":326,"column":21,"nodeType":"3165","messageId":"3193","endLine":326,"endColumn":23},{"ruleId":"3191","severity":1,"message":"3212","line":326,"column":53,"nodeType":"3165","messageId":"3193","endLine":326,"endColumn":55},{"ruleId":"3191","severity":1,"message":"3212","line":326,"column":85,"nodeType":"3165","messageId":"3193","endLine":326,"endColumn":87},{"ruleId":"3191","severity":1,"message":"3212","line":332,"column":29,"nodeType":"3165","messageId":"3193","endLine":332,"endColumn":31},{"ruleId":"3191","severity":1,"message":"3212","line":332,"column":57,"nodeType":"3165","messageId":"3193","endLine":332,"endColumn":59},{"ruleId":"3191","severity":1,"message":"3192","line":353,"column":62,"nodeType":"3165","messageId":"3193","endLine":353,"endColumn":64},{"ruleId":"3191","severity":1,"message":"3192","line":361,"column":36,"nodeType":"3165","messageId":"3193","endLine":361,"endColumn":38},{"ruleId":"3191","severity":1,"message":"3192","line":361,"column":58,"nodeType":"3165","messageId":"3193","endLine":361,"endColumn":60},{"ruleId":"3191","severity":1,"message":"3192","line":385,"column":73,"nodeType":"3165","messageId":"3193","endLine":385,"endColumn":75},{"ruleId":"3191","severity":1,"message":"3192","line":385,"column":95,"nodeType":"3165","messageId":"3193","endLine":385,"endColumn":97},{"ruleId":"3344","severity":1,"message":"3345","line":404,"column":42,"nodeType":"3346","messageId":"3347","endLine":404,"endColumn":44},{"ruleId":"3191","severity":1,"message":"3212","line":404,"column":68,"nodeType":"3165","messageId":"3193","endLine":404,"endColumn":70},{"ruleId":"3344","severity":1,"message":"3345","line":404,"column":112,"nodeType":"3346","messageId":"3347","endLine":404,"endColumn":114},{"ruleId":"3191","severity":1,"message":"3212","line":404,"column":142,"nodeType":"3165","messageId":"3193","endLine":404,"endColumn":144},{"ruleId":"3191","severity":1,"message":"3192","line":406,"column":36,"nodeType":"3165","messageId":"3193","endLine":406,"endColumn":38},{"ruleId":"3191","severity":1,"message":"3192","line":406,"column":58,"nodeType":"3165","messageId":"3193","endLine":406,"endColumn":60},{"ruleId":"3182","severity":1,"message":"3183","line":454,"column":15,"nodeType":"3184","endLine":457,"endColumn":17},{"ruleId":"3182","severity":1,"message":"3183","line":464,"column":13,"nodeType":"3184","endLine":467,"endColumn":15},{"ruleId":"3191","severity":1,"message":"3192","line":482,"column":29,"nodeType":"3165","messageId":"3193","endLine":482,"endColumn":31},{"ruleId":"3348","severity":1,"message":"3349","line":483,"column":25,"nodeType":"3155","messageId":"3350","endLine":483,"endColumn":28},{"ruleId":"3191","severity":1,"message":"3212","line":496,"column":62,"nodeType":"3165","messageId":"3193","endLine":496,"endColumn":64},{"ruleId":"3191","severity":1,"message":"3192","line":496,"column":81,"nodeType":"3165","messageId":"3193","endLine":496,"endColumn":83},{"ruleId":"3191","severity":1,"message":"3212","line":504,"column":62,"nodeType":"3165","messageId":"3193","endLine":504,"endColumn":64},{"ruleId":"3153","severity":1,"message":"3237","line":7,"column":10,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3287","line":7,"column":23,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":31},{"ruleId":"3153","severity":1,"message":"3238","line":7,"column":44,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":52},{"ruleId":"3191","severity":1,"message":"3192","line":15,"column":15,"nodeType":"3165","messageId":"3193","endLine":15,"endColumn":17},{"ruleId":"3191","severity":1,"message":"3192","line":19,"column":50,"nodeType":"3165","messageId":"3193","endLine":19,"endColumn":52},{"ruleId":"3153","severity":1,"message":"3237","line":5,"column":10,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3287","line":5,"column":23,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":31},{"ruleId":"3153","severity":1,"message":"3238","line":5,"column":44,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":52},{"ruleId":"3191","severity":1,"message":"3192","line":18,"column":27,"nodeType":"3165","messageId":"3193","endLine":18,"endColumn":29},{"ruleId":"3191","severity":1,"message":"3192","line":26,"column":51,"nodeType":"3165","messageId":"3193","endLine":26,"endColumn":53},{"ruleId":"3153","severity":1,"message":"3172","line":1,"column":17,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":26},{"ruleId":"3191","severity":1,"message":"3212","line":28,"column":26,"nodeType":"3165","messageId":"3193","endLine":28,"endColumn":28},{"ruleId":"3191","severity":1,"message":"3212","line":34,"column":28,"nodeType":"3165","messageId":"3193","endLine":34,"endColumn":30},{"ruleId":"3191","severity":1,"message":"3212","line":39,"column":28,"nodeType":"3165","messageId":"3193","endLine":39,"endColumn":30},{"ruleId":"3191","severity":1,"message":"3192","line":74,"column":35,"nodeType":"3165","messageId":"3193","endLine":74,"endColumn":37},{"ruleId":"3191","severity":1,"message":"3192","line":79,"column":32,"nodeType":"3165","messageId":"3193","endLine":79,"endColumn":34},{"ruleId":"3191","severity":1,"message":"3192","line":79,"column":63,"nodeType":"3165","messageId":"3193","endLine":79,"endColumn":65},{"ruleId":"3191","severity":1,"message":"3212","line":84,"column":50,"nodeType":"3165","messageId":"3193","endLine":84,"endColumn":52},{"ruleId":"3191","severity":1,"message":"3212","line":84,"column":117,"nodeType":"3165","messageId":"3193","endLine":84,"endColumn":119},{"ruleId":"3191","severity":1,"message":"3192","line":84,"column":159,"nodeType":"3165","messageId":"3193","endLine":84,"endColumn":161},{"ruleId":"3153","severity":1,"message":"3329","line":2,"column":10,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":16},{"ruleId":"3182","severity":1,"message":"3183","line":12,"column":9,"nodeType":"3184","endLine":19,"endColumn":11},{"ruleId":"3191","severity":1,"message":"3192","line":14,"column":44,"nodeType":"3165","messageId":"3193","endLine":14,"endColumn":46},{"ruleId":"3191","severity":1,"message":"3192","line":45,"column":17,"nodeType":"3165","messageId":"3193","endLine":45,"endColumn":19},{"ruleId":"3191","severity":1,"message":"3212","line":48,"column":33,"nodeType":"3165","messageId":"3193","endLine":48,"endColumn":35},{"ruleId":"3191","severity":1,"message":"3192","line":53,"column":24,"nodeType":"3165","messageId":"3193","endLine":53,"endColumn":26},{"ruleId":"3351","replacedBy":"3352"},{"ruleId":"3353","replacedBy":"3354"},{"ruleId":"3153","severity":1,"message":"3172","line":1,"column":17,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":26},{"ruleId":"3153","severity":1,"message":"3170","line":1,"column":28,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":36},{"ruleId":"3153","severity":1,"message":"3355","line":3,"column":10,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3356","line":119,"column":8,"nodeType":"3155","messageId":"3156","endLine":119,"endColumn":20},{"ruleId":"3239","severity":1,"message":"3240","line":25,"column":8,"nodeType":"3241","messageId":"3242","endLine":25,"endColumn":9,"suggestions":"3357"},{"ruleId":"3239","severity":1,"message":"3244","line":25,"column":32,"nodeType":"3241","messageId":"3242","endLine":25,"endColumn":33,"suggestions":"3358"},{"ruleId":"3239","severity":1,"message":"3244","line":25,"column":48,"nodeType":"3241","messageId":"3242","endLine":25,"endColumn":49,"suggestions":"3359"},{"ruleId":"3348","severity":1,"message":"3360","line":147,"column":9,"nodeType":"3155","messageId":"3350","endLine":147,"endColumn":13},{"ruleId":"3348","severity":1,"message":"3361","line":148,"column":9,"nodeType":"3155","messageId":"3350","endLine":148,"endColumn":12},{"ruleId":"3153","severity":1,"message":"3362","line":149,"column":9,"nodeType":"3155","messageId":"3156","endLine":149,"endColumn":12},{"ruleId":"3351","replacedBy":"3363"},{"ruleId":"3353","replacedBy":"3364"},{"ruleId":"3153","severity":1,"message":"3365","line":12,"column":11,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3366","line":4,"column":3,"nodeType":"3155","messageId":"3156","endLine":4,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3172","line":6,"column":17,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":26},{"ruleId":"3153","severity":1,"message":"3170","line":6,"column":28,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":36},{"ruleId":"3153","severity":1,"message":"3367","line":7,"column":10,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":21},{"ruleId":"3221","severity":1,"message":"3368","line":53,"column":17,"nodeType":"3184","endLine":53,"endColumn":29},{"ruleId":"3153","severity":1,"message":"3252","line":9,"column":23,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":34},{"ruleId":"3153","severity":1,"message":"3369","line":10,"column":10,"nodeType":"3155","messageId":"3156","endLine":10,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3370","line":10,"column":23,"nodeType":"3155","messageId":"3156","endLine":10,"endColumn":33},{"ruleId":"3153","severity":1,"message":"3371","line":14,"column":10,"nodeType":"3155","messageId":"3156","endLine":14,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3372","line":2,"column":10,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":29},{"ruleId":"3215","severity":1,"message":"3216","line":14,"column":21,"nodeType":"3217","messageId":"3218","endLine":14,"endColumn":28},{"ruleId":"3191","severity":1,"message":"3212","line":22,"column":47,"nodeType":"3165","messageId":"3193","endLine":22,"endColumn":49},{"ruleId":"3153","severity":1,"message":"3373","line":25,"column":9,"nodeType":"3155","messageId":"3156","endLine":25,"endColumn":20},{"ruleId":"3159","severity":1,"message":"3374","line":65,"column":6,"nodeType":"3161","endLine":65,"endColumn":8,"suggestions":"3375"},{"ruleId":"3153","severity":1,"message":"3376","line":2,"column":3,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":14},{"ruleId":"3153","severity":1,"message":"3377","line":5,"column":3,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":27},{"ruleId":"3153","severity":1,"message":"3170","line":7,"column":28,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":36},{"ruleId":"3153","severity":1,"message":"3378","line":15,"column":3,"nodeType":"3155","messageId":"3156","endLine":15,"endColumn":11},{"ruleId":"3153","severity":1,"message":"3379","line":16,"column":3,"nodeType":"3155","messageId":"3156","endLine":16,"endColumn":12},{"ruleId":"3153","severity":1,"message":"3380","line":17,"column":3,"nodeType":"3155","messageId":"3156","endLine":17,"endColumn":14},{"ruleId":"3153","severity":1,"message":"3381","line":28,"column":9,"nodeType":"3155","messageId":"3156","endLine":28,"endColumn":15},{"ruleId":"3153","severity":1,"message":"3382","line":42,"column":9,"nodeType":"3155","messageId":"3156","endLine":42,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3383","line":63,"column":9,"nodeType":"3155","messageId":"3156","endLine":63,"endColumn":16},{"ruleId":"3153","severity":1,"message":"3384","line":68,"column":9,"nodeType":"3155","messageId":"3156","endLine":68,"endColumn":17},{"ruleId":"3153","severity":1,"message":"3170","line":1,"column":28,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":36},{"ruleId":"3153","severity":1,"message":"3367","line":2,"column":10,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3385","line":5,"column":10,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3381","line":19,"column":11,"nodeType":"3155","messageId":"3156","endLine":19,"endColumn":17},{"ruleId":"3153","severity":1,"message":"3382","line":33,"column":11,"nodeType":"3155","messageId":"3156","endLine":33,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3376","line":2,"column":3,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":14},{"ruleId":"3153","severity":1,"message":"3386","line":21,"column":10,"nodeType":"3155","messageId":"3156","endLine":21,"endColumn":24},{"ruleId":"3159","severity":1,"message":"3387","line":42,"column":6,"nodeType":"3161","endLine":42,"endColumn":8,"suggestions":"3388"},{"ruleId":"3153","severity":1,"message":"3389","line":6,"column":10,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":22},{"ruleId":"3153","severity":1,"message":"3390","line":12,"column":3,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":13},{"ruleId":"3159","severity":1,"message":"3391","line":33,"column":6,"nodeType":"3161","endLine":33,"endColumn":14,"suggestions":"3392"},{"ruleId":"3159","severity":1,"message":"3387","line":71,"column":6,"nodeType":"3161","endLine":71,"endColumn":8,"suggestions":"3393"},{"ruleId":"3153","severity":1,"message":"3383","line":72,"column":9,"nodeType":"3155","messageId":"3156","endLine":72,"endColumn":16},{"ruleId":"3153","severity":1,"message":"3394","line":76,"column":10,"nodeType":"3155","messageId":"3156","endLine":76,"endColumn":18},{"ruleId":"3159","severity":1,"message":"3387","line":27,"column":6,"nodeType":"3161","endLine":27,"endColumn":8,"suggestions":"3395"},{"ruleId":"3153","severity":1,"message":"3383","line":28,"column":9,"nodeType":"3155","messageId":"3156","endLine":28,"endColumn":16},{"ruleId":"3153","severity":1,"message":"3394","line":32,"column":10,"nodeType":"3155","messageId":"3156","endLine":32,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3376","line":2,"column":3,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":14},{"ruleId":"3153","severity":1,"message":"3396","line":5,"column":3,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":19},{"ruleId":"3153","severity":1,"message":"3397","line":9,"column":3,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3398","line":5,"column":3,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3399","line":10,"column":28,"nodeType":"3155","messageId":"3156","endLine":10,"endColumn":34},{"ruleId":"3153","severity":1,"message":"3400","line":27,"column":3,"nodeType":"3155","messageId":"3156","endLine":27,"endColumn":22},{"ruleId":"3159","severity":1,"message":"3401","line":51,"column":6,"nodeType":"3161","endLine":51,"endColumn":8,"suggestions":"3402"},{"ruleId":"3153","severity":1,"message":"3179","line":64,"column":10,"nodeType":"3155","messageId":"3156","endLine":64,"endColumn":16},{"ruleId":"3153","severity":1,"message":"3220","line":64,"column":18,"nodeType":"3155","messageId":"3156","endLine":64,"endColumn":27},{"ruleId":"3215","severity":1,"message":"3216","line":112,"column":21,"nodeType":"3217","messageId":"3218","endLine":112,"endColumn":28},{"ruleId":"3191","severity":1,"message":"3212","line":120,"column":47,"nodeType":"3165","messageId":"3193","endLine":120,"endColumn":49},{"ruleId":"3153","severity":1,"message":"3403","line":4,"column":3,"nodeType":"3155","messageId":"3156","endLine":4,"endColumn":24},{"ruleId":"3153","severity":1,"message":"3376","line":5,"column":3,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":14},{"ruleId":"3153","severity":1,"message":"3366","line":9,"column":3,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3399","line":12,"column":28,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":34},{"ruleId":"3153","severity":1,"message":"3378","line":23,"column":3,"nodeType":"3155","messageId":"3156","endLine":23,"endColumn":11},{"ruleId":"3153","severity":1,"message":"3404","line":36,"column":3,"nodeType":"3155","messageId":"3156","endLine":36,"endColumn":11},{"ruleId":"3159","severity":1,"message":"3401","line":74,"column":6,"nodeType":"3161","endLine":74,"endColumn":8,"suggestions":"3405"},{"ruleId":"3191","severity":1,"message":"3212","line":150,"column":47,"nodeType":"3165","messageId":"3193","endLine":150,"endColumn":49},{"ruleId":"3191","severity":1,"message":"3212","line":164,"column":47,"nodeType":"3165","messageId":"3193","endLine":164,"endColumn":49},{"ruleId":"3153","severity":1,"message":"3398","line":4,"column":3,"nodeType":"3155","messageId":"3156","endLine":4,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3399","line":8,"column":28,"nodeType":"3155","messageId":"3156","endLine":8,"endColumn":34},{"ruleId":"3153","severity":1,"message":"3406","line":14,"column":8,"nodeType":"3155","messageId":"3156","endLine":14,"endColumn":26},{"ruleId":"3153","severity":1,"message":"3378","line":18,"column":3,"nodeType":"3155","messageId":"3156","endLine":18,"endColumn":11},{"ruleId":"3153","severity":1,"message":"3404","line":22,"column":10,"nodeType":"3155","messageId":"3156","endLine":22,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3407","line":23,"column":10,"nodeType":"3155","messageId":"3156","endLine":23,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3179","line":49,"column":10,"nodeType":"3155","messageId":"3156","endLine":49,"endColumn":16},{"ruleId":"3153","severity":1,"message":"3220","line":49,"column":18,"nodeType":"3155","messageId":"3156","endLine":49,"endColumn":27},{"ruleId":"3153","severity":1,"message":"3408","line":54,"column":27,"nodeType":"3155","messageId":"3156","endLine":54,"endColumn":45},{"ruleId":"3215","severity":1,"message":"3216","line":73,"column":21,"nodeType":"3217","messageId":"3218","endLine":73,"endColumn":28},{"ruleId":"3191","severity":1,"message":"3212","line":81,"column":47,"nodeType":"3165","messageId":"3193","endLine":81,"endColumn":49},{"ruleId":"3153","severity":1,"message":"3210","line":2,"column":17,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3208","line":20,"column":10,"nodeType":"3155","messageId":"3156","endLine":20,"endColumn":20},{"ruleId":"3215","severity":1,"message":"3216","line":22,"column":21,"nodeType":"3217","messageId":"3218","endLine":22,"endColumn":28},{"ruleId":"3153","severity":1,"message":"3237","line":2,"column":10,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3238","line":2,"column":44,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":52},{"ruleId":"3153","severity":1,"message":"3409","line":3,"column":86,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":105},{"ruleId":"3153","severity":1,"message":"3170","line":1,"column":17,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":25},{"ruleId":"3153","severity":1,"message":"3410","line":2,"column":23,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":33},{"ruleId":"3153","severity":1,"message":"3343","line":3,"column":10,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":17},{"ruleId":"3153","severity":1,"message":"3398","line":2,"column":10,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":25},{"ruleId":"3153","severity":1,"message":"3398","line":2,"column":10,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":25},{"ruleId":"3153","severity":1,"message":"3411","line":1,"column":8,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3412","line":10,"column":3,"nodeType":"3155","messageId":"3156","endLine":10,"endColumn":26},{"ruleId":"3159","severity":1,"message":"3387","line":41,"column":6,"nodeType":"3161","endLine":41,"endColumn":8,"suggestions":"3413"},{"ruleId":"3153","severity":1,"message":"3210","line":2,"column":17,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3343","line":6,"column":3,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":10},{"ruleId":"3153","severity":1,"message":"3414","line":8,"column":3,"nodeType":"3155","messageId":"3156","endLine":8,"endColumn":9},{"ruleId":"3153","severity":1,"message":"3379","line":9,"column":3,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":12},{"ruleId":"3153","severity":1,"message":"3411","line":1,"column":8,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3415","line":8,"column":10,"nodeType":"3155","messageId":"3156","endLine":8,"endColumn":37},{"ruleId":"3153","severity":1,"message":"3386","line":23,"column":10,"nodeType":"3155","messageId":"3156","endLine":23,"endColumn":24},{"ruleId":"3159","severity":1,"message":"3387","line":41,"column":6,"nodeType":"3161","endLine":41,"endColumn":13,"suggestions":"3416"},{"ruleId":"3191","severity":1,"message":"3192","line":299,"column":53,"nodeType":"3165","messageId":"3193","endLine":299,"endColumn":55},{"ruleId":"3191","severity":1,"message":"3192","line":364,"column":51,"nodeType":"3165","messageId":"3193","endLine":364,"endColumn":53},{"ruleId":"3191","severity":1,"message":"3192","line":413,"column":39,"nodeType":"3165","messageId":"3193","endLine":413,"endColumn":41},{"ruleId":"3191","severity":1,"message":"3212","line":438,"column":33,"nodeType":"3165","messageId":"3193","endLine":438,"endColumn":35},{"ruleId":"3153","severity":1,"message":"3411","line":1,"column":8,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3371","line":2,"column":10,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":18},{"ruleId":"3159","severity":1,"message":"3387","line":29,"column":6,"nodeType":"3161","endLine":29,"endColumn":8,"suggestions":"3417"},{"ruleId":"3153","severity":1,"message":"3411","line":1,"column":8,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3418","line":2,"column":30,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":57},{"ruleId":"3153","severity":1,"message":"3419","line":2,"column":107,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":125},{"ruleId":"3153","severity":1,"message":"3420","line":9,"column":10,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":24},{"ruleId":"3159","severity":1,"message":"3387","line":27,"column":6,"nodeType":"3161","endLine":27,"endColumn":8,"suggestions":"3421"},{"ruleId":"3153","severity":1,"message":"3411","line":1,"column":8,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3422","line":3,"column":10,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":28},{"ruleId":"3153","severity":1,"message":"3423","line":6,"column":10,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":14},{"ruleId":"3153","severity":1,"message":"3378","line":14,"column":3,"nodeType":"3155","messageId":"3156","endLine":14,"endColumn":11},{"ruleId":"3159","severity":1,"message":"3387","line":36,"column":6,"nodeType":"3161","endLine":36,"endColumn":8,"suggestions":"3424"},{"ruleId":"3153","severity":1,"message":"3411","line":1,"column":8,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3422","line":2,"column":10,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":28},{"ruleId":"3153","severity":1,"message":"3423","line":5,"column":10,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":14},{"ruleId":"3159","severity":1,"message":"3387","line":27,"column":6,"nodeType":"3161","endLine":27,"endColumn":8,"suggestions":"3425"},{"ruleId":"3153","severity":1,"message":"3383","line":28,"column":9,"nodeType":"3155","messageId":"3156","endLine":28,"endColumn":16},{"ruleId":"3153","severity":1,"message":"3394","line":32,"column":10,"nodeType":"3155","messageId":"3156","endLine":32,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3411","line":1,"column":8,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3422","line":2,"column":10,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":28},{"ruleId":"3153","severity":1,"message":"3423","line":5,"column":10,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":14},{"ruleId":"3153","severity":1,"message":"3426","line":8,"column":10,"nodeType":"3155","messageId":"3156","endLine":8,"endColumn":39},{"ruleId":"3153","severity":1,"message":"3427","line":14,"column":8,"nodeType":"3155","messageId":"3156","endLine":14,"endColumn":21},{"ruleId":"3159","severity":1,"message":"3387","line":35,"column":6,"nodeType":"3161","endLine":35,"endColumn":8,"suggestions":"3428"},{"ruleId":"3153","severity":1,"message":"3411","line":1,"column":8,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":20},{"ruleId":"3159","severity":1,"message":"3387","line":28,"column":6,"nodeType":"3161","endLine":28,"endColumn":8,"suggestions":"3429"},{"ruleId":"3153","severity":1,"message":"3383","line":29,"column":9,"nodeType":"3155","messageId":"3156","endLine":29,"endColumn":16},{"ruleId":"3153","severity":1,"message":"3394","line":33,"column":10,"nodeType":"3155","messageId":"3156","endLine":33,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3411","line":1,"column":8,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":20},{"ruleId":"3159","severity":1,"message":"3387","line":27,"column":6,"nodeType":"3161","endLine":27,"endColumn":8,"suggestions":"3430"},{"ruleId":"3153","severity":1,"message":"3411","line":1,"column":8,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":20},{"ruleId":"3159","severity":1,"message":"3387","line":31,"column":6,"nodeType":"3161","endLine":31,"endColumn":8,"suggestions":"3431"},{"ruleId":"3153","severity":1,"message":"3383","line":32,"column":9,"nodeType":"3155","messageId":"3156","endLine":32,"endColumn":16},{"ruleId":"3153","severity":1,"message":"3394","line":36,"column":10,"nodeType":"3155","messageId":"3156","endLine":36,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3423","line":6,"column":10,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":14},{"ruleId":"3159","severity":1,"message":"3387","line":41,"column":6,"nodeType":"3161","endLine":41,"endColumn":8,"suggestions":"3432"},{"ruleId":"3153","severity":1,"message":"3433","line":104,"column":31,"nodeType":"3155","messageId":"3156","endLine":104,"endColumn":53},{"ruleId":"3153","severity":1,"message":"3423","line":6,"column":10,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":14},{"ruleId":"3159","severity":1,"message":"3434","line":37,"column":6,"nodeType":"3161","endLine":37,"endColumn":14,"suggestions":"3435"},{"ruleId":"3159","severity":1,"message":"3387","line":56,"column":6,"nodeType":"3161","endLine":56,"endColumn":8,"suggestions":"3436"},{"ruleId":"3215","severity":1,"message":"3216","line":109,"column":21,"nodeType":"3217","messageId":"3218","endLine":109,"endColumn":28},{"ruleId":"3191","severity":1,"message":"3212","line":118,"column":47,"nodeType":"3165","messageId":"3193","endLine":118,"endColumn":49},{"ruleId":"3215","severity":1,"message":"3216","line":151,"column":21,"nodeType":"3217","messageId":"3218","endLine":151,"endColumn":28},{"ruleId":"3153","severity":1,"message":"3437","line":3,"column":3,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":19},{"ruleId":"3153","severity":1,"message":"3438","line":5,"column":3,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3210","line":2,"column":17,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3208","line":20,"column":10,"nodeType":"3155","messageId":"3156","endLine":20,"endColumn":20},{"ruleId":"3215","severity":1,"message":"3216","line":22,"column":21,"nodeType":"3217","messageId":"3218","endLine":22,"endColumn":28},{"ruleId":"3153","severity":1,"message":"3403","line":4,"column":3,"nodeType":"3155","messageId":"3156","endLine":4,"endColumn":24},{"ruleId":"3153","severity":1,"message":"3398","line":5,"column":3,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3167","line":7,"column":3,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":17},{"ruleId":"3153","severity":1,"message":"3399","line":9,"column":28,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":34},{"ruleId":"3153","severity":1,"message":"3170","line":9,"column":36,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":44},{"ruleId":"3153","severity":1,"message":"3252","line":10,"column":23,"nodeType":"3155","messageId":"3156","endLine":10,"endColumn":34},{"ruleId":"3153","severity":1,"message":"3439","line":12,"column":8,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":17},{"ruleId":"3153","severity":1,"message":"3256","line":13,"column":10,"nodeType":"3155","messageId":"3156","endLine":13,"endColumn":19},{"ruleId":"3153","severity":1,"message":"3423","line":14,"column":10,"nodeType":"3155","messageId":"3156","endLine":14,"endColumn":14},{"ruleId":"3153","severity":1,"message":"3420","line":16,"column":3,"nodeType":"3155","messageId":"3156","endLine":16,"endColumn":17},{"ruleId":"3153","severity":1,"message":"3343","line":17,"column":3,"nodeType":"3155","messageId":"3156","endLine":17,"endColumn":10},{"ruleId":"3153","severity":1,"message":"3404","line":24,"column":3,"nodeType":"3155","messageId":"3156","endLine":24,"endColumn":11},{"ruleId":"3153","severity":1,"message":"3440","line":25,"column":3,"nodeType":"3155","messageId":"3156","endLine":25,"endColumn":26},{"ruleId":"3153","severity":1,"message":"3407","line":27,"column":10,"nodeType":"3155","messageId":"3156","endLine":27,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3441","line":2,"column":10,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":38},{"ruleId":"3153","severity":1,"message":"3442","line":2,"column":40,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":63},{"ruleId":"3153","severity":1,"message":"3371","line":1,"column":10,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3210","line":2,"column":17,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3343","line":6,"column":3,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":10},{"ruleId":"3153","severity":1,"message":"3414","line":7,"column":3,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":9},{"ruleId":"3153","severity":1,"message":"3379","line":8,"column":3,"nodeType":"3155","messageId":"3156","endLine":8,"endColumn":12},{"ruleId":"3153","severity":1,"message":"3371","line":10,"column":10,"nodeType":"3155","messageId":"3156","endLine":10,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3172","line":1,"column":17,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":26},{"ruleId":"3153","severity":1,"message":"3170","line":1,"column":28,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":36},{"ruleId":"3153","severity":1,"message":"3443","line":2,"column":10,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":15},{"ruleId":"3153","severity":1,"message":"3210","line":2,"column":17,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3343","line":6,"column":3,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":10},{"ruleId":"3153","severity":1,"message":"3414","line":7,"column":3,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":9},{"ruleId":"3153","severity":1,"message":"3371","line":10,"column":10,"nodeType":"3155","messageId":"3156","endLine":10,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3210","line":2,"column":17,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3343","line":4,"column":26,"nodeType":"3155","messageId":"3156","endLine":4,"endColumn":33},{"ruleId":"3153","severity":1,"message":"3414","line":4,"column":35,"nodeType":"3155","messageId":"3156","endLine":4,"endColumn":41},{"ruleId":"3153","severity":1,"message":"3371","line":5,"column":10,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3209","line":18,"column":22,"nodeType":"3155","messageId":"3156","endLine":18,"endColumn":35},{"ruleId":"3153","severity":1,"message":"3371","line":1,"column":10,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3236","line":2,"column":20,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":29},{"ruleId":"3153","severity":1,"message":"3411","line":1,"column":8,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3343","line":11,"column":3,"nodeType":"3155","messageId":"3156","endLine":11,"endColumn":10},{"ruleId":"3159","severity":1,"message":"3387","line":33,"column":6,"nodeType":"3161","endLine":33,"endColumn":8,"suggestions":"3444"},{"ruleId":"3153","severity":1,"message":"3411","line":1,"column":8,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3423","line":5,"column":10,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":14},{"ruleId":"3153","severity":1,"message":"3445","line":24,"column":10,"nodeType":"3155","messageId":"3156","endLine":24,"endColumn":22},{"ruleId":"3153","severity":1,"message":"3446","line":26,"column":9,"nodeType":"3155","messageId":"3156","endLine":26,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3447","line":30,"column":10,"nodeType":"3155","messageId":"3156","endLine":30,"endColumn":26},{"ruleId":"3153","severity":1,"message":"3448","line":30,"column":28,"nodeType":"3155","messageId":"3156","endLine":30,"endColumn":47},{"ruleId":"3153","severity":1,"message":"3210","line":2,"column":17,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3414","line":4,"column":35,"nodeType":"3155","messageId":"3156","endLine":4,"endColumn":41},{"ruleId":"3153","severity":1,"message":"3371","line":5,"column":10,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":18},{"ruleId":"3215","severity":1,"message":"3216","line":20,"column":21,"nodeType":"3217","messageId":"3218","endLine":20,"endColumn":28},{"ruleId":"3191","severity":1,"message":"3212","line":28,"column":47,"nodeType":"3165","messageId":"3193","endLine":28,"endColumn":49},{"ruleId":"3153","severity":1,"message":"3371","line":1,"column":10,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3236","line":2,"column":20,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":29},{"ruleId":"3153","severity":1,"message":"3411","line":1,"column":8,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3449","line":2,"column":10,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":22},{"ruleId":"3153","severity":1,"message":"3422","line":4,"column":3,"nodeType":"3155","messageId":"3156","endLine":4,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3450","line":5,"column":3,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3377","line":6,"column":3,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":27},{"ruleId":"3153","severity":1,"message":"3252","line":11,"column":23,"nodeType":"3155","messageId":"3156","endLine":11,"endColumn":34},{"ruleId":"3153","severity":1,"message":"3385","line":13,"column":10,"nodeType":"3155","messageId":"3156","endLine":13,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3407","line":14,"column":10,"nodeType":"3155","messageId":"3156","endLine":14,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3426","line":16,"column":3,"nodeType":"3155","messageId":"3156","endLine":16,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3378","line":26,"column":3,"nodeType":"3155","messageId":"3156","endLine":26,"endColumn":11},{"ruleId":"3153","severity":1,"message":"3451","line":33,"column":7,"nodeType":"3155","messageId":"3156","endLine":33,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3178","line":36,"column":9,"nodeType":"3155","messageId":"3156","endLine":36,"endColumn":17},{"ruleId":"3159","severity":1,"message":"3452","line":39,"column":6,"nodeType":"3161","endLine":39,"endColumn":16,"suggestions":"3453"},{"ruleId":"3153","severity":1,"message":"3454","line":55,"column":10,"nodeType":"3155","messageId":"3156","endLine":55,"endColumn":24},{"ruleId":"3153","severity":1,"message":"3455","line":55,"column":26,"nodeType":"3155","messageId":"3156","endLine":55,"endColumn":43},{"ruleId":"3159","severity":1,"message":"3456","line":149,"column":6,"nodeType":"3161","endLine":149,"endColumn":16,"suggestions":"3457"},{"ruleId":"3153","severity":1,"message":"3458","line":152,"column":9,"nodeType":"3155","messageId":"3156","endLine":152,"endColumn":19},{"ruleId":"3159","severity":1,"message":"3459","line":164,"column":5,"nodeType":"3161","endLine":164,"endColumn":38,"suggestions":"3460"},{"ruleId":"3159","severity":1,"message":"3461","line":275,"column":5,"nodeType":"3161","endLine":275,"endColumn":19,"suggestions":"3462"},{"ruleId":"3159","severity":1,"message":"3463","line":433,"column":6,"nodeType":"3161","endLine":433,"endColumn":57,"suggestions":"3464"},{"ruleId":"3153","severity":1,"message":"3210","line":2,"column":17,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3343","line":8,"column":3,"nodeType":"3155","messageId":"3156","endLine":8,"endColumn":10},{"ruleId":"3153","severity":1,"message":"3414","line":9,"column":3,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":9},{"ruleId":"3153","severity":1,"message":"3379","line":10,"column":3,"nodeType":"3155","messageId":"3156","endLine":10,"endColumn":12},{"ruleId":"3153","severity":1,"message":"3371","line":12,"column":10,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3465","line":18,"column":5,"nodeType":"3155","messageId":"3156","endLine":18,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3208","line":32,"column":10,"nodeType":"3155","messageId":"3156","endLine":32,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3209","line":32,"column":22,"nodeType":"3155","messageId":"3156","endLine":32,"endColumn":35},{"ruleId":"3153","severity":1,"message":"3371","line":1,"column":10,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3210","line":2,"column":17,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3466","line":5,"column":3,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":8},{"ruleId":"3153","severity":1,"message":"3467","line":7,"column":3,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":9},{"ruleId":"3153","severity":1,"message":"3414","line":9,"column":3,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":9},{"ruleId":"3153","severity":1,"message":"3371","line":12,"column":10,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":18},{"ruleId":"3159","severity":1,"message":"3468","line":29,"column":6,"nodeType":"3161","endLine":29,"endColumn":27,"suggestions":"3469"},{"ruleId":"3215","severity":1,"message":"3216","line":41,"column":21,"nodeType":"3217","messageId":"3218","endLine":41,"endColumn":28},{"ruleId":"3191","severity":1,"message":"3212","line":51,"column":47,"nodeType":"3165","messageId":"3193","endLine":51,"endColumn":49},{"ruleId":"3153","severity":1,"message":"3449","line":2,"column":10,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":22},{"ruleId":"3153","severity":1,"message":"3422","line":3,"column":10,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":28},{"ruleId":"3153","severity":1,"message":"3450","line":3,"column":30,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":50},{"ruleId":"3153","severity":1,"message":"3423","line":7,"column":10,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":14},{"ruleId":"3153","severity":1,"message":"3385","line":8,"column":10,"nodeType":"3155","messageId":"3156","endLine":8,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3407","line":9,"column":10,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3426","line":11,"column":3,"nodeType":"3155","messageId":"3156","endLine":11,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3470","line":12,"column":3,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3471","line":15,"column":3,"nodeType":"3155","messageId":"3156","endLine":15,"endColumn":25},{"ruleId":"3153","severity":1,"message":"3466","line":20,"column":3,"nodeType":"3155","messageId":"3156","endLine":20,"endColumn":8},{"ruleId":"3153","severity":1,"message":"3420","line":21,"column":3,"nodeType":"3155","messageId":"3156","endLine":21,"endColumn":17},{"ruleId":"3153","severity":1,"message":"3467","line":22,"column":3,"nodeType":"3155","messageId":"3156","endLine":22,"endColumn":9},{"ruleId":"3153","severity":1,"message":"3378","line":23,"column":3,"nodeType":"3155","messageId":"3156","endLine":23,"endColumn":11},{"ruleId":"3153","severity":1,"message":"3414","line":24,"column":3,"nodeType":"3155","messageId":"3156","endLine":24,"endColumn":9},{"ruleId":"3153","severity":1,"message":"3178","line":32,"column":9,"nodeType":"3155","messageId":"3156","endLine":32,"endColumn":17},{"ruleId":"3153","severity":1,"message":"3472","line":38,"column":29,"nodeType":"3155","messageId":"3156","endLine":38,"endColumn":49},{"ruleId":"3153","severity":1,"message":"3449","line":2,"column":10,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":22},{"ruleId":"3153","severity":1,"message":"3422","line":3,"column":10,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":28},{"ruleId":"3153","severity":1,"message":"3450","line":3,"column":30,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":50},{"ruleId":"3153","severity":1,"message":"3423","line":7,"column":10,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":14},{"ruleId":"3153","severity":1,"message":"3385","line":8,"column":10,"nodeType":"3155","messageId":"3156","endLine":8,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3407","line":9,"column":10,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3426","line":11,"column":3,"nodeType":"3155","messageId":"3156","endLine":11,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3470","line":12,"column":3,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3466","line":17,"column":3,"nodeType":"3155","messageId":"3156","endLine":17,"endColumn":8},{"ruleId":"3153","severity":1,"message":"3420","line":18,"column":3,"nodeType":"3155","messageId":"3156","endLine":18,"endColumn":17},{"ruleId":"3153","severity":1,"message":"3467","line":19,"column":3,"nodeType":"3155","messageId":"3156","endLine":19,"endColumn":9},{"ruleId":"3153","severity":1,"message":"3378","line":20,"column":3,"nodeType":"3155","messageId":"3156","endLine":20,"endColumn":11},{"ruleId":"3153","severity":1,"message":"3414","line":21,"column":3,"nodeType":"3155","messageId":"3156","endLine":21,"endColumn":9},{"ruleId":"3153","severity":1,"message":"3178","line":29,"column":9,"nodeType":"3155","messageId":"3156","endLine":29,"endColumn":17},{"ruleId":"3153","severity":1,"message":"3472","line":35,"column":29,"nodeType":"3155","messageId":"3156","endLine":35,"endColumn":49},{"ruleId":"3153","severity":1,"message":"3411","line":1,"column":8,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3449","line":2,"column":10,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":22},{"ruleId":"3153","severity":1,"message":"3422","line":3,"column":10,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":28},{"ruleId":"3153","severity":1,"message":"3450","line":3,"column":30,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":50},{"ruleId":"3153","severity":1,"message":"3423","line":7,"column":10,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":14},{"ruleId":"3153","severity":1,"message":"3385","line":8,"column":10,"nodeType":"3155","messageId":"3156","endLine":8,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3407","line":9,"column":10,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3426","line":11,"column":3,"nodeType":"3155","messageId":"3156","endLine":11,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3470","line":12,"column":3,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3466","line":16,"column":3,"nodeType":"3155","messageId":"3156","endLine":16,"endColumn":8},{"ruleId":"3153","severity":1,"message":"3420","line":17,"column":3,"nodeType":"3155","messageId":"3156","endLine":17,"endColumn":17},{"ruleId":"3153","severity":1,"message":"3467","line":18,"column":3,"nodeType":"3155","messageId":"3156","endLine":18,"endColumn":9},{"ruleId":"3153","severity":1,"message":"3378","line":19,"column":3,"nodeType":"3155","messageId":"3156","endLine":19,"endColumn":11},{"ruleId":"3153","severity":1,"message":"3414","line":20,"column":3,"nodeType":"3155","messageId":"3156","endLine":20,"endColumn":9},{"ruleId":"3153","severity":1,"message":"3379","line":21,"column":3,"nodeType":"3155","messageId":"3156","endLine":21,"endColumn":12},{"ruleId":"3153","severity":1,"message":"3473","line":22,"column":3,"nodeType":"3155","messageId":"3156","endLine":22,"endColumn":15},{"ruleId":"3153","severity":1,"message":"3178","line":27,"column":9,"nodeType":"3155","messageId":"3156","endLine":27,"endColumn":17},{"ruleId":"3153","severity":1,"message":"3411","line":1,"column":8,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3422","line":3,"column":3,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3438","line":5,"column":3,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3423","line":9,"column":10,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":14},{"ruleId":"3153","severity":1,"message":"3426","line":12,"column":10,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":39},{"ruleId":"3153","severity":1,"message":"3474","line":15,"column":3,"nodeType":"3155","messageId":"3156","endLine":15,"endColumn":29},{"ruleId":"3153","severity":1,"message":"3475","line":16,"column":3,"nodeType":"3155","messageId":"3156","endLine":16,"endColumn":27},{"ruleId":"3153","severity":1,"message":"3420","line":18,"column":10,"nodeType":"3155","messageId":"3156","endLine":18,"endColumn":24},{"ruleId":"3159","severity":1,"message":"3387","line":37,"column":6,"nodeType":"3161","endLine":37,"endColumn":8,"suggestions":"3476"},{"ruleId":"3153","severity":1,"message":"3449","line":2,"column":10,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":22},{"ruleId":"3153","severity":1,"message":"3422","line":3,"column":10,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":28},{"ruleId":"3153","severity":1,"message":"3450","line":3,"column":30,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":50},{"ruleId":"3153","severity":1,"message":"3423","line":7,"column":10,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":14},{"ruleId":"3153","severity":1,"message":"3385","line":8,"column":10,"nodeType":"3155","messageId":"3156","endLine":8,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3407","line":9,"column":10,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3426","line":12,"column":3,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3470","line":13,"column":3,"nodeType":"3155","messageId":"3156","endLine":13,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3466","line":19,"column":3,"nodeType":"3155","messageId":"3156","endLine":19,"endColumn":8},{"ruleId":"3153","severity":1,"message":"3420","line":20,"column":3,"nodeType":"3155","messageId":"3156","endLine":20,"endColumn":17},{"ruleId":"3153","severity":1,"message":"3467","line":21,"column":3,"nodeType":"3155","messageId":"3156","endLine":21,"endColumn":9},{"ruleId":"3153","severity":1,"message":"3378","line":22,"column":3,"nodeType":"3155","messageId":"3156","endLine":22,"endColumn":11},{"ruleId":"3153","severity":1,"message":"3414","line":23,"column":3,"nodeType":"3155","messageId":"3156","endLine":23,"endColumn":9},{"ruleId":"3153","severity":1,"message":"3178","line":33,"column":9,"nodeType":"3155","messageId":"3156","endLine":33,"endColumn":17},{"ruleId":"3153","severity":1,"message":"3472","line":40,"column":29,"nodeType":"3155","messageId":"3156","endLine":40,"endColumn":49},{"ruleId":"3153","severity":1,"message":"3477","line":63,"column":9,"nodeType":"3155","messageId":"3156","endLine":63,"endColumn":25},{"ruleId":"3153","severity":1,"message":"3371","line":1,"column":10,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3371","line":1,"column":10,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3478","line":6,"column":3,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":25},{"ruleId":"3153","severity":1,"message":"3479","line":7,"column":3,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":29},{"ruleId":"3153","severity":1,"message":"3480","line":10,"column":3,"nodeType":"3155","messageId":"3156","endLine":10,"endColumn":29},{"ruleId":"3153","severity":1,"message":"3481","line":12,"column":3,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":27},{"ruleId":"3153","severity":1,"message":"3371","line":1,"column":10,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3478","line":3,"column":97,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":119},{"ruleId":"3153","severity":1,"message":"3479","line":3,"column":121,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":147},{"ruleId":"3153","severity":1,"message":"3480","line":3,"column":211,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":237},{"ruleId":"3153","severity":1,"message":"3481","line":3,"column":239,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":263},{"ruleId":"3153","severity":1,"message":"3210","line":2,"column":17,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3466","line":5,"column":3,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":8},{"ruleId":"3153","severity":1,"message":"3467","line":7,"column":3,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":9},{"ruleId":"3153","severity":1,"message":"3414","line":9,"column":3,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":9},{"ruleId":"3153","severity":1,"message":"3371","line":14,"column":10,"nodeType":"3155","messageId":"3156","endLine":14,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3482","line":25,"column":5,"nodeType":"3155","messageId":"3156","endLine":25,"endColumn":15},{"ruleId":"3153","severity":1,"message":"3483","line":35,"column":10,"nodeType":"3155","messageId":"3156","endLine":35,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3484","line":36,"column":21,"nodeType":"3155","messageId":"3156","endLine":36,"endColumn":33},{"ruleId":"3153","severity":1,"message":"3208","line":37,"column":10,"nodeType":"3155","messageId":"3156","endLine":37,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3485","line":39,"column":9,"nodeType":"3155","messageId":"3156","endLine":39,"endColumn":23},{"ruleId":"3215","severity":1,"message":"3216","line":40,"column":21,"nodeType":"3217","messageId":"3218","endLine":40,"endColumn":28},{"ruleId":"3153","severity":1,"message":"3371","line":4,"column":3,"nodeType":"3155","messageId":"3156","endLine":4,"endColumn":11},{"ruleId":"3153","severity":1,"message":"3486","line":11,"column":3,"nodeType":"3155","messageId":"3156","endLine":11,"endColumn":25},{"ruleId":"3153","severity":1,"message":"3487","line":12,"column":3,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3252","line":15,"column":23,"nodeType":"3155","messageId":"3156","endLine":15,"endColumn":34},{"ruleId":"3153","severity":1,"message":"3423","line":16,"column":10,"nodeType":"3155","messageId":"3156","endLine":16,"endColumn":14},{"ruleId":"3153","severity":1,"message":"3488","line":20,"column":3,"nodeType":"3155","messageId":"3156","endLine":20,"endColumn":30},{"ruleId":"3153","severity":1,"message":"3489","line":21,"column":3,"nodeType":"3155","messageId":"3156","endLine":21,"endColumn":27},{"ruleId":"3153","severity":1,"message":"3490","line":28,"column":3,"nodeType":"3155","messageId":"3156","endLine":28,"endColumn":30},{"ruleId":"3153","severity":1,"message":"3491","line":29,"column":3,"nodeType":"3155","messageId":"3156","endLine":29,"endColumn":25},{"ruleId":"3153","severity":1,"message":"3492","line":30,"column":3,"nodeType":"3155","messageId":"3156","endLine":30,"endColumn":26},{"ruleId":"3153","severity":1,"message":"3493","line":31,"column":3,"nodeType":"3155","messageId":"3156","endLine":31,"endColumn":24},{"ruleId":"3153","severity":1,"message":"3494","line":32,"column":3,"nodeType":"3155","messageId":"3156","endLine":32,"endColumn":23},{"ruleId":"3159","severity":1,"message":"3387","line":61,"column":6,"nodeType":"3161","endLine":61,"endColumn":8,"suggestions":"3495"},{"ruleId":"3215","severity":1,"message":"3216","line":114,"column":21,"nodeType":"3217","messageId":"3218","endLine":114,"endColumn":28},{"ruleId":"3153","severity":1,"message":"3371","line":1,"column":10,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3496","line":4,"column":9,"nodeType":"3155","messageId":"3156","endLine":4,"endColumn":36},{"ruleId":"3153","severity":1,"message":"3497","line":4,"column":107,"nodeType":"3155","messageId":"3156","endLine":4,"endColumn":131},{"ruleId":"3153","severity":1,"message":"3371","line":5,"column":3,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":11},{"ruleId":"3153","severity":1,"message":"3498","line":6,"column":3,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":16},{"ruleId":"3153","severity":1,"message":"3499","line":7,"column":3,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":22},{"ruleId":"3153","severity":1,"message":"3500","line":8,"column":3,"nodeType":"3155","messageId":"3156","endLine":8,"endColumn":25},{"ruleId":"3153","severity":1,"message":"3419","line":13,"column":3,"nodeType":"3155","messageId":"3156","endLine":13,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3486","line":14,"column":3,"nodeType":"3155","messageId":"3156","endLine":14,"endColumn":25},{"ruleId":"3153","severity":1,"message":"3487","line":15,"column":3,"nodeType":"3155","messageId":"3156","endLine":15,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3252","line":18,"column":23,"nodeType":"3155","messageId":"3156","endLine":18,"endColumn":34},{"ruleId":"3153","severity":1,"message":"3423","line":19,"column":10,"nodeType":"3155","messageId":"3156","endLine":19,"endColumn":14},{"ruleId":"3153","severity":1,"message":"3488","line":23,"column":3,"nodeType":"3155","messageId":"3156","endLine":23,"endColumn":30},{"ruleId":"3153","severity":1,"message":"3489","line":24,"column":3,"nodeType":"3155","messageId":"3156","endLine":24,"endColumn":27},{"ruleId":"3153","severity":1,"message":"3501","line":29,"column":3,"nodeType":"3155","messageId":"3156","endLine":29,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3490","line":32,"column":3,"nodeType":"3155","messageId":"3156","endLine":32,"endColumn":30},{"ruleId":"3153","severity":1,"message":"3491","line":33,"column":3,"nodeType":"3155","messageId":"3156","endLine":33,"endColumn":25},{"ruleId":"3153","severity":1,"message":"3492","line":34,"column":3,"nodeType":"3155","messageId":"3156","endLine":34,"endColumn":26},{"ruleId":"3153","severity":1,"message":"3493","line":35,"column":3,"nodeType":"3155","messageId":"3156","endLine":35,"endColumn":24},{"ruleId":"3153","severity":1,"message":"3494","line":36,"column":3,"nodeType":"3155","messageId":"3156","endLine":36,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3420","line":40,"column":3,"nodeType":"3155","messageId":"3156","endLine":40,"endColumn":17},{"ruleId":"3159","severity":1,"message":"3387","line":65,"column":6,"nodeType":"3161","endLine":65,"endColumn":8,"suggestions":"3502"},{"ruleId":"3153","severity":1,"message":"3394","line":73,"column":10,"nodeType":"3155","messageId":"3156","endLine":73,"endColumn":18},{"ruleId":"3215","severity":1,"message":"3216","line":119,"column":21,"nodeType":"3217","messageId":"3218","endLine":119,"endColumn":28},{"ruleId":"3153","severity":1,"message":"3371","line":1,"column":10,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3503","line":3,"column":32,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":53},{"ruleId":"3153","severity":1,"message":"3504","line":3,"column":55,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":82},{"ruleId":"3153","severity":1,"message":"3210","line":2,"column":17,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3466","line":5,"column":3,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":8},{"ruleId":"3153","severity":1,"message":"3343","line":8,"column":3,"nodeType":"3155","messageId":"3156","endLine":8,"endColumn":10},{"ruleId":"3153","severity":1,"message":"3414","line":9,"column":3,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":9},{"ruleId":"3153","severity":1,"message":"3379","line":10,"column":3,"nodeType":"3155","messageId":"3156","endLine":10,"endColumn":12},{"ruleId":"3153","severity":1,"message":"3371","line":12,"column":10,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3483","line":36,"column":10,"nodeType":"3155","messageId":"3156","endLine":36,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3505","line":36,"column":25,"nodeType":"3155","messageId":"3156","endLine":36,"endColumn":41},{"ruleId":"3153","severity":1,"message":"3371","line":1,"column":10,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3411","line":1,"column":8,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3506","line":2,"column":10,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3423","line":5,"column":10,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":14},{"ruleId":"3159","severity":1,"message":"3387","line":29,"column":6,"nodeType":"3161","endLine":29,"endColumn":8,"suggestions":"3507"},{"ruleId":"3153","severity":1,"message":"3394","line":35,"column":10,"nodeType":"3155","messageId":"3156","endLine":35,"endColumn":18},{"ruleId":"3215","severity":1,"message":"3216","line":62,"column":21,"nodeType":"3217","messageId":"3218","endLine":62,"endColumn":28},{"ruleId":"3191","severity":1,"message":"3212","line":70,"column":47,"nodeType":"3165","messageId":"3193","endLine":70,"endColumn":49},{"ruleId":"3153","severity":1,"message":"3508","line":2,"column":10,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":22},{"ruleId":"3153","severity":1,"message":"3506","line":4,"column":3,"nodeType":"3155","messageId":"3156","endLine":4,"endColumn":25},{"ruleId":"3153","severity":1,"message":"3423","line":9,"column":10,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":14},{"ruleId":"3153","severity":1,"message":"3509","line":15,"column":3,"nodeType":"3155","messageId":"3156","endLine":15,"endColumn":33},{"ruleId":"3153","severity":1,"message":"3510","line":16,"column":3,"nodeType":"3155","messageId":"3156","endLine":16,"endColumn":22},{"ruleId":"3153","severity":1,"message":"3511","line":22,"column":3,"nodeType":"3155","messageId":"3156","endLine":22,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3512","line":28,"column":3,"nodeType":"3155","messageId":"3156","endLine":28,"endColumn":18},{"ruleId":"3159","severity":1,"message":"3513","line":46,"column":6,"nodeType":"3161","endLine":46,"endColumn":24,"suggestions":"3514"},{"ruleId":"3159","severity":1,"message":"3387","line":103,"column":6,"nodeType":"3161","endLine":103,"endColumn":16,"suggestions":"3515"},{"ruleId":"3153","severity":1,"message":"3383","line":104,"column":9,"nodeType":"3155","messageId":"3156","endLine":104,"endColumn":16},{"ruleId":"3153","severity":1,"message":"3472","line":138,"column":29,"nodeType":"3155","messageId":"3156","endLine":138,"endColumn":49},{"ruleId":"3215","severity":1,"message":"3216","line":152,"column":21,"nodeType":"3217","messageId":"3218","endLine":152,"endColumn":28},{"ruleId":"3191","severity":1,"message":"3212","line":159,"column":47,"nodeType":"3165","messageId":"3193","endLine":159,"endColumn":49},{"ruleId":"3153","severity":1,"message":"3449","line":2,"column":10,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":22},{"ruleId":"3153","severity":1,"message":"3422","line":4,"column":3,"nodeType":"3155","messageId":"3156","endLine":4,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3450","line":5,"column":3,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3506","line":6,"column":3,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":25},{"ruleId":"3153","severity":1,"message":"3385","line":12,"column":10,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3407","line":13,"column":10,"nodeType":"3155","messageId":"3156","endLine":13,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3426","line":15,"column":3,"nodeType":"3155","messageId":"3156","endLine":15,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3470","line":16,"column":3,"nodeType":"3155","messageId":"3156","endLine":16,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3466","line":21,"column":3,"nodeType":"3155","messageId":"3156","endLine":21,"endColumn":8},{"ruleId":"3153","severity":1,"message":"3420","line":22,"column":3,"nodeType":"3155","messageId":"3156","endLine":22,"endColumn":17},{"ruleId":"3153","severity":1,"message":"3467","line":23,"column":3,"nodeType":"3155","messageId":"3156","endLine":23,"endColumn":9},{"ruleId":"3153","severity":1,"message":"3378","line":24,"column":3,"nodeType":"3155","messageId":"3156","endLine":24,"endColumn":11},{"ruleId":"3153","severity":1,"message":"3414","line":25,"column":3,"nodeType":"3155","messageId":"3156","endLine":25,"endColumn":9},{"ruleId":"3153","severity":1,"message":"3512","line":29,"column":3,"nodeType":"3155","messageId":"3156","endLine":29,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3178","line":34,"column":9,"nodeType":"3155","messageId":"3156","endLine":34,"endColumn":17},{"ruleId":"3153","severity":1,"message":"3472","line":40,"column":29,"nodeType":"3155","messageId":"3156","endLine":40,"endColumn":49},{"ruleId":"3153","severity":1,"message":"3477","line":46,"column":9,"nodeType":"3155","messageId":"3156","endLine":46,"endColumn":25},{"ruleId":"3153","severity":1,"message":"3411","line":1,"column":8,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3422","line":5,"column":3,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3438","line":7,"column":3,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3516","line":11,"column":20,"nodeType":"3155","messageId":"3156","endLine":11,"endColumn":30},{"ruleId":"3153","severity":1,"message":"3423","line":12,"column":10,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":14},{"ruleId":"3153","severity":1,"message":"3407","line":14,"column":10,"nodeType":"3155","messageId":"3156","endLine":14,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3420","line":15,"column":10,"nodeType":"3155","messageId":"3156","endLine":15,"endColumn":24},{"ruleId":"3153","severity":1,"message":"3379","line":15,"column":26,"nodeType":"3155","messageId":"3156","endLine":15,"endColumn":35},{"ruleId":"3153","severity":1,"message":"3473","line":15,"column":37,"nodeType":"3155","messageId":"3156","endLine":15,"endColumn":49},{"ruleId":"3517","severity":1,"message":"3518","line":23,"column":3,"nodeType":"3519","messageId":"3520","endLine":32,"endColumn":5},{"ruleId":"3517","severity":1,"message":"3518","line":33,"column":3,"nodeType":"3521","messageId":"3520","endLine":36,"endColumn":10},{"ruleId":"3159","severity":1,"message":"3522","line":36,"column":6,"nodeType":"3161","endLine":36,"endColumn":8,"suggestions":"3523"},{"ruleId":"3517","severity":1,"message":"3518","line":38,"column":3,"nodeType":"3519","messageId":"3520","endLine":43,"endColumn":28},{"ruleId":"3153","severity":1,"message":"3524","line":42,"column":20,"nodeType":"3155","messageId":"3156","endLine":42,"endColumn":31},{"ruleId":"3517","severity":1,"message":"3518","line":45,"column":3,"nodeType":"3525","messageId":"3520","endLine":70,"endColumn":5},{"ruleId":"3153","severity":1,"message":"3449","line":2,"column":10,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":22},{"ruleId":"3153","severity":1,"message":"3422","line":3,"column":10,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":28},{"ruleId":"3153","severity":1,"message":"3450","line":3,"column":30,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":50},{"ruleId":"3153","severity":1,"message":"3423","line":7,"column":10,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":14},{"ruleId":"3153","severity":1,"message":"3385","line":8,"column":10,"nodeType":"3155","messageId":"3156","endLine":8,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3407","line":9,"column":10,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3426","line":11,"column":3,"nodeType":"3155","messageId":"3156","endLine":11,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3470","line":12,"column":3,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3466","line":17,"column":3,"nodeType":"3155","messageId":"3156","endLine":17,"endColumn":8},{"ruleId":"3153","severity":1,"message":"3420","line":18,"column":3,"nodeType":"3155","messageId":"3156","endLine":18,"endColumn":17},{"ruleId":"3153","severity":1,"message":"3467","line":19,"column":3,"nodeType":"3155","messageId":"3156","endLine":19,"endColumn":9},{"ruleId":"3153","severity":1,"message":"3378","line":20,"column":3,"nodeType":"3155","messageId":"3156","endLine":20,"endColumn":11},{"ruleId":"3153","severity":1,"message":"3414","line":21,"column":3,"nodeType":"3155","messageId":"3156","endLine":21,"endColumn":9},{"ruleId":"3153","severity":1,"message":"3178","line":29,"column":9,"nodeType":"3155","messageId":"3156","endLine":29,"endColumn":17},{"ruleId":"3153","severity":1,"message":"3472","line":36,"column":29,"nodeType":"3155","messageId":"3156","endLine":36,"endColumn":49},{"ruleId":"3153","severity":1,"message":"3477","line":40,"column":9,"nodeType":"3155","messageId":"3156","endLine":40,"endColumn":25},{"ruleId":"3153","severity":1,"message":"3385","line":5,"column":10,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3373","line":24,"column":9,"nodeType":"3155","messageId":"3156","endLine":24,"endColumn":20},{"ruleId":"3159","severity":1,"message":"3526","line":64,"column":6,"nodeType":"3161","endLine":64,"endColumn":8,"suggestions":"3527"},{"ruleId":"3153","severity":1,"message":"3172","line":1,"column":17,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":26},{"ruleId":"3153","severity":1,"message":"3170","line":1,"column":28,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":36},{"ruleId":"3153","severity":1,"message":"3367","line":2,"column":10,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3385","line":4,"column":10,"nodeType":"3155","messageId":"3156","endLine":4,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3528","line":9,"column":3,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3529","line":11,"column":3,"nodeType":"3155","messageId":"3156","endLine":11,"endColumn":22},{"ruleId":"3153","severity":1,"message":"3466","line":13,"column":10,"nodeType":"3155","messageId":"3156","endLine":13,"endColumn":15},{"ruleId":"3153","severity":1,"message":"3420","line":13,"column":17,"nodeType":"3155","messageId":"3156","endLine":13,"endColumn":31},{"ruleId":"3153","severity":1,"message":"3376","line":3,"column":3,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":14},{"ruleId":"3153","severity":1,"message":"3487","line":5,"column":3,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3377","line":6,"column":3,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":27},{"ruleId":"3153","severity":1,"message":"3170","line":8,"column":28,"nodeType":"3155","messageId":"3156","endLine":8,"endColumn":36},{"ruleId":"3153","severity":1,"message":"3467","line":15,"column":3,"nodeType":"3155","messageId":"3156","endLine":15,"endColumn":9},{"ruleId":"3153","severity":1,"message":"3378","line":16,"column":3,"nodeType":"3155","messageId":"3156","endLine":16,"endColumn":11},{"ruleId":"3153","severity":1,"message":"3379","line":17,"column":3,"nodeType":"3155","messageId":"3156","endLine":17,"endColumn":12},{"ruleId":"3153","severity":1,"message":"3380","line":18,"column":3,"nodeType":"3155","messageId":"3156","endLine":18,"endColumn":14},{"ruleId":"3153","severity":1,"message":"3381","line":29,"column":9,"nodeType":"3155","messageId":"3156","endLine":29,"endColumn":15},{"ruleId":"3153","severity":1,"message":"3382","line":43,"column":9,"nodeType":"3155","messageId":"3156","endLine":43,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3383","line":64,"column":9,"nodeType":"3155","messageId":"3156","endLine":64,"endColumn":16},{"ruleId":"3153","severity":1,"message":"3376","line":16,"column":3,"nodeType":"3155","messageId":"3156","endLine":16,"endColumn":14},{"ruleId":"3153","severity":1,"message":"3411","line":1,"column":8,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3422","line":5,"column":3,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3530","line":6,"column":3,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3438","line":7,"column":3,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3423","line":11,"column":10,"nodeType":"3155","messageId":"3156","endLine":11,"endColumn":14},{"ruleId":"3153","severity":1,"message":"3531","line":15,"column":10,"nodeType":"3155","messageId":"3156","endLine":15,"endColumn":36},{"ruleId":"3153","severity":1,"message":"3420","line":16,"column":10,"nodeType":"3155","messageId":"3156","endLine":16,"endColumn":24},{"ruleId":"3159","severity":1,"message":"3387","line":34,"column":6,"nodeType":"3161","endLine":34,"endColumn":8,"suggestions":"3532"},{"ruleId":"3153","severity":1,"message":"3383","line":35,"column":9,"nodeType":"3155","messageId":"3156","endLine":35,"endColumn":16},{"ruleId":"3153","severity":1,"message":"3449","line":2,"column":10,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":22},{"ruleId":"3153","severity":1,"message":"3422","line":3,"column":10,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":28},{"ruleId":"3153","severity":1,"message":"3450","line":3,"column":30,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":50},{"ruleId":"3153","severity":1,"message":"3367","line":6,"column":10,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3423","line":7,"column":10,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":14},{"ruleId":"3153","severity":1,"message":"3385","line":9,"column":10,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3407","line":10,"column":10,"nodeType":"3155","messageId":"3156","endLine":10,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3426","line":12,"column":3,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3470","line":13,"column":3,"nodeType":"3155","messageId":"3156","endLine":13,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3471","line":15,"column":10,"nodeType":"3155","messageId":"3156","endLine":15,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3420","line":20,"column":3,"nodeType":"3155","messageId":"3156","endLine":20,"endColumn":17},{"ruleId":"3153","severity":1,"message":"3378","line":22,"column":3,"nodeType":"3155","messageId":"3156","endLine":22,"endColumn":11},{"ruleId":"3153","severity":1,"message":"3414","line":23,"column":3,"nodeType":"3155","messageId":"3156","endLine":23,"endColumn":9},{"ruleId":"3153","severity":1,"message":"3512","line":27,"column":3,"nodeType":"3155","messageId":"3156","endLine":27,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3533","line":29,"column":78,"nodeType":"3155","messageId":"3156","endLine":29,"endColumn":100},{"ruleId":"3153","severity":1,"message":"3534","line":44,"column":10,"nodeType":"3155","messageId":"3156","endLine":44,"endColumn":17},{"ruleId":"3153","severity":1,"message":"3535","line":44,"column":19,"nodeType":"3155","messageId":"3156","endLine":44,"endColumn":29},{"ruleId":"3159","severity":1,"message":"3456","line":76,"column":6,"nodeType":"3161","endLine":76,"endColumn":8,"suggestions":"3536"},{"ruleId":"3159","severity":1,"message":"3537","line":98,"column":5,"nodeType":"3161","endLine":98,"endColumn":38,"suggestions":"3538"},{"ruleId":"3159","severity":1,"message":"3539","line":246,"column":5,"nodeType":"3161","endLine":246,"endColumn":19,"suggestions":"3540"},{"ruleId":"3159","severity":1,"message":"3541","line":347,"column":6,"nodeType":"3161","endLine":347,"endColumn":41,"suggestions":"3542"},{"ruleId":"3153","severity":1,"message":"3371","line":1,"column":10,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3543","line":2,"column":10,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":19},{"ruleId":"3153","severity":1,"message":"3544","line":4,"column":9,"nodeType":"3155","messageId":"3156","endLine":4,"endColumn":33},{"ruleId":"3153","severity":1,"message":"3545","line":4,"column":141,"nodeType":"3155","messageId":"3156","endLine":4,"endColumn":164},{"ruleId":"3153","severity":1,"message":"3546","line":4,"column":166,"nodeType":"3155","messageId":"3156","endLine":4,"endColumn":197},{"ruleId":"3153","severity":1,"message":"3236","line":1,"column":20,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":29},{"ruleId":"3153","severity":1,"message":"3547","line":2,"column":30,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":56},{"ruleId":"3153","severity":1,"message":"3441","line":2,"column":81,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":109},{"ruleId":"3153","severity":1,"message":"3442","line":2,"column":111,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":134},{"ruleId":"3153","severity":1,"message":"3548","line":2,"column":136,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":157},{"ruleId":"3153","severity":1,"message":"3210","line":2,"column":17,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3466","line":5,"column":3,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":8},{"ruleId":"3153","severity":1,"message":"3467","line":7,"column":3,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":9},{"ruleId":"3153","severity":1,"message":"3414","line":9,"column":3,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":9},{"ruleId":"3153","severity":1,"message":"3379","line":10,"column":3,"nodeType":"3155","messageId":"3156","endLine":10,"endColumn":12},{"ruleId":"3153","severity":1,"message":"3371","line":12,"column":10,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":18},{"ruleId":"3159","severity":1,"message":"3468","line":30,"column":6,"nodeType":"3161","endLine":30,"endColumn":27,"suggestions":"3549"},{"ruleId":"3153","severity":1,"message":"3483","line":35,"column":10,"nodeType":"3155","messageId":"3156","endLine":35,"endColumn":23},{"ruleId":"3215","severity":1,"message":"3216","line":40,"column":21,"nodeType":"3217","messageId":"3218","endLine":40,"endColumn":28},{"ruleId":"3191","severity":1,"message":"3212","line":48,"column":47,"nodeType":"3165","messageId":"3193","endLine":48,"endColumn":49},{"ruleId":"3153","severity":1,"message":"3210","line":2,"column":17,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3467","line":7,"column":3,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":9},{"ruleId":"3153","severity":1,"message":"3414","line":9,"column":3,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":9},{"ruleId":"3153","severity":1,"message":"3379","line":10,"column":3,"nodeType":"3155","messageId":"3156","endLine":10,"endColumn":12},{"ruleId":"3153","severity":1,"message":"3371","line":12,"column":10,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":18},{"ruleId":"3159","severity":1,"message":"3468","line":32,"column":6,"nodeType":"3161","endLine":32,"endColumn":39,"suggestions":"3550"},{"ruleId":"3153","severity":1,"message":"3483","line":42,"column":10,"nodeType":"3155","messageId":"3156","endLine":42,"endColumn":23},{"ruleId":"3215","severity":1,"message":"3216","line":47,"column":21,"nodeType":"3217","messageId":"3218","endLine":47,"endColumn":28},{"ruleId":"3191","severity":1,"message":"3212","line":57,"column":47,"nodeType":"3165","messageId":"3193","endLine":57,"endColumn":49},{"ruleId":"3153","severity":1,"message":"3411","line":1,"column":8,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3551","line":5,"column":3,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3422","line":6,"column":3,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3530","line":7,"column":3,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3438","line":8,"column":3,"nodeType":"3155","messageId":"3156","endLine":8,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3423","line":12,"column":10,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":14},{"ruleId":"3153","severity":1,"message":"3420","line":16,"column":10,"nodeType":"3155","messageId":"3156","endLine":16,"endColumn":24},{"ruleId":"3159","severity":1,"message":"3387","line":34,"column":6,"nodeType":"3161","endLine":34,"endColumn":8,"suggestions":"3552"},{"ruleId":"3153","severity":1,"message":"3383","line":35,"column":9,"nodeType":"3155","messageId":"3156","endLine":35,"endColumn":16},{"ruleId":"3153","severity":1,"message":"3411","line":1,"column":8,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3449","line":2,"column":10,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":22},{"ruleId":"3153","severity":1,"message":"3422","line":3,"column":10,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":28},{"ruleId":"3153","severity":1,"message":"3450","line":3,"column":30,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":50},{"ruleId":"3153","severity":1,"message":"3367","line":6,"column":10,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3423","line":7,"column":10,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":14},{"ruleId":"3153","severity":1,"message":"3385","line":9,"column":10,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3407","line":10,"column":10,"nodeType":"3155","messageId":"3156","endLine":10,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3426","line":12,"column":3,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3470","line":13,"column":3,"nodeType":"3155","messageId":"3156","endLine":13,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3471","line":15,"column":10,"nodeType":"3155","messageId":"3156","endLine":15,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3420","line":19,"column":3,"nodeType":"3155","messageId":"3156","endLine":19,"endColumn":17},{"ruleId":"3153","severity":1,"message":"3467","line":20,"column":3,"nodeType":"3155","messageId":"3156","endLine":20,"endColumn":9},{"ruleId":"3153","severity":1,"message":"3378","line":21,"column":3,"nodeType":"3155","messageId":"3156","endLine":21,"endColumn":11},{"ruleId":"3153","severity":1,"message":"3414","line":22,"column":3,"nodeType":"3155","messageId":"3156","endLine":22,"endColumn":9},{"ruleId":"3153","severity":1,"message":"3379","line":23,"column":3,"nodeType":"3155","messageId":"3156","endLine":23,"endColumn":12},{"ruleId":"3153","severity":1,"message":"3553","line":25,"column":3,"nodeType":"3155","messageId":"3156","endLine":25,"endColumn":16},{"ruleId":"3153","severity":1,"message":"3512","line":26,"column":3,"nodeType":"3155","messageId":"3156","endLine":26,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3554","line":31,"column":3,"nodeType":"3155","messageId":"3156","endLine":31,"endColumn":29},{"ruleId":"3153","severity":1,"message":"3555","line":32,"column":3,"nodeType":"3155","messageId":"3156","endLine":32,"endColumn":25},{"ruleId":"3153","severity":1,"message":"3556","line":33,"column":3,"nodeType":"3155","messageId":"3156","endLine":33,"endColumn":27},{"ruleId":"3153","severity":1,"message":"3557","line":37,"column":9,"nodeType":"3155","messageId":"3156","endLine":37,"endColumn":22},{"ruleId":"3153","severity":1,"message":"3394","line":38,"column":11,"nodeType":"3155","messageId":"3156","endLine":38,"endColumn":19},{"ruleId":"3153","severity":1,"message":"3534","line":40,"column":10,"nodeType":"3155","messageId":"3156","endLine":40,"endColumn":17},{"ruleId":"3153","severity":1,"message":"3535","line":40,"column":19,"nodeType":"3155","messageId":"3156","endLine":40,"endColumn":29},{"ruleId":"3153","severity":1,"message":"3558","line":47,"column":10,"nodeType":"3155","messageId":"3156","endLine":47,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3559","line":47,"column":20,"nodeType":"3155","messageId":"3156","endLine":47,"endColumn":31},{"ruleId":"3159","severity":1,"message":"3456","line":71,"column":6,"nodeType":"3161","endLine":71,"endColumn":8,"suggestions":"3560"},{"ruleId":"3159","severity":1,"message":"3561","line":93,"column":5,"nodeType":"3161","endLine":93,"endColumn":38,"suggestions":"3562"},{"ruleId":"3159","severity":1,"message":"3461","line":139,"column":5,"nodeType":"3161","endLine":139,"endColumn":19,"suggestions":"3563"},{"ruleId":"3159","severity":1,"message":"3564","line":178,"column":6,"nodeType":"3161","endLine":178,"endColumn":41,"suggestions":"3565"},{"ruleId":"3153","severity":1,"message":"3411","line":1,"column":8,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3551","line":5,"column":3,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3422","line":6,"column":3,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3530","line":7,"column":3,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3438","line":8,"column":3,"nodeType":"3155","messageId":"3156","endLine":8,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3423","line":12,"column":10,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":14},{"ruleId":"3153","severity":1,"message":"3420","line":16,"column":10,"nodeType":"3155","messageId":"3156","endLine":16,"endColumn":24},{"ruleId":"3159","severity":1,"message":"3387","line":34,"column":6,"nodeType":"3161","endLine":34,"endColumn":8,"suggestions":"3566"},{"ruleId":"3153","severity":1,"message":"3383","line":35,"column":9,"nodeType":"3155","messageId":"3156","endLine":35,"endColumn":16},{"ruleId":"3153","severity":1,"message":"3449","line":2,"column":10,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":22},{"ruleId":"3153","severity":1,"message":"3422","line":3,"column":10,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":28},{"ruleId":"3153","severity":1,"message":"3450","line":3,"column":30,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":50},{"ruleId":"3153","severity":1,"message":"3367","line":6,"column":10,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3423","line":7,"column":10,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":14},{"ruleId":"3153","severity":1,"message":"3385","line":9,"column":10,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3407","line":10,"column":10,"nodeType":"3155","messageId":"3156","endLine":10,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3426","line":12,"column":3,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3470","line":13,"column":3,"nodeType":"3155","messageId":"3156","endLine":13,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3471","line":15,"column":10,"nodeType":"3155","messageId":"3156","endLine":15,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3420","line":19,"column":3,"nodeType":"3155","messageId":"3156","endLine":19,"endColumn":17},{"ruleId":"3153","severity":1,"message":"3467","line":20,"column":3,"nodeType":"3155","messageId":"3156","endLine":20,"endColumn":9},{"ruleId":"3153","severity":1,"message":"3378","line":21,"column":3,"nodeType":"3155","messageId":"3156","endLine":21,"endColumn":11},{"ruleId":"3153","severity":1,"message":"3414","line":22,"column":3,"nodeType":"3155","messageId":"3156","endLine":22,"endColumn":9},{"ruleId":"3153","severity":1,"message":"3512","line":26,"column":3,"nodeType":"3155","messageId":"3156","endLine":26,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3554","line":31,"column":3,"nodeType":"3155","messageId":"3156","endLine":31,"endColumn":29},{"ruleId":"3153","severity":1,"message":"3555","line":32,"column":3,"nodeType":"3155","messageId":"3156","endLine":32,"endColumn":25},{"ruleId":"3153","severity":1,"message":"3556","line":33,"column":3,"nodeType":"3155","messageId":"3156","endLine":33,"endColumn":27},{"ruleId":"3153","severity":1,"message":"3394","line":40,"column":11,"nodeType":"3155","messageId":"3156","endLine":40,"endColumn":19},{"ruleId":"3153","severity":1,"message":"3534","line":42,"column":10,"nodeType":"3155","messageId":"3156","endLine":42,"endColumn":17},{"ruleId":"3153","severity":1,"message":"3535","line":42,"column":19,"nodeType":"3155","messageId":"3156","endLine":42,"endColumn":29},{"ruleId":"3153","severity":1,"message":"3558","line":49,"column":10,"nodeType":"3155","messageId":"3156","endLine":49,"endColumn":18},{"ruleId":"3159","severity":1,"message":"3456","line":73,"column":6,"nodeType":"3161","endLine":73,"endColumn":8,"suggestions":"3567"},{"ruleId":"3159","severity":1,"message":"3561","line":95,"column":5,"nodeType":"3161","endLine":95,"endColumn":38,"suggestions":"3568"},{"ruleId":"3159","severity":1,"message":"3539","line":191,"column":5,"nodeType":"3161","endLine":191,"endColumn":19,"suggestions":"3569"},{"ruleId":"3153","severity":1,"message":"3570","line":208,"column":11,"nodeType":"3155","messageId":"3156","endLine":208,"endColumn":27},{"ruleId":"3159","severity":1,"message":"3541","line":233,"column":6,"nodeType":"3161","endLine":233,"endColumn":41,"suggestions":"3571"},{"ruleId":"3153","severity":1,"message":"3411","line":1,"column":8,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3551","line":4,"column":3,"nodeType":"3155","messageId":"3156","endLine":4,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3422","line":6,"column":3,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3530","line":7,"column":3,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3438","line":8,"column":3,"nodeType":"3155","messageId":"3156","endLine":8,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3423","line":12,"column":10,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":14},{"ruleId":"3153","severity":1,"message":"3420","line":16,"column":10,"nodeType":"3155","messageId":"3156","endLine":16,"endColumn":24},{"ruleId":"3159","severity":1,"message":"3387","line":34,"column":6,"nodeType":"3161","endLine":34,"endColumn":8,"suggestions":"3572"},{"ruleId":"3153","severity":1,"message":"3383","line":35,"column":9,"nodeType":"3155","messageId":"3156","endLine":35,"endColumn":16},{"ruleId":"3153","severity":1,"message":"3449","line":2,"column":10,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":22},{"ruleId":"3153","severity":1,"message":"3422","line":3,"column":10,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":28},{"ruleId":"3153","severity":1,"message":"3450","line":3,"column":30,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":50},{"ruleId":"3153","severity":1,"message":"3367","line":6,"column":10,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3423","line":7,"column":10,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":14},{"ruleId":"3153","severity":1,"message":"3385","line":9,"column":10,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3407","line":10,"column":10,"nodeType":"3155","messageId":"3156","endLine":10,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3426","line":12,"column":3,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3470","line":13,"column":3,"nodeType":"3155","messageId":"3156","endLine":13,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3471","line":15,"column":10,"nodeType":"3155","messageId":"3156","endLine":15,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3420","line":19,"column":3,"nodeType":"3155","messageId":"3156","endLine":19,"endColumn":17},{"ruleId":"3153","severity":1,"message":"3378","line":21,"column":3,"nodeType":"3155","messageId":"3156","endLine":21,"endColumn":11},{"ruleId":"3153","severity":1,"message":"3414","line":22,"column":3,"nodeType":"3155","messageId":"3156","endLine":22,"endColumn":9},{"ruleId":"3153","severity":1,"message":"3512","line":26,"column":3,"nodeType":"3155","messageId":"3156","endLine":26,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3554","line":34,"column":3,"nodeType":"3155","messageId":"3156","endLine":34,"endColumn":29},{"ruleId":"3153","severity":1,"message":"3555","line":35,"column":3,"nodeType":"3155","messageId":"3156","endLine":35,"endColumn":25},{"ruleId":"3153","severity":1,"message":"3556","line":36,"column":3,"nodeType":"3155","messageId":"3156","endLine":36,"endColumn":27},{"ruleId":"3153","severity":1,"message":"3394","line":42,"column":11,"nodeType":"3155","messageId":"3156","endLine":42,"endColumn":19},{"ruleId":"3153","severity":1,"message":"3534","line":44,"column":10,"nodeType":"3155","messageId":"3156","endLine":44,"endColumn":17},{"ruleId":"3153","severity":1,"message":"3535","line":44,"column":19,"nodeType":"3155","messageId":"3156","endLine":44,"endColumn":29},{"ruleId":"3159","severity":1,"message":"3456","line":76,"column":6,"nodeType":"3161","endLine":76,"endColumn":8,"suggestions":"3573"},{"ruleId":"3159","severity":1,"message":"3574","line":98,"column":5,"nodeType":"3161","endLine":98,"endColumn":38,"suggestions":"3575"},{"ruleId":"3159","severity":1,"message":"3539","line":249,"column":5,"nodeType":"3161","endLine":249,"endColumn":19,"suggestions":"3576"},{"ruleId":"3159","severity":1,"message":"3577","line":321,"column":6,"nodeType":"3161","endLine":321,"endColumn":41,"suggestions":"3578"},{"ruleId":"3153","severity":1,"message":"3411","line":1,"column":8,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3551","line":5,"column":3,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3422","line":6,"column":3,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3530","line":7,"column":3,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3438","line":8,"column":3,"nodeType":"3155","messageId":"3156","endLine":8,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3423","line":12,"column":10,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":14},{"ruleId":"3153","severity":1,"message":"3420","line":16,"column":10,"nodeType":"3155","messageId":"3156","endLine":16,"endColumn":24},{"ruleId":"3159","severity":1,"message":"3387","line":34,"column":6,"nodeType":"3161","endLine":34,"endColumn":8,"suggestions":"3579"},{"ruleId":"3153","severity":1,"message":"3383","line":35,"column":9,"nodeType":"3155","messageId":"3156","endLine":35,"endColumn":16},{"ruleId":"3153","severity":1,"message":"3449","line":2,"column":10,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":22},{"ruleId":"3153","severity":1,"message":"3422","line":3,"column":10,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":28},{"ruleId":"3153","severity":1,"message":"3450","line":3,"column":30,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":50},{"ruleId":"3153","severity":1,"message":"3367","line":6,"column":10,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3385","line":9,"column":10,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3407","line":10,"column":10,"nodeType":"3155","messageId":"3156","endLine":10,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3426","line":12,"column":3,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3470","line":13,"column":3,"nodeType":"3155","messageId":"3156","endLine":13,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3471","line":15,"column":10,"nodeType":"3155","messageId":"3156","endLine":15,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3466","line":18,"column":3,"nodeType":"3155","messageId":"3156","endLine":18,"endColumn":8},{"ruleId":"3153","severity":1,"message":"3420","line":19,"column":3,"nodeType":"3155","messageId":"3156","endLine":19,"endColumn":17},{"ruleId":"3153","severity":1,"message":"3467","line":20,"column":3,"nodeType":"3155","messageId":"3156","endLine":20,"endColumn":9},{"ruleId":"3153","severity":1,"message":"3378","line":21,"column":3,"nodeType":"3155","messageId":"3156","endLine":21,"endColumn":11},{"ruleId":"3153","severity":1,"message":"3414","line":22,"column":3,"nodeType":"3155","messageId":"3156","endLine":22,"endColumn":9},{"ruleId":"3153","severity":1,"message":"3512","line":26,"column":3,"nodeType":"3155","messageId":"3156","endLine":26,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3580","line":28,"column":53,"nodeType":"3155","messageId":"3156","endLine":28,"endColumn":73},{"ruleId":"3153","severity":1,"message":"3557","line":36,"column":9,"nodeType":"3155","messageId":"3156","endLine":36,"endColumn":22},{"ruleId":"3153","severity":1,"message":"3394","line":37,"column":11,"nodeType":"3155","messageId":"3156","endLine":37,"endColumn":19},{"ruleId":"3153","severity":1,"message":"3534","line":39,"column":10,"nodeType":"3155","messageId":"3156","endLine":39,"endColumn":17},{"ruleId":"3153","severity":1,"message":"3535","line":39,"column":19,"nodeType":"3155","messageId":"3156","endLine":39,"endColumn":29},{"ruleId":"3159","severity":1,"message":"3456","line":71,"column":6,"nodeType":"3161","endLine":71,"endColumn":8,"suggestions":"3581"},{"ruleId":"3153","severity":1,"message":"3582","line":83,"column":9,"nodeType":"3155","messageId":"3156","endLine":83,"endColumn":21},{"ruleId":"3159","severity":1,"message":"3583","line":93,"column":5,"nodeType":"3161","endLine":93,"endColumn":38,"suggestions":"3584"},{"ruleId":"3159","severity":1,"message":"3585","line":237,"column":6,"nodeType":"3161","endLine":237,"endColumn":41,"suggestions":"3586"},{"ruleId":"3153","severity":1,"message":"3587","line":242,"column":10,"nodeType":"3155","messageId":"3156","endLine":242,"endColumn":30},{"ruleId":"3153","severity":1,"message":"3588","line":243,"column":9,"nodeType":"3155","messageId":"3156","endLine":243,"endColumn":30},{"ruleId":"3153","severity":1,"message":"3589","line":247,"column":9,"nodeType":"3155","messageId":"3156","endLine":247,"endColumn":26},{"ruleId":"3153","severity":1,"message":"3590","line":267,"column":10,"nodeType":"3155","messageId":"3156","endLine":267,"endColumn":27},{"ruleId":"3153","severity":1,"message":"3591","line":268,"column":9,"nodeType":"3155","messageId":"3156","endLine":268,"endColumn":24},{"ruleId":"3153","severity":1,"message":"3592","line":272,"column":9,"nodeType":"3155","messageId":"3156","endLine":272,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3593","line":299,"column":9,"nodeType":"3155","messageId":"3156","endLine":299,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3411","line":1,"column":8,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3594","line":5,"column":3,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":26},{"ruleId":"3153","severity":1,"message":"3595","line":6,"column":3,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3551","line":7,"column":3,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3422","line":8,"column":3,"nodeType":"3155","messageId":"3156","endLine":8,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3530","line":9,"column":3,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3438","line":10,"column":3,"nodeType":"3155","messageId":"3156","endLine":10,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3420","line":18,"column":10,"nodeType":"3155","messageId":"3156","endLine":18,"endColumn":24},{"ruleId":"3159","severity":1,"message":"3387","line":36,"column":6,"nodeType":"3161","endLine":36,"endColumn":8,"suggestions":"3596"},{"ruleId":"3153","severity":1,"message":"3383","line":37,"column":9,"nodeType":"3155","messageId":"3156","endLine":37,"endColumn":16},{"ruleId":"3153","severity":1,"message":"3449","line":2,"column":10,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":22},{"ruleId":"3153","severity":1,"message":"3594","line":3,"column":10,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":33},{"ruleId":"3153","severity":1,"message":"3422","line":3,"column":35,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":53},{"ruleId":"3153","severity":1,"message":"3450","line":3,"column":55,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":75},{"ruleId":"3153","severity":1,"message":"3367","line":6,"column":10,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3423","line":7,"column":10,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":14},{"ruleId":"3153","severity":1,"message":"3385","line":9,"column":10,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3407","line":10,"column":10,"nodeType":"3155","messageId":"3156","endLine":10,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3426","line":12,"column":3,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3470","line":13,"column":3,"nodeType":"3155","messageId":"3156","endLine":13,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3471","line":15,"column":10,"nodeType":"3155","messageId":"3156","endLine":15,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3466","line":18,"column":3,"nodeType":"3155","messageId":"3156","endLine":18,"endColumn":8},{"ruleId":"3153","severity":1,"message":"3420","line":19,"column":3,"nodeType":"3155","messageId":"3156","endLine":19,"endColumn":17},{"ruleId":"3153","severity":1,"message":"3467","line":20,"column":3,"nodeType":"3155","messageId":"3156","endLine":20,"endColumn":9},{"ruleId":"3153","severity":1,"message":"3378","line":21,"column":3,"nodeType":"3155","messageId":"3156","endLine":21,"endColumn":11},{"ruleId":"3153","severity":1,"message":"3414","line":22,"column":3,"nodeType":"3155","messageId":"3156","endLine":22,"endColumn":9},{"ruleId":"3153","severity":1,"message":"3512","line":26,"column":3,"nodeType":"3155","messageId":"3156","endLine":26,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3597","line":31,"column":3,"nodeType":"3155","messageId":"3156","endLine":31,"endColumn":24},{"ruleId":"3153","severity":1,"message":"3580","line":32,"column":3,"nodeType":"3155","messageId":"3156","endLine":32,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3554","line":35,"column":3,"nodeType":"3155","messageId":"3156","endLine":35,"endColumn":29},{"ruleId":"3153","severity":1,"message":"3555","line":36,"column":3,"nodeType":"3155","messageId":"3156","endLine":36,"endColumn":25},{"ruleId":"3153","severity":1,"message":"3556","line":37,"column":3,"nodeType":"3155","messageId":"3156","endLine":37,"endColumn":27},{"ruleId":"3153","severity":1,"message":"3557","line":44,"column":9,"nodeType":"3155","messageId":"3156","endLine":44,"endColumn":22},{"ruleId":"3153","severity":1,"message":"3394","line":45,"column":11,"nodeType":"3155","messageId":"3156","endLine":45,"endColumn":19},{"ruleId":"3153","severity":1,"message":"3534","line":47,"column":10,"nodeType":"3155","messageId":"3156","endLine":47,"endColumn":17},{"ruleId":"3153","severity":1,"message":"3535","line":47,"column":19,"nodeType":"3155","messageId":"3156","endLine":47,"endColumn":29},{"ruleId":"3153","severity":1,"message":"3598","line":54,"column":20,"nodeType":"3155","messageId":"3156","endLine":54,"endColumn":31},{"ruleId":"3159","severity":1,"message":"3456","line":79,"column":6,"nodeType":"3161","endLine":79,"endColumn":8,"suggestions":"3599"},{"ruleId":"3153","severity":1,"message":"3582","line":91,"column":9,"nodeType":"3155","messageId":"3156","endLine":91,"endColumn":21},{"ruleId":"3159","severity":1,"message":"3583","line":101,"column":5,"nodeType":"3161","endLine":101,"endColumn":38,"suggestions":"3600"},{"ruleId":"3159","severity":1,"message":"3564","line":210,"column":6,"nodeType":"3161","endLine":210,"endColumn":41,"suggestions":"3601"},{"ruleId":"3153","severity":1,"message":"3602","line":217,"column":10,"nodeType":"3155","messageId":"3156","endLine":217,"endColumn":25},{"ruleId":"3153","severity":1,"message":"3371","line":1,"column":10,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3603","line":1,"column":20,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3287","line":2,"column":10,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3604","line":3,"column":39,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":65},{"ruleId":"3153","severity":1,"message":"3547","line":3,"column":67,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":93},{"ruleId":"3153","severity":1,"message":"3605","line":3,"column":95,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":117},{"ruleId":"3153","severity":1,"message":"3606","line":3,"column":119,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":143},{"ruleId":"3153","severity":1,"message":"3545","line":3,"column":145,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":168},{"ruleId":"3153","severity":1,"message":"3546","line":3,"column":170,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":201},{"ruleId":"3153","severity":1,"message":"3371","line":1,"column":10,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3603","line":1,"column":20,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3287","line":3,"column":10,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3607","line":4,"column":39,"nodeType":"3155","messageId":"3156","endLine":4,"endColumn":67},{"ruleId":"3153","severity":1,"message":"3604","line":4,"column":69,"nodeType":"3155","messageId":"3156","endLine":4,"endColumn":95},{"ruleId":"3153","severity":1,"message":"3547","line":4,"column":97,"nodeType":"3155","messageId":"3156","endLine":4,"endColumn":123},{"ruleId":"3153","severity":1,"message":"3605","line":4,"column":125,"nodeType":"3155","messageId":"3156","endLine":4,"endColumn":147},{"ruleId":"3153","severity":1,"message":"3606","line":4,"column":149,"nodeType":"3155","messageId":"3156","endLine":4,"endColumn":173},{"ruleId":"3153","severity":1,"message":"3545","line":4,"column":175,"nodeType":"3155","messageId":"3156","endLine":4,"endColumn":198},{"ruleId":"3153","severity":1,"message":"3546","line":4,"column":200,"nodeType":"3155","messageId":"3156","endLine":4,"endColumn":231},{"ruleId":"3153","severity":1,"message":"3411","line":1,"column":8,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3508","line":2,"column":10,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":22},{"ruleId":"3153","severity":1,"message":"3608","line":6,"column":3,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":28},{"ruleId":"3153","severity":1,"message":"3506","line":7,"column":3,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":25},{"ruleId":"3153","severity":1,"message":"3609","line":8,"column":3,"nodeType":"3155","messageId":"3156","endLine":8,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3423","line":12,"column":10,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":14},{"ruleId":"3153","severity":1,"message":"3610","line":20,"column":3,"nodeType":"3155","messageId":"3156","endLine":20,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3611","line":21,"column":3,"nodeType":"3155","messageId":"3156","endLine":21,"endColumn":34},{"ruleId":"3153","severity":1,"message":"3509","line":22,"column":3,"nodeType":"3155","messageId":"3156","endLine":22,"endColumn":33},{"ruleId":"3153","severity":1,"message":"3510","line":23,"column":3,"nodeType":"3155","messageId":"3156","endLine":23,"endColumn":22},{"ruleId":"3153","severity":1,"message":"3612","line":24,"column":3,"nodeType":"3155","messageId":"3156","endLine":24,"endColumn":29},{"ruleId":"3153","severity":1,"message":"3511","line":29,"column":3,"nodeType":"3155","messageId":"3156","endLine":29,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3512","line":35,"column":3,"nodeType":"3155","messageId":"3156","endLine":35,"endColumn":18},{"ruleId":"3159","severity":1,"message":"3513","line":53,"column":6,"nodeType":"3161","endLine":53,"endColumn":24,"suggestions":"3613"},{"ruleId":"3159","severity":1,"message":"3387","line":111,"column":6,"nodeType":"3161","endLine":111,"endColumn":16,"suggestions":"3614"},{"ruleId":"3153","severity":1,"message":"3383","line":112,"column":9,"nodeType":"3155","messageId":"3156","endLine":112,"endColumn":16},{"ruleId":"3153","severity":1,"message":"3615","line":147,"column":10,"nodeType":"3155","messageId":"3156","endLine":147,"endColumn":27},{"ruleId":"3153","severity":1,"message":"3472","line":147,"column":29,"nodeType":"3155","messageId":"3156","endLine":147,"endColumn":49},{"ruleId":"3153","severity":1,"message":"3616","line":150,"column":10,"nodeType":"3155","messageId":"3156","endLine":150,"endColumn":26},{"ruleId":"3153","severity":1,"message":"3617","line":150,"column":28,"nodeType":"3155","messageId":"3156","endLine":150,"endColumn":47},{"ruleId":"3153","severity":1,"message":"3618","line":159,"column":10,"nodeType":"3155","messageId":"3156","endLine":159,"endColumn":23},{"ruleId":"3215","severity":1,"message":"3216","line":162,"column":21,"nodeType":"3217","messageId":"3218","endLine":162,"endColumn":28},{"ruleId":"3191","severity":1,"message":"3212","line":169,"column":47,"nodeType":"3165","messageId":"3193","endLine":169,"endColumn":49},{"ruleId":"3153","severity":1,"message":"3371","line":1,"column":10,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3236","line":2,"column":20,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":29},{"ruleId":"3153","severity":1,"message":"3619","line":6,"column":3,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3620","line":7,"column":3,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":22},{"ruleId":"3153","severity":1,"message":"3621","line":8,"column":3,"nodeType":"3155","messageId":"3156","endLine":8,"endColumn":33},{"ruleId":"3153","severity":1,"message":"3622","line":9,"column":3,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":33},{"ruleId":"3153","severity":1,"message":"3623","line":10,"column":3,"nodeType":"3155","messageId":"3156","endLine":10,"endColumn":22},{"ruleId":"3153","severity":1,"message":"3624","line":11,"column":3,"nodeType":"3155","messageId":"3156","endLine":11,"endColumn":29},{"ruleId":"3153","severity":1,"message":"3411","line":1,"column":8,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3594","line":5,"column":3,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":26},{"ruleId":"3153","severity":1,"message":"3595","line":6,"column":3,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3551","line":7,"column":3,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3422","line":8,"column":3,"nodeType":"3155","messageId":"3156","endLine":8,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3530","line":9,"column":3,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3438","line":10,"column":3,"nodeType":"3155","messageId":"3156","endLine":10,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3423","line":14,"column":10,"nodeType":"3155","messageId":"3156","endLine":14,"endColumn":14},{"ruleId":"3153","severity":1,"message":"3625","line":17,"column":10,"nodeType":"3155","messageId":"3156","endLine":17,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3343","line":22,"column":3,"nodeType":"3155","messageId":"3156","endLine":22,"endColumn":10},{"ruleId":"3153","severity":1,"message":"3626","line":27,"column":20,"nodeType":"3155","messageId":"3156","endLine":27,"endColumn":35},{"ruleId":"3159","severity":1,"message":"3434","line":44,"column":8,"nodeType":"3161","endLine":44,"endColumn":24,"suggestions":"3627"},{"ruleId":"3159","severity":1,"message":"3387","line":64,"column":6,"nodeType":"3161","endLine":64,"endColumn":8,"suggestions":"3628"},{"ruleId":"3191","severity":1,"message":"3212","line":98,"column":47,"nodeType":"3165","messageId":"3193","endLine":98,"endColumn":49},{"ruleId":"3191","severity":1,"message":"3212","line":106,"column":47,"nodeType":"3165","messageId":"3193","endLine":106,"endColumn":49},{"ruleId":"3215","severity":1,"message":"3216","line":115,"column":21,"nodeType":"3217","messageId":"3218","endLine":115,"endColumn":28},{"ruleId":"3153","severity":1,"message":"3371","line":1,"column":10,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3236","line":2,"column":20,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":29},{"ruleId":"3153","severity":1,"message":"3629","line":6,"column":3,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":34},{"ruleId":"3153","severity":1,"message":"3630","line":8,"column":3,"nodeType":"3155","messageId":"3156","endLine":8,"endColumn":30},{"ruleId":"3153","severity":1,"message":"3619","line":9,"column":3,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3620","line":10,"column":3,"nodeType":"3155","messageId":"3156","endLine":10,"endColumn":22},{"ruleId":"3153","severity":1,"message":"3621","line":11,"column":3,"nodeType":"3155","messageId":"3156","endLine":11,"endColumn":33},{"ruleId":"3153","severity":1,"message":"3622","line":12,"column":3,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":33},{"ruleId":"3153","severity":1,"message":"3623","line":13,"column":3,"nodeType":"3155","messageId":"3156","endLine":13,"endColumn":22},{"ruleId":"3153","severity":1,"message":"3624","line":14,"column":3,"nodeType":"3155","messageId":"3156","endLine":14,"endColumn":29},{"ruleId":"3153","severity":1,"message":"3411","line":1,"column":8,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3631","line":2,"column":8,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":22},{"ruleId":"3153","severity":1,"message":"3487","line":6,"column":3,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3252","line":9,"column":23,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":34},{"ruleId":"3153","severity":1,"message":"3423","line":10,"column":10,"nodeType":"3155","messageId":"3156","endLine":10,"endColumn":14},{"ruleId":"3153","severity":1,"message":"3531","line":15,"column":10,"nodeType":"3155","messageId":"3156","endLine":15,"endColumn":36},{"ruleId":"3153","severity":1,"message":"3491","line":17,"column":3,"nodeType":"3155","messageId":"3156","endLine":17,"endColumn":25},{"ruleId":"3153","severity":1,"message":"3492","line":18,"column":3,"nodeType":"3155","messageId":"3156","endLine":18,"endColumn":26},{"ruleId":"3153","severity":1,"message":"3493","line":19,"column":3,"nodeType":"3155","messageId":"3156","endLine":19,"endColumn":24},{"ruleId":"3153","severity":1,"message":"3494","line":20,"column":3,"nodeType":"3155","messageId":"3156","endLine":20,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3420","line":24,"column":3,"nodeType":"3155","messageId":"3156","endLine":24,"endColumn":17},{"ruleId":"3159","severity":1,"message":"3387","line":45,"column":6,"nodeType":"3161","endLine":45,"endColumn":8,"suggestions":"3632"},{"ruleId":"3153","severity":1,"message":"3394","line":50,"column":10,"nodeType":"3155","messageId":"3156","endLine":50,"endColumn":18},{"ruleId":"3215","severity":1,"message":"3216","line":74,"column":21,"nodeType":"3217","messageId":"3218","endLine":74,"endColumn":28},{"ruleId":"3191","severity":1,"message":"3212","line":84,"column":47,"nodeType":"3165","messageId":"3193","endLine":84,"endColumn":49},{"ruleId":"3153","severity":1,"message":"3371","line":1,"column":10,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3603","line":1,"column":20,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3287","line":2,"column":10,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3236","line":2,"column":20,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":29},{"ruleId":"3153","severity":1,"message":"3633","line":4,"column":3,"nodeType":"3155","messageId":"3156","endLine":4,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3634","line":5,"column":3,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3629","line":6,"column":3,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":34},{"ruleId":"3153","severity":1,"message":"3635","line":8,"column":3,"nodeType":"3155","messageId":"3156","endLine":8,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3630","line":9,"column":3,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":30},{"ruleId":"3153","severity":1,"message":"3619","line":10,"column":3,"nodeType":"3155","messageId":"3156","endLine":10,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3620","line":11,"column":3,"nodeType":"3155","messageId":"3156","endLine":11,"endColumn":22},{"ruleId":"3153","severity":1,"message":"3621","line":12,"column":3,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":33},{"ruleId":"3153","severity":1,"message":"3622","line":13,"column":3,"nodeType":"3155","messageId":"3156","endLine":13,"endColumn":33},{"ruleId":"3153","severity":1,"message":"3623","line":14,"column":3,"nodeType":"3155","messageId":"3156","endLine":14,"endColumn":22},{"ruleId":"3153","severity":1,"message":"3624","line":15,"column":3,"nodeType":"3155","messageId":"3156","endLine":15,"endColumn":29},{"ruleId":"3153","severity":1,"message":"3411","line":1,"column":8,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3631","line":2,"column":8,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":22},{"ruleId":"3153","severity":1,"message":"3636","line":5,"column":3,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":27},{"ruleId":"3153","severity":1,"message":"3487","line":7,"column":3,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3252","line":10,"column":23,"nodeType":"3155","messageId":"3156","endLine":10,"endColumn":34},{"ruleId":"3153","severity":1,"message":"3423","line":11,"column":10,"nodeType":"3155","messageId":"3156","endLine":11,"endColumn":14},{"ruleId":"3153","severity":1,"message":"3637","line":14,"column":10,"nodeType":"3155","messageId":"3156","endLine":14,"endColumn":36},{"ruleId":"3153","severity":1,"message":"3531","line":16,"column":10,"nodeType":"3155","messageId":"3156","endLine":16,"endColumn":36},{"ruleId":"3153","severity":1,"message":"3491","line":18,"column":3,"nodeType":"3155","messageId":"3156","endLine":18,"endColumn":25},{"ruleId":"3153","severity":1,"message":"3492","line":19,"column":3,"nodeType":"3155","messageId":"3156","endLine":19,"endColumn":26},{"ruleId":"3153","severity":1,"message":"3493","line":20,"column":3,"nodeType":"3155","messageId":"3156","endLine":20,"endColumn":24},{"ruleId":"3153","severity":1,"message":"3494","line":21,"column":3,"nodeType":"3155","messageId":"3156","endLine":21,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3420","line":25,"column":3,"nodeType":"3155","messageId":"3156","endLine":25,"endColumn":17},{"ruleId":"3159","severity":1,"message":"3387","line":46,"column":6,"nodeType":"3161","endLine":46,"endColumn":8,"suggestions":"3638"},{"ruleId":"3153","severity":1,"message":"3394","line":51,"column":10,"nodeType":"3155","messageId":"3156","endLine":51,"endColumn":18},{"ruleId":"3215","severity":1,"message":"3216","line":76,"column":21,"nodeType":"3217","messageId":"3218","endLine":76,"endColumn":28},{"ruleId":"3191","severity":1,"message":"3212","line":86,"column":47,"nodeType":"3165","messageId":"3193","endLine":86,"endColumn":49},{"ruleId":"3153","severity":1,"message":"3411","line":1,"column":8,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3631","line":2,"column":8,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":22},{"ruleId":"3153","severity":1,"message":"3636","line":5,"column":3,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":27},{"ruleId":"3153","severity":1,"message":"3639","line":6,"column":3,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":22},{"ruleId":"3153","severity":1,"message":"3487","line":8,"column":3,"nodeType":"3155","messageId":"3156","endLine":8,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3252","line":11,"column":23,"nodeType":"3155","messageId":"3156","endLine":11,"endColumn":34},{"ruleId":"3153","severity":1,"message":"3423","line":12,"column":10,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":14},{"ruleId":"3153","severity":1,"message":"3637","line":15,"column":10,"nodeType":"3155","messageId":"3156","endLine":15,"endColumn":36},{"ruleId":"3153","severity":1,"message":"3625","line":17,"column":3,"nodeType":"3155","messageId":"3156","endLine":17,"endColumn":25},{"ruleId":"3153","severity":1,"message":"3640","line":18,"column":3,"nodeType":"3155","messageId":"3156","endLine":18,"endColumn":24},{"ruleId":"3153","severity":1,"message":"3531","line":21,"column":10,"nodeType":"3155","messageId":"3156","endLine":21,"endColumn":36},{"ruleId":"3153","severity":1,"message":"3491","line":23,"column":3,"nodeType":"3155","messageId":"3156","endLine":23,"endColumn":25},{"ruleId":"3153","severity":1,"message":"3492","line":24,"column":3,"nodeType":"3155","messageId":"3156","endLine":24,"endColumn":26},{"ruleId":"3153","severity":1,"message":"3493","line":25,"column":3,"nodeType":"3155","messageId":"3156","endLine":25,"endColumn":24},{"ruleId":"3153","severity":1,"message":"3494","line":26,"column":3,"nodeType":"3155","messageId":"3156","endLine":26,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3466","line":29,"column":3,"nodeType":"3155","messageId":"3156","endLine":29,"endColumn":8},{"ruleId":"3153","severity":1,"message":"3420","line":30,"column":3,"nodeType":"3155","messageId":"3156","endLine":30,"endColumn":17},{"ruleId":"3153","severity":1,"message":"3343","line":31,"column":3,"nodeType":"3155","messageId":"3156","endLine":31,"endColumn":10},{"ruleId":"3159","severity":1,"message":"3387","line":52,"column":6,"nodeType":"3161","endLine":52,"endColumn":8,"suggestions":"3641"},{"ruleId":"3153","severity":1,"message":"3371","line":1,"column":10,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3236","line":2,"column":20,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":29},{"ruleId":"3153","severity":1,"message":"3642","line":2,"column":31,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":49},{"ruleId":"3153","severity":1,"message":"3633","line":4,"column":3,"nodeType":"3155","messageId":"3156","endLine":4,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3634","line":5,"column":3,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3629","line":6,"column":3,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":34},{"ruleId":"3153","severity":1,"message":"3643","line":8,"column":3,"nodeType":"3155","messageId":"3156","endLine":8,"endColumn":29},{"ruleId":"3153","severity":1,"message":"3635","line":9,"column":3,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3630","line":10,"column":3,"nodeType":"3155","messageId":"3156","endLine":10,"endColumn":30},{"ruleId":"3153","severity":1,"message":"3619","line":11,"column":3,"nodeType":"3155","messageId":"3156","endLine":11,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3620","line":12,"column":3,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":22},{"ruleId":"3153","severity":1,"message":"3621","line":13,"column":3,"nodeType":"3155","messageId":"3156","endLine":13,"endColumn":33},{"ruleId":"3153","severity":1,"message":"3622","line":14,"column":3,"nodeType":"3155","messageId":"3156","endLine":14,"endColumn":33},{"ruleId":"3153","severity":1,"message":"3623","line":15,"column":3,"nodeType":"3155","messageId":"3156","endLine":15,"endColumn":22},{"ruleId":"3153","severity":1,"message":"3624","line":16,"column":3,"nodeType":"3155","messageId":"3156","endLine":16,"endColumn":29},{"ruleId":"3153","severity":1,"message":"3411","line":1,"column":8,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3366","line":4,"column":3,"nodeType":"3155","messageId":"3156","endLine":4,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3644","line":5,"column":3,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3415","line":12,"column":10,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":37},{"ruleId":"3153","severity":1,"message":"3386","line":22,"column":10,"nodeType":"3155","messageId":"3156","endLine":22,"endColumn":24},{"ruleId":"3153","severity":1,"message":"3645","line":23,"column":8,"nodeType":"3155","messageId":"3156","endLine":23,"endColumn":30},{"ruleId":"3159","severity":1,"message":"3387","line":42,"column":6,"nodeType":"3161","endLine":42,"endColumn":13,"suggestions":"3646"},{"ruleId":"3153","severity":1,"message":"3647","line":179,"column":10,"nodeType":"3155","messageId":"3156","endLine":179,"endColumn":22},{"ruleId":"3153","severity":1,"message":"3648","line":179,"column":24,"nodeType":"3155","messageId":"3156","endLine":179,"endColumn":39},{"ruleId":"3153","severity":1,"message":"3649","line":180,"column":10,"nodeType":"3155","messageId":"3156","endLine":180,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3650","line":180,"column":25,"nodeType":"3155","messageId":"3156","endLine":180,"endColumn":41},{"ruleId":"3153","severity":1,"message":"3651","line":182,"column":10,"nodeType":"3155","messageId":"3156","endLine":182,"endColumn":33},{"ruleId":"3153","severity":1,"message":"3652","line":182,"column":35,"nodeType":"3155","messageId":"3156","endLine":182,"endColumn":62},{"ruleId":"3153","severity":1,"message":"3653","line":183,"column":10,"nodeType":"3155","messageId":"3156","endLine":183,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3654","line":183,"column":34,"nodeType":"3155","messageId":"3156","endLine":183,"endColumn":60},{"ruleId":"3191","severity":1,"message":"3192","line":220,"column":53,"nodeType":"3165","messageId":"3193","endLine":220,"endColumn":55},{"ruleId":"3191","severity":1,"message":"3192","line":285,"column":51,"nodeType":"3165","messageId":"3193","endLine":285,"endColumn":53},{"ruleId":"3153","severity":1,"message":"3210","line":2,"column":17,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3466","line":5,"column":3,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":8},{"ruleId":"3153","severity":1,"message":"3343","line":8,"column":3,"nodeType":"3155","messageId":"3156","endLine":8,"endColumn":10},{"ruleId":"3153","severity":1,"message":"3414","line":9,"column":3,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":9},{"ruleId":"3153","severity":1,"message":"3379","line":10,"column":3,"nodeType":"3155","messageId":"3156","endLine":10,"endColumn":12},{"ruleId":"3153","severity":1,"message":"3371","line":12,"column":10,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3483","line":36,"column":10,"nodeType":"3155","messageId":"3156","endLine":36,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3505","line":36,"column":25,"nodeType":"3155","messageId":"3156","endLine":36,"endColumn":41},{"ruleId":"3153","severity":1,"message":"3371","line":1,"column":10,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3236","line":2,"column":20,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":29},{"ruleId":"3153","severity":1,"message":"3655","line":3,"column":61,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":82},{"ruleId":"3153","severity":1,"message":"3503","line":3,"column":84,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":105},{"ruleId":"3153","severity":1,"message":"3504","line":3,"column":107,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":134},{"ruleId":"3153","severity":1,"message":"3656","line":3,"column":136,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":158},{"ruleId":"3153","severity":1,"message":"3657","line":3,"column":160,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":181},{"ruleId":"3153","severity":1,"message":"3210","line":2,"column":17,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3466","line":5,"column":3,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":8},{"ruleId":"3153","severity":1,"message":"3420","line":6,"column":3,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":17},{"ruleId":"3153","severity":1,"message":"3467","line":7,"column":3,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":9},{"ruleId":"3153","severity":1,"message":"3343","line":8,"column":3,"nodeType":"3155","messageId":"3156","endLine":8,"endColumn":10},{"ruleId":"3153","severity":1,"message":"3414","line":9,"column":3,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":9},{"ruleId":"3153","severity":1,"message":"3379","line":10,"column":3,"nodeType":"3155","messageId":"3156","endLine":10,"endColumn":12},{"ruleId":"3153","severity":1,"message":"3371","line":12,"column":10,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3483","line":36,"column":10,"nodeType":"3155","messageId":"3156","endLine":36,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3658","line":37,"column":10,"nodeType":"3155","messageId":"3156","endLine":37,"endColumn":19},{"ruleId":"3153","severity":1,"message":"3484","line":37,"column":21,"nodeType":"3155","messageId":"3156","endLine":37,"endColumn":33},{"ruleId":"3153","severity":1,"message":"3208","line":38,"column":10,"nodeType":"3155","messageId":"3156","endLine":38,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3209","line":38,"column":22,"nodeType":"3155","messageId":"3156","endLine":38,"endColumn":35},{"ruleId":"3153","severity":1,"message":"3659","line":1,"column":8,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3660","line":2,"column":10,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3451","line":10,"column":9,"nodeType":"3155","messageId":"3156","endLine":10,"endColumn":25},{"ruleId":"3153","severity":1,"message":"3210","line":2,"column":17,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3343","line":6,"column":3,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":10},{"ruleId":"3153","severity":1,"message":"3414","line":8,"column":3,"nodeType":"3155","messageId":"3156","endLine":8,"endColumn":9},{"ruleId":"3153","severity":1,"message":"3379","line":9,"column":3,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":12},{"ruleId":"3153","severity":1,"message":"3371","line":11,"column":10,"nodeType":"3155","messageId":"3156","endLine":11,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3411","line":1,"column":8,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3449","line":2,"column":10,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":22},{"ruleId":"3153","severity":1,"message":"3422","line":4,"column":3,"nodeType":"3155","messageId":"3156","endLine":4,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3450","line":5,"column":3,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3377","line":6,"column":3,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":27},{"ruleId":"3153","severity":1,"message":"3252","line":11,"column":23,"nodeType":"3155","messageId":"3156","endLine":11,"endColumn":34},{"ruleId":"3153","severity":1,"message":"3385","line":13,"column":10,"nodeType":"3155","messageId":"3156","endLine":13,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3407","line":14,"column":10,"nodeType":"3155","messageId":"3156","endLine":14,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3426","line":16,"column":3,"nodeType":"3155","messageId":"3156","endLine":16,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3378","line":26,"column":3,"nodeType":"3155","messageId":"3156","endLine":26,"endColumn":11},{"ruleId":"3153","severity":1,"message":"3451","line":32,"column":7,"nodeType":"3155","messageId":"3156","endLine":32,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3178","line":35,"column":9,"nodeType":"3155","messageId":"3156","endLine":35,"endColumn":17},{"ruleId":"3159","severity":1,"message":"3452","line":38,"column":6,"nodeType":"3161","endLine":38,"endColumn":16,"suggestions":"3661"},{"ruleId":"3153","severity":1,"message":"3454","line":53,"column":10,"nodeType":"3155","messageId":"3156","endLine":53,"endColumn":24},{"ruleId":"3153","severity":1,"message":"3455","line":53,"column":26,"nodeType":"3155","messageId":"3156","endLine":53,"endColumn":43},{"ruleId":"3153","severity":1,"message":"3662","line":82,"column":10,"nodeType":"3155","messageId":"3156","endLine":82,"endColumn":26},{"ruleId":"3153","severity":1,"message":"3663","line":83,"column":10,"nodeType":"3155","messageId":"3156","endLine":83,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3664","line":86,"column":10,"nodeType":"3155","messageId":"3156","endLine":86,"endColumn":23},{"ruleId":"3159","severity":1,"message":"3456","line":145,"column":6,"nodeType":"3161","endLine":145,"endColumn":16,"suggestions":"3665"},{"ruleId":"3153","severity":1,"message":"3458","line":148,"column":9,"nodeType":"3155","messageId":"3156","endLine":148,"endColumn":19},{"ruleId":"3159","severity":1,"message":"3459","line":160,"column":5,"nodeType":"3161","endLine":160,"endColumn":38,"suggestions":"3666"},{"ruleId":"3159","severity":1,"message":"3461","line":272,"column":5,"nodeType":"3161","endLine":272,"endColumn":19,"suggestions":"3667"},{"ruleId":"3159","severity":1,"message":"3668","line":430,"column":6,"nodeType":"3161","endLine":430,"endColumn":57,"suggestions":"3669"},{"ruleId":"3153","severity":1,"message":"3411","line":1,"column":8,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3670","line":4,"column":3,"nodeType":"3155","messageId":"3156","endLine":4,"endColumn":19},{"ruleId":"3153","severity":1,"message":"3594","line":5,"column":3,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":26},{"ruleId":"3153","severity":1,"message":"3595","line":7,"column":3,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3551","line":8,"column":3,"nodeType":"3155","messageId":"3156","endLine":8,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3422","line":9,"column":3,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3530","line":10,"column":3,"nodeType":"3155","messageId":"3156","endLine":10,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3438","line":11,"column":3,"nodeType":"3155","messageId":"3156","endLine":11,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3423","line":15,"column":10,"nodeType":"3155","messageId":"3156","endLine":15,"endColumn":14},{"ruleId":"3153","severity":1,"message":"3420","line":21,"column":3,"nodeType":"3155","messageId":"3156","endLine":21,"endColumn":17},{"ruleId":"3159","severity":1,"message":"3387","line":43,"column":6,"nodeType":"3161","endLine":43,"endColumn":8,"suggestions":"3671"},{"ruleId":"3153","severity":1,"message":"3383","line":44,"column":9,"nodeType":"3155","messageId":"3156","endLine":44,"endColumn":16},{"ruleId":"3153","severity":1,"message":"3411","line":1,"column":8,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3670","line":4,"column":3,"nodeType":"3155","messageId":"3156","endLine":4,"endColumn":19},{"ruleId":"3153","severity":1,"message":"3594","line":5,"column":3,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":26},{"ruleId":"3153","severity":1,"message":"3595","line":7,"column":3,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3551","line":8,"column":3,"nodeType":"3155","messageId":"3156","endLine":8,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3422","line":9,"column":3,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3530","line":10,"column":3,"nodeType":"3155","messageId":"3156","endLine":10,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3438","line":11,"column":3,"nodeType":"3155","messageId":"3156","endLine":11,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3423","line":15,"column":10,"nodeType":"3155","messageId":"3156","endLine":15,"endColumn":14},{"ruleId":"3153","severity":1,"message":"3625","line":18,"column":10,"nodeType":"3155","messageId":"3156","endLine":18,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3672","line":19,"column":43,"nodeType":"3155","messageId":"3156","endLine":19,"endColumn":61},{"ruleId":"3153","severity":1,"message":"3420","line":22,"column":3,"nodeType":"3155","messageId":"3156","endLine":22,"endColumn":17},{"ruleId":"3153","severity":1,"message":"3343","line":23,"column":3,"nodeType":"3155","messageId":"3156","endLine":23,"endColumn":10},{"ruleId":"3153","severity":1,"message":"3626","line":28,"column":20,"nodeType":"3155","messageId":"3156","endLine":28,"endColumn":35},{"ruleId":"3153","severity":1,"message":"3557","line":36,"column":9,"nodeType":"3155","messageId":"3156","endLine":36,"endColumn":22},{"ruleId":"3159","severity":1,"message":"3387","line":50,"column":6,"nodeType":"3161","endLine":50,"endColumn":8,"suggestions":"3673"},{"ruleId":"3153","severity":1,"message":"3383","line":52,"column":9,"nodeType":"3155","messageId":"3156","endLine":52,"endColumn":16},{"ruleId":"3153","severity":1,"message":"3394","line":57,"column":10,"nodeType":"3155","messageId":"3156","endLine":57,"endColumn":18},{"ruleId":"3191","severity":1,"message":"3212","line":84,"column":47,"nodeType":"3165","messageId":"3193","endLine":84,"endColumn":49},{"ruleId":"3191","severity":1,"message":"3212","line":92,"column":47,"nodeType":"3165","messageId":"3193","endLine":92,"endColumn":49},{"ruleId":"3153","severity":1,"message":"3485","line":100,"column":9,"nodeType":"3155","messageId":"3156","endLine":100,"endColumn":23},{"ruleId":"3215","severity":1,"message":"3216","line":101,"column":21,"nodeType":"3217","messageId":"3218","endLine":101,"endColumn":28},{"ruleId":"3153","severity":1,"message":"3371","line":1,"column":10,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3236","line":2,"column":20,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":29},{"ruleId":"3153","severity":1,"message":"3642","line":2,"column":31,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":49},{"ruleId":"3153","severity":1,"message":"3633","line":4,"column":3,"nodeType":"3155","messageId":"3156","endLine":4,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3634","line":5,"column":3,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3629","line":6,"column":3,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":34},{"ruleId":"3153","severity":1,"message":"3674","line":8,"column":3,"nodeType":"3155","messageId":"3156","endLine":8,"endColumn":26},{"ruleId":"3153","severity":1,"message":"3643","line":9,"column":3,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":29},{"ruleId":"3153","severity":1,"message":"3635","line":10,"column":3,"nodeType":"3155","messageId":"3156","endLine":10,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3630","line":11,"column":3,"nodeType":"3155","messageId":"3156","endLine":11,"endColumn":30},{"ruleId":"3153","severity":1,"message":"3619","line":12,"column":3,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3620","line":13,"column":3,"nodeType":"3155","messageId":"3156","endLine":13,"endColumn":22},{"ruleId":"3153","severity":1,"message":"3621","line":14,"column":3,"nodeType":"3155","messageId":"3156","endLine":14,"endColumn":33},{"ruleId":"3153","severity":1,"message":"3622","line":15,"column":3,"nodeType":"3155","messageId":"3156","endLine":15,"endColumn":33},{"ruleId":"3153","severity":1,"message":"3623","line":16,"column":3,"nodeType":"3155","messageId":"3156","endLine":16,"endColumn":22},{"ruleId":"3153","severity":1,"message":"3624","line":17,"column":3,"nodeType":"3155","messageId":"3156","endLine":17,"endColumn":29},{"ruleId":"3153","severity":1,"message":"3210","line":2,"column":17,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3420","line":6,"column":3,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":17},{"ruleId":"3153","severity":1,"message":"3467","line":7,"column":3,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":9},{"ruleId":"3153","severity":1,"message":"3343","line":8,"column":3,"nodeType":"3155","messageId":"3156","endLine":8,"endColumn":10},{"ruleId":"3153","severity":1,"message":"3414","line":9,"column":3,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":9},{"ruleId":"3153","severity":1,"message":"3379","line":10,"column":3,"nodeType":"3155","messageId":"3156","endLine":10,"endColumn":12},{"ruleId":"3153","severity":1,"message":"3371","line":12,"column":10,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3483","line":35,"column":10,"nodeType":"3155","messageId":"3156","endLine":35,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3411","line":1,"column":8,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3449","line":2,"column":10,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":22},{"ruleId":"3153","severity":1,"message":"3422","line":3,"column":10,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":28},{"ruleId":"3153","severity":1,"message":"3450","line":3,"column":30,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":50},{"ruleId":"3153","severity":1,"message":"3423","line":7,"column":10,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":14},{"ruleId":"3153","severity":1,"message":"3385","line":8,"column":10,"nodeType":"3155","messageId":"3156","endLine":8,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3407","line":9,"column":10,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3426","line":11,"column":3,"nodeType":"3155","messageId":"3156","endLine":11,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3470","line":12,"column":3,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3471","line":14,"column":10,"nodeType":"3155","messageId":"3156","endLine":14,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3466","line":17,"column":3,"nodeType":"3155","messageId":"3156","endLine":17,"endColumn":8},{"ruleId":"3153","severity":1,"message":"3420","line":18,"column":3,"nodeType":"3155","messageId":"3156","endLine":18,"endColumn":17},{"ruleId":"3153","severity":1,"message":"3467","line":19,"column":3,"nodeType":"3155","messageId":"3156","endLine":19,"endColumn":9},{"ruleId":"3153","severity":1,"message":"3378","line":20,"column":3,"nodeType":"3155","messageId":"3156","endLine":20,"endColumn":11},{"ruleId":"3153","severity":1,"message":"3414","line":21,"column":3,"nodeType":"3155","messageId":"3156","endLine":21,"endColumn":9},{"ruleId":"3153","severity":1,"message":"3379","line":22,"column":3,"nodeType":"3155","messageId":"3156","endLine":22,"endColumn":12},{"ruleId":"3153","severity":1,"message":"3473","line":23,"column":3,"nodeType":"3155","messageId":"3156","endLine":23,"endColumn":15},{"ruleId":"3153","severity":1,"message":"3512","line":24,"column":3,"nodeType":"3155","messageId":"3156","endLine":24,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3178","line":29,"column":9,"nodeType":"3155","messageId":"3156","endLine":29,"endColumn":17},{"ruleId":"3159","severity":1,"message":"3675","line":98,"column":6,"nodeType":"3161","endLine":98,"endColumn":41,"suggestions":"3676"},{"ruleId":"3153","severity":1,"message":"3411","line":1,"column":8,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3670","line":5,"column":3,"nodeType":"3155","messageId":"3156","endLine":5,"endColumn":19},{"ruleId":"3153","severity":1,"message":"3594","line":6,"column":3,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":26},{"ruleId":"3153","severity":1,"message":"3595","line":7,"column":3,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3551","line":8,"column":3,"nodeType":"3155","messageId":"3156","endLine":8,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3422","line":9,"column":3,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3530","line":10,"column":3,"nodeType":"3155","messageId":"3156","endLine":10,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3438","line":11,"column":3,"nodeType":"3155","messageId":"3156","endLine":11,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3423","line":15,"column":10,"nodeType":"3155","messageId":"3156","endLine":15,"endColumn":14},{"ruleId":"3153","severity":1,"message":"3420","line":19,"column":10,"nodeType":"3155","messageId":"3156","endLine":19,"endColumn":24},{"ruleId":"3159","severity":1,"message":"3387","line":37,"column":6,"nodeType":"3161","endLine":37,"endColumn":8,"suggestions":"3677"},{"ruleId":"3153","severity":1,"message":"3383","line":38,"column":9,"nodeType":"3155","messageId":"3156","endLine":38,"endColumn":16},{"ruleId":"3153","severity":1,"message":"3449","line":2,"column":10,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":22},{"ruleId":"3153","severity":1,"message":"3422","line":3,"column":10,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":28},{"ruleId":"3153","severity":1,"message":"3450","line":3,"column":30,"nodeType":"3155","messageId":"3156","endLine":3,"endColumn":50},{"ruleId":"3153","severity":1,"message":"3367","line":6,"column":10,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3423","line":7,"column":10,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":14},{"ruleId":"3153","severity":1,"message":"3385","line":9,"column":10,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3407","line":10,"column":10,"nodeType":"3155","messageId":"3156","endLine":10,"endColumn":20},{"ruleId":"3153","severity":1,"message":"3426","line":12,"column":3,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3470","line":13,"column":3,"nodeType":"3155","messageId":"3156","endLine":13,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3471","line":15,"column":10,"nodeType":"3155","messageId":"3156","endLine":15,"endColumn":32},{"ruleId":"3153","severity":1,"message":"3420","line":19,"column":3,"nodeType":"3155","messageId":"3156","endLine":19,"endColumn":17},{"ruleId":"3153","severity":1,"message":"3467","line":20,"column":3,"nodeType":"3155","messageId":"3156","endLine":20,"endColumn":9},{"ruleId":"3153","severity":1,"message":"3378","line":21,"column":3,"nodeType":"3155","messageId":"3156","endLine":21,"endColumn":11},{"ruleId":"3153","severity":1,"message":"3414","line":22,"column":3,"nodeType":"3155","messageId":"3156","endLine":22,"endColumn":9},{"ruleId":"3153","severity":1,"message":"3512","line":26,"column":3,"nodeType":"3155","messageId":"3156","endLine":26,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3678","line":30,"column":3,"nodeType":"3155","messageId":"3156","endLine":30,"endColumn":21},{"ruleId":"3153","severity":1,"message":"3679","line":32,"column":3,"nodeType":"3155","messageId":"3156","endLine":32,"endColumn":26},{"ruleId":"3153","severity":1,"message":"3556","line":35,"column":10,"nodeType":"3155","messageId":"3156","endLine":35,"endColumn":34},{"ruleId":"3153","severity":1,"message":"3557","line":43,"column":9,"nodeType":"3155","messageId":"3156","endLine":43,"endColumn":22},{"ruleId":"3153","severity":1,"message":"3534","line":46,"column":10,"nodeType":"3155","messageId":"3156","endLine":46,"endColumn":17},{"ruleId":"3153","severity":1,"message":"3535","line":46,"column":19,"nodeType":"3155","messageId":"3156","endLine":46,"endColumn":29},{"ruleId":"3153","severity":1,"message":"3558","line":53,"column":10,"nodeType":"3155","messageId":"3156","endLine":53,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3559","line":53,"column":20,"nodeType":"3155","messageId":"3156","endLine":53,"endColumn":31},{"ruleId":"3159","severity":1,"message":"3456","line":77,"column":6,"nodeType":"3161","endLine":77,"endColumn":8,"suggestions":"3680"},{"ruleId":"3159","severity":1,"message":"3561","line":99,"column":5,"nodeType":"3161","endLine":99,"endColumn":38,"suggestions":"3681"},{"ruleId":"3159","severity":1,"message":"3461","line":173,"column":5,"nodeType":"3161","endLine":173,"endColumn":19,"suggestions":"3682"},{"ruleId":"3159","severity":1,"message":"3564","line":220,"column":6,"nodeType":"3161","endLine":220,"endColumn":41,"suggestions":"3683"},{"ruleId":"3153","severity":1,"message":"3210","line":2,"column":17,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":23},{"ruleId":"3153","severity":1,"message":"3420","line":6,"column":3,"nodeType":"3155","messageId":"3156","endLine":6,"endColumn":17},{"ruleId":"3153","severity":1,"message":"3467","line":7,"column":3,"nodeType":"3155","messageId":"3156","endLine":7,"endColumn":9},{"ruleId":"3153","severity":1,"message":"3414","line":9,"column":3,"nodeType":"3155","messageId":"3156","endLine":9,"endColumn":9},{"ruleId":"3153","severity":1,"message":"3379","line":10,"column":3,"nodeType":"3155","messageId":"3156","endLine":10,"endColumn":12},{"ruleId":"3153","severity":1,"message":"3371","line":12,"column":10,"nodeType":"3155","messageId":"3156","endLine":12,"endColumn":18},{"ruleId":"3159","severity":1,"message":"3468","line":46,"column":6,"nodeType":"3161","endLine":46,"endColumn":39,"suggestions":"3684"},{"ruleId":"3153","severity":1,"message":"3483","line":53,"column":10,"nodeType":"3155","messageId":"3156","endLine":53,"endColumn":23},{"ruleId":"3215","severity":1,"message":"3216","line":58,"column":21,"nodeType":"3217","messageId":"3218","endLine":58,"endColumn":28},{"ruleId":"3191","severity":1,"message":"3212","line":67,"column":47,"nodeType":"3165","messageId":"3193","endLine":67,"endColumn":49},{"ruleId":"3153","severity":1,"message":"3371","line":1,"column":10,"nodeType":"3155","messageId":"3156","endLine":1,"endColumn":18},{"ruleId":"3153","severity":1,"message":"3236","line":2,"column":20,"nodeType":"3155","messageId":"3156","endLine":2,"endColumn":29},"no-unused-vars","'ROUTE_INVENTORY_LOCATION' is defined but never used.","Identifier","unusedVar","'ROUTE_INVENTORY_UNIT' is defined but never used.","'scryRenderedComponentsWithType' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["3685"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'ROUTE_REGISTER' is defined but never used.","'createContext' is defined but never used.","'useContext' is defined but never used.","'useState' is defined but never used.","'React' is defined but never used.","'useEffect' is defined but never used.","'EnvironmentOutlined' is defined but never used.","'bestdealIcon' is defined but never used.","'productIcon' is defined but never used.","'followerIcon' is defined but never used.","'subscriptionIcon' is defined but never used.","'dispatch' is assigned a value but never used.","'isBusy' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userDataStore.token'. Either include it or remove the dependency array.",["3686"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'location' is assigned a value but never used.","'auth' is assigned a value but never used.",["3687"],["3688"],"'token' is assigned a value but never used.","'goNextPage' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","unexpected","'MailFilled' is defined but never used.","'MailOutlined' is defined but never used.","'ConsoleSqlOutlined' is defined but never used.","'ToTopOutlined' is defined but never used.","'urlCreateInventoryCategory' is defined but never used.","'ROUTE_RECIPE_ADD' is defined but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["3689"],"'SettingOutlined' is defined but never used.","'Menu' is defined but never used.","'ROUTE_HOME' is defined but never used.","React Hook useEffect has a missing dependency: 'currentRoute'. Either include it or remove the dependency array.",["3690"],"'vendorInfo' is assigned a value but never used.","'errorField' is assigned a value but never used.","'setErrorField' is assigned a value but never used.","'Button' is defined but never used.","'Tooltip' is defined but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["3691"],"no-array-constructor","The array literal notation [] is preferable.","CallExpression","preferLiteral","'message' is defined but never used.","'setIsBusy' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Popconfirm' is defined but never used.","'setOwnCommonData' is assigned a value but never used.","'locationList' is assigned a value but never used.","'categoryList' is assigned a value but never used.","'past_cnt' is assigned a value but never used.","'future_cnt' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property dealType.","MemberExpression","unexpectedWhitespace",{"range":"3692","text":"3693"},"'PicCenterOutlined' is defined but never used.","'showConfirmDlgWidget' is defined but never used.","'axiosPost' is defined but never used.","'axiosDelete' is defined but never used.","'axiosPut' is defined but never used.","no-useless-escape","Unnecessary escape character: \\+.","Literal","unnecessaryEscape",["3694","3695"],"Unnecessary escape character: \\..",["3696","3697"],["3698","3699"],"'PictureOutlined' is defined but never used.","React Hook useEffect has a missing dependency: 'imageUrl'. Either include it or remove the dependency array.",["3700"],"'detail_button_flag' is assigned a value but never used.",["3701"],"'useSelector' is defined but never used.","React Hook useEffect has a missing dependency: 'getMyProductList'. Either include it or remove the dependency array.",["3702"],"'showInfoAlert' is defined but never used.","'googleKey' is defined but never used.","'Text' is assigned a value but never used.","'is_password' is assigned a value but never used.","'DownCircleOutlined' is defined but never used.","'RightCircleOutlined' is defined but never used.","'Spin' is defined but never used.","'Input' is defined but never used.","'dealId' is assigned a value but never used.","'bestDealInfo' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'curBestDeal'. Either include it or remove the dependency array. You can also do a functional update 'setCurBestDeal(c => ...)' if you only need 'curBestDeal' in the 'setCurBestDeal' call.",["3703"],"'showColumnAction' is defined but never used.","'Space' is defined but never used.","React Hook useEffect has a missing dependency: 'intervalId'. Either include it or remove the dependency array.",["3704"],"React Hook useEffect has a missing dependency: 'waitTime'. Either include it or remove the dependency array. You can also do a functional update 'setWaitTime(w => ...)' if you only need 'waitTime' in the 'setWaitTime' call.",["3705"],"'selectProduct' is assigned a value but never used.","'dayPricing' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'featured_end_date' and 'featured_start_date'. Either include them or remove the dependency array.",["3706"],"React Hook useEffect has a missing dependency: 'selStore'. Either include it or remove the dependency array. You can also do a functional update 'setSelStore(s => ...)' if you only need 'selStore' in the 'setSelStore' call.",["3707"],"React Hook useEffect has missing dependencies: 'proceed' and 'storeInfo'. Either include them or remove the dependency array.",["3708"],"'getBrand' is defined but never used.","'getCategory' is defined but never used.","'getPackSize' is defined but never used.","'getUnit' is defined but never used.","'ownProducts' is assigned a value but never used.","'ProductTypeSelector' is defined but never used.","'axiosGet' is defined but never used.","'TextArea' is assigned a value but never used.","'selectedStore' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'end_date', 'setFromDate', and 'setTimeAddFlag'. Either include them or remove the dependency array.",["3709"],"'onClickOk' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setIsBusy'. Either include it or remove the dependency array.",["3710"],"React Hook useEffect has missing dependencies: 'curBestDeal' and 'setCurBestDeal'. Either include them or remove the dependency array.",["3711"],["3712"],["3713"],["3714"],"React Hook useEffect has missing dependencies: 'buyProductList', 'comboProductList', and 'freeProductList'. Either include them or remove the dependency array. You can also do a functional update 'setComboProductList(c => ...)' if you only need 'comboProductList' in the 'setComboProductList' call.",["3715"],"React Hook useEffect has a missing dependency: 'onSaveInfo'. Either include it or remove the dependency array.",["3716"],"'isEditing' is assigned a value but never used.","'quantity' is assigned a value but never used.","'Divider' is defined but never used.","'Radio' is defined but never used.","'productType' is assigned a value but never used.","'canDelete' is assigned a value but never used.","'isSmall' is assigned a value but never used.","'CodeVerificationWidget' is defined but never used.","'onClickRegister' is assigned a value but never used.","'onClickRegisterVendor' is assigned a value but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'CheckCircleOutlined' is defined but never used.","'CloseOutlined' is defined but never used.","'DeleteOutlined' is defined but never used.","'setCurStore' is assigned a value but never used.","'isLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'followerList' and 'setTempFollowerList'. Either include them or remove the dependency array. You can also do a functional update 'setFollowerList(f => ...)' if you only need 'followerList' in the 'setFollowerList' call.",["3717"],"'tempFollowerList' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'value'.","ArrowFunctionExpression","unsafeRefs","Function declared in a loop contains unsafe references to variable(s) 'field'.","'Select' is defined but never used.","'is_closed' is assigned a value but never used.","'IMAGE_BASE_URL' is defined but never used.","'urlSearchProduct' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has missing dependencies: 'initData', 'promotionProducts', and 'selPromotion'. Either include them or remove the dependency array. You can also do a functional update 'setSelPromotion(s => ...)' if you only need 'selPromotion' in the 'setSelPromotion' call.",["3718"],"'selFollowers' is assigned a value but never used.","'followerList' is assigned a value but never used.",["3719"],"'isPossiblePhoneNumber' is defined but never used.","'setWrongList' is assigned a value but never used.","'isEmpty' is defined but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","no-redeclare","'res' is already defined.","redeclared","no-native-reassign",["3720"],"no-negated-in-lhs",["3721"],"'NotFound' is defined but never used.","'NotFoundPage' is defined but never used.",["3722","3723"],["3724","3725"],["3726","3727"],"'hour' is already defined.","'min' is already defined.","'sec' is assigned a value but never used.",["3720"],["3721"],"'appDataStore' is assigned a value but never used.","'ROUTE_USER_DASHBOARD' is defined but never used.","'useDispatch' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useLocation' is defined but never used.","'withRouter' is defined but never used.","'APP_NAME' is defined but never used.","'apiGuestCreatTicket' is defined but never used.","'socketStore' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'addSocketListener', 'dispatch', 'getUserNotificationData', and 'token'. Either include them or remove the dependency array.",["3728"],"'ROUTE_LOGIN' is defined but never used.","'ROUTE_USER_TICKET_DETAIL' is defined but never used.","'is_empty' is defined but never used.","'showToast' is defined but never used.","'show_dialog' is defined but never used.","'socket' is assigned a value but never used.","'socketHeader' is assigned a value but never used.","'history' is assigned a value but never used.","'sendData' is assigned a value but never used.","'UpdateAppData' is defined but never used.","'BASE_FRONT_URL' is defined but never used.","React Hook useEffect has missing dependencies: 'getData' and 'initPage'. Either include them or remove the dependency array.",["3729"],"'updateSocket' is defined but never used.","'encodedStr' is defined but never used.","React Hook useEffect has missing dependencies: 'addSocketListener', 'getFeedList', and 'socketStore'. Either include them or remove the dependency array.",["3730"],["3731"],"'pageData' is assigned a value but never used.",["3732"],"'ROUTE_USER_CHART' is defined but never used.","'ROUTE_USER_LOGOUT' is defined but never used.","'ROUTE_FREE_BOOK' is defined but never used.","'useRef' is defined but never used.","'apiCheckTwoFactAuth' is defined but never used.","React Hook useEffect has missing dependencies: 'doLogout' and 'initPage'. Either include them or remove the dependency array.",["3733"],"'ROUTE_FORGOT_PASSWORD' is defined but never used.","'apiLogin' is defined but never used.",["3734"],"'TwoFactorCodeModal' is defined but never used.","'updateUser' is defined but never used.","'setRecaptchaEnable' is assigned a value but never used.","'urlCheckTwoFactAuth' is defined but never used.","'Expiration' is defined but never used.","'ConfirmModal' is defined but never used.","'apiUserCheckHlxPassword' is defined but never used.",["3735"],"'jQuery' is defined but never used.","'apiGetUserAcademyPageDetail' is defined but never used.",["3736"],["3737"],"'ROUTE_USER_ACADEMY_ADVANCED' is defined but never used.","'ROUTE_USER_LICENSE' is defined but never used.","'get_data_value' is defined but never used.",["3738"],"'ROUTE_USER_ACADEMY' is defined but never used.","'Link' is defined but never used.",["3739"],["3740"],"'apiGetUserMarketingPageDetail' is defined but never used.","'UserDataTable' is defined but never used.",["3741"],["3742"],["3743"],["3744"],["3745"],"'setConfirmModalContent' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'socketStore'. Either include it or remove the dependency array.",["3746"],["3747"],"'ROUTE_COMPLIANCE' is defined but never used.","'ROUTE_USER_WALLET' is defined but never used.","'ReCAPTCHA' is defined but never used.","'apiRequestResetPassword' is defined but never used.","'urlUserCheckHasActiveLicense' is defined but never used.","'urlUserCheckHlxPassword' is defined but never used.","'Modal' is defined but never used.",["3748"],"'visibleModal' is assigned a value but never used.","'showConfirm' is assigned a value but never used.","'hasActiveLicense' is assigned a value but never used.","'setHasActiveLicense' is assigned a value but never used.","'RULE_PERCENT' is defined but never used.","'ROUTE_USER_MARKETING' is defined but never used.","'currentPageTitle' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'updateUserSelectList'. Either include it or remove the dependency array.",["3749"],"'selectedUserID' is assigned a value but never used.","'setSelectedUserID' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchDataList'. Either include it or remove the dependency array.",["3750"],"'removeItem' is assigned a value but never used.","React Hook useCallback has unnecessary dependencies: 'currentPage', 'perPage', and 'totalRows'. Either exclude them or remove the dependency array.",["3751"],"React Hook useMemo has an unnecessary dependency: 'handleDelete'. Either exclude it or remove the dependency array.",["3752"],"React Hook useMemo has missing dependencies: 'colorStyles', 'currentSelectValue', 'handleChangeUserKind', 'handleSearchChange', and 'onUserChange'. Either include them or remove the dependency array.",["3753"],"'submitModalData' is assigned a value but never used.","'empty' is defined but never used.","'intval' is defined but never used.","React Hook useEffect has a missing dependency: 'defaultModalData'. Either include it or remove the dependency array.",["3754"],"'apiGetUserMarketingRankDetail' is defined but never used.","'apiDeleteUserPayoutRow' is defined but never used.","'setConfirmModalTitle' is assigned a value but never used.","'show_loading' is defined but never used.","'apiGetUserWalletPageDetail' is defined but never used.","'apiUserRequestWithdrawal' is defined but never used.",["3755"],"'onClickDeleteRow' is assigned a value but never used.","'urlUserDeletePayoutRow' is defined but never used.","'urlUserDeleteWithdrawalRow' is defined but never used.","'urlUserGetWalletPageDetail' is defined but never used.","'urlUserRequestWithdrawal' is defined but never used.","'modalTitle' is assigned a value but never used.","'modalPageData' is assigned a value but never used.","'setModalData' is assigned a value but never used.","'validateFields' is assigned a value but never used.","'ROUTE_USER_PAY_LICENSE' is defined but never used.","'ROUTE_USER_PROFILE' is defined but never used.","'apiGetUserLicensePageDetail' is defined but never used.","'apiUserUpdateLicenseInfo' is defined but never used.","'apiGetUserProfilePageDetail' is defined but never used.","'apiUserCancelAffiliate' is defined but never used.","'apiUserCancelMembership' is defined but never used.","'apiUserUpdateCardInfo' is defined but never used.","'apiUserUpdateProfile' is defined but never used.",["3756"],"'urlUserGetLicensePageDetail' is defined but never used.","'urlUserUpdateLicenseInfo' is defined but never used.","'LICENSE_PRICE' is defined but never used.","'LICENSE_TRIAL_PRICE' is defined but never used.","'TRIAL_LICENSE_DURATION' is defined but never used.","'apiUserPayLicense' is defined but never used.",["3757"],"'urlUserGetAcademyData' is defined but never used.","'urlUserGetAcademyPageDetail' is defined but never used.","'setModalPageData' is assigned a value but never used.","'ROUTE_USER_TEAM_DETAIL' is defined but never used.",["3758"],"'BASE_API_URL' is defined but never used.","'apiGetUserTicketListPageDetail' is defined but never used.","'apiSubmitUserTicket' is defined but never used.","'get_utc_timestamp' is defined but never used.","'toLocalDatetime' is defined but never used.","React Hook useEffect has missing dependencies: 'addSocketListener', 'getTicketNewMessageList', and 'socketStore'. Either include them or remove the dependency array.",["3759"],["3760"],"'useHistory' is defined but never used.","no-unreachable","Unreachable code.","VariableDeclaration","unreachableCode","ExpressionStatement","React Hook useEffect has a missing dependency: 'initPage'. Either include it or remove the dependency array.",["3761"],"'setPageData' is assigned a value but never used.","ReturnStatement","React Hook useEffect has missing dependencies: 'addSocketListener', 'dispatch', 'getAdminNotificationData', and 'token'. Either include them or remove the dependency array.",["3762"],"'USER_LEVEL_AFFILIATE' is defined but never used.","'USER_LEVEL_CUSTOMER' is defined but never used.","'ROUTE_USER_PAYMENT' is defined but never used.","'apiGetAdminUsersPageDetail' is defined but never used.",["3763"],"'urlUserGetTreeUserList' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.",["3764"],"React Hook useCallback has missing dependencies: 'currentSortDirection', 'currentSortField', 'filterText', and 'userType'. Either include them or remove the dependency array.",["3765"],"React Hook useMemo has a missing dependency: 'userDataStore'. Either include it or remove the dependency array.",["3766"],"React Hook useMemo has missing dependencies: 'handleChangeUserKind' and 'handleSearchChange'. Either include them or remove the dependency array.",["3767"],"'curl_post' is defined but never used.","'urlAdminDownloadUserList' is defined but never used.","'urlUserDeletePaymentRow' is defined but never used.","'urlUserGetPaymentListPageDetail' is defined but never used.","'urlAdminSetUserTmpPassword' is defined but never used.","'urlUserGetProfileInfo' is defined but never used.",["3768"],["3769"],"'ROUTE_ADMIN_USERS' is defined but never used.",["3770"],"'timeConverter' is defined but never used.","'apiAdminSetUserTmpPassword' is defined but never used.","'apiAdminUpdateUserInfo' is defined but never used.","'apiAdminUpdateUserStatus' is defined but never used.","'userDataStore' is assigned a value but never used.","'userType' is assigned a value but never used.","'setUserType' is assigned a value but never used.",["3771"],"React Hook useCallback has missing dependencies: 'currentSortDirection', 'currentSortField', and 'filterText'. Either include them or remove the dependency array.",["3772"],["3773"],"React Hook useMemo has a missing dependency: 'handleSearchChange'. Either include it or remove the dependency array.",["3774"],["3775"],["3776"],["3777"],["3778"],"'onChangeUserType' is assigned a value but never used.",["3779"],["3780"],["3781"],"React Hook useCallback has missing dependencies: 'currentSortDirection', 'currentSortField', 'filterText', and 'withdrawKind'. Either include them or remove the dependency array.",["3782"],["3783"],"React Hook useMemo has missing dependencies: 'handleChangeWithdrawKind' and 'handleSearchChange'. Either include them or remove the dependency array.",["3784"],["3785"],"'urlAdminGetUsersList' is defined but never used.",["3786"],"'handleDelete' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'currentSortDirection', 'currentSortField', 'filterText', and 'itemType'. Either include them or remove the dependency array.",["3787"],"React Hook useMemo has missing dependencies: 'handleChangeItemType' and 'handleSearchChange'. Either include them or remove the dependency array.",["3788"],"'showTmpPasswordModal' is assigned a value but never used.","'onClickSetTmpPassword' is assigned a value but never used.","'submitTmpPassword' is assigned a value but never used.","'showUserInfoModal' is assigned a value but never used.","'onClickEditUser' is assigned a value but never used.","'updateUserInfo' is assigned a value but never used.","'onClickChangeUserStatus' is assigned a value but never used.","'ROUTE_ADMIN_FEED_DETAIL' is defined but never used.","'ROUTE_ADMIN_TICKET' is defined but never used.",["3789"],"'urlAdminGetTicketList' is defined but never used.","'setItemType' is assigned a value but never used.",["3790"],["3791"],["3792"],"'confirmedAction' is assigned a value but never used.","'SYSTEM_ERROR' is defined but never used.","'urlAdminGetUsersPageDetail' is defined but never used.","'urlAdminUpdateUserInfo' is defined but never used.","'urlAdminUpdateUserStatus' is defined but never used.","'urlAdminDeletePaymentHistory' is defined but never used.","'ROUTE_ADMIN_TICKET_DETAIL' is defined but never used.","'ROUTE_USER_TICKET' is defined but never used.","'apiCloseUserTicket' is defined but never used.","'apiGetUserTickeDetailPageDetail' is defined but never used.","'apiSubmitUserTicketMessage' is defined but never used.",["3793"],["3794"],"'confirmModalTitle' is assigned a value but never used.","'showConfirmModal' is assigned a value but never used.","'setShowConfirmModal' is assigned a value but never used.","'submitToEmail' is assigned a value but never used.","'urlUserCloseTicket' is defined but never used.","'urlUserDeleteTicket' is defined but never used.","'urlUserGetTicketInfoPageDetail' is defined but never used.","'urlUserGetTicketListPageDetail' is defined but never used.","'urlUserSubmitTicket' is defined but never used.","'urlUserSubmitTicketMessage' is defined but never used.","'apiAdminGetProfileInfo' is defined but never used.","'CKEditorContext' is defined but never used.",["3795"],["3796"],"'urlAdminGetTicketInfoPageDetail' is defined but never used.","'urlAdminSubmitTicketMessage' is defined but never used.","'CreditCardForm' is defined but never used.",["3797"],"'urlAdminDeleteFeed' is defined but never used.","'urlAdminGetFeedInfoPageDetail' is defined but never used.","'urlAdminSubmitFeed' is defined but never used.","'ROUTE_ADMIN_ANNOUNCEMENT' is defined but never used.","'apiSubmitAdminAnnouncement' is defined but never used.",["3798"],"'ROUTE_ADMIN_PROFILE' is defined but never used.","'apiAdminUpdateProfile' is defined but never used.",["3799"],"'axiosPostMultipart' is defined but never used.","'urlAdminSubmitAnnouncement' is defined but never used.","'ROUTE_USER_TEAM' is defined but never used.","'AdminTankUserListModal' is defined but never used.",["3800"],"'tankUserList' is assigned a value but never used.","'setTankUserList' is assigned a value but never used.","'showTankModal' is assigned a value but never used.","'setShowTankModal' is assigned a value but never used.","'selected_parent_user_id' is assigned a value but never used.","'set_selected_parent_user_id' is assigned a value but never used.","'selected_tree_position' is assigned a value but never used.","'set_selected_tree_position' is assigned a value but never used.","'urlUserAssignTankUser' is defined but never used.","'urlUserGetTankUserList' is defined but never used.","'urlUserTeamPageDetail' is defined but never used.","'modalData' is assigned a value but never used.","'HomeLayout' is defined but never used.","'ROUTE_ROOT' is defined but never used.",["3801"],"'selectedUserItem' is assigned a value but never used.","'selectedUserRankDetail' is assigned a value but never used.","'showRankModal' is assigned a value but never used.",["3802"],["3803"],["3804"],"React Hook useMemo has missing dependencies: 'colorStyles', 'defaultUserList', 'handleChangeUserKind', 'handleSearchChange', and 'onUserChange'. Either include them or remove the dependency array.",["3805"],"'ROUTE_ADMIN_FEED' is defined but never used.",["3806"],"'apiSubmitAdminFeed' is defined but never used.",["3807"],"'urlAdminStatsPageDetail' is defined but never used.","React Hook useMemo has a missing dependency: 'currentRankItem'. Either include it or remove the dependency array.",["3808"],["3809"],"'urlAdminDeleteUser' is defined but never used.","'urlAdminGetLicensesList' is defined but never used.",["3810"],["3811"],["3812"],["3813"],["3814"],{"desc":"3815","fix":"3816"},{"desc":"3817","fix":"3818"},{"desc":"3819","fix":"3820"},{"desc":"3819","fix":"3821"},{"desc":"3822","fix":"3823"},{"desc":"3824","fix":"3825"},{"desc":"3826","fix":"3827"},[1425,1427],".",{"messageId":"3828","fix":"3829","desc":"3830"},{"messageId":"3831","fix":"3832","desc":"3833"},{"messageId":"3828","fix":"3834","desc":"3830"},{"messageId":"3831","fix":"3835","desc":"3833"},{"messageId":"3828","fix":"3836","desc":"3830"},{"messageId":"3831","fix":"3837","desc":"3833"},{"desc":"3838","fix":"3839"},{"desc":"3817","fix":"3840"},{"desc":"3841","fix":"3842"},{"desc":"3843","fix":"3844"},{"desc":"3845","fix":"3846"},{"desc":"3847","fix":"3848"},{"desc":"3849","fix":"3850"},{"desc":"3851","fix":"3852"},{"desc":"3853","fix":"3854"},{"desc":"3855","fix":"3856"},{"desc":"3857","fix":"3858"},{"desc":"3859","fix":"3860"},{"desc":"3861","fix":"3862"},{"desc":"3863","fix":"3864"},{"desc":"3865","fix":"3866"},{"desc":"3867","fix":"3868"},{"desc":"3869","fix":"3870"},{"desc":"3871","fix":"3872"},{"desc":"3873","fix":"3874"},{"desc":"3838","fix":"3875"},"no-global-assign","no-unsafe-negation",{"messageId":"3828","fix":"3876","desc":"3830"},{"messageId":"3831","fix":"3877","desc":"3833"},{"messageId":"3828","fix":"3878","desc":"3830"},{"messageId":"3831","fix":"3879","desc":"3833"},{"messageId":"3828","fix":"3880","desc":"3830"},{"messageId":"3831","fix":"3881","desc":"3833"},{"desc":"3882","fix":"3883"},{"desc":"3884","fix":"3885"},{"desc":"3886","fix":"3887"},{"desc":"3884","fix":"3888"},{"desc":"3884","fix":"3889"},{"desc":"3890","fix":"3891"},{"desc":"3890","fix":"3892"},{"desc":"3884","fix":"3893"},{"desc":"3894","fix":"3895"},{"desc":"3884","fix":"3896"},{"desc":"3884","fix":"3897"},{"desc":"3884","fix":"3898"},{"desc":"3884","fix":"3899"},{"desc":"3884","fix":"3900"},{"desc":"3884","fix":"3901"},{"desc":"3884","fix":"3902"},{"desc":"3884","fix":"3903"},{"desc":"3884","fix":"3904"},{"desc":"3905","fix":"3906"},{"desc":"3884","fix":"3907"},{"desc":"3884","fix":"3908"},{"desc":"3909","fix":"3910"},{"desc":"3911","fix":"3912"},{"desc":"3913","fix":"3914"},{"desc":"3913","fix":"3915"},{"desc":"3916","fix":"3917"},{"desc":"3918","fix":"3919"},{"desc":"3884","fix":"3920"},{"desc":"3884","fix":"3921"},{"desc":"3884","fix":"3922"},{"desc":"3884","fix":"3923"},{"desc":"3924","fix":"3925"},{"desc":"3926","fix":"3927"},{"desc":"3928","fix":"3929"},{"desc":"3930","fix":"3931"},{"desc":"3884","fix":"3932"},{"desc":"3933","fix":"3934"},{"desc":"3935","fix":"3936"},{"desc":"3937","fix":"3938"},{"desc":"3939","fix":"3940"},{"desc":"3918","fix":"3941"},{"desc":"3942","fix":"3943"},{"desc":"3884","fix":"3944"},{"desc":"3933","fix":"3945"},{"desc":"3946","fix":"3947"},{"desc":"3913","fix":"3948"},{"desc":"3949","fix":"3950"},{"desc":"3884","fix":"3951"},{"desc":"3933","fix":"3952"},{"desc":"3946","fix":"3953"},{"desc":"3937","fix":"3954"},{"desc":"3939","fix":"3955"},{"desc":"3884","fix":"3956"},{"desc":"3933","fix":"3957"},{"desc":"3958","fix":"3959"},{"desc":"3937","fix":"3960"},{"desc":"3961","fix":"3962"},{"desc":"3884","fix":"3963"},{"desc":"3933","fix":"3964"},{"desc":"3965","fix":"3966"},{"desc":"3967","fix":"3968"},{"desc":"3884","fix":"3969"},{"desc":"3933","fix":"3970"},{"desc":"3965","fix":"3971"},{"desc":"3949","fix":"3972"},{"desc":"3924","fix":"3973"},{"desc":"3926","fix":"3974"},{"desc":"3975","fix":"3976"},{"desc":"3884","fix":"3977"},{"desc":"3884","fix":"3978"},{"desc":"3884","fix":"3979"},{"desc":"3884","fix":"3980"},{"desc":"3894","fix":"3981"},{"desc":"3909","fix":"3982"},{"desc":"3911","fix":"3983"},{"desc":"3913","fix":"3984"},{"desc":"3913","fix":"3985"},{"desc":"3986","fix":"3987"},{"desc":"3884","fix":"3988"},{"desc":"3884","fix":"3989"},{"desc":"3990","fix":"3991"},{"desc":"3884","fix":"3992"},{"desc":"3933","fix":"3993"},{"desc":"3946","fix":"3994"},{"desc":"3913","fix":"3995"},{"desc":"3949","fix":"3996"},{"desc":"3942","fix":"3997"},"Update the dependencies array to be: [dispatch, screenSize]",{"range":"3998","text":"3999"},"Update the dependencies array to be: [userDataStore.token]",{"range":"4000","text":"4001"},"Update the dependencies array to be: [dispatch]",{"range":"4002","text":"4003"},{"range":"4004","text":"4003"},"Update the dependencies array to be: [getData]",{"range":"4005","text":"4006"},"Update the dependencies array to be: [currentRoute, history.location.pathname]",{"range":"4007","text":"4008"},"Update the dependencies array to be: [id, inventoryBasicData]",{"range":"4009","text":"4010"},"removeEscape",{"range":"4011","text":"4012"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"4013","text":"4014"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"4015","text":"4012"},{"range":"4016","text":"4014"},{"range":"4017","text":"4012"},{"range":"4018","text":"4014"},"Update the dependencies array to be: [imageUrl, productInfo]",{"range":"4019","text":"4020"},{"range":"4021","text":"4001"},"Update the dependencies array to be: [getMyProductList]",{"range":"4022","text":"4023"},"Update the dependencies array to be: [curBestDeal, initData]",{"range":"4024","text":"4025"},"Update the dependencies array to be: [intervalId, waitTime]",{"range":"4026","text":"4027"},"Update the dependencies array to be: [tick, waitTime]",{"range":"4028","text":"4029"},"Update the dependencies array to be: [featured_end_date, featured_start_date, storeInfo]",{"range":"4030","text":"4031"},"Update the dependencies array to be: [location, selStore]",{"range":"4032","text":"4033"},"Update the dependencies array to be: [proceed, storeId, storeInfo]",{"range":"4034","text":"4035"},"Update the dependencies array to be: [end_date, selDeal, setFromDate, setTimeAddFlag]",{"range":"4036","text":"4037"},"Update the dependencies array to be: [setIsBusy]",{"range":"4038","text":"4039"},"Update the dependencies array to be: [curBestDeal, curSingleProduct, setCurBestDeal]",{"range":"4040","text":"4041"},"Update the dependencies array to be: [comboProductList, curBestDeal, setCurBestDeal]",{"range":"4042","text":"4043"},"Update the dependencies array to be: [buyProductList, curBestDeal, setCurBestDeal]",{"range":"4044","text":"4045"},"Update the dependencies array to be: [curBestDeal, freeProductList, setCurBestDeal]",{"range":"4046","text":"4047"},"Update the dependencies array to be: [buyProductList, comboProductList, freeProductList, initData]",{"range":"4048","text":"4049"},"Update the dependencies array to be: [onSaveInfo, sellingInfo]",{"range":"4050","text":"4051"},"Update the dependencies array to be: [followerList, setTempFollowerList, tempFollowerList]",{"range":"4052","text":"4053"},"Update the dependencies array to be: [initData, promotionProducts, selPromotion]",{"range":"4054","text":"4055"},{"range":"4056","text":"4020"},{"range":"4057","text":"4012"},{"range":"4058","text":"4014"},{"range":"4059","text":"4012"},{"range":"4060","text":"4014"},{"range":"4061","text":"4012"},{"range":"4062","text":"4014"},"Update the dependencies array to be: [addSocketListener, dispatch, getUserNotificationData, token]",{"range":"4063","text":"4064"},"Update the dependencies array to be: [getData, initPage]",{"range":"4065","text":"4066"},"Update the dependencies array to be: [addSocketListener, getFeedList, socket, socketStore]",{"range":"4067","text":"4068"},{"range":"4069","text":"4066"},{"range":"4070","text":"4066"},"Update the dependencies array to be: [doLogout, initPage]",{"range":"4071","text":"4072"},{"range":"4073","text":"4072"},{"range":"4074","text":"4066"},"Update the dependencies array to be: [getData, initPage, props]",{"range":"4075","text":"4076"},{"range":"4077","text":"4066"},{"range":"4078","text":"4066"},{"range":"4079","text":"4066"},{"range":"4080","text":"4066"},{"range":"4081","text":"4066"},{"range":"4082","text":"4066"},{"range":"4083","text":"4066"},{"range":"4084","text":"4066"},{"range":"4085","text":"4066"},"Update the dependencies array to be: [socket, socketStore]",{"range":"4086","text":"4087"},{"range":"4088","text":"4066"},{"range":"4089","text":"4066"},"Update the dependencies array to be: [pageData, updateUserSelectList]",{"range":"4090","text":"4091"},"Update the dependencies array to be: [fetchDataList, pageData]",{"range":"4092","text":"4093"},"Update the dependencies array to be: []",{"range":"4094","text":"4095"},{"range":"4096","text":"4095"},"Update the dependencies array to be: [colorStyles, currentSelectValue, filterText, handleChangeUserKind, handleSearchChange, onUserChange, resetPaginationToggle, selectUserList]",{"range":"4097","text":"4098"},"Update the dependencies array to be: [defaultModalData, isVisible, pageData]",{"range":"4099","text":"4100"},{"range":"4101","text":"4066"},{"range":"4102","text":"4066"},{"range":"4103","text":"4066"},{"range":"4104","text":"4066"},"Update the dependencies array to be: [addSocketListener, getTicketNewMessageList, socket, socketStore, ticketid]",{"range":"4105","text":"4106"},"Update the dependencies array to be: [getData, initPage, ticketid]",{"range":"4107","text":"4108"},"Update the dependencies array to be: [initPage]",{"range":"4109","text":"4110"},"Update the dependencies array to be: [addSocketListener, dispatch, getAdminNotificationData, token]",{"range":"4111","text":"4112"},{"range":"4113","text":"4066"},"Update the dependencies array to be: [fetchDataList]",{"range":"4114","text":"4115"},"Update the dependencies array to be: [currentPage, currentSortDirection, currentSortField, filterText, perPage, totalRows, userType]",{"range":"4116","text":"4117"},"Update the dependencies array to be: [userDataStore]",{"range":"4118","text":"4119"},"Update the dependencies array to be: [filterText, handleChangeUserKind, handleSearchChange, resetPaginationToggle]",{"range":"4120","text":"4121"},{"range":"4122","text":"4100"},"Update the dependencies array to be: [isVisible, pageData, currentRow, defaultModalData]",{"range":"4123","text":"4124"},{"range":"4125","text":"4066"},{"range":"4126","text":"4115"},"Update the dependencies array to be: [currentPage, currentSortDirection, currentSortField, filterText, perPage, totalRows]",{"range":"4127","text":"4128"},{"range":"4129","text":"4095"},"Update the dependencies array to be: [filterText, handleSearchChange, resetPaginationToggle]",{"range":"4130","text":"4131"},{"range":"4132","text":"4066"},{"range":"4133","text":"4115"},{"range":"4134","text":"4128"},{"range":"4135","text":"4119"},{"range":"4136","text":"4121"},{"range":"4137","text":"4066"},{"range":"4138","text":"4115"},"Update the dependencies array to be: [currentPage, currentSortDirection, currentSortField, filterText, perPage, totalRows, withdrawKind]",{"range":"4139","text":"4140"},{"range":"4141","text":"4119"},"Update the dependencies array to be: [filterText, handleChangeWithdrawKind, handleSearchChange, resetPaginationToggle]",{"range":"4142","text":"4143"},{"range":"4144","text":"4066"},{"range":"4145","text":"4115"},"Update the dependencies array to be: [currentPage, currentSortDirection, currentSortField, filterText, itemType, perPage, totalRows]",{"range":"4146","text":"4147"},"Update the dependencies array to be: [filterText, handleChangeItemType, handleSearchChange, resetPaginationToggle]",{"range":"4148","text":"4149"},{"range":"4150","text":"4066"},{"range":"4151","text":"4115"},{"range":"4152","text":"4147"},{"range":"4153","text":"4131"},{"range":"4154","text":"4106"},{"range":"4155","text":"4108"},"Update the dependencies array to be: [socket, feedid, socketStore]",{"range":"4156","text":"4157"},{"range":"4158","text":"4066"},{"range":"4159","text":"4066"},{"range":"4160","text":"4066"},{"range":"4161","text":"4066"},{"range":"4162","text":"4076"},{"range":"4163","text":"4091"},{"range":"4164","text":"4093"},{"range":"4165","text":"4095"},{"range":"4166","text":"4095"},"Update the dependencies array to be: [colorStyles, defaultUserList, filterText, handleChangeUserKind, handleSearchChange, onUserChange, resetPaginationToggle, selectUserList]",{"range":"4167","text":"4168"},{"range":"4169","text":"4066"},{"range":"4170","text":"4066"},"Update the dependencies array to be: [currentRankItem, filterText, resetPaginationToggle]",{"range":"4171","text":"4172"},{"range":"4173","text":"4066"},{"range":"4174","text":"4115"},{"range":"4175","text":"4128"},{"range":"4176","text":"4095"},{"range":"4177","text":"4131"},{"range":"4178","text":"4124"},[2640,2652],"[dispatch, screenSize]",[870,872],"[userDataStore.token]",[513,515],"[dispatch]",[1426,1428],[932,934],"[getData]",[1470,1497],"[currentRoute, history.location.pathname]",[3359,3379],"[id, inventoryBasicData]",[815,816],"",[815,815],"\\",[839,840],[839,839],[855,856],[855,855],[623,636],"[imageUrl, productInfo]",[1300,1302],[695,697],"[getMyProductList]",[2320,2330],"[curBestDeal, initData]",[1025,1035],"[intervalId, waitTime]",[1189,1195],"[tick, waitTime]",[1333,1344],"[featured_end_date, featured_start_date, storeInfo]",[1332,1342],"[location, selStore]",[2059,2068],"[proceed, storeId, storeInfo]",[1283,1292],"[end_date, selDeal, setFromDate, setTimeAddFlag]",[1993,1995],"[setIsBusy]",[2589,2607],"[curBestDeal, curSingleProduct, setCurBestDeal]",[2710,2728],"[comboProductList, curBestDeal, setCurBestDeal]",[2827,2843],"[buyProductList, curBestDeal, setCurBestDeal]",[2944,2961],"[curBestDeal, freeProductList, setCurBestDeal]",[3817,3827],"[buyProductList, comboProductList, freeProductList, initData]",[3880,3893],"[onSaveInfo, sellingInfo]",[1612,1630],"[followerList, setTempFollowerList, tempFollowerList]",[3019,3021],"[initData, promotionProducts, selPromotion]",[623,636],[847,848],[847,847],[871,872],[871,871],[887,888],[887,887],[2219,2221],"[addSocketListener, dispatch, getUserNotificationData, token]",[1253,1255],"[getData, initPage]",[1146,1154],"[addSocketListener, getFeedList, socket, socketStore]",[2260,2262],[886,888],[1393,1395],"[doLogout, initPage]",[2158,2160],[1199,1201],[1287,1294],"[getData, initPage, props]",[1101,1103],[1051,1053],[1188,1190],[987,989],[1332,1334],[1091,1093],[1017,1019],[981,983],[1325,1327],[1283,1291],"[socket, socketStore]",[1751,1753],[1011,1013],[1283,1293],"[pageData, updateUserSelectList]",[4792,4802],"[fetchDataList, pageData]",[5109,5142],"[]",[8120,8134],[13102,13153],"[colorStyles, currentSelectValue, filterText, handleChangeUserKind, handleSearchChange, onUserChange, resetPaginationToggle, selectUserList]",[731,752],"[defaultModalData, isVisible, pageData]",[1243,1245],[1615,1617],[1721,1723],[992,994],[1502,1520],"[addSocketListener, getTicketNewMessageList, socket, socketStore, ticketid]",[3157,3167],"[getData, initPage, ticketid]",[1152,1154],"[initPage]",[2170,2172],"[addSocketListener, dispatch, getAdminNotificationData, token]",[1191,1193],[2685,2687],"[fetchDataList]",[3363,3396],"[currentPage, currentSortDirection, currentSortField, filterText, perPage, totalRows, userType]",[7827,7841],"[userDataStore]",[11360,11395],"[filterText, handleChangeUserKind, handleSearchChange, resetPaginationToggle]",[684,705],[763,796],"[isVisible, pageData, currentRow, defaultModalData]",[1166,1168],[2412,2414],[3071,3104],"[currentPage, currentSortDirection, currentSortField, filterText, perPage, totalRows]",[4348,4362],[5524,5559],"[filterText, handleSearchChange, resetPaginationToggle]",[1165,1167],[2487,2489],[3145,3178],[5884,5898],[7138,7173],[1172,1174],[2561,2563],[3250,3283],"[currentPage, currentSortDirection, currentSortField, filterText, perPage, totalRows, withdrawKind]",[7707,7721],[10081,10116],"[filterText, handleChangeWithdrawKind, handleSearchChange, resetPaginationToggle]",[1158,1160],[2478,2480],[3157,3190],"[currentPage, currentSortDirection, currentSortField, filterText, itemType, perPage, totalRows]",[8477,8512],"[filterText, handleChangeItemType, handleSearchChange, resetPaginationToggle]",[1191,1193],[2674,2676],[3351,3384],[6730,6765],[1735,1753],[3393,3403],[1647,1663],"[socket, feedid, socketStore]",[2135,2137],[1460,1462],[1488,1490],[1610,1612],[1328,1335],[1223,1233],[4602,4612],[4919,4952],[7931,7945],[12927,12978],"[colorStyles, defaultUserList, filterText, handleChangeUserKind, handleSearchChange, onUserChange, resetPaginationToggle, selectUserList]",[1245,1247],[1617,1619],[2883,2918],"[currentRankItem, filterText, resetPaginationToggle]",[1226,1228],[2563,2565],[3222,3255],[5243,5257],[6708,6743],[998,1031]]